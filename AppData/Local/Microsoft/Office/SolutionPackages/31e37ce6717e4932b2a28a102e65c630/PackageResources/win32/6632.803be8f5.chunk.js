"use strict";(self.webpackChunkmaker_code_editor=self.webpackChunkmaker_code_editor||[]).push([[6632],{90554:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015collection=void 0,t.es2015collection='\n\n/// <reference no-default-lib="true"/>\n\ninterface Map<K, V> {\n    clear(): void;\n    delete(key: K): boolean;\n    forEach(\n        callbackfn: (value: V, key: K, map: Map<K, V>) => void,\n        thisArg?: any\n    ): void;\n    get(key: K): V | undefined;\n    has(key: K): boolean;\n    set(key: K, value: V): this;\n    readonly size: number;\n}\n\ninterface MapConstructor {\n    new (): Map<any, any>;\n    new <K, V>(entries?: readonly (readonly [K, V])[] | null): Map<K, V>;\n    readonly prototype: Map<any, any>;\n}\ndeclare var Map: MapConstructor;\n\ninterface ReadonlyMap<K, V> {\n    forEach(\n        callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void,\n        thisArg?: any\n    ): void;\n    get(key: K): V | undefined;\n    has(key: K): boolean;\n    readonly size: number;\n}\n\ninterface WeakMap<K extends object, V> {\n    delete(key: K): boolean;\n    get(key: K): V | undefined;\n    has(key: K): boolean;\n    set(key: K, value: V): this;\n}\n\ninterface WeakMapConstructor {\n    new <K extends object = object, V = any>(\n        entries?: readonly [K, V][] | null\n    ): WeakMap<K, V>;\n    readonly prototype: WeakMap<object, any>;\n}\ndeclare var WeakMap: WeakMapConstructor;\n\ninterface Set<T> {\n    add(value: T): this;\n    clear(): void;\n    delete(value: T): boolean;\n    forEach(\n        callbackfn: (value: T, value2: T, set: Set<T>) => void,\n        thisArg?: any\n    ): void;\n    has(value: T): boolean;\n    readonly size: number;\n}\n\ninterface SetConstructor {\n    new <T = any>(values?: readonly T[] | null): Set<T>;\n    readonly prototype: Set<any>;\n}\ndeclare var Set: SetConstructor;\n\ninterface ReadonlySet<T> {\n    forEach(\n        callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void,\n        thisArg?: any\n    ): void;\n    has(value: T): boolean;\n    readonly size: number;\n}\n\ninterface WeakSet<T extends object> {\n    add(value: T): this;\n    delete(value: T): boolean;\n    has(value: T): boolean;\n}\n\ninterface WeakSetConstructor {\n    new <T extends object = object>(values?: readonly T[] | null): WeakSet<T>;\n    readonly prototype: WeakSet<object>;\n}\ndeclare var WeakSet: WeakSetConstructor;\n'},65159:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015core=void 0,t.es2015core='\n\n/// <reference no-default-lib="true"/>\n\ninterface Array<T> {\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find<S extends T>(\n        predicate: (\n            this: void,\n            value: T,\n            index: number,\n            obj: T[]\n        ) => value is S,\n        thisArg?: any\n    ): S | undefined;\n    find(\n        predicate: (value: T, index: number, obj: T[]) => unknown,\n        thisArg?: any\n    ): T | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: T, index: number, obj: T[]) => unknown,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: T, start?: number, end?: number): this;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n}\n\ninterface ArrayConstructor {\n    /**\n     * Creates an array from an array-like object.\n     * @param arrayLike An array-like object to convert to an array.\n     */\n    from<T>(arrayLike: ArrayLike<T>): T[];\n\n    /**\n     * Creates an array from an iterable object.\n     * @param arrayLike An array-like object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\n     */\n    from<T, U>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => U,\n        thisArg?: any\n    ): U[];\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of<T>(...items: T[]): T[];\n}\n\ninterface DateConstructor {\n    new (value: number | string | Date): Date;\n}\n\ninterface Function {\n    /**\n     * Returns the name of the function. Function names are read-only and can not be changed.\n     */\n    readonly name: string;\n}\n\ninterface Math {\n    /**\n     * Returns the number of leading zero bits in the 32-bit binary representation of a number.\n     * @param x A numeric expression.\n     */\n    clz32(x: number): number;\n\n    /**\n     * Returns the result of 32-bit multiplication of two numbers.\n     * @param x First number\n     * @param y Second number\n     */\n    imul(x: number, y: number): number;\n\n    /**\n     * Returns the sign of the x, indicating whether x is positive, negative or zero.\n     * @param x The numeric expression to test\n     */\n    sign(x: number): number;\n\n    /**\n     * Returns the base 10 logarithm of a number.\n     * @param x A numeric expression.\n     */\n    log10(x: number): number;\n\n    /**\n     * Returns the base 2 logarithm of a number.\n     * @param x A numeric expression.\n     */\n    log2(x: number): number;\n\n    /**\n     * Returns the natural logarithm of 1 + x.\n     * @param x A numeric expression.\n     */\n    log1p(x: number): number;\n\n    /**\n     * Returns the result of (e^x - 1), which is an implementation-dependent approximation to\n     * subtracting 1 from the exponential function of x (e raised to the power of x, where e\n     * is the base of the natural logarithms).\n     * @param x A numeric expression.\n     */\n    expm1(x: number): number;\n\n    /**\n     * Returns the hyperbolic cosine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    cosh(x: number): number;\n\n    /**\n     * Returns the hyperbolic sine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    sinh(x: number): number;\n\n    /**\n     * Returns the hyperbolic tangent of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    tanh(x: number): number;\n\n    /**\n     * Returns the inverse hyperbolic cosine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    acosh(x: number): number;\n\n    /**\n     * Returns the inverse hyperbolic sine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    asinh(x: number): number;\n\n    /**\n     * Returns the inverse hyperbolic tangent of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    atanh(x: number): number;\n\n    /**\n     * Returns the square root of the sum of squares of its arguments.\n     * @param values Values to compute the square root for.\n     *     If no arguments are passed, the result is +0.\n     *     If there is only one argument, the result is the absolute value.\n     *     If any argument is +Infinity or -Infinity, the result is +Infinity.\n     *     If any argument is NaN, the result is NaN.\n     *     If all arguments are either +0 or \u22120, the result is +0.\n     */\n    hypot(...values: number[]): number;\n\n    /**\n     * Returns the integral part of the a numeric expression, x, removing any fractional digits.\n     * If x is already an integer, the result is x.\n     * @param x A numeric expression.\n     */\n    trunc(x: number): number;\n\n    /**\n     * Returns the nearest single precision float representation of a number.\n     * @param x A numeric expression.\n     */\n    fround(x: number): number;\n\n    /**\n     * Returns an implementation-dependent approximation to the cube root of number.\n     * @param x A numeric expression.\n     */\n    cbrt(x: number): number;\n}\n\ninterface NumberConstructor {\n    /**\n     * The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1\n     * that is representable as a Number value, which is approximately:\n     * 2.2204460492503130808472633361816 x 10\u200d\u2212\u200d16.\n     */\n    readonly EPSILON: number;\n\n    /**\n     * Returns true if passed value is finite.\n     * Unlike the global isFinite, Number.isFinite doesn\'t forcibly convert the parameter to a\n     * number. Only finite values of the type number, result in true.\n     * @param number A numeric value.\n     */\n    isFinite(number: unknown): boolean;\n\n    /**\n     * Returns true if the value passed is an integer, false otherwise.\n     * @param number A numeric value.\n     */\n    isInteger(number: unknown): boolean;\n\n    /**\n     * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a\n     * number). Unlike the global isNaN(), Number.isNaN() doesn\'t forcefully convert the parameter\n     * to a number. Only values of the type number, that are also NaN, result in true.\n     * @param number A numeric value.\n     */\n    isNaN(number: unknown): boolean;\n\n    /**\n     * Returns true if the value passed is a safe integer.\n     * @param number A numeric value.\n     */\n    isSafeInteger(number: unknown): boolean;\n\n    /**\n     * The value of the largest integer n such that n and n + 1 are both exactly representable as\n     * a Number value.\n     * The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 \u2212 1.\n     */\n    readonly MAX_SAFE_INTEGER: number;\n\n    /**\n     * The value of the smallest integer n such that n and n \u2212 1 are both exactly representable as\n     * a Number value.\n     * The value of Number.MIN_SAFE_INTEGER is \u22129007199254740991 (\u2212(2^53 \u2212 1)).\n     */\n    readonly MIN_SAFE_INTEGER: number;\n\n    /**\n     * Converts a string to a floating-point number.\n     * @param string A string that contains a floating-point number.\n     */\n    parseFloat(string: string): number;\n\n    /**\n     * Converts A string to an integer.\n     * @param s A string to convert into a number.\n     * @param radix A value between 2 and 36 that specifies the base of the number in numString.\n     * If this argument is not supplied, strings with a prefix of \'0x\' are considered hexadecimal.\n     * All other strings are considered decimal.\n     */\n    parseInt(string: string, radix?: number): number;\n}\n\ninterface ObjectConstructor {\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param source The source object from which to copy properties.\n     */\n    assign<T, U>(target: T, source: U): T & U;\n\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param source1 The first source object from which to copy properties.\n     * @param source2 The second source object from which to copy properties.\n     */\n    assign<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param source1 The first source object from which to copy properties.\n     * @param source2 The second source object from which to copy properties.\n     * @param source3 The third source object from which to copy properties.\n     */\n    assign<T, U, V, W>(\n        target: T,\n        source1: U,\n        source2: V,\n        source3: W\n    ): T & U & V & W;\n\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object. Returns the target object.\n     * @param target The target object to copy to.\n     * @param sources One or more source objects from which to copy properties\n     */\n    assign(target: object, ...sources: any[]): any;\n\n    /**\n     * Returns an array of all symbol properties found directly on object o.\n     * @param o Object to retrieve the symbols from.\n     */\n    getOwnPropertySymbols(o: any): symbol[];\n\n    /**\n     * Returns the names of the enumerable string properties and methods of an object.\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    keys(o: {}): string[];\n\n    /**\n     * Returns true if the values are the same value, false otherwise.\n     * @param value1 The first value.\n     * @param value2 The second value.\n     */\n    is(value1: any, value2: any): boolean;\n\n    /**\n     * Sets the prototype of a specified object o to object proto or null. Returns the object o.\n     * @param o The object to change its prototype.\n     * @param proto The value of the new prototype or null.\n     */\n    setPrototypeOf(o: any, proto: object | null): any;\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find<S extends T>(\n        predicate: (\n            this: void,\n            value: T,\n            index: number,\n            obj: readonly T[]\n        ) => value is S,\n        thisArg?: any\n    ): S | undefined;\n    find(\n        predicate: (value: T, index: number, obj: readonly T[]) => unknown,\n        thisArg?: any\n    ): T | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: T, index: number, obj: readonly T[]) => unknown,\n        thisArg?: any\n    ): number;\n}\n\ninterface RegExp {\n    /**\n     * Returns a string indicating the flags of the regular expression in question. This field is read-only.\n     * The characters in this string are sequenced and concatenated in the following order:\n     *\n     *    - "g" for global\n     *    - "i" for ignoreCase\n     *    - "m" for multiline\n     *    - "u" for unicode\n     *    - "y" for sticky\n     *\n     * If no flags are set, the value is the empty string.\n     */\n    readonly flags: string;\n\n    /**\n     * Returns a Boolean value indicating the state of the sticky flag (y) used with a regular\n     * expression. Default is false. Read-only.\n     */\n    readonly sticky: boolean;\n\n    /**\n     * Returns a Boolean value indicating the state of the Unicode flag (u) used with a regular\n     * expression. Default is false. Read-only.\n     */\n    readonly unicode: boolean;\n}\n\ninterface RegExpConstructor {\n    new (pattern: RegExp | string, flags?: string): RegExp;\n    (pattern: RegExp | string, flags?: string): RegExp;\n}\n\ninterface String {\n    /**\n     * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n     * value of the UTF-16 encoded code point starting at the string element at position pos in\n     * the String resulting from converting this object to a String.\n     * If there is no element at that position, the result is undefined.\n     * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n     */\n    codePointAt(pos: number): number | undefined;\n\n    /**\n     * Returns true if searchString appears as a substring of the result of converting this\n     * object to a String, at one or more positions that are\n     * greater than or equal to position; otherwise, returns false.\n     * @param searchString search string\n     * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n     */\n    includes(searchString: string, position?: number): boolean;\n\n    /**\n     * Returns true if the sequence of elements of searchString converted to a String is the\n     * same as the corresponding elements of this object (converted to a String) starting at\n     * endPosition \u2013 length(this). Otherwise returns false.\n     */\n    endsWith(searchString: string, endPosition?: number): boolean;\n\n    /**\n     * Returns the String value result of normalizing the string into the normalization form\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\n     * is "NFC"\n     */\n    normalize(form: \'NFC\' | \'NFD\' | \'NFKC\' | \'NFKD\'): string;\n\n    /**\n     * Returns the String value result of normalizing the string into the normalization form\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\n     * is "NFC"\n     */\n    normalize(form?: string): string;\n\n    /**\n     * Returns a String value that is made from count copies appended together. If count is 0,\n     * the empty string is returned.\n     * @param count number of copies to append\n     */\n    repeat(count: number): string;\n\n    /**\n     * Returns true if the sequence of elements of searchString converted to a String is the\n     * same as the corresponding elements of this object (converted to a String) starting at\n     * position. Otherwise returns false.\n     */\n    startsWith(searchString: string, position?: number): boolean;\n\n    /**\n     * Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n     * @param name\n     */\n    anchor(name: string): string;\n\n    /** Returns a `<big>` HTML element */\n    big(): string;\n\n    /** Returns a `<blink>` HTML element */\n    blink(): string;\n\n    /** Returns a `<b>` HTML element */\n    bold(): string;\n\n    /** Returns a `<tt>` HTML element */\n    fixed(): string;\n\n    /** Returns a `<font>` HTML element and sets the color attribute value */\n    fontcolor(color: string): string;\n\n    /** Returns a `<font>` HTML element and sets the size attribute value */\n    fontsize(size: number): string;\n\n    /** Returns a `<font>` HTML element and sets the size attribute value */\n    fontsize(size: string): string;\n\n    /** Returns an `<i>` HTML element */\n    italics(): string;\n\n    /** Returns an `<a>` HTML element and sets the href attribute value */\n    link(url: string): string;\n\n    /** Returns a `<small>` HTML element */\n    small(): string;\n\n    /** Returns a `<strike>` HTML element */\n    strike(): string;\n\n    /** Returns a `<sub>` HTML element */\n    sub(): string;\n\n    /** Returns a `<sup>` HTML element */\n    sup(): string;\n}\n\ninterface StringConstructor {\n    /**\n     * Return the String value whose elements are, in order, the elements in the List elements.\n     * If length is 0, the empty string is returned.\n     */\n    fromCodePoint(...codePoints: number[]): string;\n\n    /**\n     * String.raw is intended for use as a tag function of a Tagged Template String. When called\n     * as such the first argument will be a well formed template call site object and the rest\n     * parameter will contain the substitution values.\n     * @param template A well-formed template string call site representation.\n     * @param substitutions A set of substitution values.\n     */\n    raw(template: TemplateStringsArray, ...substitutions: any[]): string;\n}\n'},74866:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015generator=void 0,t.es2015generator='\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.iterable" />\n\ninterface Generator<T = unknown, TReturn = any, TNext = unknown>\n    extends Iterator<T, TReturn, TNext> {\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...args: [] | [TNext]): IteratorResult<T, TReturn>;\n    return(value: TReturn): IteratorResult<T, TReturn>;\n    throw(e: any): IteratorResult<T, TReturn>;\n    [Symbol.iterator](): Generator<T, TReturn, TNext>;\n}\n\ninterface GeneratorFunction {\n    /**\n     * Creates a new Generator object.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: any[]): Generator;\n    /**\n     * Creates a new Generator object.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: any[]): Generator;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Generator;\n}\n\ninterface GeneratorFunctionConstructor {\n    /**\n     * Creates a new Generator function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): GeneratorFunction;\n    /**\n     * Creates a new Generator function.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: string[]): GeneratorFunction;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: GeneratorFunction;\n}\n'},3527:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015iterable=void 0,t.es2015iterable="\n\n/// <reference no-default-lib=\"true\"/>\n\n/// <reference lib=\"es2015.symbol\" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that returns the default iterator for an object. Called by the semantics of the\n     * for-of statement.\n     */\n    readonly iterator: symbol;\n}\n\ninterface IteratorYieldResult<TYield> {\n    done?: false;\n    value: TYield;\n}\n\ninterface IteratorReturnResult<TReturn> {\n    done: true;\n    value: TReturn;\n}\n\ntype IteratorResult<T, TReturn = any> =\n    | IteratorYieldResult<T>\n    | IteratorReturnResult<TReturn>;\n\ninterface Iterator<T, TReturn = any, TNext = undefined> {\n    // NOTE: 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...args: [] | [TNext]): IteratorResult<T, TReturn>;\n    return?(value?: TReturn): IteratorResult<T, TReturn>;\n    throw?(e?: any): IteratorResult<T, TReturn>;\n}\n\ninterface Iterable<T> {\n    [Symbol.iterator](): Iterator<T>;\n}\n\ninterface IterableIterator<T> extends Iterator<T> {\n    [Symbol.iterator](): IterableIterator<T>;\n}\n\ninterface Array<T> {\n    /** Iterator */\n    [Symbol.iterator](): IterableIterator<T>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, T]>;\n\n    /**\n     * Returns an iterable of keys in the array\n     */\n    keys(): IterableIterator<number>;\n\n    /**\n     * Returns an iterable of values in the array\n     */\n    values(): IterableIterator<T>;\n}\n\ninterface ArrayConstructor {\n    /**\n     * Creates an array from an iterable object.\n     * @param iterable An iterable object to convert to an array.\n     */\n    from<T>(iterable: Iterable<T> | ArrayLike<T>): T[];\n\n    /**\n     * Creates an array from an iterable object.\n     * @param iterable An iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T, U>(\n        iterable: Iterable<T> | ArrayLike<T>,\n        mapfn: (v: T, k: number) => U,\n        thisArg?: any\n    ): U[];\n}\n\ninterface ReadonlyArray<T> {\n    /** Iterator of values in the array. */\n    [Symbol.iterator](): IterableIterator<T>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, T]>;\n\n    /**\n     * Returns an iterable of keys in the array\n     */\n    keys(): IterableIterator<number>;\n\n    /**\n     * Returns an iterable of values in the array\n     */\n    values(): IterableIterator<T>;\n}\n\ninterface IArguments {\n    /** Iterator */\n    [Symbol.iterator](): IterableIterator<any>;\n}\n\ninterface Map<K, V> {\n    /** Returns an iterable of entries in the map. */\n    [Symbol.iterator](): IterableIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the map.\n     */\n    entries(): IterableIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of keys in the map\n     */\n    keys(): IterableIterator<K>;\n\n    /**\n     * Returns an iterable of values in the map\n     */\n    values(): IterableIterator<V>;\n}\n\ninterface ReadonlyMap<K, V> {\n    /** Returns an iterable of entries in the map. */\n    [Symbol.iterator](): IterableIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of key, value pairs for every entry in the map.\n     */\n    entries(): IterableIterator<[K, V]>;\n\n    /**\n     * Returns an iterable of keys in the map\n     */\n    keys(): IterableIterator<K>;\n\n    /**\n     * Returns an iterable of values in the map\n     */\n    values(): IterableIterator<V>;\n}\n\ninterface MapConstructor {\n    new <K, V>(iterable: Iterable<readonly [K, V]>): Map<K, V>;\n}\n\ninterface WeakMap<K extends object, V> {}\n\ninterface WeakMapConstructor {\n    new <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n}\n\ninterface Set<T> {\n    /** Iterates over values in the set. */\n    [Symbol.iterator](): IterableIterator<T>;\n    /**\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\n     */\n    entries(): IterableIterator<[T, T]>;\n    /**\n     * Despite its name, returns an iterable of the values in the set,\n     */\n    keys(): IterableIterator<T>;\n\n    /**\n     * Returns an iterable of values in the set.\n     */\n    values(): IterableIterator<T>;\n}\n\ninterface ReadonlySet<T> {\n    /** Iterates over values in the set. */\n    [Symbol.iterator](): IterableIterator<T>;\n\n    /**\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\n     */\n    entries(): IterableIterator<[T, T]>;\n\n    /**\n     * Despite its name, returns an iterable of the values in the set,\n     */\n    keys(): IterableIterator<T>;\n\n    /**\n     * Returns an iterable of values in the set.\n     */\n    values(): IterableIterator<T>;\n}\n\ninterface SetConstructor {\n    new <T>(iterable?: Iterable<T> | null): Set<T>;\n}\n\ninterface WeakSet<T extends object> {}\n\ninterface WeakSetConstructor {\n    new <T extends object = object>(iterable: Iterable<T>): WeakSet<T>;\n}\n\ninterface Promise<T> {}\n\ninterface PromiseConstructor {\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An iterable of Promises.\n     * @returns A new Promise.\n     */\n    all<T>(values: Iterable<T | PromiseLike<T>>): Promise<T[]>;\n\n    /**\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\n     * or rejected.\n     * @param values An iterable of Promises.\n     * @returns A new Promise.\n     */\n    race<T>(\n        values: Iterable<T>\n    ): Promise<T extends PromiseLike<infer U> ? U : T>;\n\n    /**\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\n     * or rejected.\n     * @param values An iterable of Promises.\n     * @returns A new Promise.\n     */\n    race<T>(values: Iterable<T | PromiseLike<T>>): Promise<T>;\n}\n\ndeclare namespace Reflect {\n    function enumerate(target: object): IterableIterator<any>;\n}\n\ninterface String {\n    /** Iterator */\n    [Symbol.iterator](): IterableIterator<string>;\n}\n\ninterface Int8Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Int8ArrayConstructor {\n    new (elements: Iterable<number>): Int8Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Int8Array;\n}\n\ninterface Uint8Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Uint8ArrayConstructor {\n    new (elements: Iterable<number>): Uint8Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Uint8Array;\n}\n\ninterface Uint8ClampedArray {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Uint8ClampedArrayConstructor {\n    new (elements: Iterable<number>): Uint8ClampedArray;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Uint8ClampedArray;\n}\n\ninterface Int16Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Int16ArrayConstructor {\n    new (elements: Iterable<number>): Int16Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Int16Array;\n}\n\ninterface Uint16Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Uint16ArrayConstructor {\n    new (elements: Iterable<number>): Uint16Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Uint16Array;\n}\n\ninterface Int32Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Int32ArrayConstructor {\n    new (elements: Iterable<number>): Int32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Int32Array;\n}\n\ninterface Uint32Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Uint32ArrayConstructor {\n    new (elements: Iterable<number>): Uint32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Uint32Array;\n}\n\ninterface Float32Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Float32ArrayConstructor {\n    new (elements: Iterable<number>): Float32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Float32Array;\n}\n\ninterface Float64Array {\n    [Symbol.iterator](): IterableIterator<number>;\n    /**\n     * Returns an array of key, value pairs for every entry in the array\n     */\n    entries(): IterableIterator<[number, number]>;\n    /**\n     * Returns an list of keys in the array\n     */\n    keys(): IterableIterator<number>;\n    /**\n     * Returns an list of values in the array\n     */\n    values(): IterableIterator<number>;\n}\n\ninterface Float64ArrayConstructor {\n    new (elements: Iterable<number>): Float64Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from(\n        arrayLike: Iterable<number>,\n        mapfn?: (v: number, k: number) => number,\n        thisArg?: any\n    ): Float64Array;\n}\n"},60584:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015promise=void 0,t.es2015promise='\n\n/// <reference no-default-lib="true"/>\n\ninterface PromiseConstructor {\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Promise<any>;\n\n    /**\n     * Creates a new Promise.\n     * @param executor A callback used to initialize the promise. This callback is passed two arguments:\n     * a resolve callback used to resolve the promise with a value or the result of another promise,\n     * and a reject callback used to reject the promise with a provided reason or error.\n     */\n    new <T>(\n        executor: (\n            resolve: (value?: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void\n        ) => void\n    ): Promise<T>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>,\n            T5 | PromiseLike<T5>,\n            T6 | PromiseLike<T6>,\n            T7 | PromiseLike<T7>,\n            T8 | PromiseLike<T8>,\n            T9 | PromiseLike<T9>,\n            T10 | PromiseLike<T10>\n        ]\n    ): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>,\n            T5 | PromiseLike<T5>,\n            T6 | PromiseLike<T6>,\n            T7 | PromiseLike<T7>,\n            T8 | PromiseLike<T8>,\n            T9 | PromiseLike<T9>\n        ]\n    ): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4, T5, T6, T7, T8>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>,\n            T5 | PromiseLike<T5>,\n            T6 | PromiseLike<T6>,\n            T7 | PromiseLike<T7>,\n            T8 | PromiseLike<T8>\n        ]\n    ): Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4, T5, T6, T7>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>,\n            T5 | PromiseLike<T5>,\n            T6 | PromiseLike<T6>,\n            T7 | PromiseLike<T7>\n        ]\n    ): Promise<[T1, T2, T3, T4, T5, T6, T7]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4, T5, T6>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>,\n            T5 | PromiseLike<T5>,\n            T6 | PromiseLike<T6>\n        ]\n    ): Promise<[T1, T2, T3, T4, T5, T6]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4, T5>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>,\n            T5 | PromiseLike<T5>\n        ]\n    ): Promise<[T1, T2, T3, T4, T5]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3, T4>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>,\n            T4 | PromiseLike<T4>\n        ]\n    ): Promise<[T1, T2, T3, T4]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2, T3>(\n        values: readonly [\n            T1 | PromiseLike<T1>,\n            T2 | PromiseLike<T2>,\n            T3 | PromiseLike<T3>\n        ]\n    ): Promise<[T1, T2, T3]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T1, T2>(\n        values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]\n    ): Promise<[T1, T2]>;\n\n    /**\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\n     * resolve, or rejected when any Promise is rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    all<T>(values: readonly (T | PromiseLike<T>)[]): Promise<T[]>;\n\n    // see: lib.es2015.iterable.d.ts\n    // all<T>(values: Iterable<T | PromiseLike<T>>): Promise<T[]>;\n\n    /**\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\n     * or rejected.\n     * @param values An array of Promises.\n     * @returns A new Promise.\n     */\n    race<T>(\n        values: readonly T[]\n    ): Promise<T extends PromiseLike<infer U> ? U : T>;\n\n    // see: lib.es2015.iterable.d.ts\n    // race<T>(values: Iterable<T>): Promise<T extends PromiseLike<infer U> ? U : T>;\n\n    /**\n     * Creates a new rejected promise for the provided reason.\n     * @param reason The reason the promise was rejected.\n     * @returns A new rejected Promise.\n     */\n    reject<T = never>(reason?: any): Promise<T>;\n\n    /**\n     * Creates a new resolved promise for the provided value.\n     * @param value A promise.\n     * @returns A promise whose internal state matches the provided promise.\n     */\n    resolve<T>(value: T | PromiseLike<T>): Promise<T>;\n\n    /**\n     * Creates a new resolved promise .\n     * @returns A resolved promise.\n     */\n    resolve(): Promise<void>;\n}\n\ndeclare var Promise: PromiseConstructor;\n'},93432:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015proxy=void 0,t.es2015proxy='\n\n/// <reference no-default-lib="true"/>\n\ninterface ProxyHandler<T extends object> {\n    getPrototypeOf?(target: T): object | null;\n    setPrototypeOf?(target: T, v: any): boolean;\n    isExtensible?(target: T): boolean;\n    preventExtensions?(target: T): boolean;\n    getOwnPropertyDescriptor?(\n        target: T,\n        p: PropertyKey\n    ): PropertyDescriptor | undefined;\n    has?(target: T, p: PropertyKey): boolean;\n    get?(target: T, p: PropertyKey, receiver: any): any;\n    set?(target: T, p: PropertyKey, value: any, receiver: any): boolean;\n    deleteProperty?(target: T, p: PropertyKey): boolean;\n    defineProperty?(\n        target: T,\n        p: PropertyKey,\n        attributes: PropertyDescriptor\n    ): boolean;\n    enumerate?(target: T): PropertyKey[];\n    ownKeys?(target: T): PropertyKey[];\n    apply?(target: T, thisArg: any, argArray?: any): any;\n    construct?(target: T, argArray: any, newTarget?: any): object;\n}\n\ninterface ProxyConstructor {\n    revocable<T extends object>(\n        target: T,\n        handler: ProxyHandler<T>\n    ): { proxy: T; revoke: () => void };\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\n}\ndeclare var Proxy: ProxyConstructor;\n'},98152:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015reflect=void 0,t.es2015reflect='\n\n/// <reference no-default-lib="true"/>\n\ndeclare namespace Reflect {\n    function apply(\n        target: Function,\n        thisArgument: any,\n        argumentsList: ArrayLike<any>\n    ): any;\n    function construct(\n        target: Function,\n        argumentsList: ArrayLike<any>,\n        newTarget?: any\n    ): any;\n    function defineProperty(\n        target: object,\n        propertyKey: PropertyKey,\n        attributes: PropertyDescriptor\n    ): boolean;\n    function deleteProperty(target: object, propertyKey: PropertyKey): boolean;\n    function get(target: object, propertyKey: PropertyKey, receiver?: any): any;\n    function getOwnPropertyDescriptor(\n        target: object,\n        propertyKey: PropertyKey\n    ): PropertyDescriptor | undefined;\n    function getPrototypeOf(target: object): object;\n    function has(target: object, propertyKey: PropertyKey): boolean;\n    function isExtensible(target: object): boolean;\n    function ownKeys(target: object): PropertyKey[];\n    function preventExtensions(target: object): boolean;\n    function set(\n        target: object,\n        propertyKey: PropertyKey,\n        value: any,\n        receiver?: any\n    ): boolean;\n    function setPrototypeOf(target: object, proto: any): boolean;\n}\n'},55310:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015symbol=void 0,t.es2015symbol='\n\n/// <reference no-default-lib="true"/>\n\ninterface SymbolConstructor {\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: Symbol;\n\n    /**\n     * Returns a new unique Symbol value.\n     * @param  description Description of the new Symbol object.\n     */\n    (description?: string | number): symbol;\n\n    /**\n     * Returns a Symbol object from the global symbol registry matching the given key if found.\n     * Otherwise, returns a new symbol with this key.\n     * @param key key to search for.\n     */\n    for(key: string): symbol;\n\n    /**\n     * Returns a key from the global symbol registry matching the given Symbol if found.\n     * Otherwise, returns a undefined.\n     * @param sym Symbol to find the key for.\n     */\n    keyFor(sym: symbol): string | undefined;\n}\n\ndeclare var Symbol: SymbolConstructor;\n'},31249:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2015symbolwellknown=void 0,t.es2015symbolwellknown="\n\n/// <reference no-default-lib=\"true\"/>\n\n/// <reference lib=\"es2015.symbol\" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that determines if a constructor object recognizes an object as one of the\n     * constructor\u2019s instances. Called by the semantics of the instanceof operator.\n     */\n    readonly hasInstance: symbol;\n\n    /**\n     * A Boolean value that if true indicates that an object should flatten to its array elements\n     * by Array.prototype.concat.\n     */\n    readonly isConcatSpreadable: symbol;\n\n    /**\n     * A regular expression method that matches the regular expression against a string. Called\n     * by the String.prototype.match method.\n     */\n    readonly match: symbol;\n\n    /**\n     * A regular expression method that replaces matched substrings of a string. Called by the\n     * String.prototype.replace method.\n     */\n    readonly replace: symbol;\n\n    /**\n     * A regular expression method that returns the index within a string that matches the\n     * regular expression. Called by the String.prototype.search method.\n     */\n    readonly search: symbol;\n\n    /**\n     * A function valued property that is the constructor function that is used to create\n     * derived objects.\n     */\n    readonly species: symbol;\n\n    /**\n     * A regular expression method that splits a string at the indices that match the regular\n     * expression. Called by the String.prototype.split method.\n     */\n    readonly split: symbol;\n\n    /**\n     * A method that converts an object to a corresponding primitive value.\n     * Called by the ToPrimitive abstract operation.\n     */\n    readonly toPrimitive: symbol;\n\n    /**\n     * A String value that is used in the creation of the default string description of an object.\n     * Called by the built-in method Object.prototype.toString.\n     */\n    readonly toStringTag: symbol;\n\n    /**\n     * An Object whose own property names are property names that are excluded from the 'with'\n     * environment bindings of the associated objects.\n     */\n    readonly unscopables: symbol;\n}\n\ninterface Symbol {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Array<T> {\n    /**\n     * Returns an object whose properties have the value 'true'\n     * when they will be absent when used in a 'with' statement.\n     */\n    [Symbol.unscopables](): {\n        copyWithin: boolean;\n        entries: boolean;\n        fill: boolean;\n        find: boolean;\n        findIndex: boolean;\n        keys: boolean;\n        values: boolean;\n    };\n}\n\ninterface Date {\n    /**\n     * Converts a Date object to a string.\n     */\n    [Symbol.toPrimitive](hint: 'default'): string;\n    /**\n     * Converts a Date object to a string.\n     */\n    [Symbol.toPrimitive](hint: 'string'): string;\n    /**\n     * Converts a Date object to a number.\n     */\n    [Symbol.toPrimitive](hint: 'number'): number;\n    /**\n     * Converts a Date object to a string or number.\n     *\n     * @param hint The strings \"number\", \"string\", or \"default\" to specify what primitive to return.\n     *\n     * @throws {TypeError} If 'hint' was given something other than \"number\", \"string\", or \"default\".\n     * @returns A number if 'hint' was \"number\", a string if 'hint' was \"string\" or \"default\".\n     */\n    [Symbol.toPrimitive](hint: string): string | number;\n}\n\ninterface Map<K, V> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface WeakMap<K extends object, V> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Set<T> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface WeakSet<T extends object> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface JSON {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Function {\n    /**\n     * Determines whether the given value inherits from this function if this function was used\n     * as a constructor function.\n     *\n     * A constructor function can control which objects are recognized as its instances by\n     * 'instanceof' by overriding this method.\n     */\n    [Symbol.hasInstance](value: any): boolean;\n}\n\ninterface GeneratorFunction {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Math {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Promise<T> {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface PromiseConstructor {\n    readonly [Symbol.species]: PromiseConstructor;\n}\n\ninterface RegExp {\n    /**\n     * Matches a string with this regular expression, and returns an array containing the results of\n     * that search.\n     * @param string A string to search within.\n     */\n    [Symbol.match](string: string): RegExpMatchArray | null;\n\n    /**\n     * Replaces text in a string, using this regular expression.\n     * @param string A String object or string literal whose contents matching against\n     *               this regular expression will be replaced\n     * @param replaceValue A String object or string literal containing the text to replace for every\n     *                     successful match of this regular expression.\n     */\n    [Symbol.replace](string: string, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using this regular expression.\n     * @param string A String object or string literal whose contents matching against\n     *               this regular expression will be replaced\n     * @param replacer A function that returns the replacement text.\n     */\n    [Symbol.replace](\n        string: string,\n        replacer: (substring: string, ...args: any[]) => string\n    ): string;\n\n    /**\n     * Finds the position beginning first substring match in a regular expression search\n     * using this regular expression.\n     *\n     * @param string The string to search within.\n     */\n    [Symbol.search](string: string): number;\n\n    /**\n     * Returns an array of substrings that were delimited by strings in the original input that\n     * match against this regular expression.\n     *\n     * If the regular expression contains capturing parentheses, then each time this\n     * regular expression matches, the results (including any undefined results) of the\n     * capturing parentheses are spliced.\n     *\n     * @param string string value to split\n     * @param limit if not undefined, the output array is truncated so that it contains no more\n     * than 'limit' elements.\n     */\n    [Symbol.split](string: string, limit?: number): string[];\n}\n\ninterface RegExpConstructor {\n    readonly [Symbol.species]: RegExpConstructor;\n}\n\ninterface String {\n    /**\n     * Matches a string or an object that supports being matched against, and returns an array\n     * containing the results of that search, or null if no matches are found.\n     * @param matcher An object that supports being matched against.\n     */\n    match(matcher: {\n        [Symbol.match](string: string): RegExpMatchArray | null;\n    }): RegExpMatchArray | null;\n\n    /**\n     * Replaces text in a string, using an object that supports replacement within a string.\n     * @param searchValue A object can search for and replace matches within a string.\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n     */\n    replace(\n        searchValue: {\n            [Symbol.replace](string: string, replaceValue: string): string;\n        },\n        replaceValue: string\n    ): string;\n\n    /**\n     * Replaces text in a string, using an object that supports replacement within a string.\n     * @param searchValue A object can search for and replace matches within a string.\n     * @param replacer A function that returns the replacement text.\n     */\n    replace(\n        searchValue: {\n            [Symbol.replace](\n                string: string,\n                replacer: (substring: string, ...args: any[]) => string\n            ): string;\n        },\n        replacer: (substring: string, ...args: any[]) => string\n    ): string;\n\n    /**\n     * Finds the first substring match in a regular expression search.\n     * @param searcher An object which supports searching within a string.\n     */\n    search(searcher: { [Symbol.search](string: string): number }): number;\n\n    /**\n     * Split a string into substrings using the specified separator and return them as an array.\n     * @param splitter An object that can split a string.\n     * @param limit A value used to limit the number of elements returned in the array.\n     */\n    split(\n        splitter: { [Symbol.split](string: string, limit?: number): string[] },\n        limit?: number\n    ): string[];\n}\n\ninterface ArrayBuffer {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface DataView {\n    readonly [Symbol.toStringTag]: string;\n}\n\ninterface Int8Array {\n    readonly [Symbol.toStringTag]: 'Int8Array';\n}\n\ninterface Uint8Array {\n    readonly [Symbol.toStringTag]: 'Uint8Array';\n}\n\ninterface Uint8ClampedArray {\n    readonly [Symbol.toStringTag]: 'Uint8ClampedArray';\n}\n\ninterface Int16Array {\n    readonly [Symbol.toStringTag]: 'Int16Array';\n}\n\ninterface Uint16Array {\n    readonly [Symbol.toStringTag]: 'Uint16Array';\n}\n\ninterface Int32Array {\n    readonly [Symbol.toStringTag]: 'Int32Array';\n}\n\ninterface Uint32Array {\n    readonly [Symbol.toStringTag]: 'Uint32Array';\n}\n\ninterface Float32Array {\n    readonly [Symbol.toStringTag]: 'Float32Array';\n}\n\ninterface Float64Array {\n    readonly [Symbol.toStringTag]: 'Float64Array';\n}\n\ninterface ArrayConstructor {\n    readonly [Symbol.species]: ArrayConstructor;\n}\ninterface MapConstructor {\n    readonly [Symbol.species]: MapConstructor;\n}\ninterface SetConstructor {\n    readonly [Symbol.species]: SetConstructor;\n}\ninterface ArrayBufferConstructor {\n    readonly [Symbol.species]: ArrayBufferConstructor;\n}\n"},4807:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2016arrayinclude=void 0,t.es2016arrayinclude='\n\n/// <reference no-default-lib="true"/>\n\ninterface Array<T> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: T, fromIndex?: number): boolean;\n}\n\ninterface ReadonlyArray<T> {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: T, fromIndex?: number): boolean;\n}\n\ninterface Int8Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint8Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint8ClampedArray {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Int16Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint16Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Int32Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Uint32Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Float32Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n\ninterface Float64Array {\n    /**\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\n     * @param searchElement The element to search for.\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\n     */\n    includes(searchElement: number, fromIndex?: number): boolean;\n}\n'},90031:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2017intl=void 0,t.es2017intl="\n\n/// <reference no-default-lib=\"true\"/>\n\ndeclare namespace Intl {\n    type DateTimeFormatPartTypes =\n        | 'day'\n        | 'dayPeriod'\n        | 'era'\n        | 'hour'\n        | 'literal'\n        | 'minute'\n        | 'month'\n        | 'second'\n        | 'timeZoneName'\n        | 'weekday'\n        | 'year';\n\n    interface DateTimeFormatPart {\n        type: DateTimeFormatPartTypes;\n        value: string;\n    }\n\n    interface DateTimeFormat {\n        formatToParts(date?: Date | number): DateTimeFormatPart[];\n    }\n}\n"},16115:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2017object=void 0,t.es2017object='\n\n/// <reference no-default-lib="true"/>\n\ninterface ObjectConstructor {\n    /**\n     * Returns an array of values of the enumerable properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    values<T>(o: { [s: string]: T } | ArrayLike<T>): T[];\n\n    /**\n     * Returns an array of values of the enumerable properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    values(o: {}): any[];\n\n    /**\n     * Returns an array of key/values of the enumerable properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    entries<T>(o: { [s: string]: T } | ArrayLike<T>): [string, T][];\n\n    /**\n     * Returns an array of key/values of the enumerable properties of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    entries(o: {}): [string, any][];\n\n    /**\n     * Returns an object containing all own property descriptors of an object\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    getOwnPropertyDescriptors<T>(\n        o: T\n    ): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & {\n        [x: string]: PropertyDescriptor;\n    };\n}\n'},11179:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2017string=void 0,t.es2017string='\n\n/// <reference no-default-lib="true"/>\n\ninterface String {\n    /**\n     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n     * The padding is applied from the start (left) of the current string.\n     *\n     * @param maxLength The length of the resulting string once the current string has been padded.\n     *        If this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n     *\n     * @param fillString The string to pad the current string with.\n     *        If this string is too long, it will be truncated and the left-most part will be applied.\n     *        The default value for this parameter is " " (U+0020).\n     */\n    padStart(maxLength: number, fillString?: string): string;\n\n    /**\n     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n     * The padding is applied from the end (right) of the current string.\n     *\n     * @param maxLength The length of the resulting string once the current string has been padded.\n     *        If this parameter is smaller than the current string\'s length, the current string will be returned as it is.\n     *\n     * @param fillString The string to pad the current string with.\n     *        If this string is too long, it will be truncated and the left-most part will be applied.\n     *        The default value for this parameter is " " (U+0020).\n     */\n    padEnd(maxLength: number, fillString?: string): string;\n}\n'},40895:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2017typedarrays=void 0,t.es2017typedarrays='\n\n/// <reference no-default-lib="true"/>\n\ninterface Int8ArrayConstructor {\n    new (): Int8Array;\n}\n\ninterface Uint8ArrayConstructor {\n    new (): Uint8Array;\n}\n\ninterface Uint8ClampedArrayConstructor {\n    new (): Uint8ClampedArray;\n}\n\ninterface Int16ArrayConstructor {\n    new (): Int16Array;\n}\n\ninterface Uint16ArrayConstructor {\n    new (): Uint16Array;\n}\n\ninterface Int32ArrayConstructor {\n    new (): Int32Array;\n}\n\ninterface Uint32ArrayConstructor {\n    new (): Uint32Array;\n}\n\ninterface Float32ArrayConstructor {\n    new (): Float32Array;\n}\n\ninterface Float64ArrayConstructor {\n    new (): Float64Array;\n}\n'},89439:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2018asyncgenerator=void 0,t.es2018asyncgenerator='\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2018.asynciterable" />\n\ninterface AsyncGenerator<T = unknown, TReturn = any, TNext = unknown>\n    extends AsyncIterator<T, TReturn, TNext> {\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...args: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\n    return(\n        value: TReturn | PromiseLike<TReturn>\n    ): Promise<IteratorResult<T, TReturn>>;\n    throw(e: any): Promise<IteratorResult<T, TReturn>>;\n    [Symbol.asyncIterator](): AsyncGenerator<T, TReturn, TNext>;\n}\n\ninterface AsyncGeneratorFunction {\n    /**\n     * Creates a new AsyncGenerator object.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: any[]): AsyncGenerator;\n    /**\n     * Creates a new AsyncGenerator object.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: any[]): AsyncGenerator;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: AsyncGenerator;\n}\n\ninterface AsyncGeneratorFunctionConstructor {\n    /**\n     * Creates a new AsyncGenerator function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): AsyncGeneratorFunction;\n    /**\n     * Creates a new AsyncGenerator function.\n     * @param args A list of arguments the function accepts.\n     */\n    (...args: string[]): AsyncGeneratorFunction;\n    /**\n     * The length of the arguments.\n     */\n    readonly length: number;\n    /**\n     * Returns the name of the function.\n     */\n    readonly name: string;\n    /**\n     * A reference to the prototype.\n     */\n    readonly prototype: AsyncGeneratorFunction;\n}\n'},39705:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2018asynciterable=void 0,t.es2018asynciterable='\n\n/// <reference no-default-lib="true"/>\n\n/// <reference lib="es2015.symbol" />\n/// <reference lib="es2015.iterable" />\n\ninterface SymbolConstructor {\n    /**\n     * A method that returns the default async iterator for an object. Called by the semantics of\n     * the for-await-of statement.\n     */\n    readonly asyncIterator: symbol;\n}\n\ninterface AsyncIterator<T, TReturn = any, TNext = undefined> {\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\n    next(...args: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\n    return?(\n        value?: TReturn | PromiseLike<TReturn>\n    ): Promise<IteratorResult<T, TReturn>>;\n    throw?(e?: any): Promise<IteratorResult<T, TReturn>>;\n}\n\ninterface AsyncIterable<T> {\n    [Symbol.asyncIterator](): AsyncIterator<T>;\n}\n\ninterface AsyncIterableIterator<T> extends AsyncIterator<T> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<T>;\n}\n'},20872:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2018intl=void 0,t.es2018intl="\n\n/// <reference no-default-lib=\"true\"/>\n\ndeclare namespace Intl {\n    // http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Determining-Plural-Categories\n    type LDMLPluralRule = 'zero' | 'one' | 'two' | 'few' | 'many' | 'other';\n    type PluralRuleType = 'cardinal' | 'ordinal';\n\n    interface PluralRulesOptions {\n        localeMatcher?: 'lookup' | 'best fit';\n        type?: PluralRuleType;\n        minimumIntegerDigits?: number;\n        minimumFractionDigits?: number;\n        maximumFractionDigits?: number;\n        minimumSignificantDigits?: number;\n        maximumSignificantDigits?: number;\n    }\n\n    interface ResolvedPluralRulesOptions {\n        locale: string;\n        pluralCategories: LDMLPluralRule[];\n        type: PluralRuleType;\n        minimumIntegerDigits: number;\n        minimumFractionDigits: number;\n        maximumFractionDigits: number;\n        minimumSignificantDigits?: number;\n        maximumSignificantDigits?: number;\n    }\n\n    interface PluralRules {\n        resolvedOptions(): ResolvedPluralRulesOptions;\n        select(n: number): LDMLPluralRule;\n    }\n\n    const PluralRules: {\n        new (\n            locales?: string | string[],\n            options?: PluralRulesOptions\n        ): PluralRules;\n        (\n            locales?: string | string[],\n            options?: PluralRulesOptions\n        ): PluralRules;\n        supportedLocalesOf(\n            locales: string | string[],\n            options?: PluralRulesOptions\n        ): string[];\n    };\n}\n"},90868:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2018promise=void 0,t.es2018promise='\n\n/// <reference no-default-lib="true"/>\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface Promise<T> {\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): Promise<T>;\n}\n'},78099:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es2018regexp=void 0,t.es2018regexp='\n\n/// <reference no-default-lib="true"/>\n\ninterface RegExpMatchArray {\n    groups?: {\n        [key: string]: string;\n    };\n}\n\ninterface RegExpExecArray {\n    groups?: {\n        [key: string]: string;\n    };\n}\n\ninterface RegExp {\n    /**\n     * Returns a Boolean value indicating the state of the dotAll flag (s) used with a regular expression.\n     * Default is false. Read-only.\n     */\n    readonly dotAll: boolean;\n}\n'},62106:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.es5=void 0,t.es5="\n\n/// <reference no-default-lib=\"true\"/>\n\n/////////////////////////////\n/// ECMAScript APIs\n/////////////////////////////\n\ndeclare var NaN: number;\ndeclare var Infinity: number;\n\n/**\n * Evaluates JavaScript code and executes it.\n * @param x A String value that contains valid JavaScript code.\n */\ndeclare function eval(x: string): any;\n\n/**\n * Converts a string to an integer.\n * @param s A string to convert into a number.\n * @param radix A value between 2 and 36 that specifies the base of the number in numString.\n * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\n * All other strings are considered decimal.\n */\ndeclare function parseInt(s: string, radix?: number): number;\n\n/**\n * Converts a string to a floating-point number.\n * @param string A string that contains a floating-point number.\n */\ndeclare function parseFloat(string: string): number;\n\n/**\n * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).\n * @param number A numeric value.\n */\ndeclare function isNaN(number: number): boolean;\n\n/**\n * Determines whether a supplied number is finite.\n * @param number Any numeric value.\n */\ndeclare function isFinite(number: number): boolean;\n\n/**\n * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\n * @param encodedURI A value representing an encoded URI.\n */\ndeclare function decodeURI(encodedURI: string): string;\n\n/**\n * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n * @param encodedURIComponent A value representing an encoded URI component.\n */\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\n\n/**\n * Encodes a text string as a valid Uniform Resource Identifier (URI)\n * @param uri A value representing an encoded URI.\n */\ndeclare function encodeURI(uri: string): string;\n\n/**\n * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\n * @param uriComponent A value representing an encoded URI component.\n */\ndeclare function encodeURIComponent(\n    uriComponent: string | number | boolean\n): string;\n\n/**\n * Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.\n * @param string A string value\n */\ndeclare function escape(string: string): string;\n\n/**\n * Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.\n * @param string A string value\n */\ndeclare function unescape(string: string): string;\n\ninterface Symbol {\n    /** Returns a string representation of an object. */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): symbol;\n}\n\ndeclare type PropertyKey = string | number | symbol;\n\ninterface PropertyDescriptor {\n    configurable?: boolean;\n    enumerable?: boolean;\n    value?: any;\n    writable?: boolean;\n    get?(): any;\n    set?(v: any): void;\n}\n\ninterface PropertyDescriptorMap {\n    [s: string]: PropertyDescriptor;\n}\n\ninterface Object {\n    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */\n    constructor: Function;\n\n    /** Returns a string representation of an object. */\n    toString(): string;\n\n    /** Returns a date converted to a string using the current locale. */\n    toLocaleString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Object;\n\n    /**\n     * Determines whether an object has a property with the specified name.\n     * @param v A property name.\n     */\n    hasOwnProperty(v: PropertyKey): boolean;\n\n    /**\n     * Determines whether an object exists in another object's prototype chain.\n     * @param v Another object whose prototype chain is to be checked.\n     */\n    isPrototypeOf(v: Object): boolean;\n\n    /**\n     * Determines whether a specified property is enumerable.\n     * @param v A property name.\n     */\n    propertyIsEnumerable(v: PropertyKey): boolean;\n}\n\ninterface ObjectConstructor {\n    new (value?: any): Object;\n    (): any;\n    (value: any): any;\n\n    /** A reference to the prototype for a class of objects. */\n    readonly prototype: Object;\n\n    /**\n     * Returns the prototype of an object.\n     * @param o The object that references the prototype.\n     */\n    getPrototypeOf(o: any): any;\n\n    /**\n     * Gets the own property descriptor of the specified object.\n     * An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.\n     * @param o Object that contains the property.\n     * @param p Name of the property.\n     */\n    getOwnPropertyDescriptor(\n        o: any,\n        p: PropertyKey\n    ): PropertyDescriptor | undefined;\n\n    /**\n     * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n     * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n     * @param o Object that contains the own properties.\n     */\n    getOwnPropertyNames(o: any): string[];\n\n    /**\n     * Creates an object that has the specified prototype or that has null prototype.\n     * @param o Object to use as a prototype. May be null.\n     */\n    create(o: object | null): any;\n\n    /**\n     * Creates an object that has the specified prototype, and that optionally contains specified properties.\n     * @param o Object to use as a prototype. May be null\n     * @param properties JavaScript object that contains one or more property descriptors.\n     */\n    create(\n        o: object | null,\n        properties: PropertyDescriptorMap & ThisType<any>\n    ): any;\n\n    /**\n     * Adds a property to an object, or modifies attributes of an existing property.\n     * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\n     * @param p The property name.\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\n     */\n    defineProperty(\n        o: any,\n        p: PropertyKey,\n        attributes: PropertyDescriptor & ThisType<any>\n    ): any;\n\n    /**\n     * Adds one or more properties to an object, and/or modifies attributes of existing properties.\n     * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\n     * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\n     */\n    defineProperties(\n        o: any,\n        properties: PropertyDescriptorMap & ThisType<any>\n    ): any;\n\n    /**\n     * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    seal<T>(o: T): T;\n\n    /**\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    freeze<T>(a: T[]): readonly T[];\n\n    /**\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    freeze<T extends Function>(f: T): T;\n\n    /**\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n     * @param o Object on which to lock the attributes.\n     */\n    freeze<T>(o: T): Readonly<T>;\n\n    /**\n     * Prevents the addition of new properties to an object.\n     * @param o Object to make non-extensible.\n     */\n    preventExtensions<T>(o: T): T;\n\n    /**\n     * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\n     * @param o Object to test.\n     */\n    isSealed(o: any): boolean;\n\n    /**\n     * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\n     * @param o Object to test.\n     */\n    isFrozen(o: any): boolean;\n\n    /**\n     * Returns a value that indicates whether new properties can be added to an object.\n     * @param o Object to test.\n     */\n    isExtensible(o: any): boolean;\n\n    /**\n     * Returns the names of the enumerable string properties and methods of an object.\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n     */\n    keys(o: object): string[];\n}\n\n/**\n * Provides functionality common to all JavaScript objects.\n */\ndeclare var Object: ObjectConstructor;\n\n/**\n * Creates a new function.\n */\ninterface Function {\n    /**\n     * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\n     * @param thisArg The object to be used as the this object.\n     * @param argArray A set of arguments to be passed to the function.\n     */\n    apply(this: Function, thisArg: any, argArray?: any): any;\n\n    /**\n     * Calls a method of an object, substituting another object for the current object.\n     * @param thisArg The object to be used as the current object.\n     * @param argArray A list of arguments to be passed to the method.\n     */\n    call(this: Function, thisArg: any, ...argArray: any[]): any;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg An object to which the this keyword can refer inside the new function.\n     * @param argArray A list of arguments to be passed to the new function.\n     */\n    bind(this: Function, thisArg: any, ...argArray: any[]): any;\n\n    /** Returns a string representation of a function. */\n    toString(): string;\n\n    prototype: any;\n    readonly length: number;\n\n    // Non-standard extensions\n    arguments: any;\n    caller: Function;\n}\n\ninterface FunctionConstructor {\n    /**\n     * Creates a new function.\n     * @param args A list of arguments the function accepts.\n     */\n    new (...args: string[]): Function;\n    (...args: string[]): Function;\n    readonly prototype: Function;\n}\n\ndeclare var Function: FunctionConstructor;\n\n/**\n * Extracts the type of the 'this' parameter of a function type, or 'unknown' if the function type has no 'this' parameter.\n */\ntype ThisParameterType<T> = T extends (this: infer U, ...args: any[]) => any\n    ? U\n    : unknown;\n\n/**\n * Removes the 'this' parameter from a function type.\n */\ntype OmitThisParameter<T> = unknown extends ThisParameterType<T>\n    ? T\n    : T extends (...args: infer A) => infer R\n    ? (...args: A) => R\n    : T;\n\ninterface CallableFunction extends Function {\n    /**\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args An array of argument values to be passed to the function.\n     */\n    apply<T, R>(this: (this: T) => R, thisArg: T): R;\n    apply<T, A extends any[], R>(\n        this: (this: T, ...args: A) => R,\n        thisArg: T,\n        args: A\n    ): R;\n\n    /**\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args Argument values to be passed to the function.\n     */\n    call<T, A extends any[], R>(\n        this: (this: T, ...args: A) => R,\n        thisArg: T,\n        ...args: A\n    ): R;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg The object to be used as the this object.\n     * @param args Arguments to bind to the parameters of the function.\n     */\n    bind<T>(this: T, thisArg: ThisParameterType<T>): OmitThisParameter<T>;\n    bind<T, A0, A extends any[], R>(\n        this: (this: T, arg0: A0, ...args: A) => R,\n        thisArg: T,\n        arg0: A0\n    ): (...args: A) => R;\n    bind<T, A0, A1, A extends any[], R>(\n        this: (this: T, arg0: A0, arg1: A1, ...args: A) => R,\n        thisArg: T,\n        arg0: A0,\n        arg1: A1\n    ): (...args: A) => R;\n    bind<T, A0, A1, A2, A extends any[], R>(\n        this: (this: T, arg0: A0, arg1: A1, arg2: A2, ...args: A) => R,\n        thisArg: T,\n        arg0: A0,\n        arg1: A1,\n        arg2: A2\n    ): (...args: A) => R;\n    bind<T, A0, A1, A2, A3, A extends any[], R>(\n        this: (\n            this: T,\n            arg0: A0,\n            arg1: A1,\n            arg2: A2,\n            arg3: A3,\n            ...args: A\n        ) => R,\n        thisArg: T,\n        arg0: A0,\n        arg1: A1,\n        arg2: A2,\n        arg3: A3\n    ): (...args: A) => R;\n    bind<T, AX, R>(\n        this: (this: T, ...args: AX[]) => R,\n        thisArg: T,\n        ...args: AX[]\n    ): (...args: AX[]) => R;\n}\n\ninterface NewableFunction extends Function {\n    /**\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args An array of argument values to be passed to the function.\n     */\n    apply<T>(this: new () => T, thisArg: T): void;\n    apply<T, A extends any[]>(\n        this: new (...args: A) => T,\n        thisArg: T,\n        args: A\n    ): void;\n\n    /**\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\n     * @param thisArg The object to be used as the this object.\n     * @param args Argument values to be passed to the function.\n     */\n    call<T, A extends any[]>(\n        this: new (...args: A) => T,\n        thisArg: T,\n        ...args: A\n    ): void;\n\n    /**\n     * For a given function, creates a bound function that has the same body as the original function.\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n     * @param thisArg The object to be used as the this object.\n     * @param args Arguments to bind to the parameters of the function.\n     */\n    bind<T>(this: T, thisArg: any): T;\n    bind<A0, A extends any[], R>(\n        this: new (arg0: A0, ...args: A) => R,\n        thisArg: any,\n        arg0: A0\n    ): new (...args: A) => R;\n    bind<A0, A1, A extends any[], R>(\n        this: new (arg0: A0, arg1: A1, ...args: A) => R,\n        thisArg: any,\n        arg0: A0,\n        arg1: A1\n    ): new (...args: A) => R;\n    bind<A0, A1, A2, A extends any[], R>(\n        this: new (arg0: A0, arg1: A1, arg2: A2, ...args: A) => R,\n        thisArg: any,\n        arg0: A0,\n        arg1: A1,\n        arg2: A2\n    ): new (...args: A) => R;\n    bind<A0, A1, A2, A3, A extends any[], R>(\n        this: new (arg0: A0, arg1: A1, arg2: A2, arg3: A3, ...args: A) => R,\n        thisArg: any,\n        arg0: A0,\n        arg1: A1,\n        arg2: A2,\n        arg3: A3\n    ): new (...args: A) => R;\n    bind<AX, R>(\n        this: new (...args: AX[]) => R,\n        thisArg: any,\n        ...args: AX[]\n    ): new (...args: AX[]) => R;\n}\n\ninterface IArguments {\n    [index: number]: any;\n    length: number;\n    callee: Function;\n}\n\ninterface String {\n    /** Returns a string representation of a string. */\n    toString(): string;\n\n    /**\n     * Returns the character at the specified index.\n     * @param pos The zero-based index of the desired character.\n     */\n    charAt(pos: number): string;\n\n    /**\n     * Returns the Unicode value of the character at the specified location.\n     * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\n     */\n    charCodeAt(index: number): number;\n\n    /**\n     * Returns a string that contains the concatenation of two or more strings.\n     * @param strings The strings to append to the end of the string.\n     */\n    concat(...strings: string[]): string;\n\n    /**\n     * Returns the position of the first occurrence of a substring.\n     * @param searchString The substring to search for in the string\n     * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\n     */\n    indexOf(searchString: string, position?: number): number;\n\n    /**\n     * Returns the last occurrence of a substring in the string.\n     * @param searchString The substring to search for.\n     * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\n     */\n    lastIndexOf(searchString: string, position?: number): number;\n\n    /**\n     * Determines whether two strings are equivalent in the current locale.\n     * @param that String to compare to target string\n     */\n    localeCompare(that: string): number;\n\n    /**\n     * Matches a string with a regular expression, and returns an array containing the results of that search.\n     * @param regexp A variable name or string literal containing the regular expression pattern and flags.\n     */\n    match(regexp: string | RegExp): RegExpMatchArray | null;\n\n    /**\n     * Replaces text in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n     */\n    replace(searchValue: string | RegExp, replaceValue: string): string;\n\n    /**\n     * Replaces text in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replacer A function that returns the replacement text.\n     */\n    replace(\n        searchValue: string | RegExp,\n        replacer: (substring: string, ...args: any[]) => string\n    ): string;\n\n    /**\n     * Finds the first substring match in a regular expression search.\n     * @param regexp The regular expression pattern and applicable flags.\n     */\n    search(regexp: string | RegExp): number;\n\n    /**\n     * Returns a section of a string.\n     * @param start The index to the beginning of the specified portion of stringObj.\n     * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\n     * If this value is not specified, the substring continues to the end of stringObj.\n     */\n    slice(start?: number, end?: number): string;\n\n    /**\n     * Split a string into substrings using the specified separator and return them as an array.\n     * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\n     * @param limit A value used to limit the number of elements returned in the array.\n     */\n    split(separator: string | RegExp, limit?: number): string[];\n\n    /**\n     * Returns the substring at the specified location within a String object.\n     * @param start The zero-based index number indicating the beginning of the substring.\n     * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\n     * If end is omitted, the characters from start through the end of the original string are returned.\n     */\n    substring(start: number, end?: number): string;\n\n    /** Converts all the alphabetic characters in a string to lowercase. */\n    toLowerCase(): string;\n\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. */\n    toLocaleLowerCase(locales?: string | string[]): string;\n\n    /** Converts all the alphabetic characters in a string to uppercase. */\n    toUpperCase(): string;\n\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. */\n    toLocaleUpperCase(locales?: string | string[]): string;\n\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\n    trim(): string;\n\n    /** Returns the length of a String object. */\n    readonly length: number;\n\n    // IE extensions\n    /**\n     * Gets a substring beginning at the specified location and having the specified length.\n     * @param from The starting position of the desired substring. The index of the first character in the string is zero.\n     * @param length The number of characters to include in the returned substring.\n     */\n    substr(from: number, length?: number): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): string;\n\n    readonly [index: number]: string;\n}\n\ninterface StringConstructor {\n    new (value?: any): String;\n    (value?: any): string;\n    readonly prototype: String;\n    fromCharCode(...codes: number[]): string;\n}\n\n/**\n * Allows manipulation and formatting of text strings and determination and location of substrings within strings.\n */\ndeclare var String: StringConstructor;\n\ninterface Boolean {\n    /** Returns the primitive value of the specified object. */\n    valueOf(): boolean;\n}\n\ninterface BooleanConstructor {\n    new (value?: any): Boolean;\n    <T>(value?: T): boolean;\n    readonly prototype: Boolean;\n}\n\ndeclare var Boolean: BooleanConstructor;\n\ninterface Number {\n    /**\n     * Returns a string representation of an object.\n     * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\n     */\n    toString(radix?: number): string;\n\n    /**\n     * Returns a string representing a number in fixed-point notation.\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\n     */\n    toFixed(fractionDigits?: number): string;\n\n    /**\n     * Returns a string containing a number represented in exponential notation.\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\n     */\n    toExponential(fractionDigits?: number): string;\n\n    /**\n     * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\n     * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\n     */\n    toPrecision(precision?: number): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): number;\n}\n\ninterface NumberConstructor {\n    new (value?: any): Number;\n    (value?: any): number;\n    readonly prototype: Number;\n\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\n    readonly MAX_VALUE: number;\n\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\n    readonly MIN_VALUE: number;\n\n    /**\n     * A value that is not a number.\n     * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\n     */\n    readonly NaN: number;\n\n    /**\n     * A value that is less than the largest negative number that can be represented in JavaScript.\n     * JavaScript displays NEGATIVE_INFINITY values as -infinity.\n     */\n    readonly NEGATIVE_INFINITY: number;\n\n    /**\n     * A value greater than the largest number that can be represented in JavaScript.\n     * JavaScript displays POSITIVE_INFINITY values as infinity.\n     */\n    readonly POSITIVE_INFINITY: number;\n}\n\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\ndeclare var Number: NumberConstructor;\n\ninterface TemplateStringsArray extends ReadonlyArray<string> {\n    readonly raw: readonly string[];\n}\n\n/**\n * The type of `import.meta`.\n *\n * If you need to declare that a given property exists on `import.meta`,\n * this type may be augmented via interface merging.\n */\ninterface ImportMeta {}\n\ninterface Math {\n    /** The mathematical constant e. This is Euler's number, the base of natural logarithms. */\n    readonly E: number;\n    /** The natural logarithm of 10. */\n    readonly LN10: number;\n    /** The natural logarithm of 2. */\n    readonly LN2: number;\n    /** The base-2 logarithm of e. */\n    readonly LOG2E: number;\n    /** The base-10 logarithm of e. */\n    readonly LOG10E: number;\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\n    readonly PI: number;\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\n    readonly SQRT1_2: number;\n    /** The square root of 2. */\n    readonly SQRT2: number;\n    /**\n     * Returns the absolute value of a number (the value without regard to whether it is positive or negative).\n     * For example, the absolute value of -5 is the same as the absolute value of 5.\n     * @param x A numeric expression for which the absolute value is needed.\n     */\n    abs(x: number): number;\n    /**\n     * Returns the arc cosine (or inverse cosine) of a number.\n     * @param x A numeric expression.\n     */\n    acos(x: number): number;\n    /**\n     * Returns the arcsine of a number.\n     * @param x A numeric expression.\n     */\n    asin(x: number): number;\n    /**\n     * Returns the arctangent of a number.\n     * @param x A numeric expression for which the arctangent is needed.\n     */\n    atan(x: number): number;\n    /**\n     * Returns the angle (in radians) from the X axis to a point.\n     * @param y A numeric expression representing the cartesian y-coordinate.\n     * @param x A numeric expression representing the cartesian x-coordinate.\n     */\n    atan2(y: number, x: number): number;\n    /**\n     * Returns the smallest integer greater than or equal to its numeric argument.\n     * @param x A numeric expression.\n     */\n    ceil(x: number): number;\n    /**\n     * Returns the cosine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    cos(x: number): number;\n    /**\n     * Returns e (the base of natural logarithms) raised to a power.\n     * @param x A numeric expression representing the power of e.\n     */\n    exp(x: number): number;\n    /**\n     * Returns the greatest integer less than or equal to its numeric argument.\n     * @param x A numeric expression.\n     */\n    floor(x: number): number;\n    /**\n     * Returns the natural logarithm (base e) of a number.\n     * @param x A numeric expression.\n     */\n    log(x: number): number;\n    /**\n     * Returns the larger of a set of supplied numeric expressions.\n     * @param values Numeric expressions to be evaluated.\n     */\n    max(...values: number[]): number;\n    /**\n     * Returns the smaller of a set of supplied numeric expressions.\n     * @param values Numeric expressions to be evaluated.\n     */\n    min(...values: number[]): number;\n    /**\n     * Returns the value of a base expression taken to a specified power.\n     * @param x The base value of the expression.\n     * @param y The exponent value of the expression.\n     */\n    pow(x: number, y: number): number;\n    /** Returns a pseudorandom number between 0 and 1. */\n    random(): number;\n    /**\n     * Returns a supplied numeric expression rounded to the nearest integer.\n     * @param x The value to be rounded to the nearest integer.\n     */\n    round(x: number): number;\n    /**\n     * Returns the sine of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    sin(x: number): number;\n    /**\n     * Returns the square root of a number.\n     * @param x A numeric expression.\n     */\n    sqrt(x: number): number;\n    /**\n     * Returns the tangent of a number.\n     * @param x A numeric expression that contains an angle measured in radians.\n     */\n    tan(x: number): number;\n}\n/** An intrinsic object that provides basic mathematics functionality and constants. */\ndeclare var Math: Math;\n\n/** Enables basic storage and retrieval of dates and times. */\ninterface Date {\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\n    toString(): string;\n    /** Returns a date as a string value. */\n    toDateString(): string;\n    /** Returns a time as a string value. */\n    toTimeString(): string;\n    /** Returns a value as a string value appropriate to the host environment's current locale. */\n    toLocaleString(): string;\n    /** Returns a date as a string value appropriate to the host environment's current locale. */\n    toLocaleDateString(): string;\n    /** Returns a time as a string value appropriate to the host environment's current locale. */\n    toLocaleTimeString(): string;\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\n    valueOf(): number;\n    /** Gets the time value in milliseconds. */\n    getTime(): number;\n    /** Gets the year, using local time. */\n    getFullYear(): number;\n    /** Gets the year using Universal Coordinated Time (UTC). */\n    getUTCFullYear(): number;\n    /** Gets the month, using local time. */\n    getMonth(): number;\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMonth(): number;\n    /** Gets the day-of-the-month, using local time. */\n    getDate(): number;\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\n    getUTCDate(): number;\n    /** Gets the day of the week, using local time. */\n    getDay(): number;\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\n    getUTCDay(): number;\n    /** Gets the hours in a date, using local time. */\n    getHours(): number;\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\n    getUTCHours(): number;\n    /** Gets the minutes of a Date object, using local time. */\n    getMinutes(): number;\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMinutes(): number;\n    /** Gets the seconds of a Date object, using local time. */\n    getSeconds(): number;\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\n    getUTCSeconds(): number;\n    /** Gets the milliseconds of a Date, using local time. */\n    getMilliseconds(): number;\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMilliseconds(): number;\n    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */\n    getTimezoneOffset(): number;\n    /**\n     * Sets the date and time value in the Date object.\n     * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.\n     */\n    setTime(time: number): number;\n    /**\n     * Sets the milliseconds value in the Date object using local time.\n     * @param ms A numeric value equal to the millisecond value.\n     */\n    setMilliseconds(ms: number): number;\n    /**\n     * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\n     * @param ms A numeric value equal to the millisecond value.\n     */\n    setUTCMilliseconds(ms: number): number;\n\n    /**\n     * Sets the seconds value in the Date object using local time.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setSeconds(sec: number, ms?: number): number;\n    /**\n     * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setUTCSeconds(sec: number, ms?: number): number;\n    /**\n     * Sets the minutes value in the Date object using local time.\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setMinutes(min: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setUTCMinutes(min: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the hour value in the Date object using local time.\n     * @param hours A numeric value equal to the hours value.\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setHours(hours: number, min?: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\n     * @param hours A numeric value equal to the hours value.\n     * @param min A numeric value equal to the minutes value.\n     * @param sec A numeric value equal to the seconds value.\n     * @param ms A numeric value equal to the milliseconds value.\n     */\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;\n    /**\n     * Sets the numeric day-of-the-month value of the Date object using local time.\n     * @param date A numeric value equal to the day of the month.\n     */\n    setDate(date: number): number;\n    /**\n     * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\n     * @param date A numeric value equal to the day of the month.\n     */\n    setUTCDate(date: number): number;\n    /**\n     * Sets the month value in the Date object using local time.\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\n     * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\n     */\n    setMonth(month: number, date?: number): number;\n    /**\n     * Sets the month value in the Date object using Universal Coordinated Time (UTC).\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\n     * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\n     */\n    setUTCMonth(month: number, date?: number): number;\n    /**\n     * Sets the year of the Date object using local time.\n     * @param year A numeric value for the year.\n     * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\n     * @param date A numeric value equal for the day of the month.\n     */\n    setFullYear(year: number, month?: number, date?: number): number;\n    /**\n     * Sets the year value in the Date object using Universal Coordinated Time (UTC).\n     * @param year A numeric value equal to the year.\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\n     * @param date A numeric value equal to the day of the month.\n     */\n    setUTCFullYear(year: number, month?: number, date?: number): number;\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\n    toUTCString(): string;\n    /** Returns a date as a string value in ISO format. */\n    toISOString(): string;\n    /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */\n    toJSON(key?: any): string;\n}\n\ninterface DateConstructor {\n    new (): Date;\n    new (value: number | string): Date;\n    new (\n        year: number,\n        month: number,\n        date?: number,\n        hours?: number,\n        minutes?: number,\n        seconds?: number,\n        ms?: number\n    ): Date;\n    (): string;\n    readonly prototype: Date;\n    /**\n     * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\n     * @param s A date string\n     */\n    parse(s: string): number;\n    /**\n     * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\n     * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\n     * @param month The month as a number between 0 and 11 (January to December).\n     * @param date The date as a number between 1 and 31.\n     * @param hours Must be supplied if minutes is supplied. A number from 0 to 23 (midnight to 11pm) that specifies the hour.\n     * @param minutes Must be supplied if seconds is supplied. A number from 0 to 59 that specifies the minutes.\n     * @param seconds Must be supplied if milliseconds is supplied. A number from 0 to 59 that specifies the seconds.\n     * @param ms A number from 0 to 999 that specifies the milliseconds.\n     */\n    UTC(\n        year: number,\n        month: number,\n        date?: number,\n        hours?: number,\n        minutes?: number,\n        seconds?: number,\n        ms?: number\n    ): number;\n    now(): number;\n}\n\ndeclare var Date: DateConstructor;\n\ninterface RegExpMatchArray extends Array<string> {\n    index?: number;\n    input?: string;\n}\n\ninterface RegExpExecArray extends Array<string> {\n    index: number;\n    input: string;\n}\n\ninterface RegExp {\n    /**\n     * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\n     * @param string The String object or string literal on which to perform the search.\n     */\n    exec(string: string): RegExpExecArray | null;\n\n    /**\n     * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\n     * @param string String on which to perform the search.\n     */\n    test(string: string): boolean;\n\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */\n    readonly source: string;\n\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\n    readonly global: boolean;\n\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\n    readonly ignoreCase: boolean;\n\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\n    readonly multiline: boolean;\n\n    lastIndex: number;\n\n    // Non-standard extensions\n    compile(): this;\n}\n\ninterface RegExpConstructor {\n    new (pattern: RegExp | string): RegExp;\n    new (pattern: string, flags?: string): RegExp;\n    (pattern: RegExp | string): RegExp;\n    (pattern: string, flags?: string): RegExp;\n    readonly prototype: RegExp;\n\n    // Non-standard extensions\n    $1: string;\n    $2: string;\n    $3: string;\n    $4: string;\n    $5: string;\n    $6: string;\n    $7: string;\n    $8: string;\n    $9: string;\n    lastMatch: string;\n}\n\ndeclare var RegExp: RegExpConstructor;\n\ninterface Error {\n    name: string;\n    message: string;\n    stack?: string;\n}\n\ninterface ErrorConstructor {\n    new (message?: string): Error;\n    (message?: string): Error;\n    readonly prototype: Error;\n}\n\ndeclare var Error: ErrorConstructor;\n\ninterface EvalError extends Error {}\n\ninterface EvalErrorConstructor extends ErrorConstructor {\n    new (message?: string): EvalError;\n    (message?: string): EvalError;\n    readonly prototype: EvalError;\n}\n\ndeclare var EvalError: EvalErrorConstructor;\n\ninterface RangeError extends Error {}\n\ninterface RangeErrorConstructor extends ErrorConstructor {\n    new (message?: string): RangeError;\n    (message?: string): RangeError;\n    readonly prototype: RangeError;\n}\n\ndeclare var RangeError: RangeErrorConstructor;\n\ninterface ReferenceError extends Error {}\n\ninterface ReferenceErrorConstructor extends ErrorConstructor {\n    new (message?: string): ReferenceError;\n    (message?: string): ReferenceError;\n    readonly prototype: ReferenceError;\n}\n\ndeclare var ReferenceError: ReferenceErrorConstructor;\n\ninterface SyntaxError extends Error {}\n\ninterface SyntaxErrorConstructor extends ErrorConstructor {\n    new (message?: string): SyntaxError;\n    (message?: string): SyntaxError;\n    readonly prototype: SyntaxError;\n}\n\ndeclare var SyntaxError: SyntaxErrorConstructor;\n\ninterface TypeError extends Error {}\n\ninterface TypeErrorConstructor extends ErrorConstructor {\n    new (message?: string): TypeError;\n    (message?: string): TypeError;\n    readonly prototype: TypeError;\n}\n\ndeclare var TypeError: TypeErrorConstructor;\n\ninterface URIError extends Error {}\n\ninterface URIErrorConstructor extends ErrorConstructor {\n    new (message?: string): URIError;\n    (message?: string): URIError;\n    readonly prototype: URIError;\n}\n\ndeclare var URIError: URIErrorConstructor;\n\ninterface JSON {\n    /**\n     * Converts a JavaScript Object Notation (JSON) string into an object.\n     * @param text A valid JSON string.\n     * @param reviver A function that transforms the results. This function is called for each member of the object.\n     * If a member contains nested objects, the nested objects are transformed before the parent object is.\n     */\n    parse(\n        text: string,\n        reviver?: (this: any, key: string, value: any) => any\n    ): any;\n    /**\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n     * @param value A JavaScript value, usually an object or array, to be converted.\n     * @param replacer A function that transforms the results.\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\n     */\n    stringify(\n        value: any,\n        replacer?: (this: any, key: string, value: any) => any,\n        space?: string | number\n    ): string;\n    /**\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n     * @param value A JavaScript value, usually an object or array, to be converted.\n     * @param replacer An array of strings and numbers that acts as a approved list for selecting the object properties that will be stringified.\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\n     */\n    stringify(\n        value: any,\n        replacer?: (number | string)[] | null,\n        space?: string | number\n    ): string;\n}\n\n/**\n * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\n */\ndeclare var JSON: JSON;\n\n/////////////////////////////\n/// ECMAScript Array API (specially handled by compiler)\n/////////////////////////////\n\ninterface ReadonlyArray<T> {\n    /**\n     * Gets the length of the array. This is a number one higher than the highest element defined in an array.\n     */\n    readonly length: number;\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n    /**\n     * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\n     */\n    toLocaleString(): string;\n    /**\n     * Combines two or more arrays.\n     * @param items Additional items to add to the end of array1.\n     */\n    concat(...items: ConcatArray<T>[]): T[];\n    /**\n     * Combines two or more arrays.\n     * @param items Additional items to add to the end of array1.\n     */\n    concat(...items: (T | ConcatArray<T>)[]): T[];\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): T[];\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n     */\n    indexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Returns the index of the last occurrence of a specified value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n     */\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every<S extends T>(\n        predicate: (value: T, index: number, array: readonly T[]) => value is S,\n        thisArg?: any\n    ): this is readonly S[];\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (value: T, index: number, array: readonly T[]) => unknown,\n        thisArg?: any\n    ): boolean;\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (value: T, index: number, array: readonly T[]) => unknown,\n        thisArg?: any\n    ): boolean;\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: T, index: number, array: readonly T[]) => void,\n        thisArg?: any\n    ): void;\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    map<U>(\n        callbackfn: (value: T, index: number, array: readonly T[]) => U,\n        thisArg?: any\n    ): U[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter<S extends T>(\n        predicate: (value: T, index: number, array: readonly T[]) => value is S,\n        thisArg?: any\n    ): S[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: T, index: number, array: readonly T[]) => unknown,\n        thisArg?: any\n    ): T[];\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: readonly T[]\n        ) => T\n    ): T;\n    reduce(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: readonly T[]\n        ) => T,\n        initialValue: T\n    ): T;\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: T,\n            currentIndex: number,\n            array: readonly T[]\n        ) => U,\n        initialValue: U\n    ): U;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: readonly T[]\n        ) => T\n    ): T;\n    reduceRight(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: readonly T[]\n        ) => T,\n        initialValue: T\n    ): T;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: T,\n            currentIndex: number,\n            array: readonly T[]\n        ) => U,\n        initialValue: U\n    ): U;\n\n    readonly [n: number]: T;\n}\n\ninterface ConcatArray<T> {\n    readonly length: number;\n    readonly [n: number]: T;\n    join(separator?: string): string;\n    slice(start?: number, end?: number): T[];\n}\n\ninterface Array<T> {\n    /**\n     * Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.\n     */\n    length: number;\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n    /**\n     * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\n     */\n    toLocaleString(): string;\n    /**\n     * Removes the last element from an array and returns it.\n     */\n    pop(): T | undefined;\n    /**\n     * Appends new elements to an array, and returns the new length of the array.\n     * @param items New elements of the Array.\n     */\n    push(...items: T[]): number;\n    /**\n     * Combines two or more arrays.\n     * @param items Additional items to add to the end of array1.\n     */\n    concat(...items: ConcatArray<T>[]): T[];\n    /**\n     * Combines two or more arrays.\n     * @param items Additional items to add to the end of array1.\n     */\n    concat(...items: (T | ConcatArray<T>)[]): T[];\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): T[];\n    /**\n     * Removes the first element from an array and returns it.\n     */\n    shift(): T | undefined;\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): T[];\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: T, b: T) => number): this;\n    /**\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     */\n    splice(start: number, deleteCount?: number): T[];\n    /**\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n     * @param start The zero-based location in the array from which to start removing elements.\n     * @param deleteCount The number of elements to remove.\n     * @param items Elements to insert into the array in place of the deleted elements.\n     */\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\n    /**\n     * Inserts new elements at the start of an array.\n     * @param items  Elements to insert at the start of the Array.\n     */\n    unshift(...items: T[]): number;\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n     */\n    indexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Returns the index of the last occurrence of a specified value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n     */\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every<S extends T>(\n        predicate: (value: T, index: number, array: T[]) => value is S,\n        thisArg?: any\n    ): this is S[];\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (value: T, index: number, array: T[]) => unknown,\n        thisArg?: any\n    ): boolean;\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (value: T, index: number, array: T[]) => unknown,\n        thisArg?: any\n    ): boolean;\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: T, index: number, array: T[]) => void,\n        thisArg?: any\n    ): void;\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    map<U>(\n        callbackfn: (value: T, index: number, array: T[]) => U,\n        thisArg?: any\n    ): U[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter<S extends T>(\n        predicate: (value: T, index: number, array: T[]) => value is S,\n        thisArg?: any\n    ): S[];\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: T, index: number, array: T[]) => unknown,\n        thisArg?: any\n    ): T[];\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: T[]\n        ) => T\n    ): T;\n    reduce(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: T[]\n        ) => T,\n        initialValue: T\n    ): T;\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: T,\n            currentIndex: number,\n            array: T[]\n        ) => U,\n        initialValue: U\n    ): U;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: T[]\n        ) => T\n    ): T;\n    reduceRight(\n        callbackfn: (\n            previousValue: T,\n            currentValue: T,\n            currentIndex: number,\n            array: T[]\n        ) => T,\n        initialValue: T\n    ): T;\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: T,\n            currentIndex: number,\n            array: T[]\n        ) => U,\n        initialValue: U\n    ): U;\n\n    [n: number]: T;\n}\n\ninterface ArrayConstructor {\n    new (arrayLength?: number): any[];\n    new <T>(arrayLength: number): T[];\n    new <T>(...items: T[]): T[];\n    (arrayLength?: number): any[];\n    <T>(arrayLength: number): T[];\n    <T>(...items: T[]): T[];\n    isArray(arg: any): arg is any[];\n    readonly prototype: any[];\n}\n\ndeclare var Array: ArrayConstructor;\n\ninterface TypedPropertyDescriptor<T> {\n    enumerable?: boolean;\n    configurable?: boolean;\n    writable?: boolean;\n    value?: T;\n    get?: () => T;\n    set?: (value: T) => void;\n}\n\ndeclare type ClassDecorator = <TFunction extends Function>(\n    target: TFunction\n) => TFunction | void;\ndeclare type PropertyDecorator = (\n    target: Object,\n    propertyKey: string | symbol\n) => void;\ndeclare type MethodDecorator = <T>(\n    target: Object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<T>\n) => TypedPropertyDescriptor<T> | void;\ndeclare type ParameterDecorator = (\n    target: Object,\n    propertyKey: string | symbol,\n    parameterIndex: number\n) => void;\n\ndeclare type PromiseConstructorLike = new <T>(\n    executor: (\n        resolve: (value?: T | PromiseLike<T>) => void,\n        reject: (reason?: any) => void\n    ) => void\n) => PromiseLike<T>;\n\ninterface PromiseLike<T> {\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(\n        onfulfilled?:\n            | ((value: T) => TResult1 | PromiseLike<TResult1>)\n            | undefined\n            | null,\n        onrejected?:\n            | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n            | undefined\n            | null\n    ): PromiseLike<TResult1 | TResult2>;\n}\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface Promise<T> {\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(\n        onfulfilled?:\n            | ((value: T) => TResult1 | PromiseLike<TResult1>)\n            | undefined\n            | null,\n        onrejected?:\n            | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n            | undefined\n            | null\n    ): Promise<TResult1 | TResult2>;\n\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(\n        onrejected?:\n            | ((reason: any) => TResult | PromiseLike<TResult>)\n            | undefined\n            | null\n    ): Promise<T | TResult>;\n}\n\ninterface ArrayLike<T> {\n    readonly length: number;\n    readonly [n: number]: T;\n}\n\n/**\n * Make all properties in T optional\n */\ntype Partial<T> = {\n    [P in keyof T]?: T[P];\n};\n\n/**\n * Make all properties in T required\n */\ntype Required<T> = {\n    [P in keyof T]-?: T[P];\n};\n\n/**\n * Make all properties in T readonly\n */\ntype Readonly<T> = {\n    readonly [P in keyof T]: T[P];\n};\n\n/**\n * From T, pick a set of properties whose keys are in the union K\n */\ntype Pick<T, K extends keyof T> = {\n    [P in K]: T[P];\n};\n\n/**\n * Construct a type with a set of properties K of type T\n */\ntype Record<K extends keyof any, T> = {\n    [P in K]: T;\n};\n\n/**\n * Exclude from T those types that are assignable to U\n */\ntype Exclude<T, U> = T extends U ? never : T;\n\n/**\n * Extract from T those types that are assignable to U\n */\ntype Extract<T, U> = T extends U ? T : never;\n\n/**\n * Construct a type with the properties of T except for those in type K.\n */\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Exclude null and undefined from T\n */\ntype NonNullable<T> = T extends null | undefined ? never : T;\n\n/**\n * Obtain the parameters of a function type in a tuple\n */\ntype Parameters<T extends (...args: any) => any> = T extends (\n    ...args: infer P\n) => any\n    ? P\n    : never;\n\n/**\n * Obtain the parameters of a constructor function type in a tuple\n */\ntype ConstructorParameters<\n    T extends new (...args: any) => any\n> = T extends new (...args: infer P) => any ? P : never;\n\n/**\n * Obtain the return type of a function type\n */\ntype ReturnType<T extends (...args: any) => any> = T extends (\n    ...args: any\n) => infer R\n    ? R\n    : any;\n\n/**\n * Obtain the return type of a constructor function type\n */\ntype InstanceType<T extends new (...args: any) => any> = T extends new (\n    ...args: any\n) => infer R\n    ? R\n    : any;\n\n/**\n * Marker for contextual 'this' type\n */\ninterface ThisType<T> {}\n\n/**\n * Represents a raw buffer of binary data, which is used to store data for the\n * different typed arrays. ArrayBuffers cannot be read from or written to directly,\n * but can be passed to a typed array or DataView Object to interpret the raw\n * buffer as needed.\n */\ninterface ArrayBuffer {\n    /**\n     * Read-only. The length of the ArrayBuffer (in bytes).\n     */\n    readonly byteLength: number;\n\n    /**\n     * Returns a section of an ArrayBuffer.\n     */\n    slice(begin: number, end?: number): ArrayBuffer;\n}\n\n/**\n * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.\n */\ninterface ArrayBufferTypes {\n    ArrayBuffer: ArrayBuffer;\n}\ntype ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];\n\ninterface ArrayBufferConstructor {\n    readonly prototype: ArrayBuffer;\n    new (byteLength: number): ArrayBuffer;\n    isView(arg: any): arg is ArrayBufferView;\n}\ndeclare var ArrayBuffer: ArrayBufferConstructor;\n\ninterface ArrayBufferView {\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    byteOffset: number;\n}\n\ninterface DataView {\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    /**\n     * Gets the Float32 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Float64 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Int8 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getInt8(byteOffset: number): number;\n\n    /**\n     * Gets the Int16 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\n    /**\n     * Gets the Int32 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Uint8 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getUint8(byteOffset: number): number;\n\n    /**\n     * Gets the Uint16 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Gets the Uint32 value at the specified byte offset from the start of the view. There is\n     * no alignment constraint; multi-byte values may be fetched from any offset.\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\n     */\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\n\n    /**\n     * Stores an Float32 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written,\n     * otherwise a little-endian value should be written.\n     */\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Float64 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written,\n     * otherwise a little-endian value should be written.\n     */\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Int8 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     */\n    setInt8(byteOffset: number, value: number): void;\n\n    /**\n     * Stores an Int16 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written,\n     * otherwise a little-endian value should be written.\n     */\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Int32 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written,\n     * otherwise a little-endian value should be written.\n     */\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Uint8 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     */\n    setUint8(byteOffset: number, value: number): void;\n\n    /**\n     * Stores an Uint16 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written,\n     * otherwise a little-endian value should be written.\n     */\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\n\n    /**\n     * Stores an Uint32 value at the specified byte offset from the start of the view.\n     * @param byteOffset The place in the buffer at which the value should be set.\n     * @param value The value to set.\n     * @param littleEndian If false or undefined, a big-endian value should be written,\n     * otherwise a little-endian value should be written.\n     */\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\n}\n\ninterface DataViewConstructor {\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        byteLength?: number\n    ): DataView;\n}\ndeclare var DataView: DataViewConstructor;\n\n/**\n * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\n * number of bytes could not be allocated an exception is raised.\n */\ninterface Int8Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (value: number, index: number, array: Int8Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Int8Array) => any,\n        thisArg?: any\n    ): Int8Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Int8Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Int8Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Int8Array) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (value: number, index: number, array: Int8Array) => number,\n        thisArg?: any\n    ): Int8Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int8Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int8Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Int8Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int8Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int8Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Int8Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Int8Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Int8Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (value: number, index: number, array: Int8Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Int8Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Int8Array;\n\n    [index: number]: number;\n}\ninterface Int8ArrayConstructor {\n    readonly prototype: Int8Array;\n    new (length: number): Int8Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Int8Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Int8Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Int8Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Int8Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Int8Array;\n}\ndeclare var Int8Array: Int8ArrayConstructor;\n\n/**\n * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint8Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (value: number, index: number, array: Uint8Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Uint8Array) => any,\n        thisArg?: any\n    ): Uint8Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Uint8Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Uint8Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Uint8Array) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (value: number, index: number, array: Uint8Array) => number,\n        thisArg?: any\n    ): Uint8Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Uint8Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Uint8Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (value: number, index: number, array: Uint8Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint8Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Uint8Array;\n\n    [index: number]: number;\n}\n\ninterface Uint8ArrayConstructor {\n    readonly prototype: Uint8Array;\n    new (length: number): Uint8Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Uint8Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Uint8Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint8Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint8Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Uint8Array;\n}\ndeclare var Uint8Array: Uint8ArrayConstructor;\n\n/**\n * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\n * If the requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint8ClampedArray {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint8ClampedArray\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint8ClampedArray\n        ) => any,\n        thisArg?: any\n    ): Uint8ClampedArray;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (\n            value: number,\n            index: number,\n            obj: Uint8ClampedArray\n        ) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (\n            value: number,\n            index: number,\n            obj: Uint8ClampedArray\n        ) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (\n            value: number,\n            index: number,\n            array: Uint8ClampedArray\n        ) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (\n            value: number,\n            index: number,\n            array: Uint8ClampedArray\n        ) => number,\n        thisArg?: any\n    ): Uint8ClampedArray;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8ClampedArray\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8ClampedArray\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8ClampedArray\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8ClampedArray\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8ClampedArray\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint8ClampedArray\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Uint8ClampedArray;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Uint8ClampedArray;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint8ClampedArray\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint8ClampedArray;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Uint8ClampedArray;\n\n    [index: number]: number;\n}\n\ninterface Uint8ClampedArrayConstructor {\n    readonly prototype: Uint8ClampedArray;\n    new (length: number): Uint8ClampedArray;\n    new (array: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Uint8ClampedArray;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint8ClampedArray;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint8ClampedArray;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Uint8ClampedArray;\n}\ndeclare var Uint8ClampedArray: Uint8ClampedArrayConstructor;\n\n/**\n * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Int16Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (value: number, index: number, array: Int16Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Int16Array) => any,\n        thisArg?: any\n    ): Int16Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Int16Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Int16Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Int16Array) => void,\n        thisArg?: any\n    ): void;\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (value: number, index: number, array: Int16Array) => number,\n        thisArg?: any\n    ): Int16Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int16Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int16Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Int16Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int16Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int16Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Int16Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Int16Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Int16Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (value: number, index: number, array: Int16Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Int16Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Int16Array;\n\n    [index: number]: number;\n}\n\ninterface Int16ArrayConstructor {\n    readonly prototype: Int16Array;\n    new (length: number): Int16Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Int16Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Int16Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Int16Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Int16Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Int16Array;\n}\ndeclare var Int16Array: Int16ArrayConstructor;\n\n/**\n * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint16Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint16Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Uint16Array) => any,\n        thisArg?: any\n    ): Uint16Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Uint16Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Uint16Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Uint16Array) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (\n            value: number,\n            index: number,\n            array: Uint16Array\n        ) => number,\n        thisArg?: any\n    ): Uint16Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint16Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint16Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint16Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint16Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint16Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint16Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Uint16Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Uint16Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint16Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint16Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Uint16Array;\n\n    [index: number]: number;\n}\n\ninterface Uint16ArrayConstructor {\n    readonly prototype: Uint16Array;\n    new (length: number): Uint16Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Uint16Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Uint16Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint16Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint16Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Uint16Array;\n}\ndeclare var Uint16Array: Uint16ArrayConstructor;\n/**\n * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Int32Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (value: number, index: number, array: Int32Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Int32Array) => any,\n        thisArg?: any\n    ): Int32Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Int32Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Int32Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Int32Array) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (value: number, index: number, array: Int32Array) => number,\n        thisArg?: any\n    ): Int32Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int32Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int32Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Int32Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int32Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Int32Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Int32Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Int32Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Int32Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (value: number, index: number, array: Int32Array) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Int32Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Int32Array;\n\n    [index: number]: number;\n}\n\ninterface Int32ArrayConstructor {\n    readonly prototype: Int32Array;\n    new (length: number): Int32Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Int32Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Int32Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Int32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Int32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Int32Array;\n}\ndeclare var Int32Array: Int32ArrayConstructor;\n\n/**\n * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\n * requested number of bytes could not be allocated an exception is raised.\n */\ninterface Uint32Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint32Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Uint32Array) => any,\n        thisArg?: any\n    ): Uint32Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Uint32Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Uint32Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Uint32Array) => void,\n        thisArg?: any\n    ): void;\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (\n            value: number,\n            index: number,\n            array: Uint32Array\n        ) => number,\n        thisArg?: any\n    ): Uint32Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint32Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint32Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint32Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint32Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint32Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Uint32Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Uint32Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Uint32Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (\n            value: number,\n            index: number,\n            array: Uint32Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Uint32Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Uint32Array;\n\n    [index: number]: number;\n}\n\ninterface Uint32ArrayConstructor {\n    readonly prototype: Uint32Array;\n    new (length: number): Uint32Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Uint32Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Uint32Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Uint32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Uint32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Uint32Array;\n}\ndeclare var Uint32Array: Uint32ArrayConstructor;\n\n/**\n * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\n * of bytes could not be allocated an exception is raised.\n */\ninterface Float32Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (\n            value: number,\n            index: number,\n            array: Float32Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Float32Array) => any,\n        thisArg?: any\n    ): Float32Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Float32Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Float32Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Float32Array) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (\n            value: number,\n            index: number,\n            array: Float32Array\n        ) => number,\n        thisArg?: any\n    ): Float32Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float32Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float32Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Float32Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float32Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float32Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Float32Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Float32Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Float32Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (\n            value: number,\n            index: number,\n            array: Float32Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Float32Array;\n\n    /**\n     * Converts a number to a string by using the current locale.\n     */\n    toLocaleString(): string;\n\n    /**\n     * Returns a string representation of an array.\n     */\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Float32Array;\n\n    [index: number]: number;\n}\n\ninterface Float32ArrayConstructor {\n    readonly prototype: Float32Array;\n    new (length: number): Float32Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Float32Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Float32Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Float32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Float32Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Float32Array;\n}\ndeclare var Float32Array: Float32ArrayConstructor;\n\n/**\n * A typed array of 64-bit float values. The contents are initialized to 0. If the requested\n * number of bytes could not be allocated an exception is raised.\n */\ninterface Float64Array {\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * The ArrayBuffer instance referenced by the array.\n     */\n    readonly buffer: ArrayBufferLike;\n\n    /**\n     * The length in bytes of the array.\n     */\n    readonly byteLength: number;\n\n    /**\n     * The offset in bytes of the array.\n     */\n    readonly byteOffset: number;\n\n    /**\n     * Returns the this object after copying a section of the array identified by start and end\n     * to the same array starting at position target\n     * @param target If target is negative, it is treated as length+target where length is the\n     * length of the array.\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\n     * is treated as length+end.\n     * @param end If not specified, length of the this object is used as its default value.\n     */\n    copyWithin(target: number, start: number, end?: number): this;\n\n    /**\n     * Determines whether all the members of an array satisfy the specified test.\n     * @param predicate A function that accepts up to three arguments. The every method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value false, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    every(\n        predicate: (\n            value: number,\n            index: number,\n            array: Float64Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Returns the this object after filling the section identified by start and end with value\n     * @param value value to fill array section with\n     * @param start index to start filling the array at. If start is negative, it is treated as\n     * length+start where length is the length of the array.\n     * @param end index to stop filling the array at. If end is negative, it is treated as\n     * length+end.\n     */\n    fill(value: number, start?: number, end?: number): this;\n\n    /**\n     * Returns the elements of an array that meet the condition specified in a callback function.\n     * @param predicate A function that accepts up to three arguments. The filter method calls\n     * the predicate function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    filter(\n        predicate: (value: number, index: number, array: Float64Array) => any,\n        thisArg?: any\n    ): Float64Array;\n\n    /**\n     * Returns the value of the first element in the array where predicate is true, and undefined\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found, find\n     * immediately returns that element value. Otherwise, find returns undefined.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    find(\n        predicate: (value: number, index: number, obj: Float64Array) => boolean,\n        thisArg?: any\n    ): number | undefined;\n\n    /**\n     * Returns the index of the first element in the array where predicate is true, and -1\n     * otherwise.\n     * @param predicate find calls predicate once for each element of the array, in ascending\n     * order, until it finds one where predicate returns true. If such an element is found,\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n     * @param thisArg If provided, it will be used as the this value for each invocation of\n     * predicate. If it is not provided, undefined is used instead.\n     */\n    findIndex(\n        predicate: (value: number, index: number, obj: Float64Array) => boolean,\n        thisArg?: any\n    ): number;\n\n    /**\n     * Performs the specified action for each element in an array.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(\n        callbackfn: (value: number, index: number, array: Float64Array) => void,\n        thisArg?: any\n    ): void;\n\n    /**\n     * Returns the index of the first occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     *  search starts at index 0.\n     */\n    indexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * Adds all the elements of an array separated by the specified separator string.\n     * @param separator A string used to separate one element of an array from the next in the\n     * resulting String. If omitted, the array elements are separated with a comma.\n     */\n    join(separator?: string): string;\n\n    /**\n     * Returns the index of the last occurrence of a value in an array.\n     * @param searchElement The value to locate in the array.\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\n     * search starts at index 0.\n     */\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\n\n    /**\n     * The length of the array.\n     */\n    readonly length: number;\n\n    /**\n     * Calls a defined callback function on each element of an array, and returns an array that\n     * contains the results.\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\n     * callbackfn function one time for each element in the array.\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    map(\n        callbackfn: (\n            value: number,\n            index: number,\n            array: Float64Array\n        ) => number,\n        thisArg?: any\n    ): Float64Array;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float64Array\n        ) => number\n    ): number;\n    reduce(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float64Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array. The return value of\n     * the callback function is the accumulated result, and is provided as an argument in the next\n     * call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\n     * callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduce<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Float64Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an\n     * argument instead of an array value.\n     */\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float64Array\n        ) => number\n    ): number;\n    reduceRight(\n        callbackfn: (\n            previousValue: number,\n            currentValue: number,\n            currentIndex: number,\n            array: Float64Array\n        ) => number,\n        initialValue: number\n    ): number;\n\n    /**\n     * Calls the specified callback function for all the elements in an array, in descending order.\n     * The return value of the callback function is the accumulated result, and is provided as an\n     * argument in the next call to the callback function.\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\n     * the callbackfn function one time for each element in the array.\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\n     * instead of an array value.\n     */\n    reduceRight<U>(\n        callbackfn: (\n            previousValue: U,\n            currentValue: number,\n            currentIndex: number,\n            array: Float64Array\n        ) => U,\n        initialValue: U\n    ): U;\n\n    /**\n     * Reverses the elements in an Array.\n     */\n    reverse(): Float64Array;\n\n    /**\n     * Sets a value or an array of values.\n     * @param array A typed or untyped array of values to set.\n     * @param offset The index in the current array at which the values are to be written.\n     */\n    set(array: ArrayLike<number>, offset?: number): void;\n\n    /**\n     * Returns a section of an array.\n     * @param start The beginning of the specified portion of the array.\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n     */\n    slice(start?: number, end?: number): Float64Array;\n\n    /**\n     * Determines whether the specified callback function returns true for any element of an array.\n     * @param predicate A function that accepts up to three arguments. The some method calls\n     * the predicate function for each element in the array until the predicate returns a value\n     * which is coercible to the Boolean value true, or until the end of the array.\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\n     * If thisArg is omitted, undefined is used as the this value.\n     */\n    some(\n        predicate: (\n            value: number,\n            index: number,\n            array: Float64Array\n        ) => unknown,\n        thisArg?: any\n    ): boolean;\n\n    /**\n     * Sorts an array.\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n     * ```ts\n     * [11,2,22,1].sort((a, b) => a - b)\n     * ```\n     */\n    sort(compareFn?: (a: number, b: number) => number): this;\n\n    /**\n     * at begin, inclusive, up to end, exclusive.\n     * @param begin The index of the beginning of the array.\n     * @param end The index of the end of the array.\n     */\n    subarray(begin?: number, end?: number): Float64Array;\n\n    toString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Float64Array;\n\n    [index: number]: number;\n}\n\ninterface Float64ArrayConstructor {\n    readonly prototype: Float64Array;\n    new (length: number): Float64Array;\n    new (array: ArrayLike<number> | ArrayBufferLike): Float64Array;\n    new (\n        buffer: ArrayBufferLike,\n        byteOffset?: number,\n        length?: number\n    ): Float64Array;\n\n    /**\n     * The size in bytes of each element in the array.\n     */\n    readonly BYTES_PER_ELEMENT: number;\n\n    /**\n     * Returns a new array from a set of elements.\n     * @param items A set of elements to include in the new array object.\n     */\n    of(...items: number[]): Float64Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     */\n    from(arrayLike: ArrayLike<number>): Float64Array;\n\n    /**\n     * Creates an array from an array-like or iterable object.\n     * @param arrayLike An array-like or iterable object to convert to an array.\n     * @param mapfn A mapping function to call on every element of the array.\n     * @param thisArg Value of 'this' used to invoke the mapfn.\n     */\n    from<T>(\n        arrayLike: ArrayLike<T>,\n        mapfn: (v: T, k: number) => number,\n        thisArg?: any\n    ): Float64Array;\n}\ndeclare var Float64Array: Float64ArrayConstructor;\n\n/////////////////////////////\n/// ECMAScript Internationalization API\n/////////////////////////////\n\ndeclare namespace Intl {\n    interface CollatorOptions {\n        usage?: string;\n        localeMatcher?: string;\n        numeric?: boolean;\n        caseFirst?: string;\n        sensitivity?: string;\n        ignorePunctuation?: boolean;\n    }\n\n    interface ResolvedCollatorOptions {\n        locale: string;\n        usage: string;\n        sensitivity: string;\n        ignorePunctuation: boolean;\n        collation: string;\n        caseFirst: string;\n        numeric: boolean;\n    }\n\n    interface Collator {\n        compare(x: string, y: string): number;\n        resolvedOptions(): ResolvedCollatorOptions;\n    }\n    var Collator: {\n        new (locales?: string | string[], options?: CollatorOptions): Collator;\n        (locales?: string | string[], options?: CollatorOptions): Collator;\n        supportedLocalesOf(\n            locales: string | string[],\n            options?: CollatorOptions\n        ): string[];\n    };\n\n    interface NumberFormatOptions {\n        localeMatcher?: string;\n        style?: string;\n        currency?: string;\n        currencyDisplay?: string;\n        useGrouping?: boolean;\n        minimumIntegerDigits?: number;\n        minimumFractionDigits?: number;\n        maximumFractionDigits?: number;\n        minimumSignificantDigits?: number;\n        maximumSignificantDigits?: number;\n    }\n\n    interface ResolvedNumberFormatOptions {\n        locale: string;\n        numberingSystem: string;\n        style: string;\n        currency?: string;\n        currencyDisplay?: string;\n        minimumIntegerDigits: number;\n        minimumFractionDigits: number;\n        maximumFractionDigits: number;\n        minimumSignificantDigits?: number;\n        maximumSignificantDigits?: number;\n        useGrouping: boolean;\n    }\n\n    interface NumberFormat {\n        format(value: number): string;\n        resolvedOptions(): ResolvedNumberFormatOptions;\n    }\n    var NumberFormat: {\n        new (\n            locales?: string | string[],\n            options?: NumberFormatOptions\n        ): NumberFormat;\n        (\n            locales?: string | string[],\n            options?: NumberFormatOptions\n        ): NumberFormat;\n        supportedLocalesOf(\n            locales: string | string[],\n            options?: NumberFormatOptions\n        ): string[];\n    };\n\n    interface DateTimeFormatOptions {\n        localeMatcher?: string;\n        weekday?: string;\n        era?: string;\n        year?: string;\n        month?: string;\n        day?: string;\n        hour?: string;\n        minute?: string;\n        second?: string;\n        timeZoneName?: string;\n        formatMatcher?: string;\n        hour12?: boolean;\n        timeZone?: string;\n    }\n\n    interface ResolvedDateTimeFormatOptions {\n        locale: string;\n        calendar: string;\n        numberingSystem: string;\n        timeZone: string;\n        hour12?: boolean;\n        weekday?: string;\n        era?: string;\n        year?: string;\n        month?: string;\n        day?: string;\n        hour?: string;\n        minute?: string;\n        second?: string;\n        timeZoneName?: string;\n    }\n\n    interface DateTimeFormat {\n        format(date?: Date | number): string;\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\n    }\n    var DateTimeFormat: {\n        new (\n            locales?: string | string[],\n            options?: DateTimeFormatOptions\n        ): DateTimeFormat;\n        (\n            locales?: string | string[],\n            options?: DateTimeFormatOptions\n        ): DateTimeFormat;\n        supportedLocalesOf(\n            locales: string | string[],\n            options?: DateTimeFormatOptions\n        ): string[];\n    };\n}\n\ninterface String {\n    /**\n     * Determines whether two strings are equivalent in the current or specified locale.\n     * @param that String to compare to target string\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\n     * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\n     */\n    localeCompare(\n        that: string,\n        locales?: string | string[],\n        options?: Intl.CollatorOptions\n    ): number;\n}\n\ninterface Number {\n    /**\n     * Converts a number to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleString(\n        locales?: string | string[],\n        options?: Intl.NumberFormatOptions\n    ): string;\n}\n\ninterface Date {\n    /**\n     * Converts a date and time to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleString(\n        locales?: string | string[],\n        options?: Intl.DateTimeFormatOptions\n    ): string;\n    /**\n     * Converts a date to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleDateString(\n        locales?: string | string[],\n        options?: Intl.DateTimeFormatOptions\n    ): string;\n\n    /**\n     * Converts a time to a string by using the current or specified locale.\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n     * @param options An object that contains one or more properties that specify comparison options.\n     */\n    toLocaleTimeString(\n        locales?: string | string[],\n        options?: Intl.DateTimeFormatOptions\n    ): string;\n}\n"},31374:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.webworker=t.es2018intl=t.es2018regexp=t.es2018promise=t.es2018asyncgenerator=t.es2018asynciterable=t.es2017typedarrays=t.es2017intl=t.es2017string=t.es2017object=t.es2016arrayinclude=t.es2015symbolwellknown=t.es2015symbol=t.es2015reflect=t.es2015proxy=t.es2015promise=t.es2015generator=t.es2015iterable=t.es2015collection=t.es2015core=t.es5=t.types=void 0;var r=n(62106);Object.defineProperty(t,"es5",{enumerable:!0,get:function(){return r.es5}});var a=n(65159);Object.defineProperty(t,"es2015core",{enumerable:!0,get:function(){return a.es2015core}});var i=n(90554);Object.defineProperty(t,"es2015collection",{enumerable:!0,get:function(){return i.es2015collection}});var o=n(3527);Object.defineProperty(t,"es2015iterable",{enumerable:!0,get:function(){return o.es2015iterable}});var s=n(74866);Object.defineProperty(t,"es2015generator",{enumerable:!0,get:function(){return s.es2015generator}});var l=n(60584);Object.defineProperty(t,"es2015promise",{enumerable:!0,get:function(){return l.es2015promise}});var c=n(93432);Object.defineProperty(t,"es2015proxy",{enumerable:!0,get:function(){return c.es2015proxy}});var u=n(98152);Object.defineProperty(t,"es2015reflect",{enumerable:!0,get:function(){return u.es2015reflect}});var h=n(55310);Object.defineProperty(t,"es2015symbol",{enumerable:!0,get:function(){return h.es2015symbol}});var p=n(31249);Object.defineProperty(t,"es2015symbolwellknown",{enumerable:!0,get:function(){return p.es2015symbolwellknown}});var d=n(4807);Object.defineProperty(t,"es2016arrayinclude",{enumerable:!0,get:function(){return d.es2016arrayinclude}});var f=n(16115);Object.defineProperty(t,"es2017object",{enumerable:!0,get:function(){return f.es2017object}});var m=n(11179);Object.defineProperty(t,"es2017string",{enumerable:!0,get:function(){return m.es2017string}});var y=n(90031);Object.defineProperty(t,"es2017intl",{enumerable:!0,get:function(){return y.es2017intl}});var g=n(40895);Object.defineProperty(t,"es2017typedarrays",{enumerable:!0,get:function(){return g.es2017typedarrays}});var b=n(39705);Object.defineProperty(t,"es2018asynciterable",{enumerable:!0,get:function(){return b.es2018asynciterable}});var v=n(89439);Object.defineProperty(t,"es2018asyncgenerator",{enumerable:!0,get:function(){return v.es2018asyncgenerator}});var w=n(90868);Object.defineProperty(t,"es2018promise",{enumerable:!0,get:function(){return w.es2018promise}});var C=n(78099);Object.defineProperty(t,"es2018regexp",{enumerable:!0,get:function(){return C.es2018regexp}});var R=n(20872);Object.defineProperty(t,"es2018intl",{enumerable:!0,get:function(){return R.es2018intl}});var _=n(28449);Object.defineProperty(t,"webworker",{enumerable:!0,get:function(){return _.webworker}});var x=[r.es5,a.es2015core,i.es2015collection,o.es2015iterable,s.es2015generator,l.es2015promise,c.es2015proxy,u.es2015reflect,h.es2015symbol,p.es2015symbolwellknown,d.es2016arrayinclude,f.es2017object,m.es2017string,y.es2017intl,g.es2017typedarrays,b.es2018asynciterable,v.es2018asyncgenerator,w.es2018promise,C.es2018regexp,R.es2018intl,_.webworker];t.types=x},28449:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.webworker=void 0,t.webworker="\n\n/// <reference no-default-lib=\"true\"/>\n\n/////////////////////////////\n/// Worker APIs\n/////////////////////////////\n\ninterface AddEventListenerOptions extends EventListenerOptions {\n    once?: boolean;\n    passive?: boolean;\n}\n\ninterface AesCbcParams extends Algorithm {\n    iv:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n}\n\ninterface AesCtrParams extends Algorithm {\n    counter:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n    length: number;\n}\n\ninterface AesDerivedKeyParams extends Algorithm {\n    length: number;\n}\n\ninterface AesGcmParams extends Algorithm {\n    additionalData?:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n    iv:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n    tagLength?: number;\n}\n\ninterface AesKeyAlgorithm extends KeyAlgorithm {\n    length: number;\n}\n\ninterface AesKeyGenParams extends Algorithm {\n    length: number;\n}\n\ninterface Algorithm {\n    name: string;\n}\n\ninterface BlobPropertyBag {\n    endings?: EndingType;\n    type?: string;\n}\n\ninterface CacheQueryOptions {\n    ignoreMethod?: boolean;\n    ignoreSearch?: boolean;\n    ignoreVary?: boolean;\n}\n\ninterface CanvasRenderingContext2DSettings {\n    alpha?: boolean;\n    desynchronized?: boolean;\n}\n\ninterface ClientQueryOptions {\n    includeUncontrolled?: boolean;\n    type?: ClientTypes;\n}\n\ninterface CloseEventInit extends EventInit {\n    code?: number;\n    reason?: string;\n    wasClean?: boolean;\n}\n\ninterface CryptoKeyPair {\n    privateKey?: CryptoKey;\n    publicKey?: CryptoKey;\n}\n\ninterface CustomEventInit<T = any> extends EventInit {\n    detail?: T;\n}\n\ninterface DOMMatrix2DInit {\n    a?: number;\n    b?: number;\n    c?: number;\n    d?: number;\n    e?: number;\n    f?: number;\n    m11?: number;\n    m12?: number;\n    m21?: number;\n    m22?: number;\n    m41?: number;\n    m42?: number;\n}\n\ninterface DOMMatrixInit extends DOMMatrix2DInit {\n    is2D?: boolean;\n    m13?: number;\n    m14?: number;\n    m23?: number;\n    m24?: number;\n    m31?: number;\n    m32?: number;\n    m33?: number;\n    m34?: number;\n    m43?: number;\n    m44?: number;\n}\n\ninterface DOMPointInit {\n    w?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n}\n\ninterface DOMQuadInit {\n    p1?: DOMPointInit;\n    p2?: DOMPointInit;\n    p3?: DOMPointInit;\n    p4?: DOMPointInit;\n}\n\ninterface DOMRectInit {\n    height?: number;\n    width?: number;\n    x?: number;\n    y?: number;\n}\n\ninterface DevicePermissionDescriptor extends PermissionDescriptor {\n    deviceId?: string;\n    name: 'camera' | 'microphone' | 'speaker';\n}\n\ninterface EcKeyGenParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyImportParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcdhKeyDeriveParams extends Algorithm {\n    public: CryptoKey;\n}\n\ninterface EcdsaParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface ErrorEventInit extends EventInit {\n    colno?: number;\n    error?: any;\n    filename?: string;\n    lineno?: number;\n    message?: string;\n}\n\ninterface EventInit {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n}\n\ninterface EventListenerOptions {\n    capture?: boolean;\n}\n\ninterface EventSourceInit {\n    withCredentials?: boolean;\n}\n\ninterface ExtendableEventInit extends EventInit {}\n\ninterface ExtendableMessageEventInit extends ExtendableEventInit {\n    data?: any;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: Client | ServiceWorker | MessagePort | null;\n}\n\ninterface FetchEventInit extends ExtendableEventInit {\n    clientId?: string;\n    preloadResponse?: Promise<any>;\n    replacesClientId?: string;\n    request: Request;\n    resultingClientId?: string;\n}\n\ninterface FilePropertyBag extends BlobPropertyBag {\n    lastModified?: number;\n}\n\ninterface GetNotificationOptions {\n    tag?: string;\n}\n\ninterface HmacImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface HmacKeyGenParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface IDBIndexParameters {\n    multiEntry?: boolean;\n    unique?: boolean;\n}\n\ninterface IDBObjectStoreParameters {\n    autoIncrement?: boolean;\n    keyPath?: string | string[] | null;\n}\n\ninterface IDBVersionChangeEventInit extends EventInit {\n    newVersion?: number | null;\n    oldVersion?: number;\n}\n\ninterface ImageBitmapOptions {\n    colorSpaceConversion?: ColorSpaceConversion;\n    imageOrientation?: ImageOrientation;\n    premultiplyAlpha?: PremultiplyAlpha;\n    resizeHeight?: number;\n    resizeQuality?: ResizeQuality;\n    resizeWidth?: number;\n}\n\ninterface ImageBitmapRenderingContextSettings {\n    alpha?: boolean;\n}\n\ninterface ImageEncodeOptions {\n    quality?: number;\n    type?: string;\n}\n\ninterface JsonWebKey {\n    alg?: string;\n    crv?: string;\n    d?: string;\n    dp?: string;\n    dq?: string;\n    e?: string;\n    ext?: boolean;\n    k?: string;\n    key_ops?: string[];\n    kty?: string;\n    n?: string;\n    oth?: RsaOtherPrimesInfo[];\n    p?: string;\n    q?: string;\n    qi?: string;\n    use?: string;\n    x?: string;\n    y?: string;\n}\n\ninterface KeyAlgorithm {\n    name: string;\n}\n\ninterface MessageEventInit<T = any> extends EventInit {\n    data?: T;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: MessageEventSource | null;\n}\n\ninterface MidiPermissionDescriptor extends PermissionDescriptor {\n    name: 'midi';\n    sysex?: boolean;\n}\n\ninterface MultiCacheQueryOptions extends CacheQueryOptions {\n    cacheName?: string;\n}\n\ninterface NavigationPreloadState {\n    enabled?: boolean;\n    headerValue?: string;\n}\n\ninterface NotificationAction {\n    action: string;\n    icon?: string;\n    title: string;\n}\n\ninterface NotificationEventInit extends ExtendableEventInit {\n    action?: string;\n    notification: Notification;\n}\n\ninterface NotificationOptions {\n    actions?: NotificationAction[];\n    badge?: string;\n    body?: string;\n    data?: any;\n    dir?: NotificationDirection;\n    icon?: string;\n    image?: string;\n    lang?: string;\n    renotify?: boolean;\n    requireInteraction?: boolean;\n    silent?: boolean;\n    tag?: string;\n    timestamp?: number;\n    vibrate?: VibratePattern;\n}\n\ninterface Pbkdf2Params extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    iterations: number;\n    salt:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n}\n\ninterface PerformanceObserverInit {\n    buffered?: boolean;\n    entryTypes?: string[];\n    type?: string;\n}\n\ninterface PermissionDescriptor {\n    name: PermissionName;\n}\n\ninterface PipeOptions {\n    preventAbort?: boolean;\n    preventCancel?: boolean;\n    preventClose?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface PostMessageOptions {\n    transfer?: any[];\n}\n\ninterface ProgressEventInit extends EventInit {\n    lengthComputable?: boolean;\n    loaded?: number;\n    total?: number;\n}\n\ninterface PromiseRejectionEventInit extends EventInit {\n    promise: Promise<any>;\n    reason?: any;\n}\n\ninterface PushEventInit extends ExtendableEventInit {\n    data?: PushMessageDataInit;\n}\n\ninterface PushPermissionDescriptor extends PermissionDescriptor {\n    name: 'push';\n    userVisibleOnly?: boolean;\n}\n\ninterface PushSubscriptionChangeEventInit extends ExtendableEventInit {\n    newSubscription?: PushSubscription;\n    oldSubscription?: PushSubscription;\n}\n\ninterface PushSubscriptionJSON {\n    endpoint?: string;\n    expirationTime?: number | null;\n    keys?: Record<string, string>;\n}\n\ninterface PushSubscriptionOptionsInit {\n    applicationServerKey?: BufferSource | string | null;\n    userVisibleOnly?: boolean;\n}\n\ninterface QueuingStrategy<T = any> {\n    highWaterMark?: number;\n    size?: QueuingStrategySizeCallback<T>;\n}\n\ninterface ReadableStreamReadDoneResult<T> {\n    done: true;\n    value?: T;\n}\n\ninterface ReadableStreamReadValueResult<T> {\n    done: false;\n    value: T;\n}\n\ninterface RegistrationOptions {\n    scope?: string;\n    type?: WorkerType;\n    updateViaCache?: ServiceWorkerUpdateViaCache;\n}\n\ninterface RequestInit {\n    /**\n     * A BodyInit object or null to set request's body.\n     */\n    body?: BodyInit | null;\n    /**\n     * A string indicating how the request will interact with the browser's cache to set request's cache.\n     */\n    cache?: RequestCache;\n    /**\n     * A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request's credentials.\n     */\n    credentials?: RequestCredentials;\n    /**\n     * A Headers object, an object literal, or an array of two-item arrays to set request's headers.\n     */\n    headers?: HeadersInit;\n    /**\n     * A cryptographic hash of the resource to be fetched by request. Sets request's integrity.\n     */\n    integrity?: string;\n    /**\n     * A boolean to set request's keepalive.\n     */\n    keepalive?: boolean;\n    /**\n     * A string to set request's method.\n     */\n    method?: string;\n    /**\n     * A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request's mode.\n     */\n    mode?: RequestMode;\n    /**\n     * A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request's redirect.\n     */\n    redirect?: RequestRedirect;\n    /**\n     * A string whose value is a same-origin URL, \"about:client\", or the empty string, to set request's referrer.\n     */\n    referrer?: string;\n    /**\n     * A referrer policy to set request's referrerPolicy.\n     */\n    referrerPolicy?: ReferrerPolicy;\n    /**\n     * An AbortSignal to set request's signal.\n     */\n    signal?: AbortSignal | null;\n    /**\n     * Can only be null. Used to disassociate request from any Window.\n     */\n    window?: any;\n}\n\ninterface ResponseInit {\n    headers?: HeadersInit;\n    status?: number;\n    statusText?: string;\n}\n\ninterface RsaHashedImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaKeyGenParams extends Algorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaOaepParams extends Algorithm {\n    label?:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n}\n\ninterface RsaOtherPrimesInfo {\n    d?: string;\n    r?: string;\n    t?: string;\n}\n\ninterface RsaPssParams extends Algorithm {\n    saltLength: number;\n}\n\ninterface StorageEstimate {\n    quota?: number;\n    usage?: number;\n}\n\ninterface SyncEventInit extends ExtendableEventInit {\n    lastChance?: boolean;\n    tag: string;\n}\n\ninterface TextDecodeOptions {\n    stream?: boolean;\n}\n\ninterface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n}\n\ninterface TextEncoderEncodeIntoResult {\n    read?: number;\n    written?: number;\n}\n\ninterface Transformer<I = any, O = any> {\n    flush?: TransformStreamDefaultControllerCallback<O>;\n    readableType?: undefined;\n    start?: TransformStreamDefaultControllerCallback<O>;\n    transform?: TransformStreamDefaultControllerTransformCallback<I, O>;\n    writableType?: undefined;\n}\n\ninterface UnderlyingByteSource {\n    autoAllocateChunkSize?: number;\n    cancel?: ReadableStreamErrorCallback;\n    pull?: ReadableByteStreamControllerCallback;\n    start?: ReadableByteStreamControllerCallback;\n    type: 'bytes';\n}\n\ninterface UnderlyingSink<W = any> {\n    abort?: WritableStreamErrorCallback;\n    close?: WritableStreamDefaultControllerCloseCallback;\n    start?: WritableStreamDefaultControllerStartCallback;\n    type?: undefined;\n    write?: WritableStreamDefaultControllerWriteCallback<W>;\n}\n\ninterface UnderlyingSource<R = any> {\n    cancel?: ReadableStreamErrorCallback;\n    pull?: ReadableStreamDefaultControllerCallback<R>;\n    start?: ReadableStreamDefaultControllerCallback<R>;\n    type?: undefined;\n}\n\ninterface WebGLContextAttributes {\n    alpha?: boolean;\n    antialias?: boolean;\n    depth?: boolean;\n    desynchronized?: boolean;\n    failIfMajorPerformanceCaveat?: boolean;\n    powerPreference?: WebGLPowerPreference;\n    premultipliedAlpha?: boolean;\n    preserveDrawingBuffer?: boolean;\n    stencil?: boolean;\n}\n\ninterface WebGLContextEventInit extends EventInit {\n    statusMessage?: string;\n}\n\ninterface WorkerOptions {\n    credentials?: RequestCredentials;\n    name?: string;\n    type?: WorkerType;\n}\n\ninterface EventListener {\n    (evt: Event): void;\n}\n\n/** The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type. */\ninterface ANGLE_instanced_arrays {\n    drawArraysInstancedANGLE(\n        mode: GLenum,\n        first: GLint,\n        count: GLsizei,\n        primcount: GLsizei\n    ): void;\n    drawElementsInstancedANGLE(\n        mode: GLenum,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr,\n        primcount: GLsizei\n    ): void;\n    vertexAttribDivisorANGLE(index: GLuint, divisor: GLuint): void;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: GLenum;\n}\n\n/** A controller object that allows you to abort one or more DOM requests as and when desired. */\ninterface AbortController {\n    /**\n     * Returns the AbortSignal object associated with this object.\n     */\n    readonly signal: AbortSignal;\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void;\n}\n\ndeclare var AbortController: {\n    prototype: AbortController;\n    new (): AbortController;\n};\n\ninterface AbortSignalEventMap {\n    abort: Event;\n}\n\n/** A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object. */\ninterface AbortSignal extends EventTarget {\n    /**\n     * Returns true if this AbortSignal's AbortController has signaled to abort, and false otherwise.\n     */\n    readonly aborted: boolean;\n    onabort: ((this: AbortSignal, ev: Event) => any) | null;\n    addEventListener<K extends keyof AbortSignalEventMap>(\n        type: K,\n        listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof AbortSignalEventMap>(\n        type: K,\n        listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var AbortSignal: {\n    prototype: AbortSignal;\n    new (): AbortSignal;\n};\n\ninterface AbstractWorkerEventMap {\n    error: ErrorEvent;\n}\n\ninterface AbstractWorker {\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(\n        type: K,\n        listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(\n        type: K,\n        listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ninterface AesCfbParams extends Algorithm {\n    iv:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n}\n\ninterface AesCmacParams extends Algorithm {\n    length: number;\n}\n\ninterface AnimationFrameProvider {\n    cancelAnimationFrame(handle: number): void;\n    requestAnimationFrame(callback: FrameRequestCallback): number;\n}\n\n/** A file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system. */\ninterface Blob {\n    readonly size: number;\n    readonly type: string;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    slice(start?: number, end?: number, contentType?: string): Blob;\n    stream(): ReadableStream;\n    text(): Promise<string>;\n}\n\ndeclare var Blob: {\n    prototype: Blob;\n    new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;\n};\n\ninterface Body {\n    readonly body: ReadableStream<Uint8Array> | null;\n    readonly bodyUsed: boolean;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    blob(): Promise<Blob>;\n    formData(): Promise<FormData>;\n    json(): Promise<any>;\n    text(): Promise<string>;\n}\n\ninterface BroadcastChannelEventMap {\n    message: MessageEvent;\n    messageerror: MessageEvent;\n}\n\ninterface BroadcastChannel extends EventTarget {\n    /**\n     * Returns the channel name (as passed to the constructor).\n     */\n    readonly name: string;\n    onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /**\n     * Closes the BroadcastChannel object, opening it up to garbage collection.\n     */\n    close(): void;\n    /**\n     * Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays.\n     */\n    postMessage(message: any): void;\n    addEventListener<K extends keyof BroadcastChannelEventMap>(\n        type: K,\n        listener: (\n            this: BroadcastChannel,\n            ev: BroadcastChannelEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(\n        type: K,\n        listener: (\n            this: BroadcastChannel,\n            ev: BroadcastChannelEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var BroadcastChannel: {\n    prototype: BroadcastChannel;\n    new (name: string): BroadcastChannel;\n};\n\n/** This Streams API interface provides\xa0a built-in byte length queuing strategy that can be used when constructing streams. */\ninterface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {\n    highWaterMark: number;\n    size(chunk: ArrayBufferView): number;\n}\n\ndeclare var ByteLengthQueuingStrategy: {\n    prototype: ByteLengthQueuingStrategy;\n    new (options: { highWaterMark: number }): ByteLengthQueuingStrategy;\n};\n\n/** Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec. */\ninterface Cache {\n    add(request: RequestInfo): Promise<void>;\n    addAll(requests: RequestInfo[]): Promise<void>;\n    delete(request: RequestInfo, options?: CacheQueryOptions): Promise<boolean>;\n    keys(\n        request?: RequestInfo,\n        options?: CacheQueryOptions\n    ): Promise<ReadonlyArray<Request>>;\n    match(\n        request: RequestInfo,\n        options?: CacheQueryOptions\n    ): Promise<Response | undefined>;\n    matchAll(\n        request?: RequestInfo,\n        options?: CacheQueryOptions\n    ): Promise<ReadonlyArray<Response>>;\n    put(request: RequestInfo, response: Response): Promise<void>;\n}\n\ndeclare var Cache: {\n    prototype: Cache;\n    new (): Cache;\n};\n\n/** The storage for Cache objects. */\ninterface CacheStorage {\n    delete(cacheName: string): Promise<boolean>;\n    has(cacheName: string): Promise<boolean>;\n    keys(): Promise<string[]>;\n    match(\n        request: RequestInfo,\n        options?: MultiCacheQueryOptions\n    ): Promise<Response | undefined>;\n    open(cacheName: string): Promise<Cache>;\n}\n\ndeclare var CacheStorage: {\n    prototype: CacheStorage;\n    new (): CacheStorage;\n};\n\ninterface CanvasCompositing {\n    globalAlpha: number;\n    globalCompositeOperation: string;\n}\n\ninterface CanvasDrawImage {\n    drawImage(image: CanvasImageSource, dx: number, dy: number): void;\n    drawImage(\n        image: CanvasImageSource,\n        dx: number,\n        dy: number,\n        dw: number,\n        dh: number\n    ): void;\n    drawImage(\n        image: CanvasImageSource,\n        sx: number,\n        sy: number,\n        sw: number,\n        sh: number,\n        dx: number,\n        dy: number,\n        dw: number,\n        dh: number\n    ): void;\n}\n\ninterface CanvasDrawPath {\n    beginPath(): void;\n    clip(fillRule?: CanvasFillRule): void;\n    clip(path: Path2D, fillRule?: CanvasFillRule): void;\n    fill(fillRule?: CanvasFillRule): void;\n    fill(path: Path2D, fillRule?: CanvasFillRule): void;\n    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    isPointInPath(\n        path: Path2D,\n        x: number,\n        y: number,\n        fillRule?: CanvasFillRule\n    ): boolean;\n    isPointInStroke(x: number, y: number): boolean;\n    isPointInStroke(path: Path2D, x: number, y: number): boolean;\n    stroke(): void;\n    stroke(path: Path2D): void;\n}\n\ninterface CanvasFillStrokeStyles {\n    fillStyle: string | CanvasGradient | CanvasPattern;\n    strokeStyle: string | CanvasGradient | CanvasPattern;\n    createLinearGradient(\n        x0: number,\n        y0: number,\n        x1: number,\n        y1: number\n    ): CanvasGradient;\n    createPattern(\n        image: CanvasImageSource,\n        repetition: string | null\n    ): CanvasPattern | null;\n    createRadialGradient(\n        x0: number,\n        y0: number,\n        r0: number,\n        x1: number,\n        y1: number,\n        r1: number\n    ): CanvasGradient;\n}\n\ninterface CanvasFilters {\n    filter: string;\n}\n\n/** An opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or CanvasRenderingContext2D.createRadialGradient(). */\ninterface CanvasGradient {\n    /**\n     * Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n     *\n     * Throws an \"IndexSizeError\" DOMException if the offset is out of range. Throws a \"SyntaxError\" DOMException if the color cannot be parsed.\n     */\n    addColorStop(offset: number, color: string): void;\n}\n\ndeclare var CanvasGradient: {\n    prototype: CanvasGradient;\n    new (): CanvasGradient;\n};\n\ninterface CanvasImageData {\n    createImageData(sw: number, sh: number): ImageData;\n    createImageData(imagedata: ImageData): ImageData;\n    getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\n    putImageData(imagedata: ImageData, dx: number, dy: number): void;\n    putImageData(\n        imagedata: ImageData,\n        dx: number,\n        dy: number,\n        dirtyX: number,\n        dirtyY: number,\n        dirtyWidth: number,\n        dirtyHeight: number\n    ): void;\n}\n\ninterface CanvasImageSmoothing {\n    imageSmoothingEnabled: boolean;\n    imageSmoothingQuality: ImageSmoothingQuality;\n}\n\ninterface CanvasPath {\n    arc(\n        x: number,\n        y: number,\n        radius: number,\n        startAngle: number,\n        endAngle: number,\n        anticlockwise?: boolean\n    ): void;\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n    bezierCurveTo(\n        cp1x: number,\n        cp1y: number,\n        cp2x: number,\n        cp2y: number,\n        x: number,\n        y: number\n    ): void;\n    closePath(): void;\n    ellipse(\n        x: number,\n        y: number,\n        radiusX: number,\n        radiusY: number,\n        rotation: number,\n        startAngle: number,\n        endAngle: number,\n        anticlockwise?: boolean\n    ): void;\n    lineTo(x: number, y: number): void;\n    moveTo(x: number, y: number): void;\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    rect(x: number, y: number, w: number, h: number): void;\n}\n\ninterface CanvasPathDrawingStyles {\n    lineCap: CanvasLineCap;\n    lineDashOffset: number;\n    lineJoin: CanvasLineJoin;\n    lineWidth: number;\n    miterLimit: number;\n    getLineDash(): number[];\n    setLineDash(segments: number[]): void;\n}\n\n/** An opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method. */\ninterface CanvasPattern {\n    /**\n     * Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation.\n     */\n    setTransform(transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var CanvasPattern: {\n    prototype: CanvasPattern;\n    new (): CanvasPattern;\n};\n\ninterface CanvasRect {\n    clearRect(x: number, y: number, w: number, h: number): void;\n    fillRect(x: number, y: number, w: number, h: number): void;\n    strokeRect(x: number, y: number, w: number, h: number): void;\n}\n\ninterface CanvasShadowStyles {\n    shadowBlur: number;\n    shadowColor: string;\n    shadowOffsetX: number;\n    shadowOffsetY: number;\n}\n\ninterface CanvasState {\n    restore(): void;\n    save(): void;\n}\n\ninterface CanvasText {\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\n    measureText(text: string): TextMetrics;\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\n}\n\ninterface CanvasTextDrawingStyles {\n    direction: CanvasDirection;\n    font: string;\n    textAlign: CanvasTextAlign;\n    textBaseline: CanvasTextBaseline;\n}\n\ninterface CanvasTransform {\n    getTransform(): DOMMatrix;\n    resetTransform(): void;\n    rotate(angle: number): void;\n    scale(x: number, y: number): void;\n    setTransform(\n        a: number,\n        b: number,\n        c: number,\n        d: number,\n        e: number,\n        f: number\n    ): void;\n    setTransform(transform?: DOMMatrix2DInit): void;\n    transform(\n        a: number,\n        b: number,\n        c: number,\n        d: number,\n        e: number,\n        f: number\n    ): void;\n    translate(x: number, y: number): void;\n}\n\n/** The Client\xa0interface represents an executable context such as a Worker, or a SharedWorker. Window clients are represented by the more-specific\xa0WindowClient. You can get\xa0Client/WindowClient\xa0objects from methods such as Clients.matchAll() and\xa0Clients.get(). */\ninterface Client {\n    readonly frameType: FrameType;\n    readonly id: string;\n    readonly type: ClientTypes;\n    readonly url: string;\n    postMessage(message: any, transfer?: Transferable[]): void;\n}\n\ndeclare var Client: {\n    prototype: Client;\n    new (): Client;\n};\n\n/** Provides access to\xa0Client\xa0objects. Access it\xa0via self.clients\xa0within a\xa0service worker. */\ninterface Clients {\n    claim(): Promise<void>;\n    get(id: string): Promise<Client | undefined>;\n    matchAll(options?: ClientQueryOptions): Promise<ReadonlyArray<Client>>;\n    openWindow(url: string): Promise<WindowClient | null>;\n}\n\ndeclare var Clients: {\n    prototype: Clients;\n    new (): Clients;\n};\n\n/** A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object's onclose attribute. */\ninterface CloseEvent extends Event {\n    /**\n     * Returns the WebSocket connection close code provided by the server.\n     */\n    readonly code: number;\n    /**\n     * Returns the WebSocket connection close reason provided by the server.\n     */\n    readonly reason: string;\n    /**\n     * Returns true if the connection closed cleanly; false otherwise.\n     */\n    readonly wasClean: boolean;\n}\n\ndeclare var CloseEvent: {\n    prototype: CloseEvent;\n    new (type: string, eventInitDict?: CloseEventInit): CloseEvent;\n};\n\ninterface ConcatParams extends Algorithm {\n    algorithmId: Uint8Array;\n    hash?: string | Algorithm;\n    partyUInfo: Uint8Array;\n    partyVInfo: Uint8Array;\n    privateInfo?: Uint8Array;\n    publicInfo?: Uint8Array;\n}\n\n/** This Streams API interface provides\xa0a built-in byte length queuing strategy that can be used when constructing streams. */\ninterface CountQueuingStrategy extends QueuingStrategy {\n    highWaterMark: number;\n    size(chunk: any): 1;\n}\n\ndeclare var CountQueuingStrategy: {\n    prototype: CountQueuingStrategy;\n    new (options: { highWaterMark: number }): CountQueuingStrategy;\n};\n\n/** Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives. */\ninterface Crypto {\n    readonly subtle: SubtleCrypto;\n    getRandomValues<\n        T extends\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | null\n    >(\n        array: T\n    ): T;\n}\n\ndeclare var Crypto: {\n    prototype: Crypto;\n    new (): Crypto;\n};\n\n/** The CryptoKey dictionary of the Web Crypto API represents a cryptographic key. */\ninterface CryptoKey {\n    readonly algorithm: KeyAlgorithm;\n    readonly extractable: boolean;\n    readonly type: KeyType;\n    readonly usages: KeyUsage[];\n}\n\ndeclare var CryptoKey: {\n    prototype: CryptoKey;\n    new (): CryptoKey;\n};\n\ninterface CustomEvent<T = any> extends Event {\n    /**\n     * Returns any custom data event was created with. Typically used for synthetic events.\n     */\n    readonly detail: T;\n    initCustomEvent(\n        typeArg: string,\n        canBubbleArg: boolean,\n        cancelableArg: boolean,\n        detailArg: T\n    ): void;\n}\n\ndeclare var CustomEvent: {\n    prototype: CustomEvent;\n    new <T>(\n        typeArg: string,\n        eventInitDict?: CustomEventInit<T>\n    ): CustomEvent<T>;\n};\n\n/** An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API. */\ninterface DOMException {\n    readonly code: number;\n    readonly message: string;\n    readonly name: string;\n    readonly ABORT_ERR: number;\n    readonly DATA_CLONE_ERR: number;\n    readonly DOMSTRING_SIZE_ERR: number;\n    readonly HIERARCHY_REQUEST_ERR: number;\n    readonly INDEX_SIZE_ERR: number;\n    readonly INUSE_ATTRIBUTE_ERR: number;\n    readonly INVALID_ACCESS_ERR: number;\n    readonly INVALID_CHARACTER_ERR: number;\n    readonly INVALID_MODIFICATION_ERR: number;\n    readonly INVALID_NODE_TYPE_ERR: number;\n    readonly INVALID_STATE_ERR: number;\n    readonly NAMESPACE_ERR: number;\n    readonly NETWORK_ERR: number;\n    readonly NOT_FOUND_ERR: number;\n    readonly NOT_SUPPORTED_ERR: number;\n    readonly NO_DATA_ALLOWED_ERR: number;\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\n    readonly QUOTA_EXCEEDED_ERR: number;\n    readonly SECURITY_ERR: number;\n    readonly SYNTAX_ERR: number;\n    readonly TIMEOUT_ERR: number;\n    readonly TYPE_MISMATCH_ERR: number;\n    readonly URL_MISMATCH_ERR: number;\n    readonly VALIDATION_ERR: number;\n    readonly WRONG_DOCUMENT_ERR: number;\n}\n\ndeclare var DOMException: {\n    prototype: DOMException;\n    new (message?: string, name?: string): DOMException;\n    readonly ABORT_ERR: number;\n    readonly DATA_CLONE_ERR: number;\n    readonly DOMSTRING_SIZE_ERR: number;\n    readonly HIERARCHY_REQUEST_ERR: number;\n    readonly INDEX_SIZE_ERR: number;\n    readonly INUSE_ATTRIBUTE_ERR: number;\n    readonly INVALID_ACCESS_ERR: number;\n    readonly INVALID_CHARACTER_ERR: number;\n    readonly INVALID_MODIFICATION_ERR: number;\n    readonly INVALID_NODE_TYPE_ERR: number;\n    readonly INVALID_STATE_ERR: number;\n    readonly NAMESPACE_ERR: number;\n    readonly NETWORK_ERR: number;\n    readonly NOT_FOUND_ERR: number;\n    readonly NOT_SUPPORTED_ERR: number;\n    readonly NO_DATA_ALLOWED_ERR: number;\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\n    readonly QUOTA_EXCEEDED_ERR: number;\n    readonly SECURITY_ERR: number;\n    readonly SYNTAX_ERR: number;\n    readonly TIMEOUT_ERR: number;\n    readonly TYPE_MISMATCH_ERR: number;\n    readonly URL_MISMATCH_ERR: number;\n    readonly VALIDATION_ERR: number;\n    readonly WRONG_DOCUMENT_ERR: number;\n};\n\ninterface DOMMatrix extends DOMMatrixReadOnly {\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n    e: number;\n    f: number;\n    m11: number;\n    m12: number;\n    m13: number;\n    m14: number;\n    m21: number;\n    m22: number;\n    m23: number;\n    m24: number;\n    m31: number;\n    m32: number;\n    m33: number;\n    m34: number;\n    m41: number;\n    m42: number;\n    m43: number;\n    m44: number;\n    invertSelf(): DOMMatrix;\n    multiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    preMultiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    rotateAxisAngleSelf(\n        x?: number,\n        y?: number,\n        z?: number,\n        angle?: number\n    ): DOMMatrix;\n    rotateFromVectorSelf(x?: number, y?: number): DOMMatrix;\n    rotateSelf(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    scale3dSelf(\n        scale?: number,\n        originX?: number,\n        originY?: number,\n        originZ?: number\n    ): DOMMatrix;\n    scaleSelf(\n        scaleX?: number,\n        scaleY?: number,\n        scaleZ?: number,\n        originX?: number,\n        originY?: number,\n        originZ?: number\n    ): DOMMatrix;\n    skewXSelf(sx?: number): DOMMatrix;\n    skewYSelf(sy?: number): DOMMatrix;\n    translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrix: {\n    prototype: DOMMatrix;\n    new (init?: string | number[]): DOMMatrix;\n    fromFloat32Array(array32: Float32Array): DOMMatrix;\n    fromFloat64Array(array64: Float64Array): DOMMatrix;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrix;\n};\n\ninterface DOMMatrixReadOnly {\n    readonly a: number;\n    readonly b: number;\n    readonly c: number;\n    readonly d: number;\n    readonly e: number;\n    readonly f: number;\n    readonly is2D: boolean;\n    readonly isIdentity: boolean;\n    readonly m11: number;\n    readonly m12: number;\n    readonly m13: number;\n    readonly m14: number;\n    readonly m21: number;\n    readonly m22: number;\n    readonly m23: number;\n    readonly m24: number;\n    readonly m31: number;\n    readonly m32: number;\n    readonly m33: number;\n    readonly m34: number;\n    readonly m41: number;\n    readonly m42: number;\n    readonly m43: number;\n    readonly m44: number;\n    flipX(): DOMMatrix;\n    flipY(): DOMMatrix;\n    inverse(): DOMMatrix;\n    multiply(other?: DOMMatrixInit): DOMMatrix;\n    rotate(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    rotateAxisAngle(\n        x?: number,\n        y?: number,\n        z?: number,\n        angle?: number\n    ): DOMMatrix;\n    rotateFromVector(x?: number, y?: number): DOMMatrix;\n    scale(\n        scaleX?: number,\n        scaleY?: number,\n        scaleZ?: number,\n        originX?: number,\n        originY?: number,\n        originZ?: number\n    ): DOMMatrix;\n    scale3d(\n        scale?: number,\n        originX?: number,\n        originY?: number,\n        originZ?: number\n    ): DOMMatrix;\n    /** @deprecated */\n    scaleNonUniform(scaleX?: number, scaleY?: number): DOMMatrix;\n    skewX(sx?: number): DOMMatrix;\n    skewY(sy?: number): DOMMatrix;\n    toFloat32Array(): Float32Array;\n    toFloat64Array(): Float64Array;\n    toJSON(): any;\n    transformPoint(point?: DOMPointInit): DOMPoint;\n    translate(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrixReadOnly: {\n    prototype: DOMMatrixReadOnly;\n    new (init?: string | number[]): DOMMatrixReadOnly;\n    fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;\n    fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;\n};\n\ninterface DOMPoint extends DOMPointReadOnly {\n    w: number;\n    x: number;\n    y: number;\n    z: number;\n}\n\ndeclare var DOMPoint: {\n    prototype: DOMPoint;\n    new (x?: number, y?: number, z?: number, w?: number): DOMPoint;\n    fromPoint(other?: DOMPointInit): DOMPoint;\n};\n\ninterface DOMPointReadOnly {\n    readonly w: number;\n    readonly x: number;\n    readonly y: number;\n    readonly z: number;\n    matrixTransform(matrix?: DOMMatrixInit): DOMPoint;\n    toJSON(): any;\n}\n\ndeclare var DOMPointReadOnly: {\n    prototype: DOMPointReadOnly;\n    new (x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;\n    fromPoint(other?: DOMPointInit): DOMPointReadOnly;\n};\n\ninterface DOMQuad {\n    readonly p1: DOMPoint;\n    readonly p2: DOMPoint;\n    readonly p3: DOMPoint;\n    readonly p4: DOMPoint;\n    getBounds(): DOMRect;\n    toJSON(): any;\n}\n\ndeclare var DOMQuad: {\n    prototype: DOMQuad;\n    new (\n        p1?: DOMPointInit,\n        p2?: DOMPointInit,\n        p3?: DOMPointInit,\n        p4?: DOMPointInit\n    ): DOMQuad;\n    fromQuad(other?: DOMQuadInit): DOMQuad;\n    fromRect(other?: DOMRectInit): DOMQuad;\n};\n\ninterface DOMRect extends DOMRectReadOnly {\n    height: number;\n    width: number;\n    x: number;\n    y: number;\n}\n\ndeclare var DOMRect: {\n    prototype: DOMRect;\n    new (x?: number, y?: number, width?: number, height?: number): DOMRect;\n    fromRect(other?: DOMRectInit): DOMRect;\n};\n\ninterface DOMRectReadOnly {\n    readonly bottom: number;\n    readonly height: number;\n    readonly left: number;\n    readonly right: number;\n    readonly top: number;\n    readonly width: number;\n    readonly x: number;\n    readonly y: number;\n    toJSON(): any;\n}\n\ndeclare var DOMRectReadOnly: {\n    prototype: DOMRectReadOnly;\n    new (\n        x?: number,\n        y?: number,\n        width?: number,\n        height?: number\n    ): DOMRectReadOnly;\n    fromRect(other?: DOMRectInit): DOMRectReadOnly;\n};\n\n/** A type returned by some APIs which contains a list of DOMString (strings). */\ninterface DOMStringList {\n    /**\n     * Returns the number of strings in strings.\n     */\n    readonly length: number;\n    /**\n     * Returns true if strings contains string, and false otherwise.\n     */\n    contains(string: string): boolean;\n    /**\n     * Returns the string with index index from strings.\n     */\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var DOMStringList: {\n    prototype: DOMStringList;\n    new (): DOMStringList;\n};\n\ninterface DedicatedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    message: MessageEvent;\n    messageerror: MessageEvent;\n}\n\n/** (the Worker global scope) is accessible through the self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers. */\ninterface DedicatedWorkerGlobalScope\n    extends WorkerGlobalScope,\n        AnimationFrameProvider {\n    /**\n     * Returns dedicatedWorkerGlobal's name, i.e. the value given to the Worker constructor. Primarily useful for debugging.\n     */\n    readonly name: string;\n    onmessage:\n        | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)\n        | null;\n    onmessageerror:\n        | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)\n        | null;\n    /**\n     * Aborts dedicatedWorkerGlobal.\n     */\n    close(): void;\n    /**\n     * Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: PostMessageOptions): void;\n    addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: DedicatedWorkerGlobalScope,\n            ev: DedicatedWorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: DedicatedWorkerGlobalScope,\n            ev: DedicatedWorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var DedicatedWorkerGlobalScope: {\n    prototype: DedicatedWorkerGlobalScope;\n    new (): DedicatedWorkerGlobalScope;\n};\n\ninterface DhImportKeyParams extends Algorithm {\n    generator: Uint8Array;\n    prime: Uint8Array;\n}\n\ninterface DhKeyAlgorithm extends KeyAlgorithm {\n    generator: Uint8Array;\n    prime: Uint8Array;\n}\n\ninterface DhKeyDeriveParams extends Algorithm {\n    public: CryptoKey;\n}\n\ninterface DhKeyGenParams extends Algorithm {\n    generator: Uint8Array;\n    prime: Uint8Array;\n}\n\ninterface EXT_blend_minmax {\n    readonly MAX_EXT: GLenum;\n    readonly MIN_EXT: GLenum;\n}\n\n/** The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader. */\ninterface EXT_frag_depth {}\n\ninterface EXT_sRGB {\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: GLenum;\n    readonly SRGB8_ALPHA8_EXT: GLenum;\n    readonly SRGB_ALPHA_EXT: GLenum;\n    readonly SRGB_EXT: GLenum;\n}\n\ninterface EXT_shader_texture_lod {}\n\n/** The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF). */\ninterface EXT_texture_filter_anisotropic {\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: GLenum;\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: GLenum;\n}\n\n/** Events providing information related to errors in scripts or in files. */\ninterface ErrorEvent extends Event {\n    readonly colno: number;\n    readonly error: any;\n    readonly filename: string;\n    readonly lineno: number;\n    readonly message: string;\n}\n\ndeclare var ErrorEvent: {\n    prototype: ErrorEvent;\n    new (type: string, eventInitDict?: ErrorEventInit): ErrorEvent;\n};\n\n/** An event which takes place in the DOM. */\ninterface Event {\n    /**\n     * Returns true or false depending on how event was initialized. True if event goes through its target's ancestors in reverse tree order, and false otherwise.\n     */\n    readonly bubbles: boolean;\n    cancelBubble: boolean;\n    /**\n     * Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method.\n     */\n    readonly cancelable: boolean;\n    /**\n     * Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise.\n     */\n    readonly composed: boolean;\n    /**\n     * Returns the object whose event listener's callback is currently being invoked.\n     */\n    readonly currentTarget: EventTarget | null;\n    /**\n     * Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise.\n     */\n    readonly defaultPrevented: boolean;\n    /**\n     * Returns the event's phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE.\n     */\n    readonly eventPhase: number;\n    /**\n     * Returns true if event was dispatched by the user agent, and false otherwise.\n     */\n    readonly isTrusted: boolean;\n    returnValue: boolean;\n    /** @deprecated */\n    readonly srcElement: EventTarget | null;\n    /**\n     * Returns the object to which event is dispatched (its target).\n     */\n    readonly target: EventTarget | null;\n    /**\n     * Returns the event's timestamp as the number of milliseconds measured relative to the time origin.\n     */\n    readonly timeStamp: number;\n    /**\n     * Returns the type of event, e.g. \"click\", \"hashchange\", or \"submit\".\n     */\n    readonly type: string;\n    /**\n     * Returns the invocation target objects of event's path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root's mode is \"closed\" that are not reachable from event's currentTarget.\n     */\n    composedPath(): EventTarget[];\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\n    /**\n     * If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled.\n     */\n    preventDefault(): void;\n    /**\n     * Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects.\n     */\n    stopImmediatePropagation(): void;\n    /**\n     * When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object.\n     */\n    stopPropagation(): void;\n    readonly AT_TARGET: number;\n    readonly BUBBLING_PHASE: number;\n    readonly CAPTURING_PHASE: number;\n    readonly NONE: number;\n}\n\ndeclare var Event: {\n    prototype: Event;\n    new (type: string, eventInitDict?: EventInit): Event;\n    readonly AT_TARGET: number;\n    readonly BUBBLING_PHASE: number;\n    readonly CAPTURING_PHASE: number;\n    readonly NONE: number;\n};\n\ninterface EventListenerObject {\n    handleEvent(evt: Event): void;\n}\n\ninterface EventSourceEventMap {\n    error: Event;\n    message: MessageEvent;\n    open: Event;\n}\n\ninterface EventSource extends EventTarget {\n    onerror: ((this: EventSource, ev: Event) => any) | null;\n    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;\n    onopen: ((this: EventSource, ev: Event) => any) | null;\n    /**\n     * Returns the state of this EventSource object's connection. It can have the values described below.\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL providing the event stream.\n     */\n    readonly url: string;\n    /**\n     * Returns true if the credentials mode for connection requests to the URL providing the event stream is set to \"include\", and false otherwise.\n     */\n    readonly withCredentials: boolean;\n    /**\n     * Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED.\n     */\n    close(): void;\n    readonly CLOSED: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof EventSourceEventMap>(\n        type: K,\n        listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof EventSourceEventMap>(\n        type: K,\n        listener: (this: EventSource, ev: EventSourceEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var EventSource: {\n    prototype: EventSource;\n    new (url: string, eventSourceInitDict?: EventSourceInit): EventSource;\n    readonly CLOSED: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them. */\ninterface EventTarget {\n    /**\n     * Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n     *\n     * The options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n     *\n     * When set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n     *\n     * When set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in \xa7 2.8 Observing event listeners.\n     *\n     * When set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n     *\n     * The event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n     */\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject | null,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    /**\n     * Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n     */\n    dispatchEvent(event: Event): boolean;\n    /**\n     * Removes the event listener in target's event listener list with the same type, callback, and options.\n     */\n    removeEventListener(\n        type: string,\n        callback: EventListenerOrEventListenerObject | null,\n        options?: EventListenerOptions | boolean\n    ): void;\n}\n\ndeclare var EventTarget: {\n    prototype: EventTarget;\n    new (): EventTarget;\n};\n\n/** Extends the lifetime of the install and activate events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like FetchEvent) are not dispatched until it upgrades database schemas and deletes the outdated cache entries. */\ninterface ExtendableEvent extends Event {\n    waitUntil(f: any): void;\n}\n\ndeclare var ExtendableEvent: {\n    prototype: ExtendableEvent;\n    new (type: string, eventInitDict?: ExtendableEventInit): ExtendableEvent;\n};\n\n/** This ServiceWorker API interface represents the event object of a message event fired on a service worker (when a channel message is received on the ServiceWorkerGlobalScope from another context) \u2014 extends the lifetime of such events. */\ninterface ExtendableMessageEvent extends ExtendableEvent {\n    readonly data: any;\n    readonly lastEventId: string;\n    readonly origin: string;\n    readonly ports: ReadonlyArray<MessagePort>;\n    readonly source: Client | ServiceWorker | MessagePort | null;\n}\n\ndeclare var ExtendableMessageEvent: {\n    prototype: ExtendableMessageEvent;\n    new (\n        type: string,\n        eventInitDict?: ExtendableMessageEventInit\n    ): ExtendableMessageEvent;\n};\n\n/** This is the event type for fetch\xa0events dispatched on the\xa0service worker global scope. It contains information about the fetch, including the\xa0request and how the receiver will treat the response. It provides the event.respondWith() method, which allows us to provide a response to this fetch. */\ninterface FetchEvent extends ExtendableEvent {\n    readonly clientId: string;\n    readonly preloadResponse: Promise<any>;\n    readonly replacesClientId: string;\n    readonly request: Request;\n    readonly resultingClientId: string;\n    respondWith(r: Response | Promise<Response>): void;\n}\n\ndeclare var FetchEvent: {\n    prototype: FetchEvent;\n    new (type: string, eventInitDict: FetchEventInit): FetchEvent;\n};\n\n/** Provides information about files and allows JavaScript in a web page to access their content. */\ninterface File extends Blob {\n    readonly lastModified: number;\n    readonly name: string;\n}\n\ndeclare var File: {\n    prototype: File;\n    new (\n        fileBits: BlobPart[],\n        fileName: string,\n        options?: FilePropertyBag\n    ): File;\n};\n\n/** An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type=\"file\"> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage. */\ninterface FileList {\n    readonly length: number;\n    item(index: number): File | null;\n    [index: number]: File;\n}\n\ndeclare var FileList: {\n    prototype: FileList;\n    new (): FileList;\n};\n\ninterface FileReaderEventMap {\n    abort: ProgressEvent<FileReader>;\n    error: ProgressEvent<FileReader>;\n    load: ProgressEvent<FileReader>;\n    loadend: ProgressEvent<FileReader>;\n    loadstart: ProgressEvent<FileReader>;\n    progress: ProgressEvent<FileReader>;\n}\n\n/** Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read. */\ninterface FileReader extends EventTarget {\n    readonly error: DOMException | null;\n    onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onloadend:\n        | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)\n        | null;\n    onloadstart:\n        | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)\n        | null;\n    onprogress:\n        | ((this: FileReader, ev: ProgressEvent<FileReader>) => any)\n        | null;\n    readonly readyState: number;\n    readonly result: string | ArrayBuffer | null;\n    abort(): void;\n    readAsArrayBuffer(blob: Blob): void;\n    readAsBinaryString(blob: Blob): void;\n    readAsDataURL(blob: Blob): void;\n    readAsText(blob: Blob, encoding?: string): void;\n    readonly DONE: number;\n    readonly EMPTY: number;\n    readonly LOADING: number;\n    addEventListener<K extends keyof FileReaderEventMap>(\n        type: K,\n        listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof FileReaderEventMap>(\n        type: K,\n        listener: (this: FileReader, ev: FileReaderEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var FileReader: {\n    prototype: FileReader;\n    new (): FileReader;\n    readonly DONE: number;\n    readonly EMPTY: number;\n    readonly LOADING: number;\n};\n\n/** Allows to read File or Blob objects in a synchronous way. */\ninterface FileReaderSync {\n    readAsArrayBuffer(blob: Blob): ArrayBuffer;\n    readAsBinaryString(blob: Blob): string;\n    readAsDataURL(blob: Blob): string;\n    readAsText(blob: Blob, encoding?: string): string;\n}\n\ndeclare var FileReaderSync: {\n    prototype: FileReaderSync;\n    new (): FileReaderSync;\n};\n\n/** Provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to \"multipart/form-data\". */\ninterface FormData {\n    append(name: string, value: string | Blob, fileName?: string): void;\n    delete(name: string): void;\n    get(name: string): FormDataEntryValue | null;\n    getAll(name: string): FormDataEntryValue[];\n    has(name: string): boolean;\n    set(name: string, value: string | Blob, fileName?: string): void;\n    forEach(\n        callbackfn: (\n            value: FormDataEntryValue,\n            key: string,\n            parent: FormData\n        ) => void,\n        thisArg?: any\n    ): void;\n}\n\ndeclare var FormData: {\n    prototype: FormData;\n    new (): FormData;\n};\n\ninterface GenericTransformStream {\n    /**\n     * Returns a readable stream whose chunks are strings resulting from running encoding's decoder on the chunks written to writable.\n     */\n    readonly readable: ReadableStream;\n    /**\n     * Returns a writable stream which accepts [AllowShared] BufferSource chunks and runs them through encoding's decoder before making them available to readable.\n     *\n     * Typically this will be used via the pipeThrough() method on a ReadableStream source.\n     *\n     * ```\n     * var decoder = new TextDecoderStream(encoding);\n     * byteReadable\n     *   .pipeThrough(decoder)\n     *   .pipeTo(textWritable);\n     * ```\n     *\n     * If the error mode is \"fatal\" and encoding's decoder returns error, both readable and writable will be errored with a TypeError.\n     */\n    readonly writable: WritableStream;\n}\n\n/** This Fetch API interface allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A Headers object has an associated header list, which is initially empty and consists\xa0of zero or more name and value pairs. \xa0You can add to this using methods like append() (see Examples.)\xa0In all methods of this interface, header names are matched by case-insensitive byte sequence. */\ninterface Headers {\n    append(name: string, value: string): void;\n    delete(name: string): void;\n    get(name: string): string | null;\n    has(name: string): boolean;\n    set(name: string, value: string): void;\n    forEach(\n        callbackfn: (value: string, key: string, parent: Headers) => void,\n        thisArg?: any\n    ): void;\n}\n\ndeclare var Headers: {\n    prototype: Headers;\n    new (init?: HeadersInit): Headers;\n};\n\ninterface HkdfCtrParams extends Algorithm {\n    context:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n    hash: string | Algorithm;\n    label:\n        | Int8Array\n        | Int16Array\n        | Int32Array\n        | Uint8Array\n        | Uint16Array\n        | Uint32Array\n        | Uint8ClampedArray\n        | Float32Array\n        | Float64Array\n        | DataView\n        | ArrayBuffer;\n}\n\ninterface IDBArrayKey extends Array<IDBValidKey> {}\n\n/** This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. */\ninterface IDBCursor {\n    /**\n     * Returns the direction (\"next\", \"nextunique\", \"prev\" or \"prevunique\") of the cursor.\n     */\n    readonly direction: IDBCursorDirection;\n    /**\n     * Returns the key of the cursor. Throws a \"InvalidStateError\" DOMException if the cursor is advancing or is finished.\n     */\n    readonly key: IDBValidKey;\n    /**\n     * Returns the effective key of the cursor. Throws a \"InvalidStateError\" DOMException if the cursor is advancing or is finished.\n     */\n    readonly primaryKey: IDBValidKey;\n    /**\n     * Returns the IDBObjectStore or IDBIndex the cursor was opened from.\n     */\n    readonly source: IDBObjectStore | IDBIndex;\n    /**\n     * Advances the cursor through the next count records in range.\n     */\n    advance(count: number): void;\n    /**\n     * Advances the cursor to the next record in range.\n     */\n    continue(key?: IDBValidKey): void;\n    /**\n     * Advances the cursor to the next record in range matching or after key and primaryKey. Throws an \"InvalidAccessError\" DOMException if the source is not an index.\n     */\n    continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void;\n    /**\n     * Delete the record pointed at by the cursor with a new value.\n     *\n     * If successful, request's result will be undefined.\n     */\n    delete(): IDBRequest<undefined>;\n    /**\n     * Updated the record pointed at by the cursor with a new value.\n     *\n     * Throws a \"DataError\" DOMException if the effective object store uses in-line keys and the key would have changed.\n     *\n     * If successful, request's result will be the record's key.\n     */\n    update(value: any): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBCursor: {\n    prototype: IDBCursor;\n    new (): IDBCursor;\n};\n\n/** This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property. */\ninterface IDBCursorWithValue extends IDBCursor {\n    /**\n     * Returns the cursor's current value.\n     */\n    readonly value: any;\n}\n\ndeclare var IDBCursorWithValue: {\n    prototype: IDBCursorWithValue;\n    new (): IDBCursorWithValue;\n};\n\ninterface IDBDatabaseEventMap {\n    abort: Event;\n    close: Event;\n    error: Event;\n    versionchange: IDBVersionChangeEvent;\n}\n\n/** This IndexedDB API interface provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database. */\ninterface IDBDatabase extends EventTarget {\n    /**\n     * Returns the name of the database.\n     */\n    readonly name: string;\n    /**\n     * Returns a list of the names of object stores in the database.\n     */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\n    onclose: ((this: IDBDatabase, ev: Event) => any) | null;\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\n    onversionchange:\n        | ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any)\n        | null;\n    /**\n     * Returns the version of the database.\n     */\n    readonly version: number;\n    /**\n     * Closes the connection once all running transactions have finished.\n     */\n    close(): void;\n    /**\n     * Creates a new object store with the given name and options and returns a new IDBObjectStore.\n     *\n     * Throws a \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n     */\n    createObjectStore(\n        name: string,\n        optionalParameters?: IDBObjectStoreParameters\n    ): IDBObjectStore;\n    /**\n     * Deletes the object store with the given name.\n     *\n     * Throws a \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n     */\n    deleteObjectStore(name: string): void;\n    /**\n     * Returns a new transaction with the given mode (\"readonly\" or \"readwrite\") and scope which can be a single object store name or an array of names.\n     */\n    transaction(\n        storeNames: string | string[],\n        mode?: IDBTransactionMode\n    ): IDBTransaction;\n    addEventListener<K extends keyof IDBDatabaseEventMap>(\n        type: K,\n        listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(\n        type: K,\n        listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var IDBDatabase: {\n    prototype: IDBDatabase;\n    new (): IDBDatabase;\n};\n\n/** In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.) */\ninterface IDBFactory {\n    /**\n     * Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n     *\n     * Throws a \"DataError\" DOMException if either input is not a valid key.\n     */\n    cmp(first: any, second: any): number;\n    /**\n     * Attempts to delete the named database. If the database already exists and there are open connections that don't close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request's result will be null.\n     */\n    deleteDatabase(name: string): IDBOpenDBRequest;\n    /**\n     * Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request's result will be the connection.\n     */\n    open(name: string, version?: number): IDBOpenDBRequest;\n}\n\ndeclare var IDBFactory: {\n    prototype: IDBFactory;\n    new (): IDBFactory;\n};\n\n/** IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data. */\ninterface IDBIndex {\n    readonly keyPath: string | string[];\n    readonly multiEntry: boolean;\n    /**\n     * Returns the name of the index.\n     */\n    name: string;\n    /**\n     * Returns the IDBObjectStore the index belongs to.\n     */\n    readonly objectStore: IDBObjectStore;\n    readonly unique: boolean;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request's result will be the count.\n     */\n    count(key?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request's result will be the value, or undefined if there was no matching record.\n     */\n    get(key: IDBValidKey | IDBKeyRange): IDBRequest<any | undefined>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request's result will be an Array of the values.\n     */\n    getAll(\n        query?: IDBValidKey | IDBKeyRange | null,\n        count?: number\n    ): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request's result will be an Array of the keys.\n     */\n    getAllKeys(\n        query?: IDBValidKey | IDBKeyRange | null,\n        count?: number\n    ): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request's result will be the key, or undefined if there was no matching record.\n     */\n    getKey(key: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request's result will be an IDBCursorWithValue, or null if there were no matching records.\n     */\n    openCursor(\n        query?: IDBValidKey | IDBKeyRange | null,\n        direction?: IDBCursorDirection\n    ): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request's result will be an IDBCursor, or null if there were no matching records.\n     */\n    openKeyCursor(\n        query?: IDBValidKey | IDBKeyRange | null,\n        direction?: IDBCursorDirection\n    ): IDBRequest<IDBCursor | null>;\n}\n\ndeclare var IDBIndex: {\n    prototype: IDBIndex;\n    new (): IDBIndex;\n};\n\n/** A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs: */\ninterface IDBKeyRange {\n    /**\n     * Returns lower bound, or undefined if none.\n     */\n    readonly lower: any;\n    /**\n     * Returns true if the lower open flag is set, and false otherwise.\n     */\n    readonly lowerOpen: boolean;\n    /**\n     * Returns upper bound, or undefined if none.\n     */\n    readonly upper: any;\n    /**\n     * Returns true if the upper open flag is set, and false otherwise.\n     */\n    readonly upperOpen: boolean;\n    /**\n     * Returns true if key is included in the range, and false otherwise.\n     */\n    includes(key: any): boolean;\n}\n\ndeclare var IDBKeyRange: {\n    prototype: IDBKeyRange;\n    new (): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange spanning from lower to upper. If lowerOpen is true, lower is not included in the range. If upperOpen is true, upper is not included in the range.\n     */\n    bound(\n        lower: any,\n        upper: any,\n        lowerOpen?: boolean,\n        upperOpen?: boolean\n    ): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange starting at key with no upper bound. If open is true, key is not included in the range.\n     */\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange spanning only key.\n     */\n    only(value: any): IDBKeyRange;\n    /**\n     * Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range.\n     */\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\n};\n\n/** This example shows a variety of different uses of object stores, from updating the data structure with IDBObjectStore.createIndex\xa0inside an onupgradeneeded function, to adding a new item to our object store with IDBObjectStore.add. For a full working example, see our\xa0To-do Notifications\xa0app (view example live.) */\ninterface IDBObjectStore {\n    /**\n     * Returns true if the store has a key generator, and false otherwise.\n     */\n    readonly autoIncrement: boolean;\n    /**\n     * Returns a list of the names of indexes in the store.\n     */\n    readonly indexNames: DOMStringList;\n    /**\n     * Returns the key path of the store, or null if none.\n     */\n    readonly keyPath: string | string[];\n    /**\n     * Returns the name of the store.\n     */\n    name: string;\n    /**\n     * Returns the associated transaction.\n     */\n    readonly transaction: IDBTransaction;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a \"DataError\" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request's error set to a \"ConstraintError\" DOMException.\n     *\n     * If successful, request's result will be the record's key.\n     */\n    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n    /**\n     * Deletes all records in store.\n     *\n     * If successful, request's result will be undefined.\n     */\n    clear(): IDBRequest<undefined>;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request's result will be the count.\n     */\n    count(key?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a \"ConstraintError\" DOMException.\n     *\n     * Throws an \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n     */\n    createIndex(\n        name: string,\n        keyPath: string | string[],\n        options?: IDBIndexParameters\n    ): IDBIndex;\n    /**\n     * Deletes records in store with the given key or in the given key range in query.\n     *\n     * If successful, request's result will be undefined.\n     */\n    delete(key: IDBValidKey | IDBKeyRange): IDBRequest<undefined>;\n    /**\n     * Deletes the index in store with the given name.\n     *\n     * Throws an \"InvalidStateError\" DOMException if not called within an upgrade transaction.\n     */\n    deleteIndex(name: string): void;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request's result will be the value, or undefined if there was no matching record.\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any | undefined>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request's result will be an Array of the values.\n     */\n    getAll(\n        query?: IDBValidKey | IDBKeyRange | null,\n        count?: number\n    ): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request's result will be an Array of the keys.\n     */\n    getAllKeys(\n        query?: IDBValidKey | IDBKeyRange | null,\n        count?: number\n    ): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request's result will be the key, or undefined if there was no matching record.\n     */\n    getKey(\n        query: IDBValidKey | IDBKeyRange\n    ): IDBRequest<IDBValidKey | undefined>;\n    index(name: string): IDBIndex;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request's result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.\n     */\n    openCursor(\n        query?: IDBValidKey | IDBKeyRange | null,\n        direction?: IDBCursorDirection\n    ): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request's result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.\n     */\n    openKeyCursor(\n        query?: IDBValidKey | IDBKeyRange | null,\n        direction?: IDBCursorDirection\n    ): IDBRequest<IDBCursor | null>;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a \"DataError\" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request's error set to a \"ConstraintError\" DOMException.\n     *\n     * If successful, request's result will be the record's key.\n     */\n    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBObjectStore: {\n    prototype: IDBObjectStore;\n    new (): IDBObjectStore;\n};\n\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\n    blocked: Event;\n    upgradeneeded: IDBVersionChangeEvent;\n}\n\n/** Also inherits methods from its parents IDBRequest and EventTarget. */\ninterface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {\n    onblocked: ((this: IDBOpenDBRequest, ev: Event) => any) | null;\n    onupgradeneeded:\n        | ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any)\n        | null;\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(\n        type: K,\n        listener: (\n            this: IDBOpenDBRequest,\n            ev: IDBOpenDBRequestEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(\n        type: K,\n        listener: (\n            this: IDBOpenDBRequest,\n            ev: IDBOpenDBRequestEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var IDBOpenDBRequest: {\n    prototype: IDBOpenDBRequest;\n    new (): IDBOpenDBRequest;\n};\n\ninterface IDBRequestEventMap {\n    error: Event;\n    success: Event;\n}\n\n/** The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance. */\ninterface IDBRequest<T = any> extends EventTarget {\n    /**\n     * When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a \"InvalidStateError\" DOMException if the request is still pending.\n     */\n    readonly error: DOMException | null;\n    onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /**\n     * Returns \"pending\" until a request is complete, then returns \"done\".\n     */\n    readonly readyState: IDBRequestReadyState;\n    /**\n     * When a request is completed, returns the result, or undefined if the request failed. Throws a \"InvalidStateError\" DOMException if the request is still pending.\n     */\n    readonly result: T;\n    /**\n     * Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request.\n     */\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\n    /**\n     * Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise.\n     */\n    readonly transaction: IDBTransaction | null;\n    addEventListener<K extends keyof IDBRequestEventMap>(\n        type: K,\n        listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof IDBRequestEventMap>(\n        type: K,\n        listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var IDBRequest: {\n    prototype: IDBRequest;\n    new (): IDBRequest;\n};\n\ninterface IDBTransactionEventMap {\n    abort: Event;\n    complete: Event;\n    error: Event;\n}\n\ninterface IDBTransaction extends EventTarget {\n    /**\n     * Returns the transaction's connection.\n     */\n    readonly db: IDBDatabase;\n    /**\n     * If the transaction was aborted, returns the error (a DOMException) providing the reason.\n     */\n    readonly error: DOMException;\n    /**\n     * Returns the mode the transaction was created with (\"readonly\" or \"readwrite\"), or \"versionchange\" for an upgrade transaction.\n     */\n    readonly mode: IDBTransactionMode;\n    /**\n     * Returns a list of the names of object stores in the transaction's scope. For an upgrade transaction this is all object stores in the database.\n     */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\n    /**\n     * Aborts the transaction. All pending requests will fail with a \"AbortError\" DOMException and all changes made to the database will be reverted.\n     */\n    abort(): void;\n    /**\n     * Returns an IDBObjectStore in the transaction's scope.\n     */\n    objectStore(name: string): IDBObjectStore;\n    addEventListener<K extends keyof IDBTransactionEventMap>(\n        type: K,\n        listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof IDBTransactionEventMap>(\n        type: K,\n        listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var IDBTransaction: {\n    prototype: IDBTransaction;\n    new (): IDBTransaction;\n};\n\n/** This IndexedDB API interface indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.onupgradeneeded event handler function. */\ninterface IDBVersionChangeEvent extends Event {\n    readonly newVersion: number | null;\n    readonly oldVersion: number;\n}\n\ndeclare var IDBVersionChangeEvent: {\n    prototype: IDBVersionChangeEvent;\n    new (\n        type: string,\n        eventInitDict?: IDBVersionChangeEventInit\n    ): IDBVersionChangeEvent;\n};\n\ninterface ImageBitmap {\n    /**\n     * Returns the intrinsic height of the image, in CSS pixels.\n     */\n    readonly height: number;\n    /**\n     * Returns the intrinsic width of the image, in CSS pixels.\n     */\n    readonly width: number;\n    /**\n     * Releases imageBitmap's underlying bitmap data.\n     */\n    close(): void;\n}\n\ndeclare var ImageBitmap: {\n    prototype: ImageBitmap;\n    new (): ImageBitmap;\n};\n\ninterface ImageBitmapRenderingContext {\n    /**\n     * Returns the canvas element that the context is bound to.\n     */\n    readonly canvas: OffscreenCanvas;\n    /**\n     * Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound.\n     */\n    transferFromImageBitmap(bitmap: ImageBitmap | null): void;\n}\n\ndeclare var ImageBitmapRenderingContext: {\n    prototype: ImageBitmapRenderingContext;\n    new (): ImageBitmapRenderingContext;\n};\n\n/** The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData(). */\ninterface ImageData {\n    /**\n     * Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255.\n     */\n    readonly data: Uint8ClampedArray;\n    /**\n     * Returns the actual dimensions of the data in the ImageData object, in pixels.\n     */\n    readonly height: number;\n    /**\n     * Returns the actual dimensions of the data in the ImageData object, in pixels.\n     */\n    readonly width: number;\n}\n\ndeclare var ImageData: {\n    prototype: ImageData;\n    new (width: number, height: number): ImageData;\n    new (array: Uint8ClampedArray, width: number, height?: number): ImageData;\n};\n\n/** This Channel Messaging API interface allows us to create a new message channel and send data through it via its two MessagePort properties. */\ninterface MessageChannel {\n    /**\n     * Returns the first MessagePort object.\n     */\n    readonly port1: MessagePort;\n    /**\n     * Returns the second MessagePort object.\n     */\n    readonly port2: MessagePort;\n}\n\ndeclare var MessageChannel: {\n    prototype: MessageChannel;\n    new (): MessageChannel;\n};\n\n/** A message received by a target object. */\ninterface MessageEvent<T = any> extends Event {\n    /**\n     * Returns the data of the message.\n     */\n    readonly data: T;\n    /**\n     * Returns the last event ID string, for server-sent events.\n     */\n    readonly lastEventId: string;\n    /**\n     * Returns the origin of the message, for server-sent events and cross-document messaging.\n     */\n    readonly origin: string;\n    /**\n     * Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging.\n     */\n    readonly ports: ReadonlyArray<MessagePort>;\n    /**\n     * Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects.\n     */\n    readonly source: MessageEventSource | null;\n}\n\ndeclare var MessageEvent: {\n    prototype: MessageEvent;\n    new <T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\n};\n\ninterface MessagePortEventMap {\n    message: MessageEvent;\n    messageerror: MessageEvent;\n}\n\n/** This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. */\ninterface MessagePort extends EventTarget {\n    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;\n    /**\n     * Disconnects the port, so that it is no longer active.\n     */\n    close(): void;\n    /**\n     * Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * Throws a \"DataCloneError\" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: PostMessageOptions): void;\n    /**\n     * Begins dispatching messages received on the port.\n     */\n    start(): void;\n    addEventListener<K extends keyof MessagePortEventMap>(\n        type: K,\n        listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof MessagePortEventMap>(\n        type: K,\n        listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var MessagePort: {\n    prototype: MessagePort;\n    new (): MessagePort;\n};\n\ninterface NavigationPreloadManager {\n    disable(): Promise<void>;\n    enable(): Promise<void>;\n    getState(): Promise<NavigationPreloadState>;\n    setHeaderValue(value: string): Promise<void>;\n}\n\ndeclare var NavigationPreloadManager: {\n    prototype: NavigationPreloadManager;\n    new (): NavigationPreloadManager;\n};\n\ninterface NavigatorConcurrentHardware {\n    readonly hardwareConcurrency: number;\n}\n\ninterface NavigatorID {\n    readonly appCodeName: string;\n    readonly appName: string;\n    readonly appVersion: string;\n    readonly platform: string;\n    readonly product: string;\n    readonly userAgent: string;\n}\n\ninterface NavigatorLanguage {\n    readonly language: string;\n    readonly languages: ReadonlyArray<string>;\n}\n\ninterface NavigatorOnLine {\n    readonly onLine: boolean;\n}\n\ninterface NavigatorStorage {\n    readonly storage: StorageManager;\n}\n\ninterface NotificationEventMap {\n    click: Event;\n    close: Event;\n    error: Event;\n    show: Event;\n}\n\n/** This Notifications API interface is used to configure and display desktop notifications to the user. */\ninterface Notification extends EventTarget {\n    readonly actions: ReadonlyArray<NotificationAction>;\n    readonly badge: string;\n    readonly body: string;\n    readonly data: any;\n    readonly dir: NotificationDirection;\n    readonly icon: string;\n    readonly image: string;\n    readonly lang: string;\n    onclick: ((this: Notification, ev: Event) => any) | null;\n    onclose: ((this: Notification, ev: Event) => any) | null;\n    onerror: ((this: Notification, ev: Event) => any) | null;\n    onshow: ((this: Notification, ev: Event) => any) | null;\n    readonly renotify: boolean;\n    readonly requireInteraction: boolean;\n    readonly silent: boolean;\n    readonly tag: string;\n    readonly timestamp: number;\n    readonly title: string;\n    readonly vibrate: ReadonlyArray<number>;\n    close(): void;\n    addEventListener<K extends keyof NotificationEventMap>(\n        type: K,\n        listener: (this: Notification, ev: NotificationEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof NotificationEventMap>(\n        type: K,\n        listener: (this: Notification, ev: NotificationEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var Notification: {\n    prototype: Notification;\n    new (title: string, options?: NotificationOptions): Notification;\n    readonly maxActions: number;\n    readonly permission: NotificationPermission;\n};\n\n/** The parameter passed into the onnotificationclick handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. */\ninterface NotificationEvent extends ExtendableEvent {\n    readonly action: string;\n    readonly notification: Notification;\n}\n\ndeclare var NotificationEvent: {\n    prototype: NotificationEvent;\n    new (type: string, eventInitDict: NotificationEventInit): NotificationEvent;\n};\n\n/** The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements(). */\ninterface OES_element_index_uint {}\n\n/** The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth. */\ninterface OES_standard_derivatives {\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: GLenum;\n}\n\n/** The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures. */\ninterface OES_texture_float {}\n\n/** The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures. */\ninterface OES_texture_float_linear {}\n\n/** The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components. */\ninterface OES_texture_half_float {\n    readonly HALF_FLOAT_OES: GLenum;\n}\n\n/** The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures. */\ninterface OES_texture_half_float_linear {}\n\ninterface OES_vertex_array_object {\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    createVertexArrayOES(): WebGLVertexArrayObjectOES | null;\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): GLboolean;\n    readonly VERTEX_ARRAY_BINDING_OES: GLenum;\n}\n\ninterface OffscreenCanvas extends EventTarget {\n    /**\n     * These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n     *\n     * They can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n     */\n    height: number;\n    /**\n     * These attributes return the dimensions of the OffscreenCanvas object's bitmap.\n     *\n     * They can be set, to replace the bitmap with a new, transparent black bitmap of the specified dimensions (effectively resizing it).\n     */\n    width: number;\n    /**\n     * Returns a promise that will fulfill with a new Blob object representing a file containing the image in the OffscreenCanvas object.\n     *\n     * The argument, if provided, is a dictionary that controls the encoding options of the image file to be created. The type field specifies the file format and has a default value of \"image/png\"; that type is also used if the requested type isn't supported. If the image format supports variable quality (such as \"image/jpeg\"), then the quality field is a number in the range 0.0 to 1.0 inclusive indicating the desired quality level for the resulting image.\n     */\n    convertToBlob(options?: ImageEncodeOptions): Promise<Blob>;\n    /**\n     * Returns an object that exposes an API for drawing on the OffscreenCanvas object. contextId specifies the desired API: \"2d\", \"bitmaprenderer\", \"webgl\", or \"webgl2\". options is handled by that API.\n     *\n     * This specification defines the \"2d\" context below, which is similar but distinct from the \"2d\" context that is created from a canvas element. The WebGL specifications define the \"webgl\" and \"webgl2\" contexts. [WEBGL]\n     *\n     * Returns null if the canvas has already been initialized with another context type (e.g., trying to get a \"2d\" context after getting a \"webgl\" context).\n     */\n    getContext(\n        contextId: '2d',\n        options?: CanvasRenderingContext2DSettings\n    ): OffscreenCanvasRenderingContext2D | null;\n    getContext(\n        contextId: 'bitmaprenderer',\n        options?: ImageBitmapRenderingContextSettings\n    ): ImageBitmapRenderingContext | null;\n    getContext(\n        contextId: 'webgl',\n        options?: WebGLContextAttributes\n    ): WebGLRenderingContext | null;\n    getContext(\n        contextId: 'webgl2',\n        options?: WebGLContextAttributes\n    ): WebGL2RenderingContext | null;\n    getContext(\n        contextId: OffscreenRenderingContextId,\n        options?: any\n    ): OffscreenRenderingContext | null;\n    /**\n     * Returns a newly created ImageBitmap object with the image in the OffscreenCanvas object. The image in the OffscreenCanvas object is replaced with a new blank image.\n     */\n    transferToImageBitmap(): ImageBitmap;\n}\n\ndeclare var OffscreenCanvas: {\n    prototype: OffscreenCanvas;\n    new (width: number, height: number): OffscreenCanvas;\n};\n\ninterface OffscreenCanvasRenderingContext2D\n    extends CanvasCompositing,\n        CanvasDrawImage,\n        CanvasDrawPath,\n        CanvasFillStrokeStyles,\n        CanvasFilters,\n        CanvasImageData,\n        CanvasImageSmoothing,\n        CanvasPath,\n        CanvasPathDrawingStyles,\n        CanvasRect,\n        CanvasShadowStyles,\n        CanvasState,\n        CanvasText,\n        CanvasTextDrawingStyles,\n        CanvasTransform {\n    readonly canvas: OffscreenCanvas;\n    commit(): void;\n}\n\ndeclare var OffscreenCanvasRenderingContext2D: {\n    prototype: OffscreenCanvasRenderingContext2D;\n    new (): OffscreenCanvasRenderingContext2D;\n};\n\n/** This Canvas 2D API interface is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. */\ninterface Path2D extends CanvasPath {\n    /**\n     * Adds to the path the path given by the argument.\n     */\n    addPath(path: Path2D, transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var Path2D: {\n    prototype: Path2D;\n    new (path?: Path2D | string): Path2D;\n};\n\ninterface PerformanceEventMap {\n    resourcetimingbufferfull: Event;\n}\n\n/** Provides access to performance-related information for the current page. It's part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API. */\ninterface Performance extends EventTarget {\n    onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;\n    readonly timeOrigin: number;\n    clearMarks(markName?: string): void;\n    clearMeasures(measureName?: string): void;\n    clearResourceTimings(): void;\n    getEntries(): PerformanceEntryList;\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    getEntriesByType(type: string): PerformanceEntryList;\n    mark(markName: string): void;\n    measure(measureName: string, startMark?: string, endMark?: string): void;\n    now(): number;\n    setResourceTimingBufferSize(maxSize: number): void;\n    toJSON(): any;\n    addEventListener<K extends keyof PerformanceEventMap>(\n        type: K,\n        listener: (this: Performance, ev: PerformanceEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof PerformanceEventMap>(\n        type: K,\n        listener: (this: Performance, ev: PerformanceEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var Performance: {\n    prototype: Performance;\n    new (): Performance;\n};\n\n/** Encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance mark or measure (for example by calling the mark() method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image). */\ninterface PerformanceEntry {\n    readonly duration: number;\n    readonly entryType: string;\n    readonly name: string;\n    readonly startTime: number;\n    toJSON(): any;\n}\n\ndeclare var PerformanceEntry: {\n    prototype: PerformanceEntry;\n    new (): PerformanceEntry;\n};\n\n/** PerformanceMark\xa0is an abstract interface for PerformanceEntry objects with an entryType of \"mark\". Entries of this type are created by calling performance.mark() to add a named DOMHighResTimeStamp (the mark) to the browser's performance timeline. */\ninterface PerformanceMark extends PerformanceEntry {}\n\ndeclare var PerformanceMark: {\n    prototype: PerformanceMark;\n    new (): PerformanceMark;\n};\n\n/** PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of \"measure\". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser's performance timeline. */\ninterface PerformanceMeasure extends PerformanceEntry {}\n\ndeclare var PerformanceMeasure: {\n    prototype: PerformanceMeasure;\n    new (): PerformanceMeasure;\n};\n\ninterface PerformanceObserver {\n    disconnect(): void;\n    observe(options?: PerformanceObserverInit): void;\n    takeRecords(): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserver: {\n    prototype: PerformanceObserver;\n    new (callback: PerformanceObserverCallback): PerformanceObserver;\n    readonly supportedEntryTypes: ReadonlyArray<string>;\n};\n\ninterface PerformanceObserverEntryList {\n    getEntries(): PerformanceEntryList;\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    getEntriesByType(type: string): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserverEntryList: {\n    prototype: PerformanceObserverEntryList;\n    new (): PerformanceObserverEntryList;\n};\n\n/** Enables retrieval and analysis of detailed network timing data regarding the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script. */\ninterface PerformanceResourceTiming extends PerformanceEntry {\n    readonly connectEnd: number;\n    readonly connectStart: number;\n    readonly decodedBodySize: number;\n    readonly domainLookupEnd: number;\n    readonly domainLookupStart: number;\n    readonly encodedBodySize: number;\n    readonly fetchStart: number;\n    readonly initiatorType: string;\n    readonly nextHopProtocol: string;\n    readonly redirectEnd: number;\n    readonly redirectStart: number;\n    readonly requestStart: number;\n    readonly responseEnd: number;\n    readonly responseStart: number;\n    readonly secureConnectionStart: number;\n    readonly transferSize: number;\n    readonly workerStart: number;\n    toJSON(): any;\n}\n\ndeclare var PerformanceResourceTiming: {\n    prototype: PerformanceResourceTiming;\n    new (): PerformanceResourceTiming;\n};\n\ninterface PermissionStatusEventMap {\n    change: Event;\n}\n\ninterface PermissionStatus extends EventTarget {\n    onchange: ((this: PermissionStatus, ev: Event) => any) | null;\n    readonly state: PermissionState;\n    addEventListener<K extends keyof PermissionStatusEventMap>(\n        type: K,\n        listener: (\n            this: PermissionStatus,\n            ev: PermissionStatusEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof PermissionStatusEventMap>(\n        type: K,\n        listener: (\n            this: PermissionStatus,\n            ev: PermissionStatusEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var PermissionStatus: {\n    prototype: PermissionStatus;\n    new (): PermissionStatus;\n};\n\ninterface Permissions {\n    query(\n        permissionDesc:\n            | PermissionDescriptor\n            | DevicePermissionDescriptor\n            | MidiPermissionDescriptor\n            | PushPermissionDescriptor\n    ): Promise<PermissionStatus>;\n}\n\ndeclare var Permissions: {\n    prototype: Permissions;\n    new (): Permissions;\n};\n\n/** Events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>). */\ninterface ProgressEvent<T extends EventTarget = EventTarget> extends Event {\n    readonly lengthComputable: boolean;\n    readonly loaded: number;\n    readonly target: T | null;\n    readonly total: number;\n}\n\ndeclare var ProgressEvent: {\n    prototype: ProgressEvent;\n    new (type: string, eventInitDict?: ProgressEventInit): ProgressEvent;\n};\n\ninterface PromiseRejectionEvent extends Event {\n    readonly promise: Promise<any>;\n    readonly reason: any;\n}\n\ndeclare var PromiseRejectionEvent: {\n    prototype: PromiseRejectionEvent;\n    new (\n        type: string,\n        eventInitDict: PromiseRejectionEventInit\n    ): PromiseRejectionEvent;\n};\n\n/** This Push API interface represents a push message that has been received. This event is sent to the global scope of a ServiceWorker. It contains the information sent from an application server to a PushSubscription. */\ninterface PushEvent extends ExtendableEvent {\n    readonly data: PushMessageData | null;\n}\n\ndeclare var PushEvent: {\n    prototype: PushEvent;\n    new (type: string, eventInitDict?: PushEventInit): PushEvent;\n};\n\n/** This Push API interface provides a way to receive notifications from third-party servers as well as request URLs for push notifications. */\ninterface PushManager {\n    getSubscription(): Promise<PushSubscription | null>;\n    permissionState(\n        options?: PushSubscriptionOptionsInit\n    ): Promise<PushPermissionState>;\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\n}\n\ndeclare var PushManager: {\n    prototype: PushManager;\n    new (): PushManager;\n    readonly supportedContentEncodings: ReadonlyArray<string>;\n};\n\n/** This Push API interface provides methods which let you retrieve the push data sent by a server in various formats. */\ninterface PushMessageData {\n    arrayBuffer(): ArrayBuffer;\n    blob(): Blob;\n    json(): any;\n    text(): string;\n}\n\ndeclare var PushMessageData: {\n    prototype: PushMessageData;\n    new (): PushMessageData;\n};\n\n/** This Push API interface provides a subcription's URL endpoint and allows unsubscription from a push service. */\ninterface PushSubscription {\n    readonly endpoint: string;\n    readonly expirationTime: number | null;\n    readonly options: PushSubscriptionOptions;\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\n    toJSON(): PushSubscriptionJSON;\n    unsubscribe(): Promise<boolean>;\n}\n\ndeclare var PushSubscription: {\n    prototype: PushSubscription;\n    new (): PushSubscription;\n};\n\ninterface PushSubscriptionChangeEvent extends ExtendableEvent {\n    readonly newSubscription: PushSubscription | null;\n    readonly oldSubscription: PushSubscription | null;\n}\n\ndeclare var PushSubscriptionChangeEvent: {\n    prototype: PushSubscriptionChangeEvent;\n    new (\n        type: string,\n        eventInitDict?: PushSubscriptionChangeEventInit\n    ): PushSubscriptionChangeEvent;\n};\n\ninterface PushSubscriptionOptions {\n    readonly applicationServerKey: ArrayBuffer | null;\n    readonly userVisibleOnly: boolean;\n}\n\ndeclare var PushSubscriptionOptions: {\n    prototype: PushSubscriptionOptions;\n    new (): PushSubscriptionOptions;\n};\n\ninterface ReadableByteStreamController {\n    readonly byobRequest: ReadableStreamBYOBRequest | undefined;\n    readonly desiredSize: number | null;\n    close(): void;\n    enqueue(chunk: ArrayBufferView): void;\n    error(error?: any): void;\n}\n\n/** This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object. */\ninterface ReadableStream<R = any> {\n    readonly locked: boolean;\n    cancel(reason?: any): Promise<void>;\n    getReader(options: { mode: 'byob' }): ReadableStreamBYOBReader;\n    getReader(): ReadableStreamDefaultReader<R>;\n    pipeThrough<T>(\n        {\n            writable,\n            readable,\n        }: { writable: WritableStream<R>; readable: ReadableStream<T> },\n        options?: PipeOptions\n    ): ReadableStream<T>;\n    pipeTo(dest: WritableStream<R>, options?: PipeOptions): Promise<void>;\n    tee(): [ReadableStream<R>, ReadableStream<R>];\n}\n\ndeclare var ReadableStream: {\n    prototype: ReadableStream;\n    new (\n        underlyingSource: UnderlyingByteSource,\n        strategy?: { highWaterMark?: number; size?: undefined }\n    ): ReadableStream<Uint8Array>;\n    new <R = any>(\n        underlyingSource?: UnderlyingSource<R>,\n        strategy?: QueuingStrategy<R>\n    ): ReadableStream<R>;\n};\n\ninterface ReadableStreamBYOBReader {\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n    read<T extends ArrayBufferView>(\n        view: T\n    ): Promise<ReadableStreamReadResult<T>>;\n    releaseLock(): void;\n}\n\ninterface ReadableStreamBYOBRequest {\n    readonly view: ArrayBufferView;\n    respond(bytesWritten: number): void;\n    respondWithNewView(view: ArrayBufferView): void;\n}\n\ninterface ReadableStreamDefaultController<R = any> {\n    readonly desiredSize: number | null;\n    close(): void;\n    enqueue(chunk: R): void;\n    error(error?: any): void;\n}\n\ninterface ReadableStreamDefaultReader<R = any> {\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n    read(): Promise<ReadableStreamReadResult<R>>;\n    releaseLock(): void;\n}\n\ninterface ReadableStreamReader<R = any> {\n    cancel(): Promise<void>;\n    read(): Promise<ReadableStreamReadResult<R>>;\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamReader: {\n    prototype: ReadableStreamReader;\n    new (): ReadableStreamReader;\n};\n\n/** This Fetch API interface represents a resource request. */\ninterface Request extends Body {\n    /**\n     * Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser's cache when fetching.\n     */\n    readonly cache: RequestCache;\n    /**\n     * Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL.\n     */\n    readonly credentials: RequestCredentials;\n    /**\n     * Returns the kind of resource requested by request, e.g., \"document\" or \"script\".\n     */\n    readonly destination: RequestDestination;\n    /**\n     * Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the \"Host\" header.\n     */\n    readonly headers: Headers;\n    /**\n     * Returns request's subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI]\n     */\n    readonly integrity: string;\n    /**\n     * Returns a boolean indicating whether or not request is for a history navigation (a.k.a. back-foward navigation).\n     */\n    readonly isHistoryNavigation: boolean;\n    /**\n     * Returns a boolean indicating whether or not request is for a reload navigation.\n     */\n    readonly isReloadNavigation: boolean;\n    /**\n     * Returns a boolean indicating whether or not request can outlive the global in which it was created.\n     */\n    readonly keepalive: boolean;\n    /**\n     * Returns request's HTTP method, which is \"GET\" by default.\n     */\n    readonly method: string;\n    /**\n     * Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs.\n     */\n    readonly mode: RequestMode;\n    /**\n     * Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default.\n     */\n    readonly redirect: RequestRedirect;\n    /**\n     * Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and \"about:client\" when defaulting to the global's default. This is used during fetching to determine the value of the `Referer` header of the request being made.\n     */\n    readonly referrer: string;\n    /**\n     * Returns the referrer policy associated with request. This is used during fetching to compute the value of the request's referrer.\n     */\n    readonly referrerPolicy: ReferrerPolicy;\n    /**\n     * Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler.\n     */\n    readonly signal: AbortSignal;\n    /**\n     * Returns the URL of request as a string.\n     */\n    readonly url: string;\n    clone(): Request;\n}\n\ndeclare var Request: {\n    prototype: Request;\n    new (input: RequestInfo, init?: RequestInit): Request;\n};\n\n/** This Fetch API interface represents the response to a request. */\ninterface Response extends Body {\n    readonly headers: Headers;\n    readonly ok: boolean;\n    readonly redirected: boolean;\n    readonly status: number;\n    readonly statusText: string;\n    readonly trailer: Promise<Headers>;\n    readonly type: ResponseType;\n    readonly url: string;\n    clone(): Response;\n}\n\ndeclare var Response: {\n    prototype: Response;\n    new (body?: BodyInit | null, init?: ResponseInit): Response;\n    error(): Response;\n    redirect(url: string, status?: number): Response;\n};\n\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\n    statechange: Event;\n}\n\n/** This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object. */\ninterface ServiceWorker extends EventTarget, AbstractWorker {\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\n    readonly scriptURL: string;\n    readonly state: ServiceWorkerState;\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: PostMessageOptions): void;\n    addEventListener<K extends keyof ServiceWorkerEventMap>(\n        type: K,\n        listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(\n        type: K,\n        listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var ServiceWorker: {\n    prototype: ServiceWorker;\n    new (): ServiceWorker;\n};\n\ninterface ServiceWorkerContainerEventMap {\n    controllerchange: Event;\n    message: MessageEvent;\n    messageerror: MessageEvent;\n}\n\n/** The\xa0ServiceWorkerContainer\xa0interface of the\xa0ServiceWorker API\xa0provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations. */\ninterface ServiceWorkerContainer extends EventTarget {\n    readonly controller: ServiceWorker | null;\n    oncontrollerchange:\n        | ((this: ServiceWorkerContainer, ev: Event) => any)\n        | null;\n    onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    onmessageerror:\n        | ((this: ServiceWorkerContainer, ev: MessageEvent) => any)\n        | null;\n    readonly ready: Promise<ServiceWorkerRegistration>;\n    getRegistration(\n        clientURL?: string\n    ): Promise<ServiceWorkerRegistration | undefined>;\n    getRegistrations(): Promise<ReadonlyArray<ServiceWorkerRegistration>>;\n    register(\n        scriptURL: string,\n        options?: RegistrationOptions\n    ): Promise<ServiceWorkerRegistration>;\n    startMessages(): void;\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(\n        type: K,\n        listener: (\n            this: ServiceWorkerContainer,\n            ev: ServiceWorkerContainerEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(\n        type: K,\n        listener: (\n            this: ServiceWorkerContainer,\n            ev: ServiceWorkerContainerEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var ServiceWorkerContainer: {\n    prototype: ServiceWorkerContainer;\n    new (): ServiceWorkerContainer;\n};\n\ninterface ServiceWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    activate: ExtendableEvent;\n    fetch: FetchEvent;\n    install: ExtendableEvent;\n    message: ExtendableMessageEvent;\n    messageerror: MessageEvent;\n    notificationclick: NotificationEvent;\n    notificationclose: NotificationEvent;\n    push: PushEvent;\n    pushsubscriptionchange: PushSubscriptionChangeEvent;\n    sync: SyncEvent;\n}\n\n/** This ServiceWorker API interface represents the global execution context of a service worker. */\ninterface ServiceWorkerGlobalScope extends WorkerGlobalScope {\n    readonly clients: Clients;\n    onactivate:\n        | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any)\n        | null;\n    onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => any) | null;\n    oninstall:\n        | ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any)\n        | null;\n    onmessage:\n        | ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => any)\n        | null;\n    onmessageerror:\n        | ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => any)\n        | null;\n    onnotificationclick:\n        | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any)\n        | null;\n    onnotificationclose:\n        | ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any)\n        | null;\n    onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => any) | null;\n    onpushsubscriptionchange:\n        | ((\n              this: ServiceWorkerGlobalScope,\n              ev: PushSubscriptionChangeEvent\n          ) => any)\n        | null;\n    onsync: ((this: ServiceWorkerGlobalScope, ev: SyncEvent) => any) | null;\n    readonly registration: ServiceWorkerRegistration;\n    readonly serviceWorker: ServiceWorker;\n    skipWaiting(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: ServiceWorkerGlobalScope,\n            ev: ServiceWorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: ServiceWorkerGlobalScope,\n            ev: ServiceWorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var ServiceWorkerGlobalScope: {\n    prototype: ServiceWorkerGlobalScope;\n    new (): ServiceWorkerGlobalScope;\n};\n\ninterface ServiceWorkerRegistrationEventMap {\n    updatefound: Event;\n}\n\n/** This ServiceWorker API interface represents the service worker registration. You register a service worker to control one or more pages that share the same origin. */\ninterface ServiceWorkerRegistration extends EventTarget {\n    readonly active: ServiceWorker | null;\n    readonly installing: ServiceWorker | null;\n    readonly navigationPreload: NavigationPreloadManager;\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\n    readonly pushManager: PushManager;\n    readonly scope: string;\n    readonly sync: SyncManager;\n    readonly updateViaCache: ServiceWorkerUpdateViaCache;\n    readonly waiting: ServiceWorker | null;\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\n    showNotification(\n        title: string,\n        options?: NotificationOptions\n    ): Promise<void>;\n    unregister(): Promise<boolean>;\n    update(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(\n        type: K,\n        listener: (\n            this: ServiceWorkerRegistration,\n            ev: ServiceWorkerRegistrationEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(\n        type: K,\n        listener: (\n            this: ServiceWorkerRegistration,\n            ev: ServiceWorkerRegistrationEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var ServiceWorkerRegistration: {\n    prototype: ServiceWorkerRegistration;\n    new (): ServiceWorkerRegistration;\n};\n\ninterface SharedWorker extends EventTarget, AbstractWorker {\n    /**\n     * Returns sharedWorker's MessagePort object which can be used to communicate with the global environment.\n     */\n    readonly port: MessagePort;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(\n        type: K,\n        listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(\n        type: K,\n        listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var SharedWorker: {\n    prototype: SharedWorker;\n    new (scriptURL: string, options?: string | WorkerOptions): SharedWorker;\n};\n\ninterface SharedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    connect: MessageEvent;\n}\n\ninterface SharedWorkerGlobalScope extends WorkerGlobalScope {\n    /**\n     * Returns sharedWorkerGlobal's name, i.e. the value given to the SharedWorker constructor. Multiple SharedWorker objects can correspond to the same shared worker (and SharedWorkerGlobalScope), by reusing the same name.\n     */\n    readonly name: string;\n    onconnect:\n        | ((this: SharedWorkerGlobalScope, ev: MessageEvent) => any)\n        | null;\n    /**\n     * Aborts sharedWorkerGlobal.\n     */\n    close(): void;\n    addEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: SharedWorkerGlobalScope,\n            ev: SharedWorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: SharedWorkerGlobalScope,\n            ev: SharedWorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var SharedWorkerGlobalScope: {\n    prototype: SharedWorkerGlobalScope;\n    new (): SharedWorkerGlobalScope;\n};\n\ninterface StorageManager {\n    estimate(): Promise<StorageEstimate>;\n    persisted(): Promise<boolean>;\n}\n\ndeclare var StorageManager: {\n    prototype: StorageManager;\n    new (): StorageManager;\n};\n\n/** This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto). */\ninterface SubtleCrypto {\n    decrypt(\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaOaepParams\n            | AesCtrParams\n            | AesCbcParams\n            | AesCmacParams\n            | AesGcmParams\n            | AesCfbParams,\n        key: CryptoKey,\n        data:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer\n    ): Promise<ArrayBuffer>;\n    deriveBits(\n        algorithm:\n            | AlgorithmIdentifier\n            | EcdhKeyDeriveParams\n            | DhKeyDeriveParams\n            | ConcatParams\n            | HkdfCtrParams\n            | Pbkdf2Params,\n        baseKey: CryptoKey,\n        length: number\n    ): Promise<ArrayBuffer>;\n    deriveKey(\n        algorithm:\n            | AlgorithmIdentifier\n            | EcdhKeyDeriveParams\n            | DhKeyDeriveParams\n            | ConcatParams\n            | HkdfCtrParams\n            | Pbkdf2Params,\n        baseKey: CryptoKey,\n        derivedKeyType:\n            | string\n            | AesDerivedKeyParams\n            | HmacImportParams\n            | ConcatParams\n            | HkdfCtrParams\n            | Pbkdf2Params,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKey>;\n    digest(\n        algorithm: AlgorithmIdentifier,\n        data:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer\n    ): Promise<ArrayBuffer>;\n    encrypt(\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaOaepParams\n            | AesCtrParams\n            | AesCbcParams\n            | AesCmacParams\n            | AesGcmParams\n            | AesCfbParams,\n        key: CryptoKey,\n        data:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer\n    ): Promise<ArrayBuffer>;\n    exportKey(format: 'jwk', key: CryptoKey): Promise<JsonWebKey>;\n    exportKey(\n        format: 'raw' | 'pkcs8' | 'spki',\n        key: CryptoKey\n    ): Promise<ArrayBuffer>;\n    exportKey(\n        format: string,\n        key: CryptoKey\n    ): Promise<JsonWebKey | ArrayBuffer>;\n    generateKey(\n        algorithm: AlgorithmIdentifier,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKeyPair | CryptoKey>;\n    generateKey(\n        algorithm: RsaHashedKeyGenParams | EcKeyGenParams | DhKeyGenParams,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKeyPair>;\n    generateKey(\n        algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKey>;\n    importKey(\n        format: 'jwk',\n        keyData: JsonWebKey,\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaHashedImportParams\n            | EcKeyImportParams\n            | HmacImportParams\n            | DhImportKeyParams\n            | AesKeyAlgorithm,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKey>;\n    importKey(\n        format: 'raw' | 'pkcs8' | 'spki',\n        keyData:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer,\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaHashedImportParams\n            | EcKeyImportParams\n            | HmacImportParams\n            | DhImportKeyParams\n            | AesKeyAlgorithm,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKey>;\n    importKey(\n        format: string,\n        keyData:\n            | JsonWebKey\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer,\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaHashedImportParams\n            | EcKeyImportParams\n            | HmacImportParams\n            | DhImportKeyParams\n            | AesKeyAlgorithm,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKey>;\n    sign(\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaPssParams\n            | EcdsaParams\n            | AesCmacParams,\n        key: CryptoKey,\n        data:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer\n    ): Promise<ArrayBuffer>;\n    unwrapKey(\n        format: 'raw' | 'pkcs8' | 'spki' | 'jwk' | string,\n        wrappedKey:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer,\n        unwrappingKey: CryptoKey,\n        unwrapAlgorithm:\n            | AlgorithmIdentifier\n            | RsaOaepParams\n            | AesCtrParams\n            | AesCbcParams\n            | AesCmacParams\n            | AesGcmParams\n            | AesCfbParams,\n        unwrappedKeyAlgorithm:\n            | AlgorithmIdentifier\n            | RsaHashedImportParams\n            | EcKeyImportParams\n            | HmacImportParams\n            | DhImportKeyParams\n            | AesKeyAlgorithm,\n        extractable: boolean,\n        keyUsages: KeyUsage[]\n    ): Promise<CryptoKey>;\n    verify(\n        algorithm:\n            | AlgorithmIdentifier\n            | RsaPssParams\n            | EcdsaParams\n            | AesCmacParams,\n        key: CryptoKey,\n        signature:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer,\n        data:\n            | Int8Array\n            | Int16Array\n            | Int32Array\n            | Uint8Array\n            | Uint16Array\n            | Uint32Array\n            | Uint8ClampedArray\n            | Float32Array\n            | Float64Array\n            | DataView\n            | ArrayBuffer\n    ): Promise<boolean>;\n    wrapKey(\n        format: 'raw' | 'pkcs8' | 'spki' | 'jwk' | string,\n        key: CryptoKey,\n        wrappingKey: CryptoKey,\n        wrapAlgorithm:\n            | AlgorithmIdentifier\n            | RsaOaepParams\n            | AesCtrParams\n            | AesCbcParams\n            | AesCmacParams\n            | AesGcmParams\n            | AesCfbParams\n    ): Promise<ArrayBuffer>;\n}\n\ndeclare var SubtleCrypto: {\n    prototype: SubtleCrypto;\n    new (): SubtleCrypto;\n};\n\n/** A sync action that is dispatched on the ServiceWorkerGlobalScope\xa0of a ServiceWorker.\xa0 */\ninterface SyncEvent extends ExtendableEvent {\n    readonly lastChance: boolean;\n    readonly tag: string;\n}\n\ndeclare var SyncEvent: {\n    prototype: SyncEvent;\n    new (type: string, init: SyncEventInit): SyncEvent;\n};\n\n/** This ServiceWorker API interface provides an interface for registering and listing sync registrations. */\ninterface SyncManager {\n    getTags(): Promise<string[]>;\n    register(tag: string): Promise<void>;\n}\n\ndeclare var SyncManager: {\n    prototype: SyncManager;\n    new (): SyncManager;\n};\n\n/** A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc.\xa0A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView \u2013 a C-like representation of strings based on typed arrays. */\ninterface TextDecoder extends TextDecoderCommon {\n    /**\n     * Returns the result of running encoding's decoder. The method can be invoked zero or more times with options's stream set to true, and then once without options's stream (or set to false), to process a fragmented stream. If the invocation without options's stream (or set to false) has no input, it's clearest to omit both arguments.\n     *\n     * ```\n     * var string = \"\", decoder = new TextDecoder(encoding), buffer;\n     * while(buffer = next_chunk()) {\n     *   string += decoder.decode(buffer, {stream:true});\n     * }\n     * string += decoder.decode(); // end-of-stream\n     * ```\n     *\n     * If the error mode is \"fatal\" and encoding's decoder returns error, throws a TypeError.\n     */\n    decode(input?: BufferSource, options?: TextDecodeOptions): string;\n}\n\ndeclare var TextDecoder: {\n    prototype: TextDecoder;\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n};\n\ninterface TextDecoderCommon {\n    /**\n     * Returns encoding's name, lowercased.\n     */\n    readonly encoding: string;\n    /**\n     * Returns true if error mode is \"fatal\", and false otherwise.\n     */\n    readonly fatal: boolean;\n    /**\n     * Returns true if ignore BOM flag is set, and false otherwise.\n     */\n    readonly ignoreBOM: boolean;\n}\n\ninterface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {\n    readonly readable: ReadableStream<string>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var TextDecoderStream: {\n    prototype: TextDecoderStream;\n    new (label?: string, options?: TextDecoderOptions): TextDecoderStream;\n};\n\n/** TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView \u2013 a C-like representation of strings based on typed arrays. */\ninterface TextEncoder extends TextEncoderCommon {\n    /**\n     * Returns the result of running UTF-8's encoder.\n     */\n    encode(input?: string): Uint8Array;\n    /**\n     * Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as a dictionary whereby read is the number of converted code units of source and written is the number of bytes modified in destination.\n     */\n    encodeInto(\n        source: string,\n        destination: Uint8Array\n    ): TextEncoderEncodeIntoResult;\n}\n\ndeclare var TextEncoder: {\n    prototype: TextEncoder;\n    new (): TextEncoder;\n};\n\ninterface TextEncoderCommon {\n    /**\n     * Returns \"utf-8\".\n     */\n    readonly encoding: string;\n}\n\ninterface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<string>;\n}\n\ndeclare var TextEncoderStream: {\n    prototype: TextEncoderStream;\n    new (): TextEncoderStream;\n};\n\n/** The dimensions of a piece of text in the canvas, as created by the CanvasRenderingContext2D.measureText() method. */\ninterface TextMetrics {\n    /**\n     * Returns the measurement described below.\n     */\n    readonly actualBoundingBoxAscent: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly actualBoundingBoxDescent: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly actualBoundingBoxLeft: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly actualBoundingBoxRight: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly alphabeticBaseline: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly emHeightAscent: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly emHeightDescent: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly fontBoundingBoxAscent: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly fontBoundingBoxDescent: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly hangingBaseline: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly ideographicBaseline: number;\n    /**\n     * Returns the measurement described below.\n     */\n    readonly width: number;\n}\n\ndeclare var TextMetrics: {\n    prototype: TextMetrics;\n    new (): TextMetrics;\n};\n\ninterface TransformStream<I = any, O = any> {\n    readonly readable: ReadableStream<O>;\n    readonly writable: WritableStream<I>;\n}\n\ndeclare var TransformStream: {\n    prototype: TransformStream;\n    new <I = any, O = any>(\n        transformer?: Transformer<I, O>,\n        writableStrategy?: QueuingStrategy<I>,\n        readableStrategy?: QueuingStrategy<O>\n    ): TransformStream<I, O>;\n};\n\ninterface TransformStreamDefaultController<O = any> {\n    readonly desiredSize: number | null;\n    enqueue(chunk: O): void;\n    error(reason?: any): void;\n    terminate(): void;\n}\n\n/** The URL\xa0interface represents an object providing static methods used for creating object URLs. */\ninterface URL {\n    hash: string;\n    host: string;\n    hostname: string;\n    href: string;\n    toString(): string;\n    readonly origin: string;\n    password: string;\n    pathname: string;\n    port: string;\n    protocol: string;\n    search: string;\n    readonly searchParams: URLSearchParams;\n    username: string;\n    toJSON(): string;\n}\n\ndeclare var URL: {\n    prototype: URL;\n    new (url: string, base?: string | URL): URL;\n    createObjectURL(object: any): string;\n    revokeObjectURL(url: string): void;\n};\n\ninterface URLSearchParams {\n    /**\n     * Appends a specified key/value pair as a new search parameter.\n     */\n    append(name: string, value: string): void;\n    /**\n     * Deletes the given search parameter, and its associated value, from the list of all search parameters.\n     */\n    delete(name: string): void;\n    /**\n     * Returns the first value associated to the given search parameter.\n     */\n    get(name: string): string | null;\n    /**\n     * Returns all the values association with a given search parameter.\n     */\n    getAll(name: string): string[];\n    /**\n     * Returns a Boolean indicating if such a search parameter exists.\n     */\n    has(name: string): boolean;\n    /**\n     * Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\n     */\n    set(name: string, value: string): void;\n    sort(): void;\n    /**\n     * Returns a string containing a query string suitable for use in a URL. Does not include the question mark.\n     */\n    toString(): string;\n    forEach(\n        callbackfn: (\n            value: string,\n            key: string,\n            parent: URLSearchParams\n        ) => void,\n        thisArg?: any\n    ): void;\n}\n\ndeclare var URLSearchParams: {\n    prototype: URLSearchParams;\n    new (\n        init?: string[][] | Record<string, string> | string | URLSearchParams\n    ): URLSearchParams;\n    toString(): string;\n};\n\ninterface WEBGL_color_buffer_float {\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: GLenum;\n    readonly RGBA32F_EXT: GLenum;\n    readonly UNSIGNED_NORMALIZED_EXT: GLenum;\n}\n\ninterface WEBGL_compressed_texture_astc {\n    getSupportedProfiles(): string[];\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: GLenum;\n}\n\n/** The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats. */\ninterface WEBGL_compressed_texture_s3tc {\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: GLenum;\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: GLenum;\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: GLenum;\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: GLenum;\n}\n\ninterface WEBGL_compressed_texture_s3tc_srgb {\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: GLenum;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: GLenum;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: GLenum;\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: GLenum;\n}\n\n/** The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes. */\ninterface WEBGL_debug_renderer_info {\n    readonly UNMASKED_RENDERER_WEBGL: GLenum;\n    readonly UNMASKED_VENDOR_WEBGL: GLenum;\n}\n\ninterface WEBGL_debug_shaders {\n    getTranslatedShaderSource(shader: WebGLShader): string;\n}\n\n/** The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures. */\ninterface WEBGL_depth_texture {\n    readonly UNSIGNED_INT_24_8_WEBGL: GLenum;\n}\n\ninterface WEBGL_draw_buffers {\n    drawBuffersWEBGL(buffers: GLenum[]): void;\n    readonly COLOR_ATTACHMENT0_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT10_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT11_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT12_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT13_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT14_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT15_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT1_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT2_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT3_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT4_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT5_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT6_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT7_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT8_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT9_WEBGL: GLenum;\n    readonly DRAW_BUFFER0_WEBGL: GLenum;\n    readonly DRAW_BUFFER10_WEBGL: GLenum;\n    readonly DRAW_BUFFER11_WEBGL: GLenum;\n    readonly DRAW_BUFFER12_WEBGL: GLenum;\n    readonly DRAW_BUFFER13_WEBGL: GLenum;\n    readonly DRAW_BUFFER14_WEBGL: GLenum;\n    readonly DRAW_BUFFER15_WEBGL: GLenum;\n    readonly DRAW_BUFFER1_WEBGL: GLenum;\n    readonly DRAW_BUFFER2_WEBGL: GLenum;\n    readonly DRAW_BUFFER3_WEBGL: GLenum;\n    readonly DRAW_BUFFER4_WEBGL: GLenum;\n    readonly DRAW_BUFFER5_WEBGL: GLenum;\n    readonly DRAW_BUFFER6_WEBGL: GLenum;\n    readonly DRAW_BUFFER7_WEBGL: GLenum;\n    readonly DRAW_BUFFER8_WEBGL: GLenum;\n    readonly DRAW_BUFFER9_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: GLenum;\n    readonly MAX_DRAW_BUFFERS_WEBGL: GLenum;\n}\n\ninterface WEBGL_lose_context {\n    loseContext(): void;\n    restoreContext(): void;\n}\n\ninterface WebGL2RenderingContext\n    extends WebGL2RenderingContextBase,\n        WebGL2RenderingContextOverloads,\n        WebGLRenderingContextBase {}\n\ndeclare var WebGL2RenderingContext: {\n    prototype: WebGL2RenderingContext;\n    new (): WebGL2RenderingContext;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n};\n\ninterface WebGL2RenderingContextBase {\n    beginQuery(target: GLenum, query: WebGLQuery): void;\n    beginTransformFeedback(primitiveMode: GLenum): void;\n    bindBufferBase(\n        target: GLenum,\n        index: GLuint,\n        buffer: WebGLBuffer | null\n    ): void;\n    bindBufferRange(\n        target: GLenum,\n        index: GLuint,\n        buffer: WebGLBuffer | null,\n        offset: GLintptr,\n        size: GLsizeiptr\n    ): void;\n    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;\n    bindTransformFeedback(\n        target: GLenum,\n        tf: WebGLTransformFeedback | null\n    ): void;\n    bindVertexArray(array: WebGLVertexArrayObject | null): void;\n    blitFramebuffer(\n        srcX0: GLint,\n        srcY0: GLint,\n        srcX1: GLint,\n        srcY1: GLint,\n        dstX0: GLint,\n        dstY0: GLint,\n        dstX1: GLint,\n        dstY1: GLint,\n        mask: GLbitfield,\n        filter: GLenum\n    ): void;\n    clearBufferfi(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        depth: GLfloat,\n        stencil: GLint\n    ): void;\n    clearBufferfv(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        values: Float32List,\n        srcOffset?: GLuint\n    ): void;\n    clearBufferiv(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        values: Int32List,\n        srcOffset?: GLuint\n    ): void;\n    clearBufferuiv(\n        buffer: GLenum,\n        drawbuffer: GLint,\n        values: Uint32List,\n        srcOffset?: GLuint\n    ): void;\n    clientWaitSync(\n        sync: WebGLSync,\n        flags: GLbitfield,\n        timeout: GLuint64\n    ): GLenum;\n    compressedTexImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    compressedTexSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    copyBufferSubData(\n        readTarget: GLenum,\n        writeTarget: GLenum,\n        readOffset: GLintptr,\n        writeOffset: GLintptr,\n        size: GLsizeiptr\n    ): void;\n    copyTexSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    createQuery(): WebGLQuery | null;\n    createSampler(): WebGLSampler | null;\n    createTransformFeedback(): WebGLTransformFeedback | null;\n    createVertexArray(): WebGLVertexArrayObject | null;\n    deleteQuery(query: WebGLQuery | null): void;\n    deleteSampler(sampler: WebGLSampler | null): void;\n    deleteSync(sync: WebGLSync | null): void;\n    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n    drawArraysInstanced(\n        mode: GLenum,\n        first: GLint,\n        count: GLsizei,\n        instanceCount: GLsizei\n    ): void;\n    drawBuffers(buffers: GLenum[]): void;\n    drawElementsInstanced(\n        mode: GLenum,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr,\n        instanceCount: GLsizei\n    ): void;\n    drawRangeElements(\n        mode: GLenum,\n        start: GLuint,\n        end: GLuint,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr\n    ): void;\n    endQuery(target: GLenum): void;\n    endTransformFeedback(): void;\n    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;\n    framebufferTextureLayer(\n        target: GLenum,\n        attachment: GLenum,\n        texture: WebGLTexture | null,\n        level: GLint,\n        layer: GLint\n    ): void;\n    getActiveUniformBlockName(\n        program: WebGLProgram,\n        uniformBlockIndex: GLuint\n    ): string | null;\n    getActiveUniformBlockParameter(\n        program: WebGLProgram,\n        uniformBlockIndex: GLuint,\n        pname: GLenum\n    ): any;\n    getActiveUniforms(\n        program: WebGLProgram,\n        uniformIndices: GLuint[],\n        pname: GLenum\n    ): any;\n    getBufferSubData(\n        target: GLenum,\n        srcByteOffset: GLintptr,\n        dstBuffer: ArrayBufferView,\n        dstOffset?: GLuint,\n        length?: GLuint\n    ): void;\n    getFragDataLocation(program: WebGLProgram, name: string): GLint;\n    getIndexedParameter(target: GLenum, index: GLuint): any;\n    getInternalformatParameter(\n        target: GLenum,\n        internalformat: GLenum,\n        pname: GLenum\n    ): any;\n    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;\n    getQueryParameter(query: WebGLQuery, pname: GLenum): any;\n    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;\n    getSyncParameter(sync: WebGLSync, pname: GLenum): any;\n    getTransformFeedbackVarying(\n        program: WebGLProgram,\n        index: GLuint\n    ): WebGLActiveInfo | null;\n    getUniformBlockIndex(\n        program: WebGLProgram,\n        uniformBlockName: string\n    ): GLuint;\n    getUniformIndices(\n        program: WebGLProgram,\n        uniformNames: string[]\n    ): GLuint[] | null;\n    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;\n    invalidateSubFramebuffer(\n        target: GLenum,\n        attachments: GLenum[],\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    isQuery(query: WebGLQuery | null): GLboolean;\n    isSampler(sampler: WebGLSampler | null): GLboolean;\n    isSync(sync: WebGLSync | null): GLboolean;\n    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;\n    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n    pauseTransformFeedback(): void;\n    readBuffer(src: GLenum): void;\n    renderbufferStorageMultisample(\n        target: GLenum,\n        samples: GLsizei,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    resumeTransformFeedback(): void;\n    samplerParameterf(\n        sampler: WebGLSampler,\n        pname: GLenum,\n        param: GLfloat\n    ): void;\n    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView | null\n    ): void;\n    texImage3D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint\n    ): void;\n    texStorage2D(\n        target: GLenum,\n        levels: GLsizei,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    texStorage3D(\n        target: GLenum,\n        levels: GLsizei,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei\n    ): void;\n    texSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage3D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        zoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        depth: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView | null,\n        srcOffset?: GLuint\n    ): void;\n    transformFeedbackVaryings(\n        program: WebGLProgram,\n        varyings: string[],\n        bufferMode: GLenum\n    ): void;\n    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;\n    uniform1uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform2ui(\n        location: WebGLUniformLocation | null,\n        v0: GLuint,\n        v1: GLuint\n    ): void;\n    uniform2uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform3ui(\n        location: WebGLUniformLocation | null,\n        v0: GLuint,\n        v1: GLuint,\n        v2: GLuint\n    ): void;\n    uniform3uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform4ui(\n        location: WebGLUniformLocation | null,\n        v0: GLuint,\n        v1: GLuint,\n        v2: GLuint,\n        v3: GLuint\n    ): void;\n    uniform4uiv(\n        location: WebGLUniformLocation | null,\n        data: Uint32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformBlockBinding(\n        program: WebGLProgram,\n        uniformBlockIndex: GLuint,\n        uniformBlockBinding: GLuint\n    ): void;\n    uniformMatrix2x3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix2x4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix3x2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix3x4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix4x2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix4x3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n    vertexAttribI4i(\n        index: GLuint,\n        x: GLint,\n        y: GLint,\n        z: GLint,\n        w: GLint\n    ): void;\n    vertexAttribI4iv(index: GLuint, values: Int32List): void;\n    vertexAttribI4ui(\n        index: GLuint,\n        x: GLuint,\n        y: GLuint,\n        z: GLuint,\n        w: GLuint\n    ): void;\n    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;\n    vertexAttribIPointer(\n        index: GLuint,\n        size: GLint,\n        type: GLenum,\n        stride: GLsizei,\n        offset: GLintptr\n    ): void;\n    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(\n        target: GLenum,\n        srcData: BufferSource | null,\n        usage: GLenum\n    ): void;\n    bufferData(\n        target: GLenum,\n        srcData: ArrayBufferView,\n        usage: GLenum,\n        srcOffset: GLuint,\n        length?: GLuint\n    ): void;\n    bufferSubData(\n        target: GLenum,\n        dstByteOffset: GLintptr,\n        srcData: BufferSource\n    ): void;\n    bufferSubData(\n        target: GLenum,\n        dstByteOffset: GLintptr,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint,\n        length?: GLuint\n    ): void;\n    compressedTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    compressedTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        imageSize: GLsizei,\n        offset: GLintptr\n    ): void;\n    compressedTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset?: GLuint,\n        srcLengthOverride?: GLuint\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        dstData: ArrayBufferView | null\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        offset: GLintptr\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        dstData: ArrayBufferView,\n        dstOffset: GLuint\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pboOffset: GLintptr\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        srcData: ArrayBufferView,\n        srcOffset: GLuint\n    ): void;\n    uniform1fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform1iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform2fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform2iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform3fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform3iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform4fv(\n        location: WebGLUniformLocation | null,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniform4iv(\n        location: WebGLUniformLocation | null,\n        data: Int32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n    uniformMatrix4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        data: Float32List,\n        srcOffset?: GLuint,\n        srcLength?: GLuint\n    ): void;\n}\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods. */\ninterface WebGLActiveInfo {\n    readonly name: string;\n    readonly size: GLint;\n    readonly type: GLenum;\n}\n\ndeclare var WebGLActiveInfo: {\n    prototype: WebGLActiveInfo;\n    new (): WebGLActiveInfo;\n};\n\n/** Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors. */\ninterface WebGLBuffer extends WebGLObject {}\n\ndeclare var WebGLBuffer: {\n    prototype: WebGLBuffer;\n    new (): WebGLBuffer;\n};\n\n/** The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context. */\ninterface WebGLContextEvent extends Event {\n    readonly statusMessage: string;\n}\n\ndeclare var WebGLContextEvent: {\n    prototype: WebGLContextEvent;\n    new (type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;\n};\n\n/** Part of the WebGL API and represents a collection of buffers that serve as a rendering destination. */\ninterface WebGLFramebuffer extends WebGLObject {}\n\ndeclare var WebGLFramebuffer: {\n    prototype: WebGLFramebuffer;\n    new (): WebGLFramebuffer;\n};\n\ninterface WebGLObject {}\n\ndeclare var WebGLObject: {\n    prototype: WebGLObject;\n    new (): WebGLObject;\n};\n\n/** The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL). */\ninterface WebGLProgram extends WebGLObject {}\n\ndeclare var WebGLProgram: {\n    prototype: WebGLProgram;\n    new (): WebGLProgram;\n};\n\ninterface WebGLQuery extends WebGLObject {}\n\ndeclare var WebGLQuery: {\n    prototype: WebGLQuery;\n    new (): WebGLQuery;\n};\n\n/** Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation. */\ninterface WebGLRenderbuffer extends WebGLObject {}\n\ndeclare var WebGLRenderbuffer: {\n    prototype: WebGLRenderbuffer;\n    new (): WebGLRenderbuffer;\n};\n\n/** Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element. */\ninterface WebGLRenderingContext\n    extends WebGLRenderingContextBase,\n        WebGLRenderingContextOverloads {}\n\ndeclare var WebGLRenderingContext: {\n    prototype: WebGLRenderingContext;\n    new (): WebGLRenderingContext;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n};\n\ninterface WebGLRenderingContextBase {\n    readonly canvas: OffscreenCanvas;\n    readonly drawingBufferHeight: GLsizei;\n    readonly drawingBufferWidth: GLsizei;\n    activeTexture(texture: GLenum): void;\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    bindAttribLocation(\n        program: WebGLProgram,\n        index: GLuint,\n        name: string\n    ): void;\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    bindRenderbuffer(\n        target: GLenum,\n        renderbuffer: WebGLRenderbuffer | null\n    ): void;\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    blendColor(\n        red: GLclampf,\n        green: GLclampf,\n        blue: GLclampf,\n        alpha: GLclampf\n    ): void;\n    blendEquation(mode: GLenum): void;\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    blendFuncSeparate(\n        srcRGB: GLenum,\n        dstRGB: GLenum,\n        srcAlpha: GLenum,\n        dstAlpha: GLenum\n    ): void;\n    checkFramebufferStatus(target: GLenum): GLenum;\n    clear(mask: GLbitfield): void;\n    clearColor(\n        red: GLclampf,\n        green: GLclampf,\n        blue: GLclampf,\n        alpha: GLclampf\n    ): void;\n    clearDepth(depth: GLclampf): void;\n    clearStencil(s: GLint): void;\n    colorMask(\n        red: GLboolean,\n        green: GLboolean,\n        blue: GLboolean,\n        alpha: GLboolean\n    ): void;\n    compileShader(shader: WebGLShader): void;\n    copyTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint\n    ): void;\n    copyTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    createBuffer(): WebGLBuffer | null;\n    createFramebuffer(): WebGLFramebuffer | null;\n    createProgram(): WebGLProgram | null;\n    createRenderbuffer(): WebGLRenderbuffer | null;\n    createShader(type: GLenum): WebGLShader | null;\n    createTexture(): WebGLTexture | null;\n    cullFace(mode: GLenum): void;\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    deleteProgram(program: WebGLProgram | null): void;\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    deleteShader(shader: WebGLShader | null): void;\n    deleteTexture(texture: WebGLTexture | null): void;\n    depthFunc(func: GLenum): void;\n    depthMask(flag: GLboolean): void;\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    disable(cap: GLenum): void;\n    disableVertexAttribArray(index: GLuint): void;\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    drawElements(\n        mode: GLenum,\n        count: GLsizei,\n        type: GLenum,\n        offset: GLintptr\n    ): void;\n    enable(cap: GLenum): void;\n    enableVertexAttribArray(index: GLuint): void;\n    finish(): void;\n    flush(): void;\n    framebufferRenderbuffer(\n        target: GLenum,\n        attachment: GLenum,\n        renderbuffertarget: GLenum,\n        renderbuffer: WebGLRenderbuffer | null\n    ): void;\n    framebufferTexture2D(\n        target: GLenum,\n        attachment: GLenum,\n        textarget: GLenum,\n        texture: WebGLTexture | null,\n        level: GLint\n    ): void;\n    frontFace(mode: GLenum): void;\n    generateMipmap(target: GLenum): void;\n    getActiveAttrib(\n        program: WebGLProgram,\n        index: GLuint\n    ): WebGLActiveInfo | null;\n    getActiveUniform(\n        program: WebGLProgram,\n        index: GLuint\n    ): WebGLActiveInfo | null;\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    getContextAttributes(): WebGLContextAttributes | null;\n    getError(): GLenum;\n    getExtension(extensionName: 'EXT_blend_minmax'): EXT_blend_minmax | null;\n    getExtension(\n        extensionName: 'EXT_texture_filter_anisotropic'\n    ): EXT_texture_filter_anisotropic | null;\n    getExtension(extensionName: 'EXT_frag_depth'): EXT_frag_depth | null;\n    getExtension(\n        extensionName: 'EXT_shader_texture_lod'\n    ): EXT_shader_texture_lod | null;\n    getExtension(extensionName: 'EXT_sRGB'): EXT_sRGB | null;\n    getExtension(\n        extensionName: 'OES_vertex_array_object'\n    ): OES_vertex_array_object | null;\n    getExtension(\n        extensionName: 'WEBGL_color_buffer_float'\n    ): WEBGL_color_buffer_float | null;\n    getExtension(\n        extensionName: 'WEBGL_compressed_texture_astc'\n    ): WEBGL_compressed_texture_astc | null;\n    getExtension(\n        extensionName: 'WEBGL_compressed_texture_s3tc_srgb'\n    ): WEBGL_compressed_texture_s3tc_srgb | null;\n    getExtension(\n        extensionName: 'WEBGL_debug_shaders'\n    ): WEBGL_debug_shaders | null;\n    getExtension(\n        extensionName: 'WEBGL_draw_buffers'\n    ): WEBGL_draw_buffers | null;\n    getExtension(\n        extensionName: 'WEBGL_lose_context'\n    ): WEBGL_lose_context | null;\n    getExtension(\n        extensionName: 'WEBGL_depth_texture'\n    ): WEBGL_depth_texture | null;\n    getExtension(\n        extensionName: 'WEBGL_debug_renderer_info'\n    ): WEBGL_debug_renderer_info | null;\n    getExtension(\n        extensionName: 'WEBGL_compressed_texture_s3tc'\n    ): WEBGL_compressed_texture_s3tc | null;\n    getExtension(\n        extensionName: 'OES_texture_half_float_linear'\n    ): OES_texture_half_float_linear | null;\n    getExtension(\n        extensionName: 'OES_texture_half_float'\n    ): OES_texture_half_float | null;\n    getExtension(\n        extensionName: 'OES_texture_float_linear'\n    ): OES_texture_float_linear | null;\n    getExtension(extensionName: 'OES_texture_float'): OES_texture_float | null;\n    getExtension(\n        extensionName: 'OES_standard_derivatives'\n    ): OES_standard_derivatives | null;\n    getExtension(\n        extensionName: 'OES_element_index_uint'\n    ): OES_element_index_uint | null;\n    getExtension(\n        extensionName: 'ANGLE_instanced_arrays'\n    ): ANGLE_instanced_arrays | null;\n    getExtension(extensionName: string): any;\n    getFramebufferAttachmentParameter(\n        target: GLenum,\n        attachment: GLenum,\n        pname: GLenum\n    ): any;\n    getParameter(pname: GLenum): any;\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    getShaderPrecisionFormat(\n        shadertype: GLenum,\n        precisiontype: GLenum\n    ): WebGLShaderPrecisionFormat | null;\n    getShaderSource(shader: WebGLShader): string | null;\n    getSupportedExtensions(): string[] | null;\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    getUniformLocation(\n        program: WebGLProgram,\n        name: string\n    ): WebGLUniformLocation | null;\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    hint(target: GLenum, mode: GLenum): void;\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    isContextLost(): boolean;\n    isEnabled(cap: GLenum): GLboolean;\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    isProgram(program: WebGLProgram | null): GLboolean;\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    isShader(shader: WebGLShader | null): GLboolean;\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    lineWidth(width: GLfloat): void;\n    linkProgram(program: WebGLProgram): void;\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    renderbufferStorage(\n        target: GLenum,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei\n    ): void;\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    shaderSource(shader: WebGLShader, source: string): void;\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilFuncSeparate(\n        face: GLenum,\n        func: GLenum,\n        ref: GLint,\n        mask: GLuint\n    ): void;\n    stencilMask(mask: GLuint): void;\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    stencilOpSeparate(\n        face: GLenum,\n        fail: GLenum,\n        zfail: GLenum,\n        zpass: GLenum\n    ): void;\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    uniform2f(\n        location: WebGLUniformLocation | null,\n        x: GLfloat,\n        y: GLfloat\n    ): void;\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    uniform3f(\n        location: WebGLUniformLocation | null,\n        x: GLfloat,\n        y: GLfloat,\n        z: GLfloat\n    ): void;\n    uniform3i(\n        location: WebGLUniformLocation | null,\n        x: GLint,\n        y: GLint,\n        z: GLint\n    ): void;\n    uniform4f(\n        location: WebGLUniformLocation | null,\n        x: GLfloat,\n        y: GLfloat,\n        z: GLfloat,\n        w: GLfloat\n    ): void;\n    uniform4i(\n        location: WebGLUniformLocation | null,\n        x: GLint,\n        y: GLint,\n        z: GLint,\n        w: GLint\n    ): void;\n    useProgram(program: WebGLProgram | null): void;\n    validateProgram(program: WebGLProgram): void;\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    vertexAttrib4f(\n        index: GLuint,\n        x: GLfloat,\n        y: GLfloat,\n        z: GLfloat,\n        w: GLfloat\n    ): void;\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    vertexAttribPointer(\n        index: GLuint,\n        size: GLint,\n        type: GLenum,\n        normalized: GLboolean,\n        stride: GLsizei,\n        offset: GLintptr\n    ): void;\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n}\n\ninterface WebGLRenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: BufferSource | null, usage: GLenum): void;\n    bufferSubData(target: GLenum, offset: GLintptr, data: BufferSource): void;\n    compressedTexImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLenum,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        data: ArrayBufferView\n    ): void;\n    compressedTexSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        data: ArrayBufferView\n    ): void;\n    readPixels(\n        x: GLint,\n        y: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        border: GLint,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texImage2D(\n        target: GLenum,\n        level: GLint,\n        internalformat: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        width: GLsizei,\n        height: GLsizei,\n        format: GLenum,\n        type: GLenum,\n        pixels: ArrayBufferView | null\n    ): void;\n    texSubImage2D(\n        target: GLenum,\n        level: GLint,\n        xoffset: GLint,\n        yoffset: GLint,\n        format: GLenum,\n        type: GLenum,\n        source: TexImageSource\n    ): void;\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniformMatrix2fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        value: Float32List\n    ): void;\n    uniformMatrix3fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        value: Float32List\n    ): void;\n    uniformMatrix4fv(\n        location: WebGLUniformLocation | null,\n        transpose: GLboolean,\n        value: Float32List\n    ): void;\n}\n\ninterface WebGLSampler extends WebGLObject {}\n\ndeclare var WebGLSampler: {\n    prototype: WebGLSampler;\n    new (): WebGLSampler;\n};\n\n/** The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders. */\ninterface WebGLShader extends WebGLObject {}\n\ndeclare var WebGLShader: {\n    prototype: WebGLShader;\n    new (): WebGLShader;\n};\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method. */\ninterface WebGLShaderPrecisionFormat {\n    readonly precision: GLint;\n    readonly rangeMax: GLint;\n    readonly rangeMin: GLint;\n}\n\ndeclare var WebGLShaderPrecisionFormat: {\n    prototype: WebGLShaderPrecisionFormat;\n    new (): WebGLShaderPrecisionFormat;\n};\n\ninterface WebGLSync extends WebGLObject {}\n\ndeclare var WebGLSync: {\n    prototype: WebGLSync;\n    new (): WebGLSync;\n};\n\n/** Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations. */\ninterface WebGLTexture extends WebGLObject {}\n\ndeclare var WebGLTexture: {\n    prototype: WebGLTexture;\n    new (): WebGLTexture;\n};\n\ninterface WebGLTransformFeedback extends WebGLObject {}\n\ndeclare var WebGLTransformFeedback: {\n    prototype: WebGLTransformFeedback;\n    new (): WebGLTransformFeedback;\n};\n\n/** Part of the WebGL API and represents the location of a uniform variable in a shader program. */\ninterface WebGLUniformLocation {}\n\ndeclare var WebGLUniformLocation: {\n    prototype: WebGLUniformLocation;\n    new (): WebGLUniformLocation;\n};\n\ninterface WebGLVertexArrayObject extends WebGLObject {}\n\ndeclare var WebGLVertexArrayObject: {\n    prototype: WebGLVertexArrayObject;\n    new (): WebGLVertexArrayObject;\n};\n\ninterface WebGLVertexArrayObjectOES extends WebGLObject {}\n\ninterface WebSocketEventMap {\n    close: CloseEvent;\n    error: Event;\n    message: MessageEvent;\n    open: Event;\n}\n\n/** Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection. */\ninterface WebSocket extends EventTarget {\n    /**\n     * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n     *\n     * Can be set, to change how binary data is returned. The default is \"blob\".\n     */\n    binaryType: BinaryType;\n    /**\n     * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n     *\n     * If the WebSocket connection is closed, this attribute's value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n     */\n    readonly bufferedAmount: number;\n    /**\n     * Returns the extensions selected by the server, if any.\n     */\n    readonly extensions: string;\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\n    /**\n     * Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor's second argument to perform subprotocol negotiation.\n     */\n    readonly protocol: string;\n    /**\n     * Returns the state of the WebSocket object's connection. It can have the values described below.\n     */\n    readonly readyState: number;\n    /**\n     * Returns the URL that was used to establish the WebSocket connection.\n     */\n    readonly url: string;\n    /**\n     * Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason.\n     */\n    close(code?: number, reason?: string): void;\n    /**\n     * Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView.\n     */\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof WebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof WebSocketEventMap>(\n        type: K,\n        listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new (url: string, protocols?: string | string[]): WebSocket;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** This ServiceWorker API interface represents the scope of a service worker client that is a document in a browser context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources. */\ninterface WindowClient extends Client {\n    readonly ancestorOrigins: ReadonlyArray<string>;\n    readonly focused: boolean;\n    readonly visibilityState: VisibilityState;\n    focus(): Promise<WindowClient>;\n    navigate(url: string): Promise<WindowClient | null>;\n}\n\ndeclare var WindowClient: {\n    prototype: WindowClient;\n    new (): WindowClient;\n};\n\ninterface WindowOrWorkerGlobalScope {\n    readonly caches: CacheStorage;\n    readonly crypto: Crypto;\n    readonly indexedDB: IDBFactory;\n    readonly isSecureContext: boolean;\n    readonly origin: string;\n    readonly performance: Performance;\n    atob(data: string): string;\n    btoa(data: string): string;\n    clearInterval(handle?: number): void;\n    clearTimeout(handle?: number): void;\n    createImageBitmap(\n        image: ImageBitmapSource,\n        options?: ImageBitmapOptions\n    ): Promise<ImageBitmap>;\n    createImageBitmap(\n        image: ImageBitmapSource,\n        sx: number,\n        sy: number,\n        sw: number,\n        sh: number,\n        options?: ImageBitmapOptions\n    ): Promise<ImageBitmap>;\n    fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;\n    queueMicrotask(callback: VoidFunction): void;\n    setInterval(\n        handler: TimerHandler,\n        timeout?: number,\n        ...arguments: any[]\n    ): number;\n    setTimeout(\n        handler: TimerHandler,\n        timeout?: number,\n        ...arguments: any[]\n    ): number;\n}\n\ninterface WorkerEventMap extends AbstractWorkerEventMap {\n    message: MessageEvent;\n    messageerror: MessageEvent;\n}\n\n/** This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread. */\ninterface Worker extends EventTarget, AbstractWorker {\n    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;\n    /**\n     * Clones message and transmits it to worker's global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: PostMessageOptions): void;\n    /**\n     * Aborts worker's associated global environment.\n     */\n    terminate(): void;\n    addEventListener<K extends keyof WorkerEventMap>(\n        type: K,\n        listener: (this: Worker, ev: WorkerEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof WorkerEventMap>(\n        type: K,\n        listener: (this: Worker, ev: WorkerEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new (stringUrl: string | URL, options?: WorkerOptions): Worker;\n};\n\ninterface WorkerGlobalScopeEventMap {\n    error: ErrorEvent;\n    languagechange: Event;\n    offline: Event;\n    online: Event;\n    rejectionhandled: PromiseRejectionEvent;\n    unhandledrejection: PromiseRejectionEvent;\n}\n\n/** This Web Workers API interface is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects \u2014 in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. */\ninterface WorkerGlobalScope extends EventTarget, WindowOrWorkerGlobalScope {\n    /**\n     * Returns workerGlobal's WorkerLocation object.\n     */\n    readonly location: WorkerLocation;\n    readonly navigator: WorkerNavigator;\n    onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => any) | null;\n    onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    onoffline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    ononline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    onrejectionhandled:\n        | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n        | null;\n    onunhandledrejection:\n        | ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n        | null;\n    /**\n     * Returns workerGlobal.\n     */\n    readonly self: WorkerGlobalScope & typeof globalThis;\n    /**\n     * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).\n     */\n    importScripts(...urls: string[]): void;\n    addEventListener<K extends keyof WorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: WorkerGlobalScope,\n            ev: WorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof WorkerGlobalScopeEventMap>(\n        type: K,\n        listener: (\n            this: WorkerGlobalScope,\n            ev: WorkerGlobalScopeEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var WorkerGlobalScope: {\n    prototype: WorkerGlobalScope;\n    new (): WorkerGlobalScope;\n};\n\n/** The absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.location property obtained by calling self.location. */\ninterface WorkerLocation {\n    readonly hash: string;\n    readonly host: string;\n    readonly hostname: string;\n    readonly href: string;\n    toString(): string;\n    readonly origin: string;\n    readonly pathname: string;\n    readonly port: string;\n    readonly protocol: string;\n    readonly search: string;\n}\n\ndeclare var WorkerLocation: {\n    prototype: WorkerLocation;\n    new (): WorkerLocation;\n};\n\n/** A subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.navigator property obtained by calling window.self.navigator. */\ninterface WorkerNavigator\n    extends NavigatorConcurrentHardware,\n        NavigatorID,\n        NavigatorLanguage,\n        NavigatorOnLine,\n        NavigatorStorage {\n    readonly permissions: Permissions;\n    readonly serviceWorker: ServiceWorkerContainer;\n}\n\ndeclare var WorkerNavigator: {\n    prototype: WorkerNavigator;\n    new (): WorkerNavigator;\n};\n\n/** This Streams API interface provides\xa0a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing. */\ninterface WritableStream<W = any> {\n    readonly locked: boolean;\n    abort(reason?: any): Promise<void>;\n    getWriter(): WritableStreamDefaultWriter<W>;\n}\n\ndeclare var WritableStream: {\n    prototype: WritableStream;\n    new <W = any>(\n        underlyingSink?: UnderlyingSink<W>,\n        strategy?: QueuingStrategy<W>\n    ): WritableStream<W>;\n};\n\n/** This Streams API interface represents a controller allowing control of a\xa0WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate. */\ninterface WritableStreamDefaultController {\n    error(error?: any): void;\n}\n\n/** This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink. */\ninterface WritableStreamDefaultWriter<W = any> {\n    readonly closed: Promise<void>;\n    readonly desiredSize: number | null;\n    readonly ready: Promise<void>;\n    abort(reason?: any): Promise<void>;\n    close(): Promise<void>;\n    releaseLock(): void;\n    write(chunk: W): Promise<void>;\n}\n\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\n    readystatechange: Event;\n}\n\n/** Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. */\ninterface XMLHttpRequest extends XMLHttpRequestEventTarget {\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\n    /**\n     * Returns client's state.\n     */\n    readonly readyState: number;\n    /**\n     * Returns the response's body.\n     */\n    readonly response: any;\n    /**\n     * Returns the text response.\n     *\n     * Throws an \"InvalidStateError\" DOMException if responseType is not the empty string or \"text\".\n     */\n    readonly responseText: string;\n    /**\n     * Returns the response type.\n     *\n     * Can be set to change the response type. Values are: the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\".\n     *\n     * When set: setting to \"document\" is ignored if current global object is not a Window object.\n     *\n     * When set: throws an \"InvalidStateError\" DOMException if state is loading or done.\n     *\n     * When set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    responseType: XMLHttpRequestResponseType;\n    readonly responseURL: string;\n    readonly status: number;\n    readonly statusText: string;\n    /**\n     * Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and the synchronous flag is unset, a timeout event will then be dispatched, or a \"TimeoutError\" DOMException will be thrown otherwise (for the send() method).\n     *\n     * When set: throws an \"InvalidAccessError\" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    timeout: number;\n    /**\n     * Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server.\n     */\n    readonly upload: XMLHttpRequestUpload;\n    /**\n     * True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n     *\n     * When set: throws an \"InvalidStateError\" DOMException if state is not unsent or opened, or if the send() flag is set.\n     */\n    withCredentials: boolean;\n    /**\n     * Cancels any network activity.\n     */\n    abort(): void;\n    getAllResponseHeaders(): string;\n    getResponseHeader(name: string): string | null;\n    /**\n     * Sets the request method, request URL, and synchronous flag.\n     *\n     * Throws a \"SyntaxError\" DOMException if either method is not a valid HTTP method or url cannot be parsed.\n     *\n     * Throws a \"SecurityError\" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n     *\n     * Throws an \"InvalidAccessError\" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n     */\n    open(method: string, url: string): void;\n    open(\n        method: string,\n        url: string,\n        async: boolean,\n        username?: string | null,\n        password?: string | null\n    ): void;\n    /**\n     * Acts as if the `Content-Type` header value for response is mime. (It does not actually change the header though.)\n     *\n     * Throws an \"InvalidStateError\" DOMException if state is loading or done.\n     */\n    overrideMimeType(mime: string): void;\n    /**\n     * Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n     *\n     * Throws an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n     */\n    send(body?: BodyInit | null): void;\n    /**\n     * Combines a header in author request headers.\n     *\n     * Throws an \"InvalidStateError\" DOMException if either state is not opened or the send() flag is set.\n     *\n     * Throws a \"SyntaxError\" DOMException if name is not a header name or if value is not a header value.\n     */\n    setRequestHeader(name: string, value: string): void;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(\n        type: K,\n        listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(\n        type: K,\n        listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new (): XMLHttpRequest;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n};\n\ninterface XMLHttpRequestEventTargetEventMap {\n    abort: ProgressEvent<XMLHttpRequestEventTarget>;\n    error: ProgressEvent<XMLHttpRequestEventTarget>;\n    load: ProgressEvent<XMLHttpRequestEventTarget>;\n    loadend: ProgressEvent<XMLHttpRequestEventTarget>;\n    loadstart: ProgressEvent<XMLHttpRequestEventTarget>;\n    progress: ProgressEvent<XMLHttpRequestEventTarget>;\n    timeout: ProgressEvent<XMLHttpRequestEventTarget>;\n}\n\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestEventTarget,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestEventTarget,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new (): XMLHttpRequestEventTarget;\n};\n\ninterface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestUpload,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(\n        type: K,\n        listener: (\n            this: XMLHttpRequestUpload,\n            ev: XMLHttpRequestEventTargetEventMap[K]\n        ) => any,\n        options?: boolean | EventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions\n    ): void;\n}\n\ndeclare var XMLHttpRequestUpload: {\n    prototype: XMLHttpRequestUpload;\n    new (): XMLHttpRequestUpload;\n};\n\ndeclare type EventListenerOrEventListenerObject =\n    | EventListener\n    | EventListenerObject;\n\ninterface Console {\n    log(message?: any, ...optionalParams: any[]): void;\n}\n\ndeclare var console: Console;\n\ndeclare namespace WebAssembly {\n    interface Global {\n        value: any;\n        valueOf(): any;\n    }\n\n    var Global: {\n        prototype: Global;\n        new (descriptor: GlobalDescriptor, v?: any): Global;\n    };\n\n    interface Instance {\n        readonly exports: Exports;\n    }\n\n    var Instance: {\n        prototype: Instance;\n        new (module: Module, importObject?: Imports): Instance;\n    };\n\n    interface Memory {\n        readonly buffer: ArrayBuffer;\n        grow(delta: number): number;\n    }\n\n    var Memory: {\n        prototype: Memory;\n        new (descriptor: MemoryDescriptor): Memory;\n    };\n\n    interface Module {}\n\n    var Module: {\n        prototype: Module;\n        new (bytes: BufferSource): Module;\n        customSections(\n            moduleObject: Module,\n            sectionName: string\n        ): ArrayBuffer[];\n        exports(moduleObject: Module): ModuleExportDescriptor[];\n        imports(moduleObject: Module): ModuleImportDescriptor[];\n    };\n\n    interface Table {\n        readonly length: number;\n        get(index: number): Function | null;\n        grow(delta: number): number;\n        set(index: number, value: Function | null): void;\n    }\n\n    var Table: {\n        prototype: Table;\n        new (descriptor: TableDescriptor): Table;\n    };\n\n    interface GlobalDescriptor {\n        mutable?: boolean;\n        value: ValueType;\n    }\n\n    interface MemoryDescriptor {\n        initial: number;\n        maximum?: number;\n    }\n\n    interface ModuleExportDescriptor {\n        kind: ImportExportKind;\n        name: string;\n    }\n\n    interface ModuleImportDescriptor {\n        kind: ImportExportKind;\n        module: string;\n        name: string;\n    }\n\n    interface TableDescriptor {\n        element: TableKind;\n        initial: number;\n        maximum?: number;\n    }\n\n    interface WebAssemblyInstantiatedSource {\n        instance: Instance;\n        module: Module;\n    }\n\n    type ImportExportKind = 'function' | 'global' | 'memory' | 'table';\n    type TableKind = 'anyfunc';\n    type ValueType = 'f32' | 'f64' | 'i32' | 'i64';\n    type ExportValue = Function | Global | Memory | Table;\n    type Exports = Record<string, ExportValue>;\n    type ImportValue = ExportValue | number;\n    type ModuleImports = Record<string, ImportValue>;\n    type Imports = Record<string, ModuleImports>;\n    function compile(bytes: BufferSource): Promise<Module>;\n    function compileStreaming(\n        source: Response | Promise<Response>\n    ): Promise<Module>;\n    function instantiate(\n        bytes: BufferSource,\n        importObject?: Imports\n    ): Promise<WebAssemblyInstantiatedSource>;\n    function instantiate(\n        moduleObject: Module,\n        importObject?: Imports\n    ): Promise<Instance>;\n    function instantiateStreaming(\n        response: Response | PromiseLike<Response>,\n        importObject?: Imports\n    ): Promise<WebAssemblyInstantiatedSource>;\n    function validate(bytes: BufferSource): boolean;\n}\n\ninterface FrameRequestCallback {\n    (time: number): void;\n}\n\ninterface OnErrorEventHandlerNonNull {\n    (\n        event: Event | string,\n        source?: string,\n        lineno?: number,\n        colno?: number,\n        error?: Error\n    ): any;\n}\n\ninterface PerformanceObserverCallback {\n    (\n        entries: PerformanceObserverEntryList,\n        observer: PerformanceObserver\n    ): void;\n}\n\ninterface QueuingStrategySizeCallback<T = any> {\n    (chunk: T): number;\n}\n\ninterface ReadableByteStreamControllerCallback {\n    (controller: ReadableByteStreamController): void | PromiseLike<void>;\n}\n\ninterface ReadableStreamDefaultControllerCallback<R> {\n    (controller: ReadableStreamDefaultController<R>): void | PromiseLike<void>;\n}\n\ninterface ReadableStreamErrorCallback {\n    (reason: any): void | PromiseLike<void>;\n}\n\ninterface TransformStreamDefaultControllerCallback<O> {\n    (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface TransformStreamDefaultControllerTransformCallback<I, O> {\n    (\n        chunk: I,\n        controller: TransformStreamDefaultController<O>\n    ): void | PromiseLike<void>;\n}\n\ninterface VoidFunction {\n    (): void;\n}\n\ninterface WritableStreamDefaultControllerCloseCallback {\n    (): void | PromiseLike<void>;\n}\n\ninterface WritableStreamDefaultControllerStartCallback {\n    (controller: WritableStreamDefaultController): void | PromiseLike<void>;\n}\n\ninterface WritableStreamDefaultControllerWriteCallback<W> {\n    (\n        chunk: W,\n        controller: WritableStreamDefaultController\n    ): void | PromiseLike<void>;\n}\n\ninterface WritableStreamErrorCallback {\n    (reason: any): void | PromiseLike<void>;\n}\n\n/**\n * Returns dedicatedWorkerGlobal's name, i.e. the value given to the Worker constructor. Primarily useful for debugging.\n */\ndeclare var name: string;\ndeclare var onmessage:\n    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)\n    | null;\ndeclare var onmessageerror:\n    | ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any)\n    | null;\n/**\n * Aborts dedicatedWorkerGlobal.\n */\ndeclare function close(): void;\n/**\n * Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned.\n */\ndeclare function postMessage(message: any, transfer: Transferable[]): void;\ndeclare function postMessage(message: any, options?: PostMessageOptions): void;\n/**\n * Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\ndeclare function dispatchEvent(event: Event): boolean;\n/**\n * Returns workerGlobal's WorkerLocation object.\n */\ndeclare var location: WorkerLocation;\ndeclare var navigator: WorkerNavigator;\ndeclare var onerror:\n    | ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => any)\n    | null;\ndeclare var onlanguagechange:\n    | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)\n    | null;\ndeclare var onoffline:\n    | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)\n    | null;\ndeclare var ononline:\n    | ((this: DedicatedWorkerGlobalScope, ev: Event) => any)\n    | null;\ndeclare var onrejectionhandled:\n    | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n    | null;\ndeclare var onunhandledrejection:\n    | ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any)\n    | null;\n/**\n * Returns workerGlobal.\n */\ndeclare var self: WorkerGlobalScope & typeof globalThis;\n/**\n * Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss).\n */\ndeclare function importScripts(...urls: string[]): void;\n/**\n * Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n */\ndeclare function dispatchEvent(event: Event): boolean;\ndeclare var caches: CacheStorage;\ndeclare var crypto: Crypto;\ndeclare var indexedDB: IDBFactory;\ndeclare var isSecureContext: boolean;\ndeclare var origin: string;\ndeclare var performance: Performance;\ndeclare function atob(data: string): string;\ndeclare function btoa(data: string): string;\ndeclare function clearInterval(handle?: number): void;\ndeclare function clearTimeout(handle?: number): void;\ndeclare function createImageBitmap(\n    image: ImageBitmapSource,\n    options?: ImageBitmapOptions\n): Promise<ImageBitmap>;\ndeclare function createImageBitmap(\n    image: ImageBitmapSource,\n    sx: number,\n    sy: number,\n    sw: number,\n    sh: number,\n    options?: ImageBitmapOptions\n): Promise<ImageBitmap>;\ndeclare function fetch(\n    input: RequestInfo,\n    init?: RequestInit\n): Promise<Response>;\ndeclare function queueMicrotask(callback: VoidFunction): void;\ndeclare function setInterval(\n    handler: TimerHandler,\n    timeout?: number,\n    ...arguments: any[]\n): number;\ndeclare function setTimeout(\n    handler: TimerHandler,\n    timeout?: number,\n    ...arguments: any[]\n): number;\ndeclare function cancelAnimationFrame(handle: number): void;\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\ndeclare function addEventListener<\n    K extends keyof DedicatedWorkerGlobalScopeEventMap\n>(\n    type: K,\n    listener: (\n        this: DedicatedWorkerGlobalScope,\n        ev: DedicatedWorkerGlobalScopeEventMap[K]\n    ) => any,\n    options?: boolean | AddEventListenerOptions\n): void;\ndeclare function addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n): void;\ndeclare function removeEventListener<\n    K extends keyof DedicatedWorkerGlobalScopeEventMap\n>(\n    type: K,\n    listener: (\n        this: DedicatedWorkerGlobalScope,\n        ev: DedicatedWorkerGlobalScopeEventMap[K]\n    ) => any,\n    options?: boolean | EventListenerOptions\n): void;\ndeclare function removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n): void;\ntype HeadersInit = Headers | string[][] | Record<string, string>;\ntype BodyInit =\n    | Blob\n    | BufferSource\n    | FormData\n    | URLSearchParams\n    | ReadableStream<Uint8Array>\n    | string;\ntype RequestInfo = Request | string;\ntype BlobPart = BufferSource | Blob | string;\ntype DOMHighResTimeStamp = number;\ntype CanvasImageSource = ImageBitmap | OffscreenCanvas;\ntype OffscreenRenderingContext =\n    | OffscreenCanvasRenderingContext2D\n    | ImageBitmapRenderingContext\n    | WebGLRenderingContext\n    | WebGL2RenderingContext;\ntype MessageEventSource = MessagePort | ServiceWorker;\ntype ImageBitmapSource = CanvasImageSource | Blob | ImageData;\ntype OnErrorEventHandler = OnErrorEventHandlerNonNull | null;\ntype TimerHandler = string | Function;\ntype PerformanceEntryList = PerformanceEntry[];\ntype PushMessageDataInit = BufferSource | string;\ntype ReadableStreamReadResult<T> =\n    | ReadableStreamReadValueResult<T>\n    | ReadableStreamReadDoneResult<T>;\ntype VibratePattern = number | number[];\ntype AlgorithmIdentifier = string | Algorithm;\ntype HashAlgorithmIdentifier = AlgorithmIdentifier;\ntype BigInteger = Uint8Array;\ntype NamedCurve = string;\ntype GLenum = number;\ntype GLboolean = boolean;\ntype GLbitfield = number;\ntype GLint = number;\ntype GLsizei = number;\ntype GLintptr = number;\ntype GLsizeiptr = number;\ntype GLuint = number;\ntype GLfloat = number;\ntype GLclampf = number;\ntype TexImageSource = ImageBitmap | ImageData | OffscreenCanvas;\ntype Float32List = Float32Array | GLfloat[];\ntype Int32List = Int32Array | GLint[];\ntype GLint64 = number;\ntype GLuint64 = number;\ntype Uint32List = Uint32Array | GLuint[];\ntype BufferSource = ArrayBufferView | ArrayBuffer;\ntype DOMTimeStamp = number;\ntype FormDataEntryValue = File | string;\ntype IDBValidKey = number | string | Date | BufferSource | IDBArrayKey;\ntype Transferable = ArrayBuffer | MessagePort | ImageBitmap | OffscreenCanvas;\ntype BinaryType = 'arraybuffer' | 'blob';\ntype CanvasDirection = 'inherit' | 'ltr' | 'rtl';\ntype CanvasFillRule = 'evenodd' | 'nonzero';\ntype CanvasLineCap = 'butt' | 'round' | 'square';\ntype CanvasLineJoin = 'bevel' | 'miter' | 'round';\ntype CanvasTextAlign = 'center' | 'end' | 'left' | 'right' | 'start';\ntype CanvasTextBaseline =\n    | 'alphabetic'\n    | 'bottom'\n    | 'hanging'\n    | 'ideographic'\n    | 'middle'\n    | 'top';\ntype ClientTypes = 'all' | 'sharedworker' | 'window' | 'worker';\ntype ColorSpaceConversion = 'default' | 'none';\ntype EndingType = 'native' | 'transparent';\ntype FrameType = 'auxiliary' | 'nested' | 'none' | 'top-level';\ntype IDBCursorDirection = 'next' | 'nextunique' | 'prev' | 'prevunique';\ntype IDBRequestReadyState = 'done' | 'pending';\ntype IDBTransactionMode = 'readonly' | 'readwrite' | 'versionchange';\ntype ImageOrientation = 'flipY' | 'none';\ntype ImageSmoothingQuality = 'high' | 'low' | 'medium';\ntype KeyFormat = 'jwk' | 'pkcs8' | 'raw' | 'spki';\ntype KeyType = 'private' | 'public' | 'secret';\ntype KeyUsage =\n    | 'decrypt'\n    | 'deriveBits'\n    | 'deriveKey'\n    | 'encrypt'\n    | 'sign'\n    | 'unwrapKey'\n    | 'verify'\n    | 'wrapKey';\ntype NotificationDirection = 'auto' | 'ltr' | 'rtl';\ntype NotificationPermission = 'default' | 'denied' | 'granted';\ntype OffscreenRenderingContextId = '2d' | 'bitmaprenderer' | 'webgl' | 'webgl2';\ntype PermissionName =\n    | 'accelerometer'\n    | 'ambient-light-sensor'\n    | 'background-sync'\n    | 'bluetooth'\n    | 'camera'\n    | 'clipboard'\n    | 'device-info'\n    | 'geolocation'\n    | 'gyroscope'\n    | 'magnetometer'\n    | 'microphone'\n    | 'midi'\n    | 'notifications'\n    | 'persistent-storage'\n    | 'push'\n    | 'speaker';\ntype PermissionState = 'denied' | 'granted' | 'prompt';\ntype PremultiplyAlpha = 'default' | 'none' | 'premultiply';\ntype PushEncryptionKeyName = 'auth' | 'p256dh';\ntype PushPermissionState = 'denied' | 'granted' | 'prompt';\ntype ReferrerPolicy =\n    | ''\n    | 'no-referrer'\n    | 'no-referrer-when-downgrade'\n    | 'origin'\n    | 'origin-when-cross-origin'\n    | 'same-origin'\n    | 'strict-origin'\n    | 'strict-origin-when-cross-origin'\n    | 'unsafe-url';\ntype RequestCache =\n    | 'default'\n    | 'force-cache'\n    | 'no-cache'\n    | 'no-store'\n    | 'only-if-cached'\n    | 'reload';\ntype RequestCredentials = 'include' | 'omit' | 'same-origin';\ntype RequestDestination =\n    | ''\n    | 'audio'\n    | 'audioworklet'\n    | 'document'\n    | 'embed'\n    | 'font'\n    | 'image'\n    | 'manifest'\n    | 'object'\n    | 'paintworklet'\n    | 'report'\n    | 'script'\n    | 'sharedworker'\n    | 'style'\n    | 'track'\n    | 'video'\n    | 'worker'\n    | 'xslt';\ntype RequestMode = 'cors' | 'navigate' | 'no-cors' | 'same-origin';\ntype RequestRedirect = 'error' | 'follow' | 'manual';\ntype ResizeQuality = 'high' | 'low' | 'medium' | 'pixelated';\ntype ResponseType =\n    | 'basic'\n    | 'cors'\n    | 'default'\n    | 'error'\n    | 'opaque'\n    | 'opaqueredirect';\ntype ServiceWorkerState =\n    | 'activated'\n    | 'activating'\n    | 'installed'\n    | 'installing'\n    | 'parsed'\n    | 'redundant';\ntype ServiceWorkerUpdateViaCache = 'all' | 'imports' | 'none';\ntype VisibilityState = 'hidden' | 'visible';\ntype WebGLPowerPreference = 'default' | 'high-performance' | 'low-power';\ntype WorkerType = 'classic' | 'module';\ntype XMLHttpRequestResponseType =\n    | ''\n    | 'arraybuffer'\n    | 'blob'\n    | 'document'\n    | 'json'\n    | 'text';\n"},93082:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.webworker=t.es2018intl=t.es2018regexp=t.es2018promise=t.es2018asyncgenerator=t.es2018asynciterable=t.es2017typedarrays=t.es2017intl=t.es2017string=t.es2017object=t.es2016arrayinclude=t.es2015symbolwellknown=t.es2015symbol=t.es2015reflect=t.es2015proxy=t.es2015promise=t.es2015generator=t.es2015iterable=t.es2015collection=t.es2015core=t.es5=t.types=void 0;var r=n(31374);Object.defineProperty(t,"types",{enumerable:!0,get:function(){return r.types}}),Object.defineProperty(t,"es5",{enumerable:!0,get:function(){return r.es5}}),Object.defineProperty(t,"es2015core",{enumerable:!0,get:function(){return r.es2015core}}),Object.defineProperty(t,"es2015collection",{enumerable:!0,get:function(){return r.es2015collection}}),Object.defineProperty(t,"es2015iterable",{enumerable:!0,get:function(){return r.es2015iterable}}),Object.defineProperty(t,"es2015generator",{enumerable:!0,get:function(){return r.es2015generator}}),Object.defineProperty(t,"es2015promise",{enumerable:!0,get:function(){return r.es2015promise}}),Object.defineProperty(t,"es2015proxy",{enumerable:!0,get:function(){return r.es2015proxy}}),Object.defineProperty(t,"es2015reflect",{enumerable:!0,get:function(){return r.es2015reflect}}),Object.defineProperty(t,"es2015symbol",{enumerable:!0,get:function(){return r.es2015symbol}}),Object.defineProperty(t,"es2015symbolwellknown",{enumerable:!0,get:function(){return r.es2015symbolwellknown}}),Object.defineProperty(t,"es2016arrayinclude",{enumerable:!0,get:function(){return r.es2016arrayinclude}}),Object.defineProperty(t,"es2017object",{enumerable:!0,get:function(){return r.es2017object}}),Object.defineProperty(t,"es2017string",{enumerable:!0,get:function(){return r.es2017string}}),Object.defineProperty(t,"es2017intl",{enumerable:!0,get:function(){return r.es2017intl}}),Object.defineProperty(t,"es2017typedarrays",{enumerable:!0,get:function(){return r.es2017typedarrays}}),Object.defineProperty(t,"es2018asynciterable",{enumerable:!0,get:function(){return r.es2018asynciterable}}),Object.defineProperty(t,"es2018asyncgenerator",{enumerable:!0,get:function(){return r.es2018asyncgenerator}}),Object.defineProperty(t,"es2018promise",{enumerable:!0,get:function(){return r.es2018promise}}),Object.defineProperty(t,"es2018regexp",{enumerable:!0,get:function(){return r.es2018regexp}}),Object.defineProperty(t,"es2018intl",{enumerable:!0,get:function(){return r.es2018intl}}),Object.defineProperty(t,"webworker",{enumerable:!0,get:function(){return r.webworker}})},91905:function(e,t){function n(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,a(e,t)}function a(e,t){return a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},a(e,t)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,i){function o(e){try{l(r.next(e))}catch(t){i(t)}}function s(e){try{l(r.throw(e))}catch(t){i(t)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,s)}l((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.ExcelScript=void 0,function(e){var t,a=function(){function e(){this.tracer=console.log,this.doTrace=!1,this.syncCount=0}var t=e.prototype;return t.setTracer=function(e){this.tracer=e},t.traceOn=function(){this.doTrace=!0},t.traceOff=function(){this.doTrace=!1},t.trace=function(e){this.doTrace&&this.tracer("trace - "+e)},t.incrementSyncCount=function(){this.syncCount+=1,this.trace("SYNC "+this.syncCount)},t.traceLine=function(e){this.trace("line: "+e)},t.traceCall=function(e,t){this.trace(e+"."+t)},t.traceFinalize=function(){this.trace("Done, Total Syncs: "+this.totalSyncs.toString())},o(e,[{key:"totalSyncs",get:function(){return this.syncCount}}]),e}();!function(e){e.Read="read",e.Write="write",e.None="none"}(t=e.SyncMode||(e.SyncMode={}));var i=function(){function e(e,t,n){this.type=e,this.instance=t,this.engine=n}e.unwrap=function(t){var n=this;return t instanceof e?t.instance:t instanceof Array?t.map((function(e){return n.unwrap(e)})):t};var t=e.prototype;return t.sync=function(e){return this.engine.sync(e)},t.traceCall=function(e){this.engine.traceCall(this.type,e)},t.trace=function(e){this.engine.trace(e)},e}();function l(e,t,n){for(var r=arguments.length,a=new Array(r>3?r-3:0),i=3;i<r;i++)a[i-3]=arguments[i];return s(this,void 0,void 0,regeneratorRuntime.mark((function r(){var i,o,s,l,u;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return i=new c(t,{errorCallback:null===e||void 0===e?void 0:e.errorCallback}),o=new d(t.workbook,i),s=a,(null===e||void 0===e?void 0:e.specialArgumentOrder)?(l=e.specialArgumentOrder.map((function(e){switch(e){case"workbook":return o;case"engine":return i;default:return}})),s.unshift.apply(s,l)):s.unshift(o),r.next=6,n.apply(void 0,s);case 6:return u=r.sent,r.next=9,i.finalize();case 9:return r.abrupt("return",u);case 10:case"end":return r.stop()}}),r)})))}e.Wrap=i,e.run=function(e,t){return s(this,void 0,void 0,regeneratorRuntime.mark((function n(){var r,a,i=this;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(r=t&&t.arguments?t.arguments:[],a=function(n){return s(i,void 0,void 0,regeneratorRuntime.mark((function a(){return regeneratorRuntime.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.abrupt("return",l.apply(void 0,[t,n,e].concat(r)));case 1:case"end":return a.stop()}}),a)})))},!t||!t.context){n.next=6;break}return n.abrupt("return",a(t.context));case 6:if(!t||!t.runOptions){n.next=14;break}if(!t.excel){n.next=11;break}return n.abrupt("return",t.excel.run(t.runOptions,a));case 11:return n.abrupt("return",Excel.run(t.runOptions,a));case 12:n.next=15;break;case 14:return n.abrupt("return",Excel.run(a));case 15:case"end":return n.stop()}}),n)})))},e.runEngine=l,e.getWorkbook=function(e){return new d(e,new c(e.context))};var c=function(e){function t(t,n){return e.call(this,t,n)||this}return r(t,e),t.prototype.finalize=function(){return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.sync();case 2:this.traceFinalize();case 3:case"end":return e.stop()}}),e,this)})))},t}(function(e){function t(t,n){var r;return(r=e.call(this)||this).context=t,r.options=n,r.pending=[],r.callSequence=[],r.lastLineEncountered=void 0,r}r(t,e);var n=t.prototype;return n.clearCallSequence=function(){this.callSequence=[]},n.traceLine=function(t){e.prototype.traceLine.call(this,t),this.lastLineEncountered=t},n.traceCall=function(t,n){e.prototype.traceCall.call(this,t,n),this.callSequence.push({type:t,method:n,line:this.lastLine}),this.context.trace("")},n.enqueue=function(){var e,t=this.pending;if(0===t.length){var n=this.doSync.bind(this),r=this.callSequence,a=this.clearCallSequence.bind(this),i=null===(e=this.options)||void 0===e?void 0:e.errorCallback;setTimeout((function(){return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s,l,c,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=void 0,s=r.length,e.next=4,n().catch((function(e){i&&i(e);var t=e.traceMessages,n=t.length>0?t.length-1:0;s=n;var a=r[n],l=null!==a&&void 0!==a?a:{},c=l.type,u=l.method,h=l.line;o={message:e.debugInfo.message,code:e.debugInfo.code,type:c,method:u,line:h};["line","type","method"].forEach((function(e){void 0!==o&&void 0===o[e]&&delete o[e]}))}));case 4:for(a(),l=t.shift();l;)u=(c=l).promise,c.callSequenceIndex<s?u.resolve():u.reject(o),l=t.shift();case 7:case"end":return e.stop()}}),e)})))}),0)}var o=this.callSequence.length-1;return new Promise((function(e,n){t.push({promise:{resolve:e,reject:n},callSequenceIndex:o})}))},n.doSync=function(){return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return this.incrementSyncCount(),e.abrupt("return",this.context.sync());case 2:case"end":return e.stop()}}),e,this)})))},n.sync=function(e){return this.enqueue()},o(t,[{key:"lastLine",get:function(){return this.lastLineEncountered}}]),t}(a)),u=function(e){function a(t,r){var a;return a=e.call(this,"LinkedWorkbook",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.breakLinks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"breakLinks"),this.instance.breakLinks(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.refreshLinks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"refreshLinks"),this.instance.refresh(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.LinkedWorkbook=u;var h=function(e){function a(t,r){var a;return a=e.call(this,"Application",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getCalculationEngineVersion=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCalculationEngineVersion"),this.instance.load("calculationEngineVersion"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.calculationEngineVersion);case 5:case"end":return e.stop()}}),e,this)})))},o.getCalculationMode=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCalculationMode"),this.instance.load("calculationMode"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.calculationMode);case 5:case"end":return e.stop()}}),e,this)})))},o.setCalculationMode=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCalculationMode"),this.instance.calculationMode=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCalculationState=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCalculationState"),this.instance.load("calculationState"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.calculationState);case 5:case"end":return e.stop()}}),e,this)})))},o.getCultureInfo=function(){e.prototype.traceCall.call(this,"getCultureInfo");var t=this.instance.cultureInfo;return new Re(t,this.engine)},o.getDecimalSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDecimalSeparator"),this.instance.load("decimalSeparator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.decimalSeparator);case 5:case"end":return e.stop()}}),e,this)})))},o.getIterativeCalculation=function(){e.prototype.traceCall.call(this,"getIterativeCalculation");var t=this.instance.iterativeCalculation;return new p(t,this.engine)},o.getThousandsSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getThousandsSeparator"),this.instance.load("thousandsSeparator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.thousandsSeparator);case 5:case"end":return e.stop()}}),e,this)})))},o.getUseSystemSeparators=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUseSystemSeparators"),this.instance.load("useSystemSeparators"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.useSystemSeparators);case 5:case"end":return e.stop()}}),e,this)})))},o.calculate=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"calculate"),a=i.unwrap(n),this.instance.calculate(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.Application=h;var p=function(e){function a(t,r){var a;return a=e.call(this,"IterativeCalculation",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getEnabled=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEnabled"),this.instance.load("enabled"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.enabled);case 5:case"end":return e.stop()}}),e,this)})))},i.setEnabled=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEnabled"),this.instance.enabled=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMaxChange=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMaxChange"),this.instance.load("maxChange"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.maxChange);case 5:case"end":return e.stop()}}),e,this)})))},i.setMaxChange=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMaxChange"),this.instance.maxChange=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMaxIteration=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMaxIteration"),this.instance.load("maxIteration"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.maxIteration);case 5:case"end":return e.stop()}}),e,this)})))},i.setMaxIteration=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMaxIteration"),this.instance.maxIteration=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.IterativeCalculation=p;var d=function(e){function a(t,r){var a;return a=e.call(this,"Workbook",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getBindings=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBindings"),this.instance.bindings.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bindings.items.map((function(e){return new x(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addBinding=function(t,n,r){e.prototype.traceCall.call(this,"addBinding");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.bindings.add(a,o,s);return new x(l,this.engine)},o.addBindingFromNamedItem=function(t,n,r){e.prototype.traceCall.call(this,"addBindingFromNamedItem");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.bindings.addFromNamedItem(a,o,s);return new x(l,this.engine)},o.addBindingFromSelection=function(t,n){e.prototype.traceCall.call(this,"addBindingFromSelection");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.bindings.addFromSelection(r,a);return new x(o,this.engine)},o.getBinding=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getBinding"),a=i.unwrap(n),o=this.instance.bindings.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new x(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getComments=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getComments"),this.instance.comments.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.comments.items.map((function(e){return new lt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addComment=function(t,n,r){e.prototype.traceCall.call(this,"addComment");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.comments.add(a,o,s);return new lt(l,this.engine)},o.getComment=function(t){e.prototype.traceCall.call(this,"getComment");var n=i.unwrap(t),r=this.instance.comments.getItem(n);return new lt(r,this.engine)},o.getCommentByCell=function(t){e.prototype.traceCall.call(this,"getCommentByCell");var n=i.unwrap(t),r=this.instance.comments.getItemByCell(n);return new lt(r,this.engine)},o.getCommentByReplyId=function(t){e.prototype.traceCall.call(this,"getCommentByReplyId");var n=i.unwrap(t),r=this.instance.comments.getItemByReplyId(n);return new lt(r,this.engine)},o.getCustomXmlParts=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCustomXmlParts"),this.instance.customXmlParts.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.customXmlParts.items.map((function(e){return new Ae(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addCustomXmlPart=function(t){e.prototype.traceCall.call(this,"addCustomXmlPart");var n=i.unwrap(t),r=this.instance.customXmlParts.add(n);return new Ae(r,this.engine)},o.getCustomXmlPartsByNamespace=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o,s=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getCustomXmlPartsByNamespace"),a=i.unwrap(n),(o=this.instance.customXmlParts.getByNamespace(a)).load("items"),e.next=6,r.sync.call(this,t.Read);case 6:return e.abrupt("return",o.items.map((function(e){return new Ae(e,s.engine)})));case 7:case"end":return e.stop()}}),e,this)})))},o.getCustomXmlPart=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getCustomXmlPart"),a=i.unwrap(n),o=this.instance.customXmlParts.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Ae(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getLinkedWorkbookRefreshMode=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkedWorkbookRefreshMode"),this.instance.linkedWorkbooks.load("workbookLinksRefreshMode"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkedWorkbooks.workbookLinksRefreshMode);case 5:case"end":return e.stop()}}),e,this)})))},o.setLinkedWorkbookRefreshMode=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLinkedWorkbookRefreshMode"),this.instance.linkedWorkbooks.workbookLinksRefreshMode=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLinkedWorkbooks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkedWorkbooks"),this.instance.linkedWorkbooks.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkedWorkbooks.items.map((function(e){return new u(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.breakAllLinksToLinkedWorkbooks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"breakAllLinksToLinkedWorkbooks"),this.instance.linkedWorkbooks.breakAllLinks(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLinkedWorkbookByUrl=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getLinkedWorkbookByUrl"),a=i.unwrap(n),o=this.instance.linkedWorkbooks.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new u(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.refreshAllLinksToLinkedWorkbooks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"refreshAllLinksToLinkedWorkbooks"),this.instance.linkedWorkbooks.refreshAll(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNames=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNames"),this.instance.names.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.names.items.map((function(e){return new R(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addNamedItem=function(t,n,r){e.prototype.traceCall.call(this,"addNamedItem");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.names.add(a,o,s);return new R(l,this.engine)},o.addNamedItemFormulaLocal=function(t,n,r){e.prototype.traceCall.call(this,"addNamedItemFormulaLocal");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.names.addFormulaLocal(a,o,s);return new R(l,this.engine)},o.getNamedItem=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getNamedItem"),a=i.unwrap(n),o=this.instance.names.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new R(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getPivotTableStyles=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPivotTableStyles"),this.instance.pivotTableStyles.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.pivotTableStyles.items.map((function(e){return new tt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addPivotTableStyle=function(t,n){e.prototype.traceCall.call(this,"addPivotTableStyle");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.pivotTableStyles.add(r,a);return new tt(o,this.engine)},o.getDefaultPivotTableStyle=function(){e.prototype.traceCall.call(this,"getDefaultPivotTableStyle");var t=this.instance.pivotTableStyles.getDefault();return new tt(t,this.engine)},o.getPivotTableStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotTableStyle"),a=i.unwrap(n),o=this.instance.pivotTableStyles.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new tt(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.setDefaultPivotTableStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDefaultPivotTableStyle"),a=i.unwrap(n),this.instance.pivotTableStyles.setDefault(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getPivotTables=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPivotTables"),this.instance.pivotTables.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.pivotTables.items.map((function(e){return new Te(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addPivotTable=function(t,n,r){e.prototype.traceCall.call(this,"addPivotTable");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.pivotTables.add(a,o,s);return new Te(l,this.engine)},o.getPivotTable=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotTable"),a=i.unwrap(n),o=this.instance.pivotTables.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Te(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.refreshAllPivotTables=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"refreshAllPivotTables"),this.instance.pivotTables.refreshAll(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSlicerStyles=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSlicerStyles"),this.instance.slicerStyles.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.slicerStyles.items.map((function(e){return new nt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addSlicerStyle=function(t,n){e.prototype.traceCall.call(this,"addSlicerStyle");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.slicerStyles.add(r,a);return new nt(o,this.engine)},o.getDefaultSlicerStyle=function(){e.prototype.traceCall.call(this,"getDefaultSlicerStyle");var t=this.instance.slicerStyles.getDefault();return new nt(t,this.engine)},o.getSlicerStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getSlicerStyle"),a=i.unwrap(n),o=this.instance.slicerStyles.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new nt(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.setDefaultSlicerStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDefaultSlicerStyle"),a=i.unwrap(n),this.instance.slicerStyles.setDefault(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getSlicers=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSlicers"),this.instance.slicers.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.slicers.items.map((function(e){return new wt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addSlicer=function(t,n,r){e.prototype.traceCall.call(this,"addSlicer");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.slicers.add(a,o,s);return new wt(l,this.engine)},o.getSlicer=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getSlicer"),a=i.unwrap(n),o=this.instance.slicers.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new wt(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getPredefinedCellStyles=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPredefinedCellStyles"),this.instance.styles.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.styles.items.map((function(e){return new $e(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addPredefinedCellStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"addPredefinedCellStyle"),a=i.unwrap(n),this.instance.styles.add(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getPredefinedCellStyle=function(t){e.prototype.traceCall.call(this,"getPredefinedCellStyle");var n=i.unwrap(t),r=this.instance.styles.getItem(n);return new $e(r,this.engine)},o.getTableStyles=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTableStyles"),this.instance.tableStyles.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tableStyles.items.map((function(e){return new et(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addTableStyle=function(t,n){e.prototype.traceCall.call(this,"addTableStyle");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.tableStyles.add(r,a);return new et(o,this.engine)},o.getDefaultTableStyle=function(){e.prototype.traceCall.call(this,"getDefaultTableStyle");var t=this.instance.tableStyles.getDefault();return new et(t,this.engine)},o.getTableStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getTableStyle"),a=i.unwrap(n),o=this.instance.tableStyles.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new et(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.setDefaultTableStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDefaultTableStyle"),a=i.unwrap(n),this.instance.tableStyles.setDefault(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getTables=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTables"),this.instance.tables.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tables.items.map((function(e){return new A(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addTable=function(t,n){e.prototype.traceCall.call(this,"addTable");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.tables.add(r,a);return new A(o,this.engine)},o.getTable=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getTable"),a=i.unwrap(n),o=this.instance.tables.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new A(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getTimelineStyles=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTimelineStyles"),this.instance.timelineStyles.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.timelineStyles.items.map((function(e){return new rt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addTimelineStyle=function(t,n){e.prototype.traceCall.call(this,"addTimelineStyle");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.timelineStyles.add(r,a);return new rt(o,this.engine)},o.getDefaultTimelineStyle=function(){e.prototype.traceCall.call(this,"getDefaultTimelineStyle");var t=this.instance.timelineStyles.getDefault();return new rt(t,this.engine)},o.getTimelineStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getTimelineStyle"),a=i.unwrap(n),o=this.instance.timelineStyles.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new rt(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.setDefaultTimelineStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDefaultTimelineStyle"),a=i.unwrap(n),this.instance.timelineStyles.setDefault(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getWorksheets=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWorksheets"),this.instance.worksheets.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.worksheets.items.map((function(e){return new m(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addWorksheet=function(t){e.prototype.traceCall.call(this,"addWorksheet");var n=i.unwrap(t),r=this.instance.worksheets.add(n);return new m(r,this.engine)},o.getActiveWorksheet=function(){e.prototype.traceCall.call(this,"getActiveWorksheet");var t=this.instance.worksheets.getActiveWorksheet();return new m(t,this.engine)},o.getFirstWorksheet=function(t){e.prototype.traceCall.call(this,"getFirstWorksheet");var n=i.unwrap(t),r=this.instance.worksheets.getFirst(n);return new m(r,this.engine)},o.getWorksheet=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getWorksheet"),a=i.unwrap(n),o=this.instance.worksheets.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new m(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getLastWorksheet=function(t){e.prototype.traceCall.call(this,"getLastWorksheet");var n=i.unwrap(t),r=this.instance.worksheets.getLast(n);return new m(r,this.engine)},o.getApplication=function(){e.prototype.traceCall.call(this,"getApplication");var t=this.instance.application;return new h(t,this.engine)},o.getAutoSave=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoSave"),this.instance.load("autoSave"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoSave);case 5:case"end":return e.stop()}}),e,this)})))},o.getCalculationEngineVersion=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCalculationEngineVersion"),this.instance.load("calculationEngineVersion"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.calculationEngineVersion);case 5:case"end":return e.stop()}}),e,this)})))},o.getChartDataPointTrack=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getChartDataPointTrack"),this.instance.load("chartDataPointTrack"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.chartDataPointTrack);case 5:case"end":return e.stop()}}),e,this)})))},o.setChartDataPointTrack=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setChartDataPointTrack"),this.instance.chartDataPointTrack=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIsDirty=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsDirty"),this.instance.load("isDirty"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isDirty);case 5:case"end":return e.stop()}}),e,this)})))},o.setIsDirty=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIsDirty"),this.instance.isDirty=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.getPreviouslySaved=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPreviouslySaved"),this.instance.load("previouslySaved"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.previouslySaved);case 5:case"end":return e.stop()}}),e,this)})))},o.getProperties=function(){e.prototype.traceCall.call(this,"getProperties");var t=this.instance.properties;return new je(t,this.engine)},o.getProtection=function(){e.prototype.traceCall.call(this,"getProtection");var t=this.instance.protection;return new f(t,this.engine)},o.getReadOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadOnly"),this.instance.load("readOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readOnly);case 5:case"end":return e.stop()}}),e,this)})))},o.getUsePrecisionAsDisplayed=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUsePrecisionAsDisplayed"),this.instance.load("usePrecisionAsDisplayed"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.usePrecisionAsDisplayed);case 5:case"end":return e.stop()}}),e,this)})))},o.setUsePrecisionAsDisplayed=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUsePrecisionAsDisplayed"),this.instance.usePrecisionAsDisplayed=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getActiveCell=function(){return e.prototype.traceCall.call(this,"getActiveCell"),new b(this.instance.getActiveCell(),this.engine)},o.getActiveChart=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getActiveChart"),r=this.instance.getActiveChartOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new F(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getActiveSlicer=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getActiveSlicer"),r=this.instance.getActiveSlicerOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new wt(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getSelectedRange=function(){return e.prototype.traceCall.call(this,"getSelectedRange"),new b(this.instance.getSelectedRange(),this.engine)},o.getSelectedRanges=function(){return e.prototype.traceCall.call(this,"getSelectedRanges"),new v(this.instance.getSelectedRanges(),this.engine)},o.refreshAllDataConnections=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"refreshAllDataConnections"),this.instance.dataConnections.refreshAll(),e.next=4,this.sync(t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCustomXmlPartByNamespace=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o,s=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getCustomXmlPartByNamespace"),a=i.unwrap(n),(o=this.instance.customXmlParts.getByNamespace(a)).load("items"),e.next=6,r.sync.call(this,t.Read);case 6:return e.abrupt("return",o.items.map((function(e){return new Ae(e,s.engine)})));case 7:case"end":return e.stop()}}),e,this)})))},a}(i);e.Workbook=d;var f=function(e){function a(t,r){var a;return a=e.call(this,"WorkbookProtection",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getProtected=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getProtected"),this.instance.load("protected"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.protected);case 5:case"end":return e.stop()}}),e,this)})))},o.protect=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"protect"),a=i.unwrap(n),this.instance.protect(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.unprotect=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"unprotect"),a=i.unwrap(n),this.instance.unprotect(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.WorkbookProtection=f;var m=function(e){function a(t,r){var a;return a=e.call(this,"Worksheet",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getCharts=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCharts"),this.instance.charts.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.charts.items.map((function(e){return new F(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addChart=function(t,n,r){e.prototype.traceCall.call(this,"addChart");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.charts.add(a,o,s);return new F(l,this.engine)},o.getChart=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getChart"),a=i.unwrap(n),o=this.instance.charts.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new F(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getComments=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getComments"),this.instance.comments.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.comments.items.map((function(e){return new lt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addComment=function(t,n,r){e.prototype.traceCall.call(this,"addComment");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.comments.add(a,o,s);return new lt(l,this.engine)},o.getComment=function(t){e.prototype.traceCall.call(this,"getComment");var n=i.unwrap(t),r=this.instance.comments.getItem(n);return new lt(r,this.engine)},o.getCommentByCell=function(t){e.prototype.traceCall.call(this,"getCommentByCell");var n=i.unwrap(t),r=this.instance.comments.getItemByCell(n);return new lt(r,this.engine)},o.getCommentByReplyId=function(t){e.prototype.traceCall.call(this,"getCommentByReplyId");var n=i.unwrap(t),r=this.instance.comments.getItemByReplyId(n);return new lt(r,this.engine)},o.getCustomProperties=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCustomProperties"),this.instance.customProperties.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.customProperties.items.map((function(e){return new Fe(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addWorksheetCustomProperty=function(t,n){e.prototype.traceCall.call(this,"addWorksheetCustomProperty");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.customProperties.add(r,a);return new Fe(o,this.engine)},o.getWorksheetCustomProperty=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getWorksheetCustomProperty"),a=i.unwrap(n),o=this.instance.customProperties.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Fe(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getHorizontalPageBreaks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalPageBreaks"),this.instance.horizontalPageBreaks.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalPageBreaks.items.map((function(e){return new st(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addHorizontalPageBreak=function(t){e.prototype.traceCall.call(this,"addHorizontalPageBreak");var n=i.unwrap(t),r=this.instance.horizontalPageBreaks.add(n);return new st(r,this.engine)},o.removeAllHorizontalPageBreaks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"removeAllHorizontalPageBreaks"),this.instance.horizontalPageBreaks.removePageBreaks(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNamedSheetViews=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNamedSheetViews"),this.instance.namedSheetViews.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.namedSheetViews.items.map((function(e){return new Rt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addNamedSheetView=function(t){e.prototype.traceCall.call(this,"addNamedSheetView");var n=i.unwrap(t),r=this.instance.namedSheetViews.add(n);return new Rt(r,this.engine)},o.enterTemporaryNamedSheetView=function(){e.prototype.traceCall.call(this,"enterTemporaryNamedSheetView");var t=this.instance.namedSheetViews.enterTemporary();return new Rt(t,this.engine)},o.exitActiveNamedSheetView=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"exitActiveNamedSheetView"),this.instance.namedSheetViews.exit(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getActiveNamedSheetView=function(){e.prototype.traceCall.call(this,"getActiveNamedSheetView");var t=this.instance.namedSheetViews.getActive();return new Rt(t,this.engine)},o.getNamedSheetView=function(t){e.prototype.traceCall.call(this,"getNamedSheetView");var n=i.unwrap(t),r=this.instance.namedSheetViews.getItem(n);return new Rt(r,this.engine)},o.getNames=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNames"),this.instance.names.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.names.items.map((function(e){return new R(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addNamedItem=function(t,n,r){e.prototype.traceCall.call(this,"addNamedItem");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.names.add(a,o,s);return new R(l,this.engine)},o.addNamedItemFormulaLocal=function(t,n,r){e.prototype.traceCall.call(this,"addNamedItemFormulaLocal");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.names.addFormulaLocal(a,o,s);return new R(l,this.engine)},o.getNamedItem=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getNamedItem"),a=i.unwrap(n),o=this.instance.names.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new R(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getPivotTables=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPivotTables"),this.instance.pivotTables.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.pivotTables.items.map((function(e){return new Te(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addPivotTable=function(t,n,r){e.prototype.traceCall.call(this,"addPivotTable");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.pivotTables.add(a,o,s);return new Te(l,this.engine)},o.getPivotTable=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotTable"),a=i.unwrap(n),o=this.instance.pivotTables.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Te(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.refreshAllPivotTables=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"refreshAllPivotTables"),this.instance.pivotTables.refreshAll(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShapes=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShapes"),this.instance.shapes.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.shapes.items.map((function(e){return new ut(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addGeometricShape=function(t){e.prototype.traceCall.call(this,"addGeometricShape");var n=i.unwrap(t),r=this.instance.shapes.addGeometricShape(n);return new ut(r,this.engine)},o.addGroup=function(t){e.prototype.traceCall.call(this,"addGroup");var n=i.unwrap(t),r=this.instance.shapes.addGroup(n);return new ut(r,this.engine)},o.addImage=function(t){e.prototype.traceCall.call(this,"addImage");var n=i.unwrap(t),r=this.instance.shapes.addImage(n);return new ut(r,this.engine)},o.addLine=function(t,n,r,a,o){e.prototype.traceCall.call(this,"addLine");var s=i.unwrap(t),l=i.unwrap(n),c=i.unwrap(r),u=i.unwrap(a),h=i.unwrap(o),p=this.instance.shapes.addLine(s,l,c,u,h);return new ut(p,this.engine)},o.addTextBox=function(t){e.prototype.traceCall.call(this,"addTextBox");var n=i.unwrap(t),r=this.instance.shapes.addTextBox(n);return new ut(r,this.engine)},o.getShape=function(t){e.prototype.traceCall.call(this,"getShape");var n=i.unwrap(t),r=this.instance.shapes.getItem(n);return new ut(r,this.engine)},o.getSlicers=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSlicers"),this.instance.slicers.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.slicers.items.map((function(e){return new wt(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addSlicer=function(t,n,r){e.prototype.traceCall.call(this,"addSlicer");var a=i.unwrap(t),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.slicers.add(a,o,s);return new wt(l,this.engine)},o.getSlicer=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getSlicer"),a=i.unwrap(n),o=this.instance.slicers.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new wt(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getTables=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTables"),this.instance.tables.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tables.items.map((function(e){return new A(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addTable=function(t,n){e.prototype.traceCall.call(this,"addTable");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.tables.add(r,a);return new A(o,this.engine)},o.getTable=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getTable"),a=i.unwrap(n),o=this.instance.tables.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new A(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getVerticalPageBreaks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalPageBreaks"),this.instance.verticalPageBreaks.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalPageBreaks.items.map((function(e){return new st(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addVerticalPageBreak=function(t){e.prototype.traceCall.call(this,"addVerticalPageBreak");var n=i.unwrap(t),r=this.instance.verticalPageBreaks.add(n);return new st(r,this.engine)},o.removeAllVerticalPageBreaks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"removeAllVerticalPageBreaks"),this.instance.verticalPageBreaks.removePageBreaks(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getAutoFilter=function(){e.prototype.traceCall.call(this,"getAutoFilter");var t=this.instance.autoFilter;return new Ce(t,this.engine)},o.getEnableCalculation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEnableCalculation"),this.instance.load("enableCalculation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.enableCalculation);case 5:case"end":return e.stop()}}),e,this)})))},o.setEnableCalculation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEnableCalculation"),this.instance.enableCalculation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFreezePanes=function(){e.prototype.traceCall.call(this,"getFreezePanes");var t=this.instance.freezePanes;return new g(t,this.engine)},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPageLayout=function(){e.prototype.traceCall.call(this,"getPageLayout");var t=this.instance.pageLayout;return new at(t,this.engine)},o.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},o.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getProtection=function(){e.prototype.traceCall.call(this,"getProtection");var t=this.instance.protection;return new y(t,this.engine)},o.getShowGridlines=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowGridlines"),this.instance.load("showGridlines"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showGridlines);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowGridlines=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowGridlines"),this.instance.showGridlines=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowHeadings=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowHeadings"),this.instance.load("showHeadings"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showHeadings);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowHeadings=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowHeadings"),this.instance.showHeadings=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getStandardHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStandardHeight"),this.instance.load("standardHeight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.standardHeight);case 5:case"end":return e.stop()}}),e,this)})))},o.getStandardWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStandardWidth"),this.instance.load("standardWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.standardWidth);case 5:case"end":return e.stop()}}),e,this)})))},o.setStandardWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStandardWidth"),this.instance.standardWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTabColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTabColor"),this.instance.load("tabColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tabColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setTabColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTabColor"),this.instance.tabColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVisibility=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisibility"),this.instance.load("visibility"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visibility);case 5:case"end":return e.stop()}}),e,this)})))},o.setVisibility=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisibility"),this.instance.visibility=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.activate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"activate"),this.instance.activate(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.calculate=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"calculate"),a=i.unwrap(n),this.instance.calculate(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.copy=function(t,n){e.prototype.traceCall.call(this,"copy");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.copy(r,o),this.engine)},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.findAll=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"findAll"),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.findAllOrNullObject(o,s),e.next=6,a.sync.call(this,t.Read);case 6:if(!l.isNullObject){e.next=8;break}return e.abrupt("return",void 0);case 8:return e.abrupt("return",new v(l,this.engine));case 9:case"end":return e.stop()}}),e,this)})))},o.getCell=function(t,n){e.prototype.traceCall.call(this,"getCell");var r=i.unwrap(t),a=i.unwrap(n);return new b(this.instance.getCell(r,a),this.engine)},o.getNext=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getNext"),o=i.unwrap(n),s=this.instance.getNextOrNullObject(o),e.next=5,r.sync.call(this,t.Read);case 5:if(!s.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new a(s,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getPrevious=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPrevious"),o=i.unwrap(n),s=this.instance.getPreviousOrNullObject(o),e.next=5,r.sync.call(this,t.Read);case 5:if(!s.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new a(s,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getRange=function(t){e.prototype.traceCall.call(this,"getRange");var n=i.unwrap(t);return new b(this.instance.getRange(n),this.engine)},o.getRangeByIndexes=function(t,n,r,a){e.prototype.traceCall.call(this,"getRangeByIndexes");var o=i.unwrap(t),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a);return new b(this.instance.getRangeByIndexes(o,s,l,c),this.engine)},o.getRanges=function(t){e.prototype.traceCall.call(this,"getRanges");var n=i.unwrap(t);return new v(this.instance.getRanges(n),this.engine)},o.getUsedRange=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getUsedRange"),a=i.unwrap(n),o=this.instance.getUsedRangeOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new b(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.replaceAll=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"replaceAll"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),u=this.instance.replaceAll(s,l,c),e.next=7,o.sync.call(this,t.Read);case 7:return e.abrupt("return",u.value);case 8:case"end":return e.stop()}}),e,this)})))},o.showOutlineLevels=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"showOutlineLevels"),o=i.unwrap(n),s=i.unwrap(r),this.instance.showOutlineLevels(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},a}(i);e.Worksheet=m;var y=function(e){function a(t,r){var a;return a=e.call(this,"WorksheetProtection",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getOptions=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOptions"),this.instance.load("options"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.options);case 5:case"end":return e.stop()}}),e,this)})))},o.getProtected=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getProtected"),this.instance.load("protected"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.protected);case 5:case"end":return e.stop()}}),e,this)})))},o.protect=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"protect"),o=i.unwrap(n),s=i.unwrap(r),this.instance.protect(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},o.unprotect=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"unprotect"),a=i.unwrap(n),this.instance.unprotect(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.WorksheetProtection=y;var g=function(e){function a(t,r){var a;return a=e.call(this,"WorksheetFreezePanes",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.freezeAt=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"freezeAt"),a=i.unwrap(n),this.instance.freezeAt(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.freezeColumns=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"freezeColumns"),a=i.unwrap(n),this.instance.freezeColumns(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.freezeRows=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"freezeRows"),a=i.unwrap(n),this.instance.freezeRows(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getLocation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLocation"),r=this.instance.getLocationOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new b(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.unfreeze=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"unfreeze"),this.instance.unfreeze(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.WorksheetFreezePanes=g;var b=function(e){function a(t,r){var a;return a=e.call(this,"Range",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getConditionalFormats=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getConditionalFormats"),this.instance.conditionalFormats.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.conditionalFormats.items.map((function(e){return new Ge(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addConditionalFormat=function(t){e.prototype.traceCall.call(this,"addConditionalFormat");var n=i.unwrap(t),r=this.instance.conditionalFormats.add(n);return new Ge(r,this.engine)},o.clearAllConditionalFormats=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clearAllConditionalFormats"),this.instance.conditionalFormats.clearAll(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getConditionalFormat=function(t){e.prototype.traceCall.call(this,"getConditionalFormat");var n=i.unwrap(t),r=this.instance.conditionalFormats.getItem(n);return new Ge(r,this.engine)},o.getAddress=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAddress"),this.instance.load("address"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.address);case 5:case"end":return e.stop()}}),e,this)})))},o.getAddressLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAddressLocal"),this.instance.load("addressLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.addressLocal);case 5:case"end":return e.stop()}}),e,this)})))},o.getCellCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCellCount"),this.instance.load("cellCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.cellCount);case 5:case"end":return e.stop()}}),e,this)})))},o.getColumnCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnCount"),this.instance.load("columnCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnCount);case 5:case"end":return e.stop()}}),e,this)})))},o.getColumnHidden=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnHidden"),this.instance.load("columnHidden"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnHidden);case 5:case"end":return e.stop()}}),e,this)})))},o.setColumnHidden=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColumnHidden"),this.instance.columnHidden=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getColumnIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnIndex"),this.instance.load("columnIndex"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnIndex);case 5:case"end":return e.stop()}}),e,this)})))},o.getDataValidation=function(){e.prototype.traceCall.call(this,"getDataValidation");var t=this.instance.dataValidation;return new S(t,this.engine)},o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new k(t,this.engine)},o.getFormulas=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulas"),this.instance.load("formulas"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulas);case 5:case"end":return e.stop()}}),e,this)})))},o.setFormulas=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulas"),this.instance.formulas=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormulasLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulasLocal"),this.instance.load("formulasLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulasLocal);case 5:case"end":return e.stop()}}),e,this)})))},o.setFormulasLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulasLocal"),this.instance.formulasLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormulasR1C1=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulasR1C1"),this.instance.load("formulasR1C1"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulasR1C1);case 5:case"end":return e.stop()}}),e,this)})))},o.setFormulasR1C1=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulasR1C1"),this.instance.formulasR1C1=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHasSpill=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHasSpill"),this.instance.load("hasSpill"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hasSpill);case 5:case"end":return e.stop()}}),e,this)})))},o.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},o.getHidden=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHidden"),this.instance.load("hidden"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hidden);case 5:case"end":return e.stop()}}),e,this)})))},o.getHyperlink=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHyperlink"),this.instance.load("hyperlink"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hyperlink);case 5:case"end":return e.stop()}}),e,this)})))},o.setHyperlink=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHyperlink"),this.instance.hyperlink=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIsEntireColumn=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsEntireColumn"),this.instance.load("isEntireColumn"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isEntireColumn);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsEntireRow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsEntireRow"),this.instance.load("isEntireRow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isEntireRow);case 5:case"end":return e.stop()}}),e,this)})))},o.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},o.getLinkedDataTypeStates=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkedDataTypeStates"),this.instance.load("linkedDataTypeState"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkedDataTypeState);case 5:case"end":return e.stop()}}),e,this)})))},o.getNumberFormats=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormats"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},o.setNumberFormats=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormats"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNumberFormatCategories=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormatCategories"),this.instance.load("numberFormatCategories"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormatCategories);case 5:case"end":return e.stop()}}),e,this)})))},o.getNumberFormatsLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormatsLocal"),this.instance.load("numberFormatLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormatLocal);case 5:case"end":return e.stop()}}),e,this)})))},o.setNumberFormatsLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormatsLocal"),this.instance.numberFormatLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRowCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowCount"),this.instance.load("rowCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rowCount);case 5:case"end":return e.stop()}}),e,this)})))},o.getRowHidden=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowHidden"),this.instance.load("rowHidden"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rowHidden);case 5:case"end":return e.stop()}}),e,this)})))},o.setRowHidden=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRowHidden"),this.instance.rowHidden=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRowIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowIndex"),this.instance.load("rowIndex"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rowIndex);case 5:case"end":return e.stop()}}),e,this)})))},o.getSavedAsArray=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSavedAsArray"),this.instance.load("savedAsArray"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.savedAsArray);case 5:case"end":return e.stop()}}),e,this)})))},o.getSort=function(){e.prototype.traceCall.call(this,"getSort");var t=this.instance.sort;return new be(t,this.engine)},o.getPredefinedCellStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPredefinedCellStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},o.setPredefinedCellStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPredefinedCellStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTexts=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTexts"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},o.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},o.getValueTypes=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValueTypes"),this.instance.load("valueTypes"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.valueTypes);case 5:case"end":return e.stop()}}),e,this)})))},o.getValues=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValues"),this.instance.load("values"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.values);case 5:case"end":return e.stop()}}),e,this)})))},o.setValues=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setValues"),this.instance.values=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},o.getWorksheet=function(){e.prototype.traceCall.call(this,"getWorksheet");var t=this.instance.worksheet;return new m(t,this.engine)},o.autoFill=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"autoFill"),o=i.unwrap(n),s=i.unwrap(r),this.instance.autoFill(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},o.calculate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"calculate"),this.instance.calculate(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.clear=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"clear"),a=i.unwrap(n),this.instance.clear(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.convertDataTypeToText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"convertDataTypeToText"),this.instance.convertDataTypeToText(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.copyFrom=function(n,r,a,o){var l=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,c,u,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l.traceCall.call(this,"copyFrom"),s=i.unwrap(n),c=i.unwrap(r),u=i.unwrap(a),h=i.unwrap(o),this.instance.copyFrom(s,c,u,h),e.next=8,l.sync.call(this,t.Write);case 8:case"end":return e.stop()}}),e,this)})))},o.delete=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"delete"),a=i.unwrap(n),this.instance.delete(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.find=function(n,r){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"find"),s=i.unwrap(n),l=i.unwrap(r),c=this.instance.findOrNullObject(s,l),e.next=6,o.sync.call(this,t.Read);case 6:if(!c.isNullObject){e.next=8;break}return e.abrupt("return",void 0);case 8:return e.abrupt("return",new a(c,this.engine));case 9:case"end":return e.stop()}}),e,this)})))},o.flashFill=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"flashFill"),this.instance.flashFill(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getAbsoluteResizedRange=function(t,n){e.prototype.traceCall.call(this,"getAbsoluteResizedRange");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getAbsoluteResizedRange(r,o),this.engine)},o.getBoundingRect=function(t){e.prototype.traceCall.call(this,"getBoundingRect");var n=i.unwrap(t);return new a(this.instance.getBoundingRect(n),this.engine)},o.getCell=function(t,n){e.prototype.traceCall.call(this,"getCell");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getCell(r,o),this.engine)},o.getColumn=function(t){e.prototype.traceCall.call(this,"getColumn");var n=i.unwrap(t);return new a(this.instance.getColumn(n),this.engine)},o.getColumnsAfter=function(t){e.prototype.traceCall.call(this,"getColumnsAfter");var n=i.unwrap(t);return new a(this.instance.getColumnsAfter(n),this.engine)},o.getColumnsBefore=function(t){e.prototype.traceCall.call(this,"getColumnsBefore");var n=i.unwrap(t);return new a(this.instance.getColumnsBefore(n),this.engine)},o.getDirectPrecedents=function(){return e.prototype.traceCall.call(this,"getDirectPrecedents"),new w(this.instance.getDirectPrecedents(),this.engine)},o.getEntireColumn=function(){return e.prototype.traceCall.call(this,"getEntireColumn"),new a(this.instance.getEntireColumn(),this.engine)},o.getEntireRow=function(){return e.prototype.traceCall.call(this,"getEntireRow"),new a(this.instance.getEntireRow(),this.engine)},o.getExtendedRange=function(t,n){e.prototype.traceCall.call(this,"getExtendedRange");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getExtendedRange(r,o),this.engine)},o.getImage=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getImage"),r=this.instance.getImage(),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",r.value);case 5:case"end":return e.stop()}}),e,this)})))},o.getIntersection=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getIntersection"),o=i.unwrap(n),s=this.instance.getIntersectionOrNullObject(o),e.next=5,r.sync.call(this,t.Read);case 5:if(!s.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new a(s,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getLastCell=function(){return e.prototype.traceCall.call(this,"getLastCell"),new a(this.instance.getLastCell(),this.engine)},o.getLastColumn=function(){return e.prototype.traceCall.call(this,"getLastColumn"),new a(this.instance.getLastColumn(),this.engine)},o.getLastRow=function(){return e.prototype.traceCall.call(this,"getLastRow"),new a(this.instance.getLastRow(),this.engine)},o.getMergedAreas=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMergedAreas"),r=this.instance.getMergedAreasOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new v(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getOffsetRange=function(t,n){e.prototype.traceCall.call(this,"getOffsetRange");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getOffsetRange(r,o),this.engine)},o.getPivotTables=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o,s=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotTables"),a=i.unwrap(n),(o=this.instance.getPivotTables(a)).load("items"),e.next=6,r.sync.call(this,t.Read);case 6:return e.abrupt("return",o.items.map((function(e){return new Te(e,s.engine)})));case 7:case"end":return e.stop()}}),e,this)})))},o.getRangeEdge=function(t,n){e.prototype.traceCall.call(this,"getRangeEdge");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getRangeEdge(r,o),this.engine)},o.getResizedRange=function(t,n){e.prototype.traceCall.call(this,"getResizedRange");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getResizedRange(r,o),this.engine)},o.getRow=function(t){e.prototype.traceCall.call(this,"getRow");var n=i.unwrap(t);return new a(this.instance.getRow(n),this.engine)},o.getRowsAbove=function(t){e.prototype.traceCall.call(this,"getRowsAbove");var n=i.unwrap(t);return new a(this.instance.getRowsAbove(n),this.engine)},o.getRowsBelow=function(t){e.prototype.traceCall.call(this,"getRowsBelow");var n=i.unwrap(t);return new a(this.instance.getRowsBelow(n),this.engine)},o.getSpecialCells=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s,l;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"getSpecialCells"),o=i.unwrap(n),s=i.unwrap(r),l=this.instance.getSpecialCellsOrNullObject(o,s),e.next=6,a.sync.call(this,t.Read);case 6:if(!l.isNullObject){e.next=8;break}return e.abrupt("return",void 0);case 8:return e.abrupt("return",new v(l,this.engine));case 9:case"end":return e.stop()}}),e,this)})))},o.getSpillParent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSpillParent"),r=this.instance.getSpillParentOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new a(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getSpillingToRange=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSpillingToRange"),r=this.instance.getSpillingToRangeOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new a(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getSurroundingRegion=function(){return e.prototype.traceCall.call(this,"getSurroundingRegion"),new a(this.instance.getSurroundingRegion(),this.engine)},o.getTables=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o,s=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getTables"),a=i.unwrap(n),(o=this.instance.getTables(a)).load("items"),e.next=6,r.sync.call(this,t.Read);case 6:return e.abrupt("return",o.items.map((function(e){return new A(e,s.engine)})));case 7:case"end":return e.stop()}}),e,this)})))},o.getUsedRange=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getUsedRange"),o=i.unwrap(n),s=this.instance.getUsedRangeOrNullObject(o),e.next=5,r.sync.call(this,t.Read);case 5:if(!s.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new a(s,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getVisibleView=function(){return e.prototype.traceCall.call(this,"getVisibleView"),new C(this.instance.getVisibleView(),this.engine)},o.group=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"group"),a=i.unwrap(n),this.instance.group(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.hideGroupDetails=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"hideGroupDetails"),a=i.unwrap(n),this.instance.hideGroupDetails(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.insert=function(t){e.prototype.traceCall.call(this,"insert");var n=i.unwrap(t);return new a(this.instance.insert(n),this.engine)},o.merge=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"merge"),a=i.unwrap(n),this.instance.merge(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.moveTo=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"moveTo"),a=i.unwrap(n),this.instance.moveTo(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.removeDuplicates=function(t,n){e.prototype.traceCall.call(this,"removeDuplicates");var r=i.unwrap(t),a=i.unwrap(n);return new E(this.instance.removeDuplicates(r,a),this.engine)},o.replaceAll=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"replaceAll"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),u=this.instance.replaceAll(s,l,c),e.next=7,o.sync.call(this,t.Read);case 7:return e.abrupt("return",u.value);case 8:case"end":return e.stop()}}),e,this)})))},o.select=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"select"),this.instance.select(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.setDirty=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"setDirty"),this.instance.setDirty(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.showCard=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"showCard"),this.instance.showCard(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.showGroupDetails=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"showGroupDetails"),a=i.unwrap(n),this.instance.showGroupDetails(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.ungroup=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"ungroup"),a=i.unwrap(n),this.instance.ungroup(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.unmerge=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"unmerge"),this.instance.unmerge(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormula=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormula"),(r=this.instance.getCell(0,0)).load("formulas"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.formulas[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),this.instance.formulas=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormulaLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulaLocal"),(r=this.instance.getCell(0,0)).load("formulasLocal"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.formulasLocal[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.setFormulaLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulaLocal"),this.instance.formulasLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormulaR1C1=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulaR1C1"),(r=this.instance.getCell(0,0)).load("formulasR1C1"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.formulasR1C1[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.setFormulaR1C1=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulaR1C1"),this.instance.formulasR1C1=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLinkedDataTypeState=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkedDataTypeState"),(r=this.instance.getCell(0,0)).load("linkedDataTypeState"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.linkedDataTypeState[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),(r=this.instance.getCell(0,0)).load("numberFormat"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.numberFormat[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNumberFormatLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormatLocal"),(r=this.instance.getCell(0,0)).load("numberFormatLocal"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.numberFormatLocal[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.setNumberFormatLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormatLocal"),this.instance.numberFormatLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNumberFormatCategory=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormatCategory"),(r=this.instance.getCell(0,0)).load("numberFormatCategories"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.numberFormatCategories[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),(r=this.instance.getCell(0,0)).load("text"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.text[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.getValueType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValueType"),(r=this.instance.getCell(0,0)).load("valueTypes"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.valueTypes[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.getValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValue"),(r=this.instance.getCell(0,0)).load("values"),e.next=5,n.sync.call(this,t.Read);case 5:return e.abrupt("return",r.values[0][0]);case 6:case"end":return e.stop()}}),e,this)})))},o.setValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setValue"),this.instance.values=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.Range=b;var v=function(e){function a(t,r){var a;return a=e.call(this,"RangeAreas",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getAreas=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAreas"),this.instance.areas.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.areas.items.map((function(e){return new b(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getConditionalFormats=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getConditionalFormats"),this.instance.conditionalFormats.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.conditionalFormats.items.map((function(e){return new Ge(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addConditionalFormat=function(t){e.prototype.traceCall.call(this,"addConditionalFormat");var n=i.unwrap(t),r=this.instance.conditionalFormats.add(n);return new Ge(r,this.engine)},o.clearAllConditionalFormats=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clearAllConditionalFormats"),this.instance.conditionalFormats.clearAll(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getConditionalFormat=function(t){e.prototype.traceCall.call(this,"getConditionalFormat");var n=i.unwrap(t),r=this.instance.conditionalFormats.getItem(n);return new Ge(r,this.engine)},o.getAddress=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAddress"),this.instance.load("address"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.address);case 5:case"end":return e.stop()}}),e,this)})))},o.getAddressLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAddressLocal"),this.instance.load("addressLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.addressLocal);case 5:case"end":return e.stop()}}),e,this)})))},o.getAreaCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAreaCount"),this.instance.load("areaCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.areaCount);case 5:case"end":return e.stop()}}),e,this)})))},o.getCellCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCellCount"),this.instance.load("cellCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.cellCount);case 5:case"end":return e.stop()}}),e,this)})))},o.getDataValidation=function(){e.prototype.traceCall.call(this,"getDataValidation");var t=this.instance.dataValidation;return new S(t,this.engine)},o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new k(t,this.engine)},o.getIsEntireColumn=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsEntireColumn"),this.instance.load("isEntireColumn"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isEntireColumn);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsEntireRow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsEntireRow"),this.instance.load("isEntireRow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isEntireRow);case 5:case"end":return e.stop()}}),e,this)})))},o.getPredefinedCellStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPredefinedCellStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},o.setPredefinedCellStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPredefinedCellStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWorksheet=function(){e.prototype.traceCall.call(this,"getWorksheet");var t=this.instance.worksheet;return new m(t,this.engine)},o.calculate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"calculate"),this.instance.calculate(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.clear=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"clear"),a=i.unwrap(n),this.instance.clear(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.convertDataTypeToText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"convertDataTypeToText"),this.instance.convertDataTypeToText(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.copyFrom=function(n,r,a,o){var l=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,c,u,h;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l.traceCall.call(this,"copyFrom"),s=i.unwrap(n),c=i.unwrap(r),u=i.unwrap(a),h=i.unwrap(o),this.instance.copyFrom(s,c,u,h),e.next=8,l.sync.call(this,t.Write);case 8:case"end":return e.stop()}}),e,this)})))},o.getEntireColumn=function(){return e.prototype.traceCall.call(this,"getEntireColumn"),new a(this.instance.getEntireColumn(),this.engine)},o.getEntireRow=function(){return e.prototype.traceCall.call(this,"getEntireRow"),new a(this.instance.getEntireRow(),this.engine)},o.getIntersection=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getIntersection"),o=i.unwrap(n),s=this.instance.getIntersectionOrNullObject(o),e.next=5,r.sync.call(this,t.Read);case 5:if(!s.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new a(s,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getOffsetRangeAreas=function(t,n){e.prototype.traceCall.call(this,"getOffsetRangeAreas");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getOffsetRangeAreas(r,o),this.engine)},o.getSpecialCells=function(n,r){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"getSpecialCells"),s=i.unwrap(n),l=i.unwrap(r),c=this.instance.getSpecialCellsOrNullObject(s,l),e.next=6,o.sync.call(this,t.Read);case 6:if(!c.isNullObject){e.next=8;break}return e.abrupt("return",void 0);case 8:return e.abrupt("return",new a(c,this.engine));case 9:case"end":return e.stop()}}),e,this)})))},o.getTables=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o,s=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getTables"),a=i.unwrap(n),(o=this.instance.getTables(a)).load("items"),e.next=6,r.sync.call(this,t.Read);case 6:return e.abrupt("return",o.items.map((function(e){return new A(e,s.engine)})));case 7:case"end":return e.stop()}}),e,this)})))},o.getUsedRangeAreas=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getUsedRangeAreas"),o=i.unwrap(n),s=this.instance.getUsedRangeAreasOrNullObject(o),e.next=5,r.sync.call(this,t.Read);case 5:if(!s.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new a(s,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.setDirty=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"setDirty"),this.instance.setDirty(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.RangeAreas=v;var w=function(e){function a(t,r){var a;return a=e.call(this,"WorkbookRangeAreas",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getAreas=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAreas"),this.instance.areas.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.areas.items.map((function(e){return new v(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getRanges=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRanges"),this.instance.ranges.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.ranges.items.map((function(e){return new b(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getAddresses=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAddresses"),this.instance.load("addresses"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.addresses);case 5:case"end":return e.stop()}}),e,this)})))},o.getRangeAreasBySheet=function(t){e.prototype.traceCall.call(this,"getRangeAreasBySheet");var n=i.unwrap(t);return new v(this.instance.getRangeAreasOrNullObjectBySheet(n),this.engine)},a}(i);e.WorkbookRangeAreas=w;var C=function(e){function a(t,r){var a;return a=e.call(this,"RangeView",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getRows=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRows"),this.instance.rows.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rows.items.map((function(e){return new a(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},i.getCellAddresses=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCellAddresses"),this.instance.load("cellAddresses"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.cellAddresses);case 5:case"end":return e.stop()}}),e,this)})))},i.getColumnCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnCount"),this.instance.load("columnCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnCount);case 5:case"end":return e.stop()}}),e,this)})))},i.getFormulas=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulas"),this.instance.load("formulas"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulas);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormulas=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulas"),this.instance.formulas=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormulasLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulasLocal"),this.instance.load("formulasLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulasLocal);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormulasLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulasLocal"),this.instance.formulasLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormulasR1C1=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulasR1C1"),this.instance.load("formulasR1C1"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulasR1C1);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormulasR1C1=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulasR1C1"),this.instance.formulasR1C1=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIndex"),this.instance.load("index"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.index);case 5:case"end":return e.stop()}}),e,this)})))},i.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRowCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowCount"),this.instance.load("rowCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rowCount);case 5:case"end":return e.stop()}}),e,this)})))},i.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},i.getValueTypes=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValueTypes"),this.instance.load("valueTypes"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.valueTypes);case 5:case"end":return e.stop()}}),e,this)})))},i.getValues=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValues"),this.instance.load("values"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.values);case 5:case"end":return e.stop()}}),e,this)})))},i.setValues=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setValues"),this.instance.values=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRange=function(){return e.prototype.traceCall.call(this,"getRange"),new b(this.instance.getRange(),this.engine)},a}(i);e.RangeView=C;var R=function(e){function a(t,r){var a;return a=e.call(this,"NamedItem",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getArrayValues=function(){e.prototype.traceCall.call(this,"getArrayValues");var t=this.instance.arrayValues;return new _(t,this.engine)},i.getComment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getComment"),this.instance.load("comment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.comment);case 5:case"end":return e.stop()}}),e,this)})))},i.setComment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setComment"),this.instance.comment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormula=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormula"),this.instance.load("formula"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formula);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),this.instance.formula=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.getScope=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getScope"),this.instance.load("scope"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.scope);case 5:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.getValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValue"),this.instance.load("value"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.value);case 5:case"end":return e.stop()}}),e,this)})))},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWorksheet=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWorksheet"),r=this.instance.worksheetOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new m(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRange=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRange"),r=this.instance.getRangeOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new b(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},a}(i);e.NamedItem=R;var _=function(e){function a(t,r){var a;return a=e.call(this,"NamedItemArrayValues",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getTypes=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTypes"),this.instance.load("types"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.types);case 5:case"end":return e.stop()}}),e,this)})))},i.getValues=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValues"),this.instance.load("values"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.values);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.NamedItemArrayValues=_;var x=function(e){function a(t,r){var a;return a=e.call(this,"Binding",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRange=function(){return e.prototype.traceCall.call(this,"getRange"),new b(this.instance.getRange(),this.engine)},i.getTable=function(){return e.prototype.traceCall.call(this,"getTable"),new A(this.instance.getTable(),this.engine)},i.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),r=this.instance.getText(),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",r.value);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.Binding=x;var A=function(e){function a(t,r){var a;return a=e.call(this,"Table",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getColumns=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumns"),this.instance.columns.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columns.items.map((function(e){return new T(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getColumn=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getColumn"),a=i.unwrap(n),o=this.instance.columns.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new T(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getAutoFilter=function(){e.prototype.traceCall.call(this,"getAutoFilter");var t=this.instance.autoFilter;return new Ce(t,this.engine)},o.getHighlightFirstColumn=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHighlightFirstColumn"),this.instance.load("highlightFirstColumn"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.highlightFirstColumn);case 5:case"end":return e.stop()}}),e,this)})))},o.setHighlightFirstColumn=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHighlightFirstColumn"),this.instance.highlightFirstColumn=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHighlightLastColumn=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHighlightLastColumn"),this.instance.load("highlightLastColumn"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.highlightLastColumn);case 5:case"end":return e.stop()}}),e,this)})))},o.setHighlightLastColumn=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHighlightLastColumn"),this.instance.highlightLastColumn=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getLegacyId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLegacyId"),this.instance.load("legacyId"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.legacyId);case 5:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowBandedColumns=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowBandedColumns"),this.instance.load("showBandedColumns"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showBandedColumns);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowBandedColumns=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowBandedColumns"),this.instance.showBandedColumns=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowBandedRows=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowBandedRows"),this.instance.load("showBandedRows"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showBandedRows);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowBandedRows=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowBandedRows"),this.instance.showBandedRows=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowFilterButton=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowFilterButton"),this.instance.load("showFilterButton"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showFilterButton);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowFilterButton=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowFilterButton"),this.instance.showFilterButton=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowHeaders=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowHeaders"),this.instance.load("showHeaders"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showHeaders);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowHeaders=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowHeaders"),this.instance.showHeaders=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowTotals=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowTotals"),this.instance.load("showTotals"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showTotals);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowTotals=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowTotals"),this.instance.showTotals=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSort=function(){e.prototype.traceCall.call(this,"getSort");var t=this.instance.sort;return new ve(t,this.engine)},o.getPredefinedTableStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPredefinedTableStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},o.setPredefinedTableStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPredefinedTableStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWorksheet=function(){e.prototype.traceCall.call(this,"getWorksheet");var t=this.instance.worksheet;return new m(t,this.engine)},o.clearFilters=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clearFilters"),this.instance.clearFilters(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.convertToRange=function(){return e.prototype.traceCall.call(this,"convertToRange"),new b(this.instance.convertToRange(),this.engine)},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRangeBetweenHeaderAndTotal=function(){return e.prototype.traceCall.call(this,"getRangeBetweenHeaderAndTotal"),new b(this.instance.getDataBodyRange(),this.engine)},o.getHeaderRowRange=function(){return e.prototype.traceCall.call(this,"getHeaderRowRange"),new b(this.instance.getHeaderRowRange(),this.engine)},o.getRange=function(){return e.prototype.traceCall.call(this,"getRange"),new b(this.instance.getRange(),this.engine)},o.getTotalRowRange=function(){return e.prototype.traceCall.call(this,"getTotalRowRange"),new b(this.instance.getTotalRowRange(),this.engine)},o.reapplyFilters=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"reapplyFilters"),this.instance.reapplyFilters(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.resize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"resize"),a=i.unwrap(n),this.instance.resize(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.addRow=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"addRow"),i=Array.isArray(r)?[r]:r,this.instance.rows.add(n,i),e.next=5,this.sync(t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.addRows=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"addRows"),this.instance.rows.add(n,r),e.next=4,this.sync(t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.addColumn=function(t,n,r){e.prototype.traceCall.call(this,"addColumn");var a=Array.isArray(n)?n.map((function(e){return[e]})):n,i=this.instance.columns.add(t,a,r);return new T(i,this.engine)},o.deleteRowsAt=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a.traceCall.call(this,"deleteRowsAt"),r)for(;r>0;)this.instance.rows.getItemAt(n).delete(),r--;else this.instance.rows.getItemAt(n).delete();return e.next=4,this.sync(t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getColumnById=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getColumnById"),a=i.unwrap(n),o=this.instance.columns.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new T(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getColumnByName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getColumnByName"),a=i.unwrap(n),o=this.instance.columns.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new T(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getRowCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowCount"),r=this.instance.rows.getCount(),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",r.value);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.Table=A;var T=function(e){function a(t,r){var a;return a=e.call(this,"TableColumn",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFilter=function(){e.prototype.traceCall.call(this,"getFilter");var t=this.instance.filter;return new we(t,this.engine)},i.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},i.getIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIndex"),this.instance.load("index"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.index);case 5:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRangeBetweenHeaderAndTotal=function(){return e.prototype.traceCall.call(this,"getRangeBetweenHeaderAndTotal"),new b(this.instance.getDataBodyRange(),this.engine)},i.getHeaderRowRange=function(){return e.prototype.traceCall.call(this,"getHeaderRowRange"),new b(this.instance.getHeaderRowRange(),this.engine)},i.getRange=function(){return e.prototype.traceCall.call(this,"getRange"),new b(this.instance.getRange(),this.engine)},i.getTotalRowRange=function(){return e.prototype.traceCall.call(this,"getTotalRowRange"),new b(this.instance.getTotalRowRange(),this.engine)},a}(i);e.TableColumn=T;var S=function(e){function a(t,r){var a;return a=e.call(this,"DataValidation",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getErrorAlert=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getErrorAlert"),this.instance.load("errorAlert"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.errorAlert);case 5:case"end":return e.stop()}}),e,this)})))},i.setErrorAlert=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setErrorAlert"),this.instance.errorAlert=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getIgnoreBlanks=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIgnoreBlanks"),this.instance.load("ignoreBlanks"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.ignoreBlanks);case 5:case"end":return e.stop()}}),e,this)})))},i.setIgnoreBlanks=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIgnoreBlanks"),this.instance.ignoreBlanks=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPrompt=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrompt"),this.instance.load("prompt"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.prompt);case 5:case"end":return e.stop()}}),e,this)})))},i.setPrompt=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrompt"),this.instance.prompt=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRule"),this.instance.load("rule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rule);case 5:case"end":return e.stop()}}),e,this)})))},i.setRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRule"),this.instance.rule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.getValid=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValid"),this.instance.load("valid"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.valid);case 5:case"end":return e.stop()}}),e,this)})))},i.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getInvalidCells=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInvalidCells"),r=this.instance.getInvalidCellsOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new v(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},a}(i);e.DataValidation=S;var E=function(e){function a(t,r){var a;return a=e.call(this,"RemoveDuplicatesResult",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getRemoved=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRemoved"),this.instance.load("removed"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.removed);case 5:case"end":return e.stop()}}),e,this)})))},i.getUniqueRemaining=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUniqueRemaining"),this.instance.load("uniqueRemaining"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.uniqueRemaining);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.RemoveDuplicatesResult=E;var k=function(e){function a(t,r){var a;return a=e.call(this,"RangeFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getRangeBorderTintAndShade=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRangeBorderTintAndShade"),this.instance.borders.load("tintAndShade"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borders.tintAndShade);case 5:case"end":return e.stop()}}),e,this)})))},o.setRangeBorderTintAndShade=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRangeBorderTintAndShade"),this.instance.borders.tintAndShade=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBorders=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBorders"),this.instance.borders.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borders.items.map((function(e){return new O(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getRangeBorder=function(t){e.prototype.traceCall.call(this,"getRangeBorder");var n=i.unwrap(t),r=this.instance.borders.getItem(n);return new O(r,this.engine)},o.getAutoIndent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoIndent"),this.instance.load("autoIndent"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoIndent);case 5:case"end":return e.stop()}}),e,this)})))},o.setAutoIndent=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoIndent"),this.instance.autoIndent=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getColumnWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnWidth"),this.instance.load("columnWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnWidth);case 5:case"end":return e.stop()}}),e,this)})))},o.setColumnWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColumnWidth"),this.instance.columnWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new L(t,this.engine)},o.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new I(t,this.engine)},o.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIndentLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIndentLevel"),this.instance.load("indentLevel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.indentLevel);case 5:case"end":return e.stop()}}),e,this)})))},o.setIndentLevel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIndentLevel"),this.instance.indentLevel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getProtection=function(){e.prototype.traceCall.call(this,"getProtection");var t=this.instance.protection;return new P(t,this.engine)},o.getReadingOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadingOrder"),this.instance.load("readingOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readingOrder);case 5:case"end":return e.stop()}}),e,this)})))},o.setReadingOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setReadingOrder"),this.instance.readingOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRowHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowHeight"),this.instance.load("rowHeight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rowHeight);case 5:case"end":return e.stop()}}),e,this)})))},o.setRowHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRowHeight"),this.instance.rowHeight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShrinkToFit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShrinkToFit"),this.instance.load("shrinkToFit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.shrinkToFit);case 5:case"end":return e.stop()}}),e,this)})))},o.setShrinkToFit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShrinkToFit"),this.instance.shrinkToFit=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},o.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getUseStandardHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUseStandardHeight"),this.instance.load("useStandardHeight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.useStandardHeight);case 5:case"end":return e.stop()}}),e,this)})))},o.setUseStandardHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUseStandardHeight"),this.instance.useStandardHeight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getUseStandardWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUseStandardWidth"),this.instance.load("useStandardWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.useStandardWidth);case 5:case"end":return e.stop()}}),e,this)})))},o.setUseStandardWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUseStandardWidth"),this.instance.useStandardWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWrapText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWrapText"),this.instance.load("wrapText"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.wrapText);case 5:case"end":return e.stop()}}),e,this)})))},o.setWrapText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWrapText"),this.instance.wrapText=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.adjustIndent=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"adjustIndent"),a=i.unwrap(n),this.instance.adjustIndent(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.autofitColumns=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"autofitColumns"),this.instance.autofitColumns(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.autofitRows=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"autofitRows"),this.instance.autofitRows(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.RangeFormat=k;var P=function(e){function a(t,r){var a;return a=e.call(this,"FormatProtection",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormulaHidden=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulaHidden"),this.instance.load("formulaHidden"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulaHidden);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormulaHidden=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulaHidden"),this.instance.formulaHidden=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLocked=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLocked"),this.instance.load("locked"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.locked);case 5:case"end":return e.stop()}}),e,this)})))},i.setLocked=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLocked"),this.instance.locked=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.FormatProtection=P;var L=function(e){function a(t,r){var a;return a=e.call(this,"RangeFill",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPattern=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPattern"),this.instance.load("pattern"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.pattern);case 5:case"end":return e.stop()}}),e,this)})))},i.setPattern=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPattern"),this.instance.pattern=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPatternColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPatternColor"),this.instance.load("patternColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.patternColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setPatternColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPatternColor"),this.instance.patternColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPatternTintAndShade=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPatternTintAndShade"),this.instance.load("patternTintAndShade"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.patternTintAndShade);case 5:case"end":return e.stop()}}),e,this)})))},i.setPatternTintAndShade=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPatternTintAndShade"),this.instance.patternTintAndShade=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTintAndShade=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTintAndShade"),this.instance.load("tintAndShade"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tintAndShade);case 5:case"end":return e.stop()}}),e,this)})))},i.setTintAndShade=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTintAndShade"),this.instance.tintAndShade=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.RangeFill=L;var O=function(e){function a(t,r){var a;return a=e.call(this,"RangeBorder",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSideIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSideIndex"),this.instance.load("sideIndex"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.sideIndex);case 5:case"end":return e.stop()}}),e,this)})))},i.getStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},i.setStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTintAndShade=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTintAndShade"),this.instance.load("tintAndShade"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tintAndShade);case 5:case"end":return e.stop()}}),e,this)})))},i.setTintAndShade=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTintAndShade"),this.instance.tintAndShade=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWeight"),this.instance.load("weight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.weight);case 5:case"end":return e.stop()}}),e,this)})))},i.setWeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWeight"),this.instance.weight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.RangeBorder=O;var I=function(e){function a(t,r){var a;return a=e.call(this,"RangeFont",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBold=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBold"),this.instance.load("bold"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bold);case 5:case"end":return e.stop()}}),e,this)})))},i.setBold=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBold"),this.instance.bold=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getItalic=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getItalic"),this.instance.load("italic"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.italic);case 5:case"end":return e.stop()}}),e,this)})))},i.setItalic=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setItalic"),this.instance.italic=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSize"),this.instance.load("size"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.size);case 5:case"end":return e.stop()}}),e,this)})))},i.setSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSize"),this.instance.size=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getStrikethrough=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStrikethrough"),this.instance.load("strikethrough"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.strikethrough);case 5:case"end":return e.stop()}}),e,this)})))},i.setStrikethrough=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStrikethrough"),this.instance.strikethrough=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSubscript=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSubscript"),this.instance.load("subscript"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.subscript);case 5:case"end":return e.stop()}}),e,this)})))},i.setSubscript=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSubscript"),this.instance.subscript=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSuperscript=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSuperscript"),this.instance.load("superscript"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.superscript);case 5:case"end":return e.stop()}}),e,this)})))},i.setSuperscript=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSuperscript"),this.instance.superscript=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTintAndShade=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTintAndShade"),this.instance.load("tintAndShade"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tintAndShade);case 5:case"end":return e.stop()}}),e,this)})))},i.setTintAndShade=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTintAndShade"),this.instance.tintAndShade=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUnderline=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUnderline"),this.instance.load("underline"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.underline);case 5:case"end":return e.stop()}}),e,this)})))},i.setUnderline=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUnderline"),this.instance.underline=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.RangeFont=I;var F=function(e){function a(t,r){var a;return a=e.call(this,"Chart",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getSeries=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSeries"),this.instance.series.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.series.items.map((function(e){return new G(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addChartSeries=function(t,n){e.prototype.traceCall.call(this,"addChartSeries");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.series.add(r,a);return new G(o,this.engine)},o.getAxes=function(){e.prototype.traceCall.call(this,"getAxes");var t=this.instance.axes;return new W(t,this.engine)},o.getCategoryLabelLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCategoryLabelLevel"),this.instance.load("categoryLabelLevel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.categoryLabelLevel);case 5:case"end":return e.stop()}}),e,this)})))},o.setCategoryLabelLevel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCategoryLabelLevel"),this.instance.categoryLabelLevel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getChartType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getChartType"),this.instance.load("chartType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.chartType);case 5:case"end":return e.stop()}}),e,this)})))},o.setChartType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setChartType"),this.instance.chartType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getDataLabels=function(){e.prototype.traceCall.call(this,"getDataLabels");var t=this.instance.dataLabels;return new q(t,this.engine)},o.getDisplayBlanksAs=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDisplayBlanksAs"),this.instance.load("displayBlanksAs"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.displayBlanksAs);case 5:case"end":return e.stop()}}),e,this)})))},o.setDisplayBlanksAs=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDisplayBlanksAs"),this.instance.displayBlanksAs=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new D(t,this.engine)},o.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},o.setHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHeight"),this.instance.height=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},o.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLegend=function(){e.prototype.traceCall.call(this,"getLegend");var t=this.instance.legend;return new $(t,this.engine)},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPivotOptions=function(){e.prototype.traceCall.call(this,"getPivotOptions");var t=this.instance.pivotOptions;return new j(t,this.engine)},o.getPlotArea=function(){e.prototype.traceCall.call(this,"getPlotArea");var t=this.instance.plotArea;return new ye(t,this.engine)},o.getPlotBy=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPlotBy"),this.instance.load("plotBy"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.plotBy);case 5:case"end":return e.stop()}}),e,this)})))},o.setPlotBy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPlotBy"),this.instance.plotBy=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPlotVisibleOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPlotVisibleOnly"),this.instance.load("plotVisibleOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.plotVisibleOnly);case 5:case"end":return e.stop()}}),e,this)})))},o.setPlotVisibleOnly=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPlotVisibleOnly"),this.instance.plotVisibleOnly=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSeriesNameLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSeriesNameLevel"),this.instance.load("seriesNameLevel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.seriesNameLevel);case 5:case"end":return e.stop()}}),e,this)})))},o.setSeriesNameLevel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSeriesNameLevel"),this.instance.seriesNameLevel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowAllFieldButtons=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowAllFieldButtons"),this.instance.load("showAllFieldButtons"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showAllFieldButtons);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowAllFieldButtons=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowAllFieldButtons"),this.instance.showAllFieldButtons=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowDataLabelsOverMaximum=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowDataLabelsOverMaximum"),this.instance.load("showDataLabelsOverMaximum"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showDataLabelsOverMaximum);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowDataLabelsOverMaximum=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowDataLabelsOverMaximum"),this.instance.showDataLabelsOverMaximum=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},o.setStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTitle=function(){e.prototype.traceCall.call(this,"getTitle");var t=this.instance.title;return new re(t,this.engine)},o.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},o.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},o.setWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWidth"),this.instance.width=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWorksheet=function(){e.prototype.traceCall.call(this,"getWorksheet");var t=this.instance.worksheet;return new m(t,this.engine)},o.activate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"activate"),this.instance.activate(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getImage=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c,u;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"getImage"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),u=this.instance.getImage(s,l,c),e.next=7,o.sync.call(this,t.Read);case 7:return e.abrupt("return",u.value);case 8:case"end":return e.stop()}}),e,this)})))},o.setData=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"setData"),o=i.unwrap(n),s=i.unwrap(r),this.instance.setData(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},o.setPosition=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"setPosition"),o=i.unwrap(n),s=i.unwrap(r),this.instance.setPosition(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},a}(i);e.Chart=F;var j=function(e){function a(t,r){var a;return a=e.call(this,"ChartPivotOptions",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getShowAxisFieldButtons=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowAxisFieldButtons"),this.instance.load("showAxisFieldButtons"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showAxisFieldButtons);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowAxisFieldButtons=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowAxisFieldButtons"),this.instance.showAxisFieldButtons=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowLegendFieldButtons=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowLegendFieldButtons"),this.instance.load("showLegendFieldButtons"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showLegendFieldButtons);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowLegendFieldButtons=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowLegendFieldButtons"),this.instance.showLegendFieldButtons=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowReportFilterFieldButtons=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowReportFilterFieldButtons"),this.instance.load("showReportFilterFieldButtons"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showReportFilterFieldButtons);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowReportFilterFieldButtons=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowReportFilterFieldButtons"),this.instance.showReportFilterFieldButtons=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowValueFieldButtons=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowValueFieldButtons"),this.instance.load("showValueFieldButtons"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showValueFieldButtons);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowValueFieldButtons=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowValueFieldButtons"),this.instance.showValueFieldButtons=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartPivotOptions=j;var D=function(e){function a(t,r){var a;return a=e.call(this,"ChartAreaFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},i.getColorScheme=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColorScheme"),this.instance.load("colorScheme"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.colorScheme);case 5:case"end":return e.stop()}}),e,this)})))},i.setColorScheme=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColorScheme"),this.instance.colorScheme=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},i.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},i.getRoundedCorners=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRoundedCorners"),this.instance.load("roundedCorners"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.roundedCorners);case 5:case"end":return e.stop()}}),e,this)})))},i.setRoundedCorners=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRoundedCorners"),this.instance.roundedCorners=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartAreaFormat=D;var G=function(e){function a(t,r){var a;return a=e.call(this,"ChartSeries",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getPoints=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPoints"),this.instance.points.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.points.items.map((function(e){return new N(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getTrendlines=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTrendlines"),this.instance.trendlines.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.trendlines.items.map((function(e){return new pe(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addChartTrendline=function(t){e.prototype.traceCall.call(this,"addChartTrendline");var n=i.unwrap(t),r=this.instance.trendlines.add(n);return new pe(r,this.engine)},o.getChartTrendline=function(t){e.prototype.traceCall.call(this,"getChartTrendline");var n=i.unwrap(t),r=this.instance.trendlines.getItem(n);return new pe(r,this.engine)},o.getAxisGroup=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAxisGroup"),this.instance.load("axisGroup"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.axisGroup);case 5:case"end":return e.stop()}}),e,this)})))},o.setAxisGroup=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAxisGroup"),this.instance.axisGroup=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBinOptions=function(){e.prototype.traceCall.call(this,"getBinOptions");var t=this.instance.binOptions;return new le(t,this.engine)},o.getBoxwhiskerOptions=function(){e.prototype.traceCall.call(this,"getBoxwhiskerOptions");var t=this.instance.boxwhiskerOptions;return new ce(t,this.engine)},o.getBubbleScale=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBubbleScale"),this.instance.load("bubbleScale"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bubbleScale);case 5:case"end":return e.stop()}}),e,this)})))},o.setBubbleScale=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBubbleScale"),this.instance.bubbleScale=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getChartType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getChartType"),this.instance.load("chartType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.chartType);case 5:case"end":return e.stop()}}),e,this)})))},o.setChartType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setChartType"),this.instance.chartType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getDataLabels=function(){e.prototype.traceCall.call(this,"getDataLabels");var t=this.instance.dataLabels;return new q(t,this.engine)},o.getDoughnutHoleSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDoughnutHoleSize"),this.instance.load("doughnutHoleSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.doughnutHoleSize);case 5:case"end":return e.stop()}}),e,this)})))},o.setDoughnutHoleSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDoughnutHoleSize"),this.instance.doughnutHoleSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getExplosion=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getExplosion"),this.instance.load("explosion"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.explosion);case 5:case"end":return e.stop()}}),e,this)})))},o.setExplosion=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setExplosion"),this.instance.explosion=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFiltered=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFiltered"),this.instance.load("filtered"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.filtered);case 5:case"end":return e.stop()}}),e,this)})))},o.setFiltered=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFiltered"),this.instance.filtered=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFirstSliceAngle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFirstSliceAngle"),this.instance.load("firstSliceAngle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.firstSliceAngle);case 5:case"end":return e.stop()}}),e,this)})))},o.setFirstSliceAngle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFirstSliceAngle"),this.instance.firstSliceAngle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new B(t,this.engine)},o.getGapWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGapWidth"),this.instance.load("gapWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gapWidth);case 5:case"end":return e.stop()}}),e,this)})))},o.setGapWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGapWidth"),this.instance.gapWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMaximumColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMaximumColor"),this.instance.load("gradientMaximumColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMaximumColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMaximumColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMaximumColor"),this.instance.gradientMaximumColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMaximumType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMaximumType"),this.instance.load("gradientMaximumType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMaximumType);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMaximumType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMaximumType"),this.instance.gradientMaximumType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMaximumValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMaximumValue"),this.instance.load("gradientMaximumValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMaximumValue);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMaximumValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMaximumValue"),this.instance.gradientMaximumValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMidpointColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMidpointColor"),this.instance.load("gradientMidpointColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMidpointColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMidpointColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMidpointColor"),this.instance.gradientMidpointColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMidpointType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMidpointType"),this.instance.load("gradientMidpointType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMidpointType);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMidpointType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMidpointType"),this.instance.gradientMidpointType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMidpointValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMidpointValue"),this.instance.load("gradientMidpointValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMidpointValue);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMidpointValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMidpointValue"),this.instance.gradientMidpointValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMinimumColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMinimumColor"),this.instance.load("gradientMinimumColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMinimumColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMinimumColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMinimumColor"),this.instance.gradientMinimumColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMinimumType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMinimumType"),this.instance.load("gradientMinimumType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMinimumType);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMinimumType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMinimumType"),this.instance.gradientMinimumType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientMinimumValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientMinimumValue"),this.instance.load("gradientMinimumValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientMinimumValue);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientMinimumValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientMinimumValue"),this.instance.gradientMinimumValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGradientStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientStyle"),this.instance.load("gradientStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientStyle);case 5:case"end":return e.stop()}}),e,this)})))},o.setGradientStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientStyle"),this.instance.gradientStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHasDataLabels=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHasDataLabels"),this.instance.load("hasDataLabels"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hasDataLabels);case 5:case"end":return e.stop()}}),e,this)})))},o.setHasDataLabels=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHasDataLabels"),this.instance.hasDataLabels=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getInvertColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInvertColor"),this.instance.load("invertColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.invertColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setInvertColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInvertColor"),this.instance.invertColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getInvertIfNegative=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInvertIfNegative"),this.instance.load("invertIfNegative"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.invertIfNegative);case 5:case"end":return e.stop()}}),e,this)})))},o.setInvertIfNegative=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInvertIfNegative"),this.instance.invertIfNegative=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMapOptions=function(){e.prototype.traceCall.call(this,"getMapOptions");var t=this.instance.mapOptions;return new ne(t,this.engine)},o.getMarkerBackgroundColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerBackgroundColor"),this.instance.load("markerBackgroundColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerBackgroundColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setMarkerBackgroundColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerBackgroundColor"),this.instance.markerBackgroundColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMarkerForegroundColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerForegroundColor"),this.instance.load("markerForegroundColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerForegroundColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setMarkerForegroundColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerForegroundColor"),this.instance.markerForegroundColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMarkerSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerSize"),this.instance.load("markerSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerSize);case 5:case"end":return e.stop()}}),e,this)})))},o.setMarkerSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerSize"),this.instance.markerSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMarkerStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerStyle"),this.instance.load("markerStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerStyle);case 5:case"end":return e.stop()}}),e,this)})))},o.setMarkerStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerStyle"),this.instance.markerStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getOverlap=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOverlap"),this.instance.load("overlap"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.overlap);case 5:case"end":return e.stop()}}),e,this)})))},o.setOverlap=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOverlap"),this.instance.overlap=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getParentLabelStrategy=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getParentLabelStrategy"),this.instance.load("parentLabelStrategy"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.parentLabelStrategy);case 5:case"end":return e.stop()}}),e,this)})))},o.setParentLabelStrategy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setParentLabelStrategy"),this.instance.parentLabelStrategy=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPlotOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPlotOrder"),this.instance.load("plotOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.plotOrder);case 5:case"end":return e.stop()}}),e,this)})))},o.setPlotOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPlotOrder"),this.instance.plotOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSecondPlotSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSecondPlotSize"),this.instance.load("secondPlotSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.secondPlotSize);case 5:case"end":return e.stop()}}),e,this)})))},o.setSecondPlotSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSecondPlotSize"),this.instance.secondPlotSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowConnectorLines=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowConnectorLines"),this.instance.load("showConnectorLines"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showConnectorLines);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowConnectorLines=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowConnectorLines"),this.instance.showConnectorLines=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowLeaderLines=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowLeaderLines"),this.instance.load("showLeaderLines"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showLeaderLines);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowLeaderLines=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowLeaderLines"),this.instance.showLeaderLines=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowShadow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowShadow"),this.instance.load("showShadow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showShadow);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowShadow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowShadow"),this.instance.showShadow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSmooth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSmooth"),this.instance.load("smooth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.smooth);case 5:case"end":return e.stop()}}),e,this)})))},o.setSmooth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSmooth"),this.instance.smooth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSplitType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSplitType"),this.instance.load("splitType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.splitType);case 5:case"end":return e.stop()}}),e,this)})))},o.setSplitType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSplitType"),this.instance.splitType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSplitValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSplitValue"),this.instance.load("splitValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.splitValue);case 5:case"end":return e.stop()}}),e,this)})))},o.setSplitValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSplitValue"),this.instance.splitValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVaryByCategories=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVaryByCategories"),this.instance.load("varyByCategories"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.varyByCategories);case 5:case"end":return e.stop()}}),e,this)})))},o.setVaryByCategories=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVaryByCategories"),this.instance.varyByCategories=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getXErrorBars=function(){e.prototype.traceCall.call(this,"getXErrorBars");var t=this.instance.xErrorBars;return new Y(t,this.engine)},o.getYErrorBars=function(){e.prototype.traceCall.call(this,"getYErrorBars");var t=this.instance.yErrorBars;return new Y(t,this.engine)},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getDimensionValues=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getDimensionValues"),a=i.unwrap(n),o=this.instance.getDimensionValues(a),e.next=5,r.sync.call(this,t.Read);case 5:return e.abrupt("return",o.value);case 6:case"end":return e.stop()}}),e,this)})))},o.setBubbleSizes=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBubbleSizes"),a=i.unwrap(n),this.instance.setBubbleSizes(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.setValues=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setValues"),a=i.unwrap(n),this.instance.setValues(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.setXAxisValues=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setXAxisValues"),a=i.unwrap(n),this.instance.setXAxisValues(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartSeries=G;var B=function(e){function t(t,r){var a;return a=e.call(this,"ChartSeriesFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getLine=function(){e.prototype.traceCall.call(this,"getLine");var t=this.instance.line;return new ue(t,this.engine)},t}(i);e.ChartSeriesFormat=B;var N=function(e){function a(t,r){var a;return a=e.call(this,"ChartPoint",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getDataLabel=function(){e.prototype.traceCall.call(this,"getDataLabel");var t=this.instance.dataLabel;return new X(t,this.engine)},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new M(t,this.engine)},i.getHasDataLabel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHasDataLabel"),this.instance.load("hasDataLabel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hasDataLabel);case 5:case"end":return e.stop()}}),e,this)})))},i.setHasDataLabel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHasDataLabel"),this.instance.hasDataLabel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMarkerBackgroundColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerBackgroundColor"),this.instance.load("markerBackgroundColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerBackgroundColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setMarkerBackgroundColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerBackgroundColor"),this.instance.markerBackgroundColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMarkerForegroundColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerForegroundColor"),this.instance.load("markerForegroundColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerForegroundColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setMarkerForegroundColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerForegroundColor"),this.instance.markerForegroundColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMarkerSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerSize"),this.instance.load("markerSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerSize);case 5:case"end":return e.stop()}}),e,this)})))},i.setMarkerSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerSize"),this.instance.markerSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMarkerStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMarkerStyle"),this.instance.load("markerStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.markerStyle);case 5:case"end":return e.stop()}}),e,this)})))},i.setMarkerStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMarkerStyle"),this.instance.markerStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValue"),this.instance.load("value"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.value);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartPoint=N;var M=function(e){function t(t,r){var a;return a=e.call(this,"ChartPointFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},t}(i);e.ChartPointFormat=M;var W=function(e){function t(t,r){var a;return a=e.call(this,"ChartAxes",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getCategoryAxis=function(){e.prototype.traceCall.call(this,"getCategoryAxis");var t=this.instance.categoryAxis;return new U(t,this.engine)},a.getSeriesAxis=function(){e.prototype.traceCall.call(this,"getSeriesAxis");var t=this.instance.seriesAxis;return new U(t,this.engine)},a.getValueAxis=function(){e.prototype.traceCall.call(this,"getValueAxis");var t=this.instance.valueAxis;return new U(t,this.engine)},a.getChartAxis=function(t,n){e.prototype.traceCall.call(this,"getChartAxis");var r=i.unwrap(t),a=i.unwrap(n);return new U(this.instance.getItem(r,a),this.engine)},t}(i);e.ChartAxes=W;var U=function(e){function a(t,r){var a;return a=e.call(this,"ChartAxis",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAlignment"),this.instance.load("alignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.alignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAlignment"),this.instance.alignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getAxisGroup=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAxisGroup"),this.instance.load("axisGroup"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.axisGroup);case 5:case"end":return e.stop()}}),e,this)})))},o.getBaseTimeUnit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBaseTimeUnit"),this.instance.load("baseTimeUnit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.baseTimeUnit);case 5:case"end":return e.stop()}}),e,this)})))},o.setBaseTimeUnit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBaseTimeUnit"),this.instance.baseTimeUnit=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCategoryType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCategoryType"),this.instance.load("categoryType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.categoryType);case 5:case"end":return e.stop()}}),e,this)})))},o.setCategoryType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCategoryType"),this.instance.categoryType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCustomDisplayUnit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCustomDisplayUnit"),this.instance.load("customDisplayUnit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.customDisplayUnit);case 5:case"end":return e.stop()}}),e,this)})))},o.getDisplayUnit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDisplayUnit"),this.instance.load("displayUnit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.displayUnit);case 5:case"end":return e.stop()}}),e,this)})))},o.setDisplayUnit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDisplayUnit"),this.instance.displayUnit=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new V(t,this.engine)},o.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsBetweenCategories=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsBetweenCategories"),this.instance.load("isBetweenCategories"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isBetweenCategories);case 5:case"end":return e.stop()}}),e,this)})))},o.setIsBetweenCategories=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIsBetweenCategories"),this.instance.isBetweenCategories=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},o.getLinkNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkNumberFormat"),this.instance.load("linkNumberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkNumberFormat);case 5:case"end":return e.stop()}}),e,this)})))},o.setLinkNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLinkNumberFormat"),this.instance.linkNumberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLogBase=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLogBase"),this.instance.load("logBase"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.logBase);case 5:case"end":return e.stop()}}),e,this)})))},o.setLogBase=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLogBase"),this.instance.logBase=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMajorGridlines=function(){e.prototype.traceCall.call(this,"getMajorGridlines");var t=this.instance.majorGridlines;return new J(t,this.engine)},o.getMajorTickMark=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMajorTickMark"),this.instance.load("majorTickMark"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.majorTickMark);case 5:case"end":return e.stop()}}),e,this)})))},o.setMajorTickMark=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMajorTickMark"),this.instance.majorTickMark=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMajorTimeUnitScale=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMajorTimeUnitScale"),this.instance.load("majorTimeUnitScale"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.majorTimeUnitScale);case 5:case"end":return e.stop()}}),e,this)})))},o.setMajorTimeUnitScale=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMajorTimeUnitScale"),this.instance.majorTimeUnitScale=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMajorUnit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMajorUnit"),this.instance.load("majorUnit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.majorUnit);case 5:case"end":return e.stop()}}),e,this)})))},o.setMajorUnit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMajorUnit"),this.instance.majorUnit=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMaximum=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMaximum"),this.instance.load("maximum"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.maximum);case 5:case"end":return e.stop()}}),e,this)})))},o.setMaximum=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMaximum"),this.instance.maximum=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMinimum=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMinimum"),this.instance.load("minimum"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.minimum);case 5:case"end":return e.stop()}}),e,this)})))},o.setMinimum=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMinimum"),this.instance.minimum=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMinorGridlines=function(){e.prototype.traceCall.call(this,"getMinorGridlines");var t=this.instance.minorGridlines;return new J(t,this.engine)},o.getMinorTickMark=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMinorTickMark"),this.instance.load("minorTickMark"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.minorTickMark);case 5:case"end":return e.stop()}}),e,this)})))},o.setMinorTickMark=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMinorTickMark"),this.instance.minorTickMark=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMinorTimeUnitScale=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMinorTimeUnitScale"),this.instance.load("minorTimeUnitScale"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.minorTimeUnitScale);case 5:case"end":return e.stop()}}),e,this)})))},o.setMinorTimeUnitScale=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMinorTimeUnitScale"),this.instance.minorTimeUnitScale=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMinorUnit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMinorUnit"),this.instance.load("minorUnit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.minorUnit);case 5:case"end":return e.stop()}}),e,this)})))},o.setMinorUnit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMinorUnit"),this.instance.minorUnit=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getMultiLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMultiLevel"),this.instance.load("multiLevel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.multiLevel);case 5:case"end":return e.stop()}}),e,this)})))},o.setMultiLevel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMultiLevel"),this.instance.multiLevel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},o.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getOffset=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOffset"),this.instance.load("offset"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.offset);case 5:case"end":return e.stop()}}),e,this)})))},o.setOffset=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOffset"),this.instance.offset=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},o.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPositionAt=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPositionAt"),this.instance.load("positionAt"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.positionAt);case 5:case"end":return e.stop()}}),e,this)})))},o.getReversePlotOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReversePlotOrder"),this.instance.load("reversePlotOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.reversePlotOrder);case 5:case"end":return e.stop()}}),e,this)})))},o.setReversePlotOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setReversePlotOrder"),this.instance.reversePlotOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getScaleType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getScaleType"),this.instance.load("scaleType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.scaleType);case 5:case"end":return e.stop()}}),e,this)})))},o.setScaleType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setScaleType"),this.instance.scaleType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowDisplayUnitLabel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowDisplayUnitLabel"),this.instance.load("showDisplayUnitLabel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showDisplayUnitLabel);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowDisplayUnitLabel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowDisplayUnitLabel"),this.instance.showDisplayUnitLabel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},o.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTickLabelPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTickLabelPosition"),this.instance.load("tickLabelPosition"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tickLabelPosition);case 5:case"end":return e.stop()}}),e,this)})))},o.setTickLabelPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTickLabelPosition"),this.instance.tickLabelPosition=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTickLabelSpacing=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTickLabelSpacing"),this.instance.load("tickLabelSpacing"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tickLabelSpacing);case 5:case"end":return e.stop()}}),e,this)})))},o.setTickLabelSpacing=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTickLabelSpacing"),this.instance.tickLabelSpacing=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTickMarkSpacing=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTickMarkSpacing"),this.instance.load("tickMarkSpacing"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.tickMarkSpacing);case 5:case"end":return e.stop()}}),e,this)})))},o.setTickMarkSpacing=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTickMarkSpacing"),this.instance.tickMarkSpacing=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTitle=function(){e.prototype.traceCall.call(this,"getTitle");var t=this.instance.title;return new H(t,this.engine)},o.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},o.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},o.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},o.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},o.setCategoryNames=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCategoryNames"),a=i.unwrap(n),this.instance.setCategoryNames(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.setCustomDisplayUnit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCustomDisplayUnit"),a=i.unwrap(n),this.instance.setCustomDisplayUnit(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.setPositionAt=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPositionAt"),a=i.unwrap(n),this.instance.setPositionAt(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartAxis=U;var V=function(e){function t(t,r){var a;return a=e.call(this,"ChartAxisFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},a.getLine=function(){e.prototype.traceCall.call(this,"getLine");var t=this.instance.line;return new ue(t,this.engine)},t}(i);e.ChartAxisFormat=V;var H=function(e){function a(t,r){var a;return a=e.call(this,"ChartAxisTitle",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new z(t,this.engine)},o.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},o.setText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setText"),this.instance.text=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},o.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},o.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),a=i.unwrap(n),this.instance.setFormula(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartAxisTitle=H;var z=function(e){function t(t,r){var a;return a=e.call(this,"ChartAxisTitleFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},t}(i);e.ChartAxisTitleFormat=z;var q=function(e){function a(t,r){var a;return a=e.call(this,"ChartDataLabels",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getAutoText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoText"),this.instance.load("autoText"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoText);case 5:case"end":return e.stop()}}),e,this)})))},i.setAutoText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoText"),this.instance.autoText=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new K(t,this.engine)},i.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLinkNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkNumberFormat"),this.instance.load("linkNumberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkNumberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setLinkNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLinkNumberFormat"),this.instance.linkNumberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},i.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSeparator"),this.instance.load("separator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.separator);case 5:case"end":return e.stop()}}),e,this)})))},i.setSeparator=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSeparator"),this.instance.separator=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowBubbleSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowBubbleSize"),this.instance.load("showBubbleSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showBubbleSize);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowBubbleSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowBubbleSize"),this.instance.showBubbleSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowCategoryName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowCategoryName"),this.instance.load("showCategoryName"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showCategoryName);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowCategoryName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowCategoryName"),this.instance.showCategoryName=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowLegendKey=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowLegendKey"),this.instance.load("showLegendKey"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showLegendKey);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowLegendKey=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowLegendKey"),this.instance.showLegendKey=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowPercentage=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowPercentage"),this.instance.load("showPercentage"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showPercentage);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowPercentage=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowPercentage"),this.instance.showPercentage=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowSeriesName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowSeriesName"),this.instance.load("showSeriesName"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showSeriesName);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowSeriesName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowSeriesName"),this.instance.showSeriesName=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowValue"),this.instance.load("showValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showValue);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowValue"),this.instance.showValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},i.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartDataLabels=q;var X=function(e){function a(t,r){var a;return a=e.call(this,"ChartDataLabel",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getAutoText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoText"),this.instance.load("autoText"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoText);case 5:case"end":return e.stop()}}),e,this)})))},i.setAutoText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoText"),this.instance.autoText=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new K(t,this.engine)},i.getFormula=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormula"),this.instance.load("formula"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formula);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),this.instance.formula=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},i.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLinkNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkNumberFormat"),this.instance.load("linkNumberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkNumberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setLinkNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLinkNumberFormat"),this.instance.linkNumberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},i.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSeparator"),this.instance.load("separator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.separator);case 5:case"end":return e.stop()}}),e,this)})))},i.setSeparator=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSeparator"),this.instance.separator=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowBubbleSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowBubbleSize"),this.instance.load("showBubbleSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showBubbleSize);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowBubbleSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowBubbleSize"),this.instance.showBubbleSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowCategoryName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowCategoryName"),this.instance.load("showCategoryName"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showCategoryName);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowCategoryName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowCategoryName"),this.instance.showCategoryName=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowLegendKey=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowLegendKey"),this.instance.load("showLegendKey"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showLegendKey);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowLegendKey=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowLegendKey"),this.instance.showLegendKey=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowPercentage=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowPercentage"),this.instance.load("showPercentage"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showPercentage);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowPercentage=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowPercentage"),this.instance.showPercentage=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowSeriesName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowSeriesName"),this.instance.load("showSeriesName"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showSeriesName);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowSeriesName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowSeriesName"),this.instance.showSeriesName=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowValue"),this.instance.load("showValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showValue);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowValue"),this.instance.showValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},i.setText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setText"),this.instance.text=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},i.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},i.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartDataLabel=X;var K=function(e){function t(t,r){var a;return a=e.call(this,"ChartDataLabelFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},t}(i);e.ChartDataLabelFormat=K;var Y=function(e){function a(t,r){var a;return a=e.call(this,"ChartErrorBars",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getEndStyleCap=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEndStyleCap"),this.instance.load("endStyleCap"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.endStyleCap);case 5:case"end":return e.stop()}}),e,this)})))},i.setEndStyleCap=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEndStyleCap"),this.instance.endStyleCap=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Q(t,this.engine)},i.getInclude=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInclude"),this.instance.load("include"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.include);case 5:case"end":return e.stop()}}),e,this)})))},i.setInclude=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInclude"),this.instance.include=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.setType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setType"),this.instance.type=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartErrorBars=Y;var Q=function(e){function t(t,r){var a;return a=e.call(this,"ChartErrorBarsFormat",t,r)||this,Object.freeze(n(a)),a}return r(t,e),t.prototype.getLine=function(){e.prototype.traceCall.call(this,"getLine");var t=this.instance.line;return new ue(t,this.engine)},t}(i);e.ChartErrorBarsFormat=Q;var J=function(e){function a(t,r){var a;return a=e.call(this,"ChartGridlines",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Z(t,this.engine)},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartGridlines=J;var Z=function(e){function t(t,r){var a;return a=e.call(this,"ChartGridlinesFormat",t,r)||this,Object.freeze(n(a)),a}return r(t,e),t.prototype.getLine=function(){e.prototype.traceCall.call(this,"getLine");var t=this.instance.line;return new ue(t,this.engine)},t}(i);e.ChartGridlinesFormat=Z;var $=function(e){function a(t,r){var a;return a=e.call(this,"ChartLegend",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getLegendEntries=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLegendEntries"),this.instance.legendEntries.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.legendEntries.items.map((function(e){return new ee(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new te(t,this.engine)},i.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},i.setHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHeight"),this.instance.height=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getOverlay=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOverlay"),this.instance.load("overlay"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.overlay);case 5:case"end":return e.stop()}}),e,this)})))},i.setOverlay=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOverlay"),this.instance.overlay=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},i.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowShadow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowShadow"),this.instance.load("showShadow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showShadow);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowShadow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowShadow"),this.instance.showShadow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},i.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},i.setWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWidth"),this.instance.width=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartLegend=$;var ee=function(e){function a(t,r){var a;return a=e.call(this,"ChartLegendEntry",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},i.getIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIndex"),this.instance.load("index"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.index);case 5:case"end":return e.stop()}}),e,this)})))},i.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},i.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartLegendEntry=ee;var te=function(e){function t(t,r){var a;return a=e.call(this,"ChartLegendFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},t}(i);e.ChartLegendFormat=te;var ne=function(e){function a(t,r){var a;return a=e.call(this,"ChartMapOptions",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getLabelStrategy=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLabelStrategy"),this.instance.load("labelStrategy"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.labelStrategy);case 5:case"end":return e.stop()}}),e,this)})))},i.setLabelStrategy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLabelStrategy"),this.instance.labelStrategy=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLevel"),this.instance.load("level"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.level);case 5:case"end":return e.stop()}}),e,this)})))},i.setLevel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLevel"),this.instance.level=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getProjectionType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getProjectionType"),this.instance.load("projectionType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.projectionType);case 5:case"end":return e.stop()}}),e,this)})))},i.setProjectionType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setProjectionType"),this.instance.projectionType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartMapOptions=ne;var re=function(e){function a(t,r){var a;return a=e.call(this,"ChartTitle",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new ie(t,this.engine)},o.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},o.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},o.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getOverlay=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOverlay"),this.instance.load("overlay"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.overlay);case 5:case"end":return e.stop()}}),e,this)})))},o.setOverlay=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOverlay"),this.instance.overlay=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},o.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowShadow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowShadow"),this.instance.load("showShadow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showShadow);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowShadow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowShadow"),this.instance.showShadow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},o.setText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setText"),this.instance.text=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},o.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},o.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},o.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},o.getSubstring=function(t,n){e.prototype.traceCall.call(this,"getSubstring");var r=i.unwrap(t),a=i.unwrap(n);return new ae(this.instance.getSubstring(r,a),this.engine)},o.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),a=i.unwrap(n),this.instance.setFormula(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartTitle=re;var ae=function(e){function t(t,r){var a;return a=e.call(this,"ChartFormatString",t,r)||this,Object.freeze(n(a)),a}return r(t,e),t.prototype.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},t}(i);e.ChartFormatString=ae;var ie=function(e){function t(t,r){var a;return a=e.call(this,"ChartTitleFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},t}(i);e.ChartTitleFormat=ie;var oe=function(e){function a(t,r){var a;return a=e.call(this,"ChartFill",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.setSolidColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSolidColor"),a=i.unwrap(n),this.instance.setSolidColor(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartFill=oe;var se=function(e){function a(t,r){var a;return a=e.call(this,"ChartBorder",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLineStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLineStyle"),this.instance.load("lineStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.lineStyle);case 5:case"end":return e.stop()}}),e,this)})))},i.setLineStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLineStyle"),this.instance.lineStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWeight"),this.instance.load("weight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.weight);case 5:case"end":return e.stop()}}),e,this)})))},i.setWeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWeight"),this.instance.weight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartBorder=se;var le=function(e){function a(t,r){var a;return a=e.call(this,"ChartBinOptions",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getAllowOverflow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAllowOverflow"),this.instance.load("allowOverflow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.allowOverflow);case 5:case"end":return e.stop()}}),e,this)})))},i.setAllowOverflow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAllowOverflow"),this.instance.allowOverflow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getAllowUnderflow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAllowUnderflow"),this.instance.load("allowUnderflow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.allowUnderflow);case 5:case"end":return e.stop()}}),e,this)})))},i.setAllowUnderflow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAllowUnderflow"),this.instance.allowUnderflow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCount"),this.instance.load("count"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.count);case 5:case"end":return e.stop()}}),e,this)})))},i.setCount=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCount"),this.instance.count=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getOverflowValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOverflowValue"),this.instance.load("overflowValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.overflowValue);case 5:case"end":return e.stop()}}),e,this)})))},i.setOverflowValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOverflowValue"),this.instance.overflowValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.setType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setType"),this.instance.type=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUnderflowValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUnderflowValue"),this.instance.load("underflowValue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.underflowValue);case 5:case"end":return e.stop()}}),e,this)})))},i.setUnderflowValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUnderflowValue"),this.instance.underflowValue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},i.setWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWidth"),this.instance.width=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartBinOptions=le;var ce=function(e){function a(t,r){var a;return a=e.call(this,"ChartBoxwhiskerOptions",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getQuartileCalculation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getQuartileCalculation"),this.instance.load("quartileCalculation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.quartileCalculation);case 5:case"end":return e.stop()}}),e,this)})))},i.setQuartileCalculation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setQuartileCalculation"),this.instance.quartileCalculation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowInnerPoints=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowInnerPoints"),this.instance.load("showInnerPoints"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showInnerPoints);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowInnerPoints=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowInnerPoints"),this.instance.showInnerPoints=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowMeanLine=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowMeanLine"),this.instance.load("showMeanLine"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showMeanLine);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowMeanLine=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowMeanLine"),this.instance.showMeanLine=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowMeanMarker=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowMeanMarker"),this.instance.load("showMeanMarker"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showMeanMarker);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowMeanMarker=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowMeanMarker"),this.instance.showMeanMarker=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowOutlierPoints=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowOutlierPoints"),this.instance.load("showOutlierPoints"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showOutlierPoints);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowOutlierPoints=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowOutlierPoints"),this.instance.showOutlierPoints=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartBoxwhiskerOptions=ce;var ue=function(e){function a(t,r){var a;return a=e.call(this,"ChartLineFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLineStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLineStyle"),this.instance.load("lineStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.lineStyle);case 5:case"end":return e.stop()}}),e,this)})))},i.setLineStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLineStyle"),this.instance.lineStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWeight"),this.instance.load("weight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.weight);case 5:case"end":return e.stop()}}),e,this)})))},i.setWeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWeight"),this.instance.weight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartLineFormat=ue;var he=function(e){function a(t,r){var a;return a=e.call(this,"ChartFont",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBold=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBold"),this.instance.load("bold"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bold);case 5:case"end":return e.stop()}}),e,this)})))},i.setBold=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBold"),this.instance.bold=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getItalic=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getItalic"),this.instance.load("italic"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.italic);case 5:case"end":return e.stop()}}),e,this)})))},i.setItalic=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setItalic"),this.instance.italic=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSize"),this.instance.load("size"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.size);case 5:case"end":return e.stop()}}),e,this)})))},i.setSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSize"),this.instance.size=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUnderline=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUnderline"),this.instance.load("underline"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.underline);case 5:case"end":return e.stop()}}),e,this)})))},i.setUnderline=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUnderline"),this.instance.underline=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartFont=he;var pe=function(e){function a(t,r){var a;return a=e.call(this,"ChartTrendline",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBackwardPeriod=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBackwardPeriod"),this.instance.load("backwardPeriod"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.backwardPeriod);case 5:case"end":return e.stop()}}),e,this)})))},i.setBackwardPeriod=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBackwardPeriod"),this.instance.backwardPeriod=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new de(t,this.engine)},i.getForwardPeriod=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getForwardPeriod"),this.instance.load("forwardPeriod"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.forwardPeriod);case 5:case"end":return e.stop()}}),e,this)})))},i.setForwardPeriod=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setForwardPeriod"),this.instance.forwardPeriod=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getIntercept=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIntercept"),this.instance.load("intercept"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.intercept);case 5:case"end":return e.stop()}}),e,this)})))},i.setIntercept=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIntercept"),this.instance.intercept=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLabel=function(){e.prototype.traceCall.call(this,"getLabel");var t=this.instance.label;return new fe(t,this.engine)},i.getMovingAveragePeriod=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMovingAveragePeriod"),this.instance.load("movingAveragePeriod"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.movingAveragePeriod);case 5:case"end":return e.stop()}}),e,this)})))},i.setMovingAveragePeriod=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMovingAveragePeriod"),this.instance.movingAveragePeriod=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPolynomialOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPolynomialOrder"),this.instance.load("polynomialOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.polynomialOrder);case 5:case"end":return e.stop()}}),e,this)})))},i.setPolynomialOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPolynomialOrder"),this.instance.polynomialOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowEquation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowEquation"),this.instance.load("showEquation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showEquation);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowEquation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowEquation"),this.instance.showEquation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowRSquared=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowRSquared"),this.instance.load("showRSquared"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showRSquared);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowRSquared=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowRSquared"),this.instance.showRSquared=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.setType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setType"),this.instance.type=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartTrendline=pe;var de=function(e){function t(t,r){var a;return a=e.call(this,"ChartTrendlineFormat",t,r)||this,Object.freeze(n(a)),a}return r(t,e),t.prototype.getLine=function(){e.prototype.traceCall.call(this,"getLine");var t=this.instance.line;return new ue(t,this.engine)},t}(i);e.ChartTrendlineFormat=de;var fe=function(e){function a(t,r){var a;return a=e.call(this,"ChartTrendlineLabel",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getAutoText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoText"),this.instance.load("autoText"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoText);case 5:case"end":return e.stop()}}),e,this)})))},i.setAutoText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoText"),this.instance.autoText=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new me(t,this.engine)},i.getFormula=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormula"),this.instance.load("formula"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formula);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),this.instance.formula=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},i.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLinkNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLinkNumberFormat"),this.instance.load("linkNumberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.linkNumberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setLinkNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLinkNumberFormat"),this.instance.linkNumberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},i.setText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setText"),this.instance.text=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},i.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},i.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartTrendlineLabel=fe;var me=function(e){function t(t,r){var a;return a=e.call(this,"ChartTrendlineLabelFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},a.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new he(t,this.engine)},t}(i);e.ChartTrendlineLabelFormat=me;var ye=function(e){function a(t,r){var a;return a=e.call(this,"ChartPlotArea",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new ge(t,this.engine)},i.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},i.setHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHeight"),this.instance.height=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getInsideHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInsideHeight"),this.instance.load("insideHeight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.insideHeight);case 5:case"end":return e.stop()}}),e,this)})))},i.setInsideHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInsideHeight"),this.instance.insideHeight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getInsideLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInsideLeft"),this.instance.load("insideLeft"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.insideLeft);case 5:case"end":return e.stop()}}),e,this)})))},i.setInsideLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInsideLeft"),this.instance.insideLeft=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getInsideTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInsideTop"),this.instance.load("insideTop"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.insideTop);case 5:case"end":return e.stop()}}),e,this)})))},i.setInsideTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInsideTop"),this.instance.insideTop=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getInsideWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getInsideWidth"),this.instance.load("insideWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.insideWidth);case 5:case"end":return e.stop()}}),e,this)})))},i.setInsideWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setInsideWidth"),this.instance.insideWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},i.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},i.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},i.setWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWidth"),this.instance.width=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ChartPlotArea=ye;var ge=function(e){function t(t,r){var a;return a=e.call(this,"ChartPlotAreaFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getBorder=function(){e.prototype.traceCall.call(this,"getBorder");var t=this.instance.border;return new se(t,this.engine)},a.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new oe(t,this.engine)},t}(i);e.ChartPlotAreaFormat=ge;var be=function(e){function a(t,r){var a;return a=e.call(this,"RangeSort",t,r)||this,Object.freeze(n(a)),a}return r(a,e),a.prototype.apply=function(n,r,a,o,l){var c=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,u,h,p,d;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c.traceCall.call(this,"apply"),s=i.unwrap(n),u=i.unwrap(r),h=i.unwrap(a),p=i.unwrap(o),d=i.unwrap(l),this.instance.apply(s,u,h,p,d),e.next=9,c.sync.call(this,t.Write);case 9:case"end":return e.stop()}}),e,this)})))},a}(i);e.RangeSort=be;var ve=function(e){function a(t,r){var a;return a=e.call(this,"TableSort",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFields=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFields"),this.instance.load("fields"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.fields);case 5:case"end":return e.stop()}}),e,this)})))},o.getMatchCase=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMatchCase"),this.instance.load("matchCase"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.matchCase);case 5:case"end":return e.stop()}}),e,this)})))},o.getMethod=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMethod"),this.instance.load("method"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.method);case 5:case"end":return e.stop()}}),e,this)})))},o.apply=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"apply"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),this.instance.apply(s,l,c),e.next=7,o.sync.call(this,t.Write);case 7:case"end":return e.stop()}}),e,this)})))},o.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.reapply=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"reapply"),this.instance.reapply(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.TableSort=ve;var we=function(e){function a(t,r){var a;return a=e.call(this,"Filter",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getCriteria=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCriteria"),this.instance.load("criteria"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.criteria);case 5:case"end":return e.stop()}}),e,this)})))},o.apply=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"apply"),a=i.unwrap(n),this.instance.apply(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyBottomItemsFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyBottomItemsFilter"),a=i.unwrap(n),this.instance.applyBottomItemsFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyBottomPercentFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyBottomPercentFilter"),a=i.unwrap(n),this.instance.applyBottomPercentFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyCellColorFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyCellColorFilter"),a=i.unwrap(n),this.instance.applyCellColorFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyCustomFilter=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"applyCustomFilter"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),this.instance.applyCustomFilter(s,l,c),e.next=7,o.sync.call(this,t.Write);case 7:case"end":return e.stop()}}),e,this)})))},o.applyDynamicFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyDynamicFilter"),a=i.unwrap(n),this.instance.applyDynamicFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyFontColorFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyFontColorFilter"),a=i.unwrap(n),this.instance.applyFontColorFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyIconFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyIconFilter"),a=i.unwrap(n),this.instance.applyIconFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyTopItemsFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyTopItemsFilter"),a=i.unwrap(n),this.instance.applyTopItemsFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyTopPercentFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyTopPercentFilter"),a=i.unwrap(n),this.instance.applyTopPercentFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.applyValuesFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyValuesFilter"),a=i.unwrap(n),this.instance.applyValuesFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.Filter=we;var Ce=function(e){function a(t,r){var a;return a=e.call(this,"AutoFilter",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getCriteria=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCriteria"),this.instance.load("criteria"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.criteria);case 5:case"end":return e.stop()}}),e,this)})))},o.getEnabled=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEnabled"),this.instance.load("enabled"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.enabled);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsDataFiltered=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsDataFiltered"),this.instance.load("isDataFiltered"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isDataFiltered);case 5:case"end":return e.stop()}}),e,this)})))},o.apply=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"apply"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),this.instance.apply(s,l,c),e.next=7,o.sync.call(this,t.Write);case 7:case"end":return e.stop()}}),e,this)})))},o.clearCriteria=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clearCriteria"),this.instance.clearCriteria(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRange=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRange"),r=this.instance.getRangeOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new b(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.reapply=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"reapply"),this.instance.reapply(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.remove=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"remove"),this.instance.remove(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.AutoFilter=Ce;var Re=function(e){function a(t,r){var a;return a=e.call(this,"CultureInfo",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getDatetimeFormat=function(){e.prototype.traceCall.call(this,"getDatetimeFormat");var t=this.instance.datetimeFormat;return new xe(t,this.engine)},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.getNumberFormat=function(){e.prototype.traceCall.call(this,"getNumberFormat");var t=this.instance.numberFormat;return new _e(t,this.engine)},a}(i);e.CultureInfo=Re;var _e=function(e){function a(t,r){var a;return a=e.call(this,"NumberFormatInfo",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getNumberDecimalSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberDecimalSeparator"),this.instance.load("numberDecimalSeparator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberDecimalSeparator);case 5:case"end":return e.stop()}}),e,this)})))},i.getNumberGroupSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberGroupSeparator"),this.instance.load("numberGroupSeparator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberGroupSeparator);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.NumberFormatInfo=_e;var xe=function(e){function a(t,r){var a;return a=e.call(this,"DatetimeFormatInfo",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getDateSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDateSeparator"),this.instance.load("dateSeparator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.dateSeparator);case 5:case"end":return e.stop()}}),e,this)})))},i.getLongDatePattern=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLongDatePattern"),this.instance.load("longDatePattern"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.longDatePattern);case 5:case"end":return e.stop()}}),e,this)})))},i.getLongTimePattern=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLongTimePattern"),this.instance.load("longTimePattern"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.longTimePattern);case 5:case"end":return e.stop()}}),e,this)})))},i.getShortDatePattern=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShortDatePattern"),this.instance.load("shortDatePattern"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.shortDatePattern);case 5:case"end":return e.stop()}}),e,this)})))},i.getTimeSeparator=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTimeSeparator"),this.instance.load("timeSeparator"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.timeSeparator);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.DatetimeFormatInfo=xe;var Ae=function(e){function a(t,r){var a;return a=e.call(this,"CustomXmlPart",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getNamespaceUri=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNamespaceUri"),this.instance.load("namespaceUri"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.namespaceUri);case 5:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getXml=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getXml"),r=this.instance.getXml(),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",r.value);case 5:case"end":return e.stop()}}),e,this)})))},o.setXml=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setXml"),a=i.unwrap(n),this.instance.setXml(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.CustomXmlPart=Ae;var Te=function(e){function a(t,r){var a;return a=e.call(this,"PivotTable",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getColumnHierarchies=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnHierarchies"),this.instance.columnHierarchies.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnHierarchies.items.map((function(e){return new ke(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addColumnHierarchy=function(t){e.prototype.traceCall.call(this,"addColumnHierarchy");var n=i.unwrap(t),r=this.instance.columnHierarchies.add(n);return new ke(r,this.engine)},o.getColumnHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getColumnHierarchy"),a=i.unwrap(n),o=this.instance.columnHierarchies.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new ke(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.removeColumnHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"removeColumnHierarchy"),a=i.unwrap(n),this.instance.columnHierarchies.remove(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getDataHierarchies=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDataHierarchies"),this.instance.dataHierarchies.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.dataHierarchies.items.map((function(e){return new Le(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addDataHierarchy=function(t){e.prototype.traceCall.call(this,"addDataHierarchy");var n=i.unwrap(t),r=this.instance.dataHierarchies.add(n);return new Le(r,this.engine)},o.getDataHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getDataHierarchy"),a=i.unwrap(n),o=this.instance.dataHierarchies.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Le(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.removeDataHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"removeDataHierarchy"),a=i.unwrap(n),this.instance.dataHierarchies.remove(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getFilterHierarchies=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFilterHierarchies"),this.instance.filterHierarchies.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.filterHierarchies.items.map((function(e){return new Pe(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addFilterHierarchy=function(t){e.prototype.traceCall.call(this,"addFilterHierarchy");var n=i.unwrap(t),r=this.instance.filterHierarchies.add(n);return new Pe(r,this.engine)},o.getFilterHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getFilterHierarchy"),a=i.unwrap(n),o=this.instance.filterHierarchies.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Pe(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.removeFilterHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"removeFilterHierarchy"),a=i.unwrap(n),this.instance.filterHierarchies.remove(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getHierarchies=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHierarchies"),this.instance.hierarchies.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hierarchies.items.map((function(e){return new Ee(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getHierarchy"),a=i.unwrap(n),o=this.instance.hierarchies.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Ee(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getRowHierarchies=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRowHierarchies"),this.instance.rowHierarchies.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rowHierarchies.items.map((function(e){return new ke(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addRowHierarchy=function(t){e.prototype.traceCall.call(this,"addRowHierarchy");var n=i.unwrap(t),r=this.instance.rowHierarchies.add(n);return new ke(r,this.engine)},o.getRowHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getRowHierarchy"),a=i.unwrap(n),o=this.instance.rowHierarchies.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new ke(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.removeRowHierarchy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"removeRowHierarchy"),a=i.unwrap(n),this.instance.rowHierarchies.remove(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getAllowMultipleFiltersPerField=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAllowMultipleFiltersPerField"),this.instance.load("allowMultipleFiltersPerField"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.allowMultipleFiltersPerField);case 5:case"end":return e.stop()}}),e,this)})))},o.setAllowMultipleFiltersPerField=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAllowMultipleFiltersPerField"),this.instance.allowMultipleFiltersPerField=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getEnableDataValueEditing=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEnableDataValueEditing"),this.instance.load("enableDataValueEditing"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.enableDataValueEditing);case 5:case"end":return e.stop()}}),e,this)})))},o.setEnableDataValueEditing=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEnableDataValueEditing"),this.instance.enableDataValueEditing=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getLayout=function(){e.prototype.traceCall.call(this,"getLayout");var t=this.instance.layout;return new Se(t,this.engine)},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getUseCustomSortLists=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUseCustomSortLists"),this.instance.load("useCustomSortLists"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.useCustomSortLists);case 5:case"end":return e.stop()}}),e,this)})))},o.setUseCustomSortLists=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUseCustomSortLists"),this.instance.useCustomSortLists=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWorksheet=function(){e.prototype.traceCall.call(this,"getWorksheet");var t=this.instance.worksheet;return new m(t,this.engine)},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.refresh=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"refresh"),this.instance.refresh(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.PivotTable=Te;var Se=function(e){function a(t,r){var a;return a=e.call(this,"PivotLayout",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getAutoFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoFormat"),this.instance.load("autoFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoFormat);case 5:case"end":return e.stop()}}),e,this)})))},o.setAutoFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoFormat"),this.instance.autoFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getEnableFieldList=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEnableFieldList"),this.instance.load("enableFieldList"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.enableFieldList);case 5:case"end":return e.stop()}}),e,this)})))},o.setEnableFieldList=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEnableFieldList"),this.instance.enableFieldList=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLayoutType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLayoutType"),this.instance.load("layoutType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.layoutType);case 5:case"end":return e.stop()}}),e,this)})))},o.setLayoutType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLayoutType"),this.instance.layoutType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPreserveFormatting=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPreserveFormatting"),this.instance.load("preserveFormatting"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.preserveFormatting);case 5:case"end":return e.stop()}}),e,this)})))},o.setPreserveFormatting=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPreserveFormatting"),this.instance.preserveFormatting=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowColumnGrandTotals=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowColumnGrandTotals"),this.instance.load("showColumnGrandTotals"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showColumnGrandTotals);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowColumnGrandTotals=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowColumnGrandTotals"),this.instance.showColumnGrandTotals=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowRowGrandTotals=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowRowGrandTotals"),this.instance.load("showRowGrandTotals"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showRowGrandTotals);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowRowGrandTotals=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowRowGrandTotals"),this.instance.showRowGrandTotals=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSubtotalLocation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSubtotalLocation"),this.instance.load("subtotalLocation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.subtotalLocation);case 5:case"end":return e.stop()}}),e,this)})))},o.setSubtotalLocation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSubtotalLocation"),this.instance.subtotalLocation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getColumnLabelRange=function(){return e.prototype.traceCall.call(this,"getColumnLabelRange"),new b(this.instance.getColumnLabelRange(),this.engine)},o.getBodyAndTotalRange=function(){return e.prototype.traceCall.call(this,"getBodyAndTotalRange"),new b(this.instance.getDataBodyRange(),this.engine)},o.getDataHierarchy=function(t){e.prototype.traceCall.call(this,"getDataHierarchy");var n=i.unwrap(t);return new Le(this.instance.getDataHierarchy(n),this.engine)},o.getFilterAxisRange=function(){return e.prototype.traceCall.call(this,"getFilterAxisRange"),new b(this.instance.getFilterAxisRange(),this.engine)},o.getRange=function(){return e.prototype.traceCall.call(this,"getRange"),new b(this.instance.getRange(),this.engine)},o.getRowLabelRange=function(){return e.prototype.traceCall.call(this,"getRowLabelRange"),new b(this.instance.getRowLabelRange(),this.engine)},o.setAutoSortOnCell=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"setAutoSortOnCell"),o=i.unwrap(n),s=i.unwrap(r),this.instance.setAutoSortOnCell(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},a}(i);e.PivotLayout=Se;var Ee=function(e){function a(t,r){var a;return a=e.call(this,"PivotHierarchy",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFields=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFields"),this.instance.fields.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.fields.items.map((function(e){return new Oe(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getPivotField=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotField"),a=i.unwrap(n),o=this.instance.fields.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Oe(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.PivotHierarchy=Ee;var ke=function(e){function a(t,r){var a;return a=e.call(this,"RowColumnPivotHierarchy",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFields=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFields"),this.instance.fields.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.fields.items.map((function(e){return new Oe(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getPivotField=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotField"),a=i.unwrap(n),o=this.instance.fields.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Oe(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},o.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.setToDefault=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"setToDefault"),this.instance.setToDefault(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.RowColumnPivotHierarchy=ke;var Pe=function(e){function a(t,r){var a;return a=e.call(this,"FilterPivotHierarchy",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFields=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFields"),this.instance.fields.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.fields.items.map((function(e){return new Oe(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getPivotField=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotField"),a=i.unwrap(n),o=this.instance.fields.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Oe(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getEnableMultipleFilterItems=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEnableMultipleFilterItems"),this.instance.load("enableMultipleFilterItems"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.enableMultipleFilterItems);case 5:case"end":return e.stop()}}),e,this)})))},o.setEnableMultipleFilterItems=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEnableMultipleFilterItems"),this.instance.enableMultipleFilterItems=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},o.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.setToDefault=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"setToDefault"),this.instance.setToDefault(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.FilterPivotHierarchy=Pe;var Le=function(e){function a(t,r){var a;return a=e.call(this,"DataPivotHierarchy",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getField=function(){e.prototype.traceCall.call(this,"getField");var t=this.instance.field;return new Oe(t,this.engine)},i.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPosition"),this.instance.load("position"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.position);case 5:case"end":return e.stop()}}),e,this)})))},i.setPosition=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPosition"),this.instance.position=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowAs=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowAs"),this.instance.load("showAs"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showAs);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowAs=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowAs"),this.instance.showAs=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSummarizeBy=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSummarizeBy"),this.instance.load("summarizeBy"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.summarizeBy);case 5:case"end":return e.stop()}}),e,this)})))},i.setSummarizeBy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSummarizeBy"),this.instance.summarizeBy=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.setToDefault=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"setToDefault"),this.instance.setToDefault(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.DataPivotHierarchy=Le;var Oe=function(e){function a(t,r){var a;return a=e.call(this,"PivotField",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getItems=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getItems"),this.instance.items.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.items.items.map((function(e){return new Ie(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getPivotItem=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getPivotItem"),a=i.unwrap(n),o=this.instance.items.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Ie(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShowAllItems=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowAllItems"),this.instance.load("showAllItems"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showAllItems);case 5:case"end":return e.stop()}}),e,this)})))},o.setShowAllItems=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowAllItems"),this.instance.showAllItems=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSubtotals=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSubtotals"),this.instance.load("subtotals"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.subtotals);case 5:case"end":return e.stop()}}),e,this)})))},o.setSubtotals=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSubtotals"),this.instance.subtotals=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.applyFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"applyFilter"),a=i.unwrap(n),this.instance.applyFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.clearAllFilters=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clearAllFilters"),this.instance.clearAllFilters(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.clearFilter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"clearFilter"),a=i.unwrap(n),this.instance.clearFilter(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getFilters=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFilters"),r=this.instance.getFilters(),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",r.value);case 5:case"end":return e.stop()}}),e,this)})))},o.isFiltered=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"isFiltered"),a=i.unwrap(n),o=this.instance.isFiltered(a),e.next=5,r.sync.call(this,t.Read);case 5:return e.abrupt("return",o.value);case 6:case"end":return e.stop()}}),e,this)})))},o.sortByLabels=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"sortByLabels"),a=i.unwrap(n),this.instance.sortByLabels(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.sortByValues=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"sortByValues"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),this.instance.sortByValues(s,l,c),e.next=7,o.sync.call(this,t.Write);case 7:case"end":return e.stop()}}),e,this)})))},a}(i);e.PivotField=Oe;var Ie=function(e){function a(t,r){var a;return a=e.call(this,"PivotItem",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},i.getIsExpanded=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsExpanded"),this.instance.load("isExpanded"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isExpanded);case 5:case"end":return e.stop()}}),e,this)})))},i.setIsExpanded=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIsExpanded"),this.instance.isExpanded=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.PivotItem=Ie;var Fe=function(e){function a(t,r){var a;return a=e.call(this,"WorksheetCustomProperty",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getKey=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getKey"),this.instance.load("key"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.key);case 5:case"end":return e.stop()}}),e,this)})))},i.getValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValue"),this.instance.load("value"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.value);case 5:case"end":return e.stop()}}),e,this)})))},i.setValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setValue"),this.instance.value=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.WorksheetCustomProperty=Fe;var je=function(e){function a(t,r){var a;return a=e.call(this,"DocumentProperties",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getCustom=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCustom"),this.instance.custom.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.custom.items.map((function(e){return new De(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addCustomProperty=function(t,n){e.prototype.traceCall.call(this,"addCustomProperty");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.custom.add(r,a);return new De(o,this.engine)},o.deleteAllCustomProperties=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"deleteAllCustomProperties"),this.instance.custom.deleteAll(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCustomProperty=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getCustomProperty"),a=i.unwrap(n),o=this.instance.custom.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new De(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getAuthor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAuthor"),this.instance.load("author"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.author);case 5:case"end":return e.stop()}}),e,this)})))},o.setAuthor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAuthor"),this.instance.author=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCategory=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCategory"),this.instance.load("category"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.category);case 5:case"end":return e.stop()}}),e,this)})))},o.setCategory=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCategory"),this.instance.category=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getComments=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getComments"),this.instance.load("comments"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.comments);case 5:case"end":return e.stop()}}),e,this)})))},o.setComments=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setComments"),this.instance.comments=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCompany=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCompany"),this.instance.load("company"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.company);case 5:case"end":return e.stop()}}),e,this)})))},o.setCompany=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCompany"),this.instance.company=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCreationDate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCreationDate"),this.instance.load("creationDate"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.creationDate);case 5:case"end":return e.stop()}}),e,this)})))},o.getKeywords=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getKeywords"),this.instance.load("keywords"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.keywords);case 5:case"end":return e.stop()}}),e,this)})))},o.setKeywords=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setKeywords"),this.instance.keywords=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLastAuthor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLastAuthor"),this.instance.load("lastAuthor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.lastAuthor);case 5:case"end":return e.stop()}}),e,this)})))},o.getManager=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getManager"),this.instance.load("manager"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.manager);case 5:case"end":return e.stop()}}),e,this)})))},o.setManager=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setManager"),this.instance.manager=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRevisionNumber=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRevisionNumber"),this.instance.load("revisionNumber"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.revisionNumber);case 5:case"end":return e.stop()}}),e,this)})))},o.setRevisionNumber=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRevisionNumber"),this.instance.revisionNumber=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSubject=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSubject"),this.instance.load("subject"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.subject);case 5:case"end":return e.stop()}}),e,this)})))},o.setSubject=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSubject"),this.instance.subject=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTitle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTitle"),this.instance.load("title"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.title);case 5:case"end":return e.stop()}}),e,this)})))},o.setTitle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTitle"),this.instance.title=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.DocumentProperties=je;var De=function(e){function a(t,r){var a;return a=e.call(this,"CustomProperty",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getKey=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getKey"),this.instance.load("key"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.key);case 5:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.getValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getValue"),this.instance.load("value"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.value);case 5:case"end":return e.stop()}}),e,this)})))},i.setValue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setValue"),this.instance.value=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.CustomProperty=De;var Ge=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getCellValue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCellValue"),r=this.instance.cellValueOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new Ke(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getColorScale=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColorScale"),r=this.instance.colorScaleOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new He(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getCustom=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCustom"),r=this.instance.customOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new We(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getDataBar=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDataBar"),r=this.instance.dataBarOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new Be(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getIconSet=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIconSet"),r=this.instance.iconSetOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new Ve(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},i.getPreset=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPreset"),r=this.instance.presetOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new qe(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getPriority=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPriority"),this.instance.load("priority"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.priority);case 5:case"end":return e.stop()}}),e,this)})))},i.setPriority=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPriority"),this.instance.priority=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getStopIfTrue=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStopIfTrue"),this.instance.load("stopIfTrue"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.stopIfTrue);case 5:case"end":return e.stop()}}),e,this)})))},i.setStopIfTrue=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStopIfTrue"),this.instance.stopIfTrue=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTextComparison=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextComparison"),r=this.instance.textComparisonOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new Xe(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getTopBottom=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTopBottom"),r=this.instance.topBottomOrNullObject,e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new ze(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRange=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRange"),r=this.instance.getRangeOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new b(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},i.getRanges=function(){return e.prototype.traceCall.call(this,"getRanges"),new v(this.instance.getRanges(),this.engine)},a}(i);e.ConditionalFormat=Ge;var Be=function(e){function a(t,r){var a;return a=e.call(this,"DataBarConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getAxisColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAxisColor"),this.instance.load("axisColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.axisColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setAxisColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAxisColor"),this.instance.axisColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getAxisFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAxisFormat"),this.instance.load("axisFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.axisFormat);case 5:case"end":return e.stop()}}),e,this)})))},i.setAxisFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAxisFormat"),this.instance.axisFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getBarDirection=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBarDirection"),this.instance.load("barDirection"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.barDirection);case 5:case"end":return e.stop()}}),e,this)})))},i.setBarDirection=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBarDirection"),this.instance.barDirection=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLowerBoundRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLowerBoundRule"),this.instance.load("lowerBoundRule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.lowerBoundRule);case 5:case"end":return e.stop()}}),e,this)})))},i.setLowerBoundRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLowerBoundRule"),this.instance.lowerBoundRule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getNegativeFormat=function(){e.prototype.traceCall.call(this,"getNegativeFormat");var t=this.instance.negativeFormat;return new Me(t,this.engine)},i.getPositiveFormat=function(){e.prototype.traceCall.call(this,"getPositiveFormat");var t=this.instance.positiveFormat;return new Ne(t,this.engine)},i.getShowDataBarOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowDataBarOnly"),this.instance.load("showDataBarOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showDataBarOnly);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowDataBarOnly=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowDataBarOnly"),this.instance.showDataBarOnly=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUpperBoundRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUpperBoundRule"),this.instance.load("upperBoundRule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.upperBoundRule);case 5:case"end":return e.stop()}}),e,this)})))},i.setUpperBoundRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUpperBoundRule"),this.instance.upperBoundRule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.DataBarConditionalFormat=Be;var Ne=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalDataBarPositiveFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBorderColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBorderColor"),this.instance.load("borderColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borderColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setBorderColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBorderColor"),this.instance.borderColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFillColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFillColor"),this.instance.load("fillColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.fillColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setFillColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFillColor"),this.instance.fillColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getGradientFill=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGradientFill"),this.instance.load("gradientFill"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.gradientFill);case 5:case"end":return e.stop()}}),e,this)})))},i.setGradientFill=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGradientFill"),this.instance.gradientFill=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalDataBarPositiveFormat=Ne;var Me=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalDataBarNegativeFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBorderColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBorderColor"),this.instance.load("borderColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borderColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setBorderColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBorderColor"),this.instance.borderColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFillColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFillColor"),this.instance.load("fillColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.fillColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setFillColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFillColor"),this.instance.fillColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMatchPositiveBorderColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMatchPositiveBorderColor"),this.instance.load("matchPositiveBorderColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.matchPositiveBorderColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setMatchPositiveBorderColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMatchPositiveBorderColor"),this.instance.matchPositiveBorderColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getMatchPositiveFillColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMatchPositiveFillColor"),this.instance.load("matchPositiveFillColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.matchPositiveFillColor);case 5:case"end":return e.stop()}}),e,this)})))},i.setMatchPositiveFillColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setMatchPositiveFillColor"),this.instance.matchPositiveFillColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalDataBarNegativeFormat=Me;var We=function(e){function t(t,r){var a;return a=e.call(this,"CustomConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(t,e);var a=t.prototype;return a.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Ye(t,this.engine)},a.getRule=function(){e.prototype.traceCall.call(this,"getRule");var t=this.instance.rule;return new Ue(t,this.engine)},t}(i);e.CustomConditionalFormat=We;var Ue=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalFormatRule",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormula=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormula"),this.instance.load("formula"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formula);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormula=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormula"),this.instance.formula=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getFormulaLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulaLocal"),this.instance.load("formulaLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulaLocal);case 5:case"end":return e.stop()}}),e,this)})))},i.setFormulaLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulaLocal"),this.instance.formulaLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalFormatRule=Ue;var Ve=function(e){function a(t,r){var a;return a=e.call(this,"IconSetConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getCriteria=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCriteria"),this.instance.load("criteria"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.criteria);case 5:case"end":return e.stop()}}),e,this)})))},i.setCriteria=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCriteria"),this.instance.criteria=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getReverseIconOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReverseIconOrder"),this.instance.load("reverseIconOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.reverseIconOrder);case 5:case"end":return e.stop()}}),e,this)})))},i.setReverseIconOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setReverseIconOrder"),this.instance.reverseIconOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getShowIconOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShowIconOnly"),this.instance.load("showIconOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.showIconOnly);case 5:case"end":return e.stop()}}),e,this)})))},i.setShowIconOnly=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShowIconOnly"),this.instance.showIconOnly=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},i.setStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.IconSetConditionalFormat=Ve;var He=function(e){function a(t,r){var a;return a=e.call(this,"ColorScaleConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getCriteria=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCriteria"),this.instance.load("criteria"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.criteria);case 5:case"end":return e.stop()}}),e,this)})))},i.setCriteria=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCriteria"),this.instance.criteria=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getThreeColorScale=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getThreeColorScale"),this.instance.load("threeColorScale"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.threeColorScale);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ColorScaleConditionalFormat=He;var ze=function(e){function a(t,r){var a;return a=e.call(this,"TopBottomConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Ye(t,this.engine)},i.getRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRule"),this.instance.load("rule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rule);case 5:case"end":return e.stop()}}),e,this)})))},i.setRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRule"),this.instance.rule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.TopBottomConditionalFormat=ze;var qe=function(e){function a(t,r){var a;return a=e.call(this,"PresetCriteriaConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Ye(t,this.engine)},i.getRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRule"),this.instance.load("rule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rule);case 5:case"end":return e.stop()}}),e,this)})))},i.setRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRule"),this.instance.rule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.PresetCriteriaConditionalFormat=qe;var Xe=function(e){function a(t,r){var a;return a=e.call(this,"TextConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Ye(t,this.engine)},i.getRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRule"),this.instance.load("rule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rule);case 5:case"end":return e.stop()}}),e,this)})))},i.setRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRule"),this.instance.rule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.TextConditionalFormat=Xe;var Ke=function(e){function a(t,r){var a;return a=e.call(this,"CellValueConditionalFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getFormat=function(){e.prototype.traceCall.call(this,"getFormat");var t=this.instance.format;return new Ye(t,this.engine)},i.getRule=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRule"),this.instance.load("rule"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rule);case 5:case"end":return e.stop()}}),e,this)})))},i.setRule=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRule"),this.instance.rule=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.CellValueConditionalFormat=Ke;var Ye=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalRangeFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getConditionalRangeBorderBottom=function(){e.prototype.traceCall.call(this,"getConditionalRangeBorderBottom");var t=this.instance.borders.bottom;return new Ze(t,this.engine)},o.getConditionalRangeBorderLeft=function(){e.prototype.traceCall.call(this,"getConditionalRangeBorderLeft");var t=this.instance.borders.left;return new Ze(t,this.engine)},o.getConditionalRangeBorderRight=function(){e.prototype.traceCall.call(this,"getConditionalRangeBorderRight");var t=this.instance.borders.right;return new Ze(t,this.engine)},o.getConditionalRangeBorderTop=function(){e.prototype.traceCall.call(this,"getConditionalRangeBorderTop");var t=this.instance.borders.top;return new Ze(t,this.engine)},o.getBorders=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBorders"),this.instance.borders.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borders.items.map((function(e){return new Ze(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getConditionalRangeBorder=function(t){e.prototype.traceCall.call(this,"getConditionalRangeBorder");var n=i.unwrap(t),r=this.instance.borders.getItem(n);return new Ze(r,this.engine)},o.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new Je(t,this.engine)},o.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new Qe(t,this.engine)},o.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},o.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalRangeFormat=Ye;var Qe=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalRangeFont",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBold=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBold"),this.instance.load("bold"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bold);case 5:case"end":return e.stop()}}),e,this)})))},i.setBold=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBold"),this.instance.bold=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getItalic=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getItalic"),this.instance.load("italic"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.italic);case 5:case"end":return e.stop()}}),e,this)})))},i.setItalic=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setItalic"),this.instance.italic=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getStrikethrough=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStrikethrough"),this.instance.load("strikethrough"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.strikethrough);case 5:case"end":return e.stop()}}),e,this)})))},i.setStrikethrough=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStrikethrough"),this.instance.strikethrough=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUnderline=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUnderline"),this.instance.load("underline"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.underline);case 5:case"end":return e.stop()}}),e,this)})))},i.setUnderline=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUnderline"),this.instance.underline=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalRangeFont=Qe;var Je=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalRangeFill",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalRangeFill=Je;var Ze=function(e){function a(t,r){var a;return a=e.call(this,"ConditionalRangeBorder",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSideIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSideIndex"),this.instance.load("sideIndex"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.sideIndex);case 5:case"end":return e.stop()}}),e,this)})))},i.getStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},i.setStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ConditionalRangeBorder=Ze;var $e=function(e){function a(t,r){var a;return a=e.call(this,"Style",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getRangeBorderTintAndShade=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRangeBorderTintAndShade"),this.instance.borders.load("tintAndShade"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borders.tintAndShade);case 5:case"end":return e.stop()}}),e,this)})))},o.setRangeBorderTintAndShade=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRangeBorderTintAndShade"),this.instance.borders.tintAndShade=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBorders=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBorders"),this.instance.borders.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.borders.items.map((function(e){return new O(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getRangeBorder=function(t){e.prototype.traceCall.call(this,"getRangeBorder");var n=i.unwrap(t),r=this.instance.borders.getItem(n);return new O(r,this.engine)},o.getAutoIndent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoIndent"),this.instance.load("autoIndent"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoIndent);case 5:case"end":return e.stop()}}),e,this)})))},o.setAutoIndent=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoIndent"),this.instance.autoIndent=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBuiltIn=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBuiltIn"),this.instance.load("builtIn"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.builtIn);case 5:case"end":return e.stop()}}),e,this)})))},o.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new L(t,this.engine)},o.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new I(t,this.engine)},o.getFormulaHidden=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormulaHidden"),this.instance.load("formulaHidden"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.formulaHidden);case 5:case"end":return e.stop()}}),e,this)})))},o.setFormulaHidden=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFormulaHidden"),this.instance.formulaHidden=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIncludeAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIncludeAlignment"),this.instance.load("includeAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.includeAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setIncludeAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIncludeAlignment"),this.instance.includeAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIncludeBorder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIncludeBorder"),this.instance.load("includeBorder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.includeBorder);case 5:case"end":return e.stop()}}),e,this)})))},o.setIncludeBorder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIncludeBorder"),this.instance.includeBorder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIncludeFont=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIncludeFont"),this.instance.load("includeFont"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.includeFont);case 5:case"end":return e.stop()}}),e,this)})))},o.setIncludeFont=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIncludeFont"),this.instance.includeFont=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIncludeNumber=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIncludeNumber"),this.instance.load("includeNumber"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.includeNumber);case 5:case"end":return e.stop()}}),e,this)})))},o.setIncludeNumber=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIncludeNumber"),this.instance.includeNumber=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIncludePatterns=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIncludePatterns"),this.instance.load("includePatterns"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.includePatterns);case 5:case"end":return e.stop()}}),e,this)})))},o.setIncludePatterns=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIncludePatterns"),this.instance.includePatterns=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIncludeProtection=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIncludeProtection"),this.instance.load("includeProtection"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.includeProtection);case 5:case"end":return e.stop()}}),e,this)})))},o.setIncludeProtection=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIncludeProtection"),this.instance.includeProtection=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getIndentLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIndentLevel"),this.instance.load("indentLevel"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.indentLevel);case 5:case"end":return e.stop()}}),e,this)})))},o.setIndentLevel=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIndentLevel"),this.instance.indentLevel=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLocked=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLocked"),this.instance.load("locked"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.locked);case 5:case"end":return e.stop()}}),e,this)})))},o.setLocked=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLocked"),this.instance.locked=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.getNumberFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormat"),this.instance.load("numberFormat"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormat);case 5:case"end":return e.stop()}}),e,this)})))},o.setNumberFormat=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormat"),this.instance.numberFormat=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getNumberFormatLocal=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getNumberFormatLocal"),this.instance.load("numberFormatLocal"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.numberFormatLocal);case 5:case"end":return e.stop()}}),e,this)})))},o.setNumberFormatLocal=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setNumberFormatLocal"),this.instance.numberFormatLocal=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getReadingOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadingOrder"),this.instance.load("readingOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readingOrder);case 5:case"end":return e.stop()}}),e,this)})))},o.setReadingOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setReadingOrder"),this.instance.readingOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getShrinkToFit=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShrinkToFit"),this.instance.load("shrinkToFit"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.shrinkToFit);case 5:case"end":return e.stop()}}),e,this)})))},o.setShrinkToFit=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setShrinkToFit"),this.instance.shrinkToFit=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTextOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTextOrientation"),this.instance.load("textOrientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.textOrientation);case 5:case"end":return e.stop()}}),e,this)})))},o.setTextOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTextOrientation"),this.instance.textOrientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},o.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWrapText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWrapText"),this.instance.load("wrapText"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.wrapText);case 5:case"end":return e.stop()}}),e,this)})))},o.setWrapText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWrapText"),this.instance.wrapText=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.PredefinedCellStyle=$e;var et=function(e){function a(t,r){var a;return a=e.call(this,"TableStyle",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getReadOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadOnly"),this.instance.load("readOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readOnly);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.duplicate=function(){return e.prototype.traceCall.call(this,"duplicate"),new a(this.instance.duplicate(),this.engine)},a}(i);e.TableStyle=et;var tt=function(e){function a(t,r){var a;return a=e.call(this,"PivotTableStyle",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getReadOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadOnly"),this.instance.load("readOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readOnly);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.duplicate=function(){return e.prototype.traceCall.call(this,"duplicate"),new a(this.instance.duplicate(),this.engine)},a}(i);e.PivotTableStyle=tt;var nt=function(e){function a(t,r){var a;return a=e.call(this,"SlicerStyle",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getReadOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadOnly"),this.instance.load("readOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readOnly);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.duplicate=function(){return e.prototype.traceCall.call(this,"duplicate"),new a(this.instance.duplicate(),this.engine)},a}(i);e.SlicerStyle=nt;var rt=function(e){function a(t,r){var a;return a=e.call(this,"TimelineStyle",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getReadOnly=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadOnly"),this.instance.load("readOnly"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readOnly);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.duplicate=function(){return e.prototype.traceCall.call(this,"duplicate"),new a(this.instance.duplicate(),this.engine)},a}(i);e.TimelineStyle=rt;var at=function(e){function a(t,r){var a;return a=e.call(this,"PageLayout",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getBlackAndWhite=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBlackAndWhite"),this.instance.load("blackAndWhite"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.blackAndWhite);case 5:case"end":return e.stop()}}),e,this)})))},o.setBlackAndWhite=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBlackAndWhite"),this.instance.blackAndWhite=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBottomMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBottomMargin"),this.instance.load("bottomMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bottomMargin);case 5:case"end":return e.stop()}}),e,this)})))},o.setBottomMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBottomMargin"),this.instance.bottomMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCenterHorizontally=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCenterHorizontally"),this.instance.load("centerHorizontally"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.centerHorizontally);case 5:case"end":return e.stop()}}),e,this)})))},o.setCenterHorizontally=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCenterHorizontally"),this.instance.centerHorizontally=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getCenterVertically=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCenterVertically"),this.instance.load("centerVertically"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.centerVertically);case 5:case"end":return e.stop()}}),e,this)})))},o.setCenterVertically=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCenterVertically"),this.instance.centerVertically=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getDraftMode=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDraftMode"),this.instance.load("draftMode"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.draftMode);case 5:case"end":return e.stop()}}),e,this)})))},o.setDraftMode=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDraftMode"),this.instance.draftMode=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFirstPageNumber=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFirstPageNumber"),this.instance.load("firstPageNumber"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.firstPageNumber);case 5:case"end":return e.stop()}}),e,this)})))},o.setFirstPageNumber=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFirstPageNumber"),this.instance.firstPageNumber=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getFooterMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFooterMargin"),this.instance.load("footerMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.footerMargin);case 5:case"end":return e.stop()}}),e,this)})))},o.setFooterMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setFooterMargin"),this.instance.footerMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHeaderMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeaderMargin"),this.instance.load("headerMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.headerMargin);case 5:case"end":return e.stop()}}),e,this)})))},o.setHeaderMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHeaderMargin"),this.instance.headerMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHeadersFooters=function(){e.prototype.traceCall.call(this,"getHeadersFooters");var t=this.instance.headersFooters;return new ot(t,this.engine)},o.getLeftMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeftMargin"),this.instance.load("leftMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.leftMargin);case 5:case"end":return e.stop()}}),e,this)})))},o.setLeftMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeftMargin"),this.instance.leftMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOrientation"),this.instance.load("orientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.orientation);case 5:case"end":return e.stop()}}),e,this)})))},o.setOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOrientation"),this.instance.orientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPaperSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPaperSize"),this.instance.load("paperSize"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.paperSize);case 5:case"end":return e.stop()}}),e,this)})))},o.setPaperSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPaperSize"),this.instance.paperSize=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPrintComments=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintComments"),this.instance.load("printComments"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.printComments);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintComments=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintComments"),this.instance.printComments=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPrintErrors=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintErrors"),this.instance.load("printErrors"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.printErrors);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintErrors=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintErrors"),this.instance.printErrors=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPrintGridlines=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintGridlines"),this.instance.load("printGridlines"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.printGridlines);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintGridlines=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintGridlines"),this.instance.printGridlines=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPrintHeadings=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintHeadings"),this.instance.load("printHeadings"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.printHeadings);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintHeadings=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintHeadings"),this.instance.printHeadings=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPrintOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintOrder"),this.instance.load("printOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.printOrder);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintOrder"),this.instance.printOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRightMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRightMargin"),this.instance.load("rightMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rightMargin);case 5:case"end":return e.stop()}}),e,this)})))},o.setRightMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRightMargin"),this.instance.rightMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTopMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTopMargin"),this.instance.load("topMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.topMargin);case 5:case"end":return e.stop()}}),e,this)})))},o.setTopMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTopMargin"),this.instance.topMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getZoom=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getZoom"),this.instance.load("zoom"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.zoom);case 5:case"end":return e.stop()}}),e,this)})))},o.setZoom=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setZoom"),this.instance.zoom=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getPrintArea=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintArea"),r=this.instance.getPrintAreaOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new v(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getPrintTitleColumns=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintTitleColumns"),r=this.instance.getPrintTitleColumnsOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new b(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.getPrintTitleRows=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPrintTitleRows"),r=this.instance.getPrintTitleRowsOrNullObject(),e.next=4,n.sync.call(this,t.Read);case 4:if(!r.isNullObject){e.next=6;break}return e.abrupt("return",void 0);case 6:return e.abrupt("return",new b(r,this.engine));case 7:case"end":return e.stop()}}),e,this)})))},o.setPrintArea=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintArea"),a=i.unwrap(n),this.instance.setPrintArea(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintMargins=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"setPrintMargins"),o=i.unwrap(n),s=i.unwrap(r),this.instance.setPrintMargins(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},o.setPrintTitleColumns=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintTitleColumns"),a=i.unwrap(n),this.instance.setPrintTitleColumns(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.setPrintTitleRows=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPrintTitleRows"),a=i.unwrap(n),this.instance.setPrintTitleRows(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.PageLayout=at;var it=function(e){function a(t,r){var a;return a=e.call(this,"HeaderFooter",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getCenterFooter=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCenterFooter"),this.instance.load("centerFooter"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.centerFooter);case 5:case"end":return e.stop()}}),e,this)})))},i.setCenterFooter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCenterFooter"),this.instance.centerFooter=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getCenterHeader=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCenterHeader"),this.instance.load("centerHeader"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.centerHeader);case 5:case"end":return e.stop()}}),e,this)})))},i.setCenterHeader=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCenterHeader"),this.instance.centerHeader=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeftFooter=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeftFooter"),this.instance.load("leftFooter"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.leftFooter);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeftFooter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeftFooter"),this.instance.leftFooter=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeftHeader=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeftHeader"),this.instance.load("leftHeader"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.leftHeader);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeftHeader=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeftHeader"),this.instance.leftHeader=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRightFooter=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRightFooter"),this.instance.load("rightFooter"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rightFooter);case 5:case"end":return e.stop()}}),e,this)})))},i.setRightFooter=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRightFooter"),this.instance.rightFooter=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRightHeader=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRightHeader"),this.instance.load("rightHeader"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rightHeader);case 5:case"end":return e.stop()}}),e,this)})))},i.setRightHeader=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRightHeader"),this.instance.rightHeader=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.HeaderFooter=it;var ot=function(e){function a(t,r){var a;return a=e.call(this,"HeaderFooterGroup",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getDefaultForAllPages=function(){e.prototype.traceCall.call(this,"getDefaultForAllPages");var t=this.instance.defaultForAllPages;return new it(t,this.engine)},i.getEvenPages=function(){e.prototype.traceCall.call(this,"getEvenPages");var t=this.instance.evenPages;return new it(t,this.engine)},i.getFirstPage=function(){e.prototype.traceCall.call(this,"getFirstPage");var t=this.instance.firstPage;return new it(t,this.engine)},i.getOddPages=function(){e.prototype.traceCall.call(this,"getOddPages");var t=this.instance.oddPages;return new it(t,this.engine)},i.getState=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getState"),this.instance.load("state"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.state);case 5:case"end":return e.stop()}}),e,this)})))},i.setState=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setState"),this.instance.state=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUseSheetMargins=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUseSheetMargins"),this.instance.load("useSheetMargins"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.useSheetMargins);case 5:case"end":return e.stop()}}),e,this)})))},i.setUseSheetMargins=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUseSheetMargins"),this.instance.useSheetMargins=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUseSheetScale=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUseSheetScale"),this.instance.load("useSheetScale"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.useSheetScale);case 5:case"end":return e.stop()}}),e,this)})))},i.setUseSheetScale=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUseSheetScale"),this.instance.useSheetScale=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.HeaderFooterGroup=ot;var st=function(e){function a(t,r){var a;return a=e.call(this,"PageBreak",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColumnIndex=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColumnIndex"),this.instance.load("columnIndex"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.columnIndex);case 5:case"end":return e.stop()}}),e,this)})))},i.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getCellAfterBreak=function(){return e.prototype.traceCall.call(this,"getCellAfterBreak"),new b(this.instance.getCellAfterBreak(),this.engine)},a}(i);e.PageBreak=st;var lt=function(e){function a(t,r){var a;return a=e.call(this,"Comment",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getReplies=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReplies"),this.instance.replies.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.replies.items.map((function(e){return new ct(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.addCommentReply=function(t,n){e.prototype.traceCall.call(this,"addCommentReply");var r=i.unwrap(t),a=i.unwrap(n),o=this.instance.replies.add(r,a);return new ct(o,this.engine)},o.getCommentReply=function(t){e.prototype.traceCall.call(this,"getCommentReply");var n=i.unwrap(t),r=this.instance.replies.getItem(n);return new ct(r,this.engine)},o.getAuthorEmail=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAuthorEmail"),this.instance.load("authorEmail"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.authorEmail);case 5:case"end":return e.stop()}}),e,this)})))},o.getAuthorName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAuthorName"),this.instance.load("authorName"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.authorName);case 5:case"end":return e.stop()}}),e,this)})))},o.getContent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getContent"),this.instance.load("content"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.content);case 5:case"end":return e.stop()}}),e,this)})))},o.setContent=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setContent"),this.instance.content=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getContentType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getContentType"),this.instance.load("contentType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.contentType);case 5:case"end":return e.stop()}}),e,this)})))},o.getCreationDate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCreationDate"),this.instance.load("creationDate"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.creationDate);case 5:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getMentions=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMentions"),this.instance.load("mentions"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.mentions);case 5:case"end":return e.stop()}}),e,this)})))},o.getResolved=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getResolved"),this.instance.load("resolved"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.resolved);case 5:case"end":return e.stop()}}),e,this)})))},o.setResolved=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setResolved"),this.instance.resolved=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRichContent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRichContent"),this.instance.load("richContent"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.richContent);case 5:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLocation=function(){return e.prototype.traceCall.call(this,"getLocation"),new b(this.instance.getLocation(),this.engine)},o.updateMentions=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"updateMentions"),a=i.unwrap(n),this.instance.updateMentions(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.Comment=lt;var ct=function(e){function a(t,r){var a;return a=e.call(this,"CommentReply",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getAuthorEmail=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAuthorEmail"),this.instance.load("authorEmail"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.authorEmail);case 5:case"end":return e.stop()}}),e,this)})))},o.getAuthorName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAuthorName"),this.instance.load("authorName"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.authorName);case 5:case"end":return e.stop()}}),e,this)})))},o.getContent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getContent"),this.instance.load("content"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.content);case 5:case"end":return e.stop()}}),e,this)})))},o.setContent=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setContent"),this.instance.content=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getContentType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getContentType"),this.instance.load("contentType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.contentType);case 5:case"end":return e.stop()}}),e,this)})))},o.getCreationDate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCreationDate"),this.instance.load("creationDate"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.creationDate);case 5:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getMentions=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getMentions"),this.instance.load("mentions"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.mentions);case 5:case"end":return e.stop()}}),e,this)})))},o.getResolved=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getResolved"),this.instance.load("resolved"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.resolved);case 5:case"end":return e.stop()}}),e,this)})))},o.getRichContent=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRichContent"),this.instance.load("richContent"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.richContent);case 5:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLocation=function(){return e.prototype.traceCall.call(this,"getLocation"),new b(this.instance.getLocation(),this.engine)},o.getParentComment=function(){return e.prototype.traceCall.call(this,"getParentComment"),new lt(this.instance.getParentComment(),this.engine)},o.updateMentions=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"updateMentions"),a=i.unwrap(n),this.instance.updateMentions(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.CommentReply=ct;var ut=function(e){function a(t,r){var a;return a=e.call(this,"Shape",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getAltTextDescription=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAltTextDescription"),this.instance.load("altTextDescription"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.altTextDescription);case 5:case"end":return e.stop()}}),e,this)})))},o.setAltTextDescription=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAltTextDescription"),this.instance.altTextDescription=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getAltTextTitle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAltTextTitle"),this.instance.load("altTextTitle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.altTextTitle);case 5:case"end":return e.stop()}}),e,this)})))},o.setAltTextTitle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAltTextTitle"),this.instance.altTextTitle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getConnectionSiteCount=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getConnectionSiteCount"),this.instance.load("connectionSiteCount"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.connectionSiteCount);case 5:case"end":return e.stop()}}),e,this)})))},o.getFill=function(){e.prototype.traceCall.call(this,"getFill");var t=this.instance.fill;return new mt(t,this.engine)},o.getGeometricShape=function(){e.prototype.traceCall.call(this,"getGeometricShape");var t=this.instance.geometricShape;return new ht(t,this.engine)},o.getGeometricShapeType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getGeometricShapeType"),this.instance.load("geometricShapeType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.geometricShapeType);case 5:case"end":return e.stop()}}),e,this)})))},o.setGeometricShapeType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setGeometricShapeType"),this.instance.geometricShapeType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getGroup=function(){e.prototype.traceCall.call(this,"getGroup");var t=this.instance.group;return new dt(t,this.engine)},o.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},o.setHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHeight"),this.instance.height=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getImage=function(){e.prototype.traceCall.call(this,"getImage");var t=this.instance.image;return new pt(t,this.engine)},o.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},o.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getLevel=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLevel"),this.instance.load("level"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.level);case 5:case"end":return e.stop()}}),e,this)})))},o.getLine=function(){e.prototype.traceCall.call(this,"getLine");var t=this.instance.line;return new ft(t,this.engine)},o.getLineFormat=function(){e.prototype.traceCall.call(this,"getLineFormat");var t=this.instance.lineFormat;return new yt(t,this.engine)},o.getLockAspectRatio=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLockAspectRatio"),this.instance.load("lockAspectRatio"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.lockAspectRatio);case 5:case"end":return e.stop()}}),e,this)})))},o.setLockAspectRatio=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLockAspectRatio"),this.instance.lockAspectRatio=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getParentGroup=function(){return e.prototype.traceCall.call(this,"getParentGroup"),new a(this.instance.parentGroup,this.engine)},o.getPlacement=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getPlacement"),this.instance.load("placement"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.placement);case 5:case"end":return e.stop()}}),e,this)})))},o.setPlacement=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setPlacement"),this.instance.placement=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getRotation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRotation"),this.instance.load("rotation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rotation);case 5:case"end":return e.stop()}}),e,this)})))},o.setRotation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRotation"),this.instance.rotation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTextFrame=function(){e.prototype.traceCall.call(this,"getTextFrame");var t=this.instance.textFrame;return new gt(t,this.engine)},o.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},o.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},o.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},o.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},o.setWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWidth"),this.instance.width=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getZOrderPosition=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getZOrderPosition"),this.instance.load("zOrderPosition"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.zOrderPosition);case 5:case"end":return e.stop()}}),e,this)})))},o.copyTo=function(t){e.prototype.traceCall.call(this,"copyTo");var n=i.unwrap(t);return new a(this.instance.copyTo(n),this.engine)},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getImageAsBase64=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getImageAsBase64"),a=i.unwrap(n),o=this.instance.getAsImage(a),e.next=5,r.sync.call(this,t.Read);case 5:return e.abrupt("return",o.value);case 6:case"end":return e.stop()}}),e,this)})))},o.incrementLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"incrementLeft"),a=i.unwrap(n),this.instance.incrementLeft(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.incrementRotation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"incrementRotation"),a=i.unwrap(n),this.instance.incrementRotation(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.incrementTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"incrementTop"),a=i.unwrap(n),this.instance.incrementTop(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.scaleHeight=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"scaleHeight"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),this.instance.scaleHeight(s,l,c),e.next=7,o.sync.call(this,t.Write);case 7:case"end":return e.stop()}}),e,this)})))},o.scaleWidth=function(n,r,a){var o=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var s,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o.traceCall.call(this,"scaleWidth"),s=i.unwrap(n),l=i.unwrap(r),c=i.unwrap(a),this.instance.scaleWidth(s,l,c),e.next=7,o.sync.call(this,t.Write);case 7:case"end":return e.stop()}}),e,this)})))},o.setZOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setZOrder"),a=i.unwrap(n),this.instance.setZOrder(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},o.getAsImage=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getAsImage"),a=i.unwrap(n),o=this.instance.getAsImage(a),e.next=5,r.sync.call(this,t.Read);case 5:return e.abrupt("return",o.value);case 6:case"end":return e.stop()}}),e,this)})))},a}(i);e.Shape=ut;var ht=function(e){function a(t,r){var a;return a=e.call(this,"GeometricShape",t,r)||this,Object.freeze(n(a)),a}return r(a,e),a.prototype.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.GeometricShape=ht;var pt=function(e){function a(t,r){var a;return a=e.call(this,"Image",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},i.getShape=function(){e.prototype.traceCall.call(this,"getShape");var t=this.instance.shape;return new ut(t,this.engine)},i.getFormat=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getFormat"),this.instance.load("format"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.format);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.Image=pt;var dt=function(e){function a(t,r){var a;return a=e.call(this,"ShapeGroup",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getShapes=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getShapes"),this.instance.shapes.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.shapes.items.map((function(e){return new ut(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getShape=function(t){e.prototype.traceCall.call(this,"getShape");var n=i.unwrap(t),r=this.instance.shapes.getItem(n);return new ut(r,this.engine)},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getGroupShape=function(){e.prototype.traceCall.call(this,"getGroupShape");var t=this.instance.shape;return new ut(t,this.engine)},o.ungroup=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"ungroup"),this.instance.ungroup(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ShapeGroup=dt;var ft=function(e){function a(t,r){var a;return a=e.call(this,"Line",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getBeginArrowheadLength=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBeginArrowheadLength"),this.instance.load("beginArrowheadLength"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.beginArrowheadLength);case 5:case"end":return e.stop()}}),e,this)})))},o.setBeginArrowheadLength=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBeginArrowheadLength"),this.instance.beginArrowheadLength=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBeginArrowheadStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBeginArrowheadStyle"),this.instance.load("beginArrowheadStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.beginArrowheadStyle);case 5:case"end":return e.stop()}}),e,this)})))},o.setBeginArrowheadStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBeginArrowheadStyle"),this.instance.beginArrowheadStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBeginArrowheadWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBeginArrowheadWidth"),this.instance.load("beginArrowheadWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.beginArrowheadWidth);case 5:case"end":return e.stop()}}),e,this)})))},o.setBeginArrowheadWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBeginArrowheadWidth"),this.instance.beginArrowheadWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getBeginConnectedShape=function(){e.prototype.traceCall.call(this,"getBeginConnectedShape");var t=this.instance.beginConnectedShape;return new ut(t,this.engine)},o.getBeginConnectedSite=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBeginConnectedSite"),this.instance.load("beginConnectedSite"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.beginConnectedSite);case 5:case"end":return e.stop()}}),e,this)})))},o.getEndArrowheadLength=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEndArrowheadLength"),this.instance.load("endArrowheadLength"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.endArrowheadLength);case 5:case"end":return e.stop()}}),e,this)})))},o.setEndArrowheadLength=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEndArrowheadLength"),this.instance.endArrowheadLength=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getEndArrowheadStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEndArrowheadStyle"),this.instance.load("endArrowheadStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.endArrowheadStyle);case 5:case"end":return e.stop()}}),e,this)})))},o.setEndArrowheadStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEndArrowheadStyle"),this.instance.endArrowheadStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getEndArrowheadWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEndArrowheadWidth"),this.instance.load("endArrowheadWidth"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.endArrowheadWidth);case 5:case"end":return e.stop()}}),e,this)})))},o.setEndArrowheadWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setEndArrowheadWidth"),this.instance.endArrowheadWidth=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getEndConnectedShape=function(){e.prototype.traceCall.call(this,"getEndConnectedShape");var t=this.instance.endConnectedShape;return new ut(t,this.engine)},o.getEndConnectedSite=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getEndConnectedSite"),this.instance.load("endConnectedSite"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.endConnectedSite);case 5:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsBeginConnected=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsBeginConnected"),this.instance.load("isBeginConnected"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isBeginConnected);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsEndConnected=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsEndConnected"),this.instance.load("isEndConnected"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isEndConnected);case 5:case"end":return e.stop()}}),e,this)})))},o.getShape=function(){e.prototype.traceCall.call(this,"getShape");var t=this.instance.shape;return new ut(t,this.engine)},o.getConnectorType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getConnectorType"),this.instance.load("connectorType"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.connectorType);case 5:case"end":return e.stop()}}),e,this)})))},o.setConnectorType=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setConnectorType"),this.instance.connectorType=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.connectBeginShape=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"connectBeginShape"),o=i.unwrap(n),s=i.unwrap(r),this.instance.connectBeginShape(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},o.connectEndShape=function(n,r){var a=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var o,s;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a.traceCall.call(this,"connectEndShape"),o=i.unwrap(n),s=i.unwrap(r),this.instance.connectEndShape(o,s),e.next=6,a.sync.call(this,t.Write);case 6:case"end":return e.stop()}}),e,this)})))},o.disconnectBeginShape=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"disconnectBeginShape"),this.instance.disconnectBeginShape(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.disconnectEndShape=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"disconnectEndShape"),this.instance.disconnectEndShape(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.Line=ft;var mt=function(e){function a(t,r){var a;return a=e.call(this,"ShapeFill",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getForegroundColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getForegroundColor"),this.instance.load("foregroundColor"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.foregroundColor);case 5:case"end":return e.stop()}}),e,this)})))},o.setForegroundColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setForegroundColor"),this.instance.foregroundColor=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTransparency=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTransparency"),this.instance.load("transparency"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.transparency);case 5:case"end":return e.stop()}}),e,this)})))},o.setTransparency=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTransparency"),this.instance.transparency=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getType=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getType"),this.instance.load("type"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.type);case 5:case"end":return e.stop()}}),e,this)})))},o.clear=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clear"),this.instance.clear(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.setSolidColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSolidColor"),a=i.unwrap(n),this.instance.setSolidColor(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.ShapeFill=mt;var yt=function(e){function a(t,r){var a;return a=e.call(this,"ShapeLineFormat",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getDashStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getDashStyle"),this.instance.load("dashStyle"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.dashStyle);case 5:case"end":return e.stop()}}),e,this)})))},i.setDashStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setDashStyle"),this.instance.dashStyle=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},i.setStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTransparency=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTransparency"),this.instance.load("transparency"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.transparency);case 5:case"end":return e.stop()}}),e,this)})))},i.setTransparency=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTransparency"),this.instance.transparency=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVisible=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVisible"),this.instance.load("visible"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.visible);case 5:case"end":return e.stop()}}),e,this)})))},i.setVisible=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVisible"),this.instance.visible=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getWeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWeight"),this.instance.load("weight"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.weight);case 5:case"end":return e.stop()}}),e,this)})))},i.setWeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWeight"),this.instance.weight=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ShapeLineFormat=yt;var gt=function(e){function a(t,r){var a;return a=e.call(this,"TextFrame",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getAutoSizeSetting=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getAutoSizeSetting"),this.instance.load("autoSizeSetting"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.autoSizeSetting);case 5:case"end":return e.stop()}}),e,this)})))},i.setAutoSizeSetting=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setAutoSizeSetting"),this.instance.autoSizeSetting=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getBottomMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBottomMargin"),this.instance.load("bottomMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bottomMargin);case 5:case"end":return e.stop()}}),e,this)})))},i.setBottomMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBottomMargin"),this.instance.bottomMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getHasText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHasText"),this.instance.load("hasText"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hasText);case 5:case"end":return e.stop()}}),e,this)})))},i.getHorizontalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalAlignment"),this.instance.load("horizontalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setHorizontalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalAlignment"),this.instance.horizontalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getHorizontalOverflow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHorizontalOverflow"),this.instance.load("horizontalOverflow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.horizontalOverflow);case 5:case"end":return e.stop()}}),e,this)})))},i.setHorizontalOverflow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHorizontalOverflow"),this.instance.horizontalOverflow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getLeftMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeftMargin"),this.instance.load("leftMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.leftMargin);case 5:case"end":return e.stop()}}),e,this)})))},i.setLeftMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeftMargin"),this.instance.leftMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getOrientation=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getOrientation"),this.instance.load("orientation"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.orientation);case 5:case"end":return e.stop()}}),e,this)})))},i.setOrientation=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setOrientation"),this.instance.orientation=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getReadingOrder=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getReadingOrder"),this.instance.load("readingOrder"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.readingOrder);case 5:case"end":return e.stop()}}),e,this)})))},i.setReadingOrder=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setReadingOrder"),this.instance.readingOrder=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getRightMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getRightMargin"),this.instance.load("rightMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.rightMargin);case 5:case"end":return e.stop()}}),e,this)})))},i.setRightMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setRightMargin"),this.instance.rightMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getTextRange=function(){e.prototype.traceCall.call(this,"getTextRange");var t=this.instance.textRange;return new bt(t,this.engine)},i.getTopMargin=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTopMargin"),this.instance.load("topMargin"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.topMargin);case 5:case"end":return e.stop()}}),e,this)})))},i.setTopMargin=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTopMargin"),this.instance.topMargin=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVerticalAlignment=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalAlignment"),this.instance.load("verticalAlignment"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalAlignment);case 5:case"end":return e.stop()}}),e,this)})))},i.setVerticalAlignment=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalAlignment"),this.instance.verticalAlignment=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getVerticalOverflow=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getVerticalOverflow"),this.instance.load("verticalOverflow"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.verticalOverflow);case 5:case"end":return e.stop()}}),e,this)})))},i.setVerticalOverflow=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setVerticalOverflow"),this.instance.verticalOverflow=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.deleteText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"deleteText"),this.instance.deleteText(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.TextFrame=gt;var bt=function(e){function a(t,r){var a;return a=e.call(this,"TextRange",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getFont=function(){e.prototype.traceCall.call(this,"getFont");var t=this.instance.font;return new vt(t,this.engine)},o.getText=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getText"),this.instance.load("text"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.text);case 5:case"end":return e.stop()}}),e,this)})))},o.setText=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setText"),this.instance.text=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSubstring=function(t,n){e.prototype.traceCall.call(this,"getSubstring");var r=i.unwrap(t),o=i.unwrap(n);return new a(this.instance.getSubstring(r,o),this.engine)},a}(i);e.TextRange=bt;var vt=function(e){function a(t,r){var a;return a=e.call(this,"ShapeFont",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getBold=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getBold"),this.instance.load("bold"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.bold);case 5:case"end":return e.stop()}}),e,this)})))},i.setBold=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setBold"),this.instance.bold=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getColor=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getColor"),this.instance.load("color"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.color);case 5:case"end":return e.stop()}}),e,this)})))},i.setColor=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setColor"),this.instance.color=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getItalic=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getItalic"),this.instance.load("italic"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.italic);case 5:case"end":return e.stop()}}),e,this)})))},i.setItalic=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setItalic"),this.instance.italic=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},i.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getSize=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSize"),this.instance.load("size"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.size);case 5:case"end":return e.stop()}}),e,this)})))},i.setSize=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSize"),this.instance.size=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getUnderline=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getUnderline"),this.instance.load("underline"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.underline);case 5:case"end":return e.stop()}}),e,this)})))},i.setUnderline=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setUnderline"),this.instance.underline=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},a}(i);e.ShapeFont=vt;var wt=function(e){function a(t,r){var a;return a=e.call(this,"Slicer",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getSlicerItems=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSlicerItems"),this.instance.slicerItems.load("items"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.slicerItems.items.map((function(e){return new Ct(e,r.engine)})));case 5:case"end":return e.stop()}}),e,this)})))},o.getSlicerItem=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"getSlicerItem"),a=i.unwrap(n),o=this.instance.slicerItems.getItemOrNullObject(a),e.next=5,r.sync.call(this,t.Read);case 5:if(!o.isNullObject){e.next=7;break}return e.abrupt("return",void 0);case 7:return e.abrupt("return",new Ct(o,this.engine));case 8:case"end":return e.stop()}}),e,this)})))},o.getCaption=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getCaption"),this.instance.load("caption"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.caption);case 5:case"end":return e.stop()}}),e,this)})))},o.setCaption=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setCaption"),this.instance.caption=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getHeight=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHeight"),this.instance.load("height"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.height);case 5:case"end":return e.stop()}}),e,this)})))},o.setHeight=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setHeight"),this.instance.height=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getId=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getId"),this.instance.load("id"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.id);case 5:case"end":return e.stop()}}),e,this)})))},o.getIsFilterCleared=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsFilterCleared"),this.instance.load("isFilterCleared"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isFilterCleared);case 5:case"end":return e.stop()}}),e,this)})))},o.getLeft=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getLeft"),this.instance.load("left"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.left);case 5:case"end":return e.stop()}}),e,this)})))},o.setLeft=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setLeft"),this.instance.left=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSortBy=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSortBy"),this.instance.load("sortBy"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.sortBy);case 5:case"end":return e.stop()}}),e,this)})))},o.setSortBy=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setSortBy"),this.instance.sortBy=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getStyle=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getStyle"),this.instance.load("style"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.style);case 5:case"end":return e.stop()}}),e,this)})))},o.setStyle=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setStyle"),this.instance.style=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getTop=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getTop"),this.instance.load("top"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.top);case 5:case"end":return e.stop()}}),e,this)})))},o.setTop=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setTop"),this.instance.top=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWidth=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getWidth"),this.instance.load("width"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.width);case 5:case"end":return e.stop()}}),e,this)})))},o.setWidth=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setWidth"),this.instance.width=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getWorksheet=function(){e.prototype.traceCall.call(this,"getWorksheet");var t=this.instance.worksheet;return new m(t,this.engine)},o.clearFilters=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"clearFilters"),this.instance.clearFilters(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.getSelectedItems=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getSelectedItems"),r=this.instance.getSelectedItems(),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",r.value);case 5:case"end":return e.stop()}}),e,this)})))},o.selectItems=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"selectItems"),a=i.unwrap(n),this.instance.selectItems(a),e.next=5,r.sync.call(this,t.Write);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.Slicer=wt;var Ct=function(e){function a(t,r){var a;return a=e.call(this,"SlicerItem",t,r)||this,Object.freeze(n(a)),a}r(a,e);var i=a.prototype;return i.getHasData=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getHasData"),this.instance.load("hasData"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.hasData);case 5:case"end":return e.stop()}}),e,this)})))},i.getIsSelected=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getIsSelected"),this.instance.load("isSelected"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.isSelected);case 5:case"end":return e.stop()}}),e,this)})))},i.setIsSelected=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setIsSelected"),this.instance.isSelected=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},i.getKey=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getKey"),this.instance.load("key"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.key);case 5:case"end":return e.stop()}}),e,this)})))},i.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},a}(i);e.SlicerItem=Ct;var Rt=function(e){function a(t,r){var a;return a=e.call(this,"NamedSheetView",t,r)||this,Object.freeze(n(a)),a}r(a,e);var o=a.prototype;return o.getName=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"getName"),this.instance.load("name"),e.next=4,n.sync.call(this,t.Read);case 4:return e.abrupt("return",this.instance.name);case 5:case"end":return e.stop()}}),e,this)})))},o.setName=function(n){var r=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.traceCall.call(this,"setName"),this.instance.name=n,e.next=4,r.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.activate=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"activate"),this.instance.activate(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.delete=function(){var n=Object.create(null,{traceCall:{get:function(){return e.prototype.traceCall}},sync:{get:function(){return e.prototype.sync}}});return s(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.traceCall.call(this,"delete"),this.instance.delete(),e.next=4,n.sync.call(this,t.Write);case 4:case"end":return e.stop()}}),e,this)})))},o.duplicate=function(t){e.prototype.traceCall.call(this,"duplicate");var n=i.unwrap(t);return new a(this.instance.duplicate(n),this.engine)},a}(i);e.NamedSheetView=Rt,function(e){e.manual="Manual",e.automatic="Automatic"}(e.WorkbookLinksRefreshMode||(e.WorkbookLinksRefreshMode={})),function(e){e.unknown="Unknown",e.equals="Equals",e.before="Before",e.beforeOrEqualTo="BeforeOrEqualTo",e.after="After",e.afterOrEqualTo="AfterOrEqualTo",e.between="Between",e.tomorrow="Tomorrow",e.today="Today",e.yesterday="Yesterday",e.nextWeek="NextWeek",e.thisWeek="ThisWeek",e.lastWeek="LastWeek",e.nextMonth="NextMonth",e.thisMonth="ThisMonth",e.lastMonth="LastMonth",e.nextQuarter="NextQuarter",e.thisQuarter="ThisQuarter",e.lastQuarter="LastQuarter",e.nextYear="NextYear",e.thisYear="ThisYear",e.lastYear="LastYear",e.yearToDate="YearToDate",e.allDatesInPeriodQuarter1="AllDatesInPeriodQuarter1",e.allDatesInPeriodQuarter2="AllDatesInPeriodQuarter2",e.allDatesInPeriodQuarter3="AllDatesInPeriodQuarter3",e.allDatesInPeriodQuarter4="AllDatesInPeriodQuarter4",e.allDatesInPeriodJanuary="AllDatesInPeriodJanuary",e.allDatesInPeriodFebruary="AllDatesInPeriodFebruary",e.allDatesInPeriodMarch="AllDatesInPeriodMarch",e.allDatesInPeriodApril="AllDatesInPeriodApril",e.allDatesInPeriodMay="AllDatesInPeriodMay",e.allDatesInPeriodJune="AllDatesInPeriodJune",e.allDatesInPeriodJuly="AllDatesInPeriodJuly",e.allDatesInPeriodAugust="AllDatesInPeriodAugust",e.allDatesInPeriodSeptember="AllDatesInPeriodSeptember",e.allDatesInPeriodOctober="AllDatesInPeriodOctober",e.allDatesInPeriodNovember="AllDatesInPeriodNovember",e.allDatesInPeriodDecember="AllDatesInPeriodDecember"}(e.DateFilterCondition||(e.DateFilterCondition={})),function(e){e.unknown="Unknown",e.equals="Equals",e.beginsWith="BeginsWith",e.endsWith="EndsWith",e.contains="Contains",e.greaterThan="GreaterThan",e.greaterThanOrEqualTo="GreaterThanOrEqualTo",e.lessThan="LessThan",e.lessThanOrEqualTo="LessThanOrEqualTo",e.between="Between"}(e.LabelFilterCondition||(e.LabelFilterCondition={})),function(e){e.unknown="Unknown",e.value="Value",e.manual="Manual",e.label="Label",e.date="Date"}(e.PivotFilterType||(e.PivotFilterType={})),function(e){e.items="Items",e.percent="Percent",e.sum="Sum"}(e.TopBottomSelectionType||(e.TopBottomSelectionType={})),function(e){e.unknown="Unknown",e.equals="Equals",e.greaterThan="GreaterThan",e.greaterThanOrEqualTo="GreaterThanOrEqualTo",e.lessThan="LessThan",e.lessThanOrEqualTo="LessThanOrEqualTo",e.between="Between",e.topN="TopN",e.bottomN="BottomN"}(e.ValueFilterCondition||(e.ValueFilterCondition={})),function(e){e.categories="Categories",e.values="Values",e.xvalues="XValues",e.yvalues="YValues",e.bubbleSizes="BubbleSizes"}(e.ChartSeriesDimension||(e.ChartSeriesDimension={})),function(e){e.invalid="Invalid",e.topItems="TopItems",e.topPercent="TopPercent",e.topSum="TopSum",e.bottomItems="BottomItems",e.bottomPercent="BottomPercent",e.bottomSum="BottomSum"}(e.PivotFilterTopBottomCriterion||(e.PivotFilterTopBottomCriterion={})),function(e){e.ascending="Ascending",e.descending="Descending"}(e.SortBy||(e.SortBy={})),function(e){e.unknown="Unknown",e.automatic="Automatic",e.sum="Sum",e.count="Count",e.average="Average",e.max="Max",e.min="Min",e.product="Product",e.countNumbers="CountNumbers",e.standardDeviation="StandardDeviation",e.standardDeviationP="StandardDeviationP",e.variance="Variance",e.varianceP="VarianceP"}(e.AggregationFunction||(e.AggregationFunction={})),function(e){e.unknown="Unknown",e.none="None",e.percentOfGrandTotal="PercentOfGrandTotal",e.percentOfRowTotal="PercentOfRowTotal",e.percentOfColumnTotal="PercentOfColumnTotal",e.percentOfParentRowTotal="PercentOfParentRowTotal",e.percentOfParentColumnTotal="PercentOfParentColumnTotal",e.percentOfParentTotal="PercentOfParentTotal",e.percentOf="PercentOf",e.runningTotal="RunningTotal",e.percentRunningTotal="PercentRunningTotal",e.differenceFrom="DifferenceFrom",e.percentDifferenceFrom="PercentDifferenceFrom",e.rankAscending="RankAscending",e.rankDecending="RankDecending",e.index="Index"}(e.ShowAsCalculation||(e.ShowAsCalculation={})),function(e){e.unknown="Unknown",e.row="Row",e.column="Column",e.data="Data",e.filter="Filter"}(e.PivotAxis||(e.PivotAxis={})),function(e){e.invalid="Invalid",e.category="Category",e.value="Value",e.series="Series"}(e.ChartAxisType||(e.ChartAxisType={})),function(e){e.primary="Primary",e.secondary="Secondary"}(e.ChartAxisGroup||(e.ChartAxisGroup={})),function(e){e.linear="Linear",e.logarithmic="Logarithmic"}(e.ChartAxisScaleType||(e.ChartAxisScaleType={})),function(e){e.automatic="Automatic",e.maximum="Maximum",e.minimum="Minimum",e.custom="Custom"}(e.ChartAxisPosition||(e.ChartAxisPosition={})),function(e){e.none="None",e.cross="Cross",e.inside="Inside",e.outside="Outside"}(e.ChartAxisTickMark||(e.ChartAxisTickMark={})),function(e){e.done="Done",e.calculating="Calculating",e.pending="Pending"}(e.CalculationState||(e.CalculationState={})),function(e){e.nextToAxis="NextToAxis",e.high="High",e.low="Low",e.none="None"}(e.ChartAxisTickLabelPosition||(e.ChartAxisTickLabelPosition={})),function(e){e.none="None",e.hundreds="Hundreds",e.thousands="Thousands",e.tenThousands="TenThousands",e.hundredThousands="HundredThousands",e.millions="Millions",e.tenMillions="TenMillions",e.hundredMillions="HundredMillions",e.billions="Billions",e.trillions="Trillions",e.custom="Custom"}(e.ChartAxisDisplayUnit||(e.ChartAxisDisplayUnit={})),function(e){e.days="Days",e.months="Months",e.years="Years"}(e.ChartAxisTimeUnit||(e.ChartAxisTimeUnit={})),function(e){e.inclusive="Inclusive",e.exclusive="Exclusive"}(e.ChartBoxQuartileCalculation||(e.ChartBoxQuartileCalculation={})),function(e){e.automatic="Automatic",e.textAxis="TextAxis",e.dateAxis="DateAxis"}(e.ChartAxisCategoryType||(e.ChartAxisCategoryType={})),function(e){e.category="Category",e.auto="Auto",e.binWidth="BinWidth",e.binCount="BinCount"}(e.ChartBinType||(e.ChartBinType={})),function(e){e.none="None",e.continuous="Continuous",e.dash="Dash",e.dashDot="DashDot",e.dashDotDot="DashDotDot",e.dot="Dot",e.grey25="Grey25",e.grey50="Grey50",e.grey75="Grey75",e.automatic="Automatic",e.roundDot="RoundDot"}(e.ChartLineStyle||(e.ChartLineStyle={})),function(e){e.invalid="Invalid",e.none="None",e.center="Center",e.insideEnd="InsideEnd",e.insideBase="InsideBase",e.outsideEnd="OutsideEnd",e.left="Left",e.right="Right",e.top="Top",e.bottom="Bottom",e.bestFit="BestFit",e.callout="Callout"}(e.ChartDataLabelPosition||(e.ChartDataLabelPosition={})),function(e){e.both="Both",e.minusValues="MinusValues",e.plusValues="PlusValues"}(e.ChartErrorBarsInclude||(e.ChartErrorBarsInclude={})),function(e){e.fixedValue="FixedValue",e.percent="Percent",e.stDev="StDev",e.stError="StError",e.custom="Custom"}(e.ChartErrorBarsType||(e.ChartErrorBarsType={})),function(e){e.automatic="Automatic",e.dataOnly="DataOnly",e.city="City",e.county="County",e.state="State",e.country="Country",e.continent="Continent",e.world="World"}(e.ChartMapAreaLevel||(e.ChartMapAreaLevel={})),function(e){e.twoPhaseColor="TwoPhaseColor",e.threePhaseColor="ThreePhaseColor"}(e.ChartGradientStyle||(e.ChartGradientStyle={})),function(e){e.extremeValue="ExtremeValue",e.number="Number",e.percent="Percent"}(e.ChartGradientStyleType||(e.ChartGradientStyleType={})),function(e){e.automatic="Automatic",e.top="Top",e.bottom="Bottom",e.left="Left",e.right="Right"}(e.ChartTitlePosition||(e.ChartTitlePosition={})),function(e){e.invalid="Invalid",e.top="Top",e.bottom="Bottom",e.left="Left",e.right="Right",e.corner="Corner",e.custom="Custom"}(e.ChartLegendPosition||(e.ChartLegendPosition={})),function(e){e.invalid="Invalid",e.automatic="Automatic",e.none="None",e.square="Square",e.diamond="Diamond",e.triangle="Triangle",e.x="X",e.star="Star",e.dot="Dot",e.dash="Dash",e.circle="Circle",e.plus="Plus",e.picture="Picture"}(e.ChartMarkerStyle||(e.ChartMarkerStyle={})),function(e){e.automatic="Automatic",e.custom="Custom"}(e.ChartPlotAreaPosition||(e.ChartPlotAreaPosition={})),function(e){e.none="None",e.bestFit="BestFit",e.showAll="ShowAll"}(e.ChartMapLabelStrategy||(e.ChartMapLabelStrategy={})),function(e){e.automatic="Automatic",e.mercator="Mercator",e.miller="Miller",e.robinson="Robinson",e.albers="Albers"}(e.ChartMapProjectionType||(e.ChartMapProjectionType={})),function(e){e.none="None",e.banner="Banner",e.overlapping="Overlapping"}(e.ChartParentLabelStrategy||(e.ChartParentLabelStrategy={})),function(e){e.auto="Auto",e.columns="Columns",e.rows="Rows"}(e.ChartSeriesBy||(e.ChartSeriesBy={})),function(e){e.center="Center",e.left="Left",e.right="Right",e.justify="Justify",e.distributed="Distributed"}(e.ChartTextHorizontalAlignment||(e.ChartTextHorizontalAlignment={})),function(e){e.center="Center",e.bottom="Bottom",e.top="Top",e.justify="Justify",e.distributed="Distributed"}(e.ChartTextVerticalAlignment||(e.ChartTextVerticalAlignment={})),function(e){e.center="Center",e.left="Left",e.right="Right"}(e.ChartTickLabelAlignment||(e.ChartTickLabelAlignment={})),function(e){e.invalid="Invalid",e.columnClustered="ColumnClustered",e.columnStacked="ColumnStacked",e.columnStacked100="ColumnStacked100",e.barClustered="BarClustered",e.barStacked="BarStacked",e.barStacked100="BarStacked100",e.lineStacked="LineStacked",e.lineStacked100="LineStacked100",e.lineMarkers="LineMarkers",e.lineMarkersStacked="LineMarkersStacked",e.lineMarkersStacked100="LineMarkersStacked100",e.pieOfPie="PieOfPie",e.pieExploded="PieExploded",e.barOfPie="BarOfPie",e.xyscatterSmooth="XYScatterSmooth",e.xyscatterSmoothNoMarkers="XYScatterSmoothNoMarkers",e.xyscatterLines="XYScatterLines",e.xyscatterLinesNoMarkers="XYScatterLinesNoMarkers",e.areaStacked="AreaStacked",e.areaStacked100="AreaStacked100",e.doughnutExploded="DoughnutExploded",e.radarMarkers="RadarMarkers",e.radarFilled="RadarFilled",e.surface="Surface",e.surfaceWireframe="SurfaceWireframe",e.surfaceTopView="SurfaceTopView",e.surfaceTopViewWireframe="SurfaceTopViewWireframe",e.bubble="Bubble",e.bubble3DEffect="Bubble3DEffect",e.stockHLC="StockHLC",e.stockOHLC="StockOHLC",e.stockVHLC="StockVHLC",e.stockVOHLC="StockVOHLC",e.cylinderColClustered="CylinderColClustered",e.cylinderColStacked="CylinderColStacked",e.cylinderColStacked100="CylinderColStacked100",e.cylinderBarClustered="CylinderBarClustered",e.cylinderBarStacked="CylinderBarStacked",e.cylinderBarStacked100="CylinderBarStacked100",e.cylinderCol="CylinderCol",e.coneColClustered="ConeColClustered",e.coneColStacked="ConeColStacked",e.coneColStacked100="ConeColStacked100",e.coneBarClustered="ConeBarClustered",e.coneBarStacked="ConeBarStacked",e.coneBarStacked100="ConeBarStacked100",e.coneCol="ConeCol",e.pyramidColClustered="PyramidColClustered",e.pyramidColStacked="PyramidColStacked",e.pyramidColStacked100="PyramidColStacked100",e.pyramidBarClustered="PyramidBarClustered",e.pyramidBarStacked="PyramidBarStacked",e.pyramidBarStacked100="PyramidBarStacked100",e.pyramidCol="PyramidCol",e.line="Line",e.pie="Pie",e.xyscatter="XYScatter",e.area="Area",e.doughnut="Doughnut",e.radar="Radar",e.histogram="Histogram",e.boxwhisker="Boxwhisker",e.pareto="Pareto",e.regionMap="RegionMap",e.treemap="Treemap",e.waterfall="Waterfall",e.sunburst="Sunburst",e.funnel="Funnel"}(e.ChartType||(e.ChartType={})),function(e){e.none="None",e.single="Single"}(e.ChartUnderlineStyle||(e.ChartUnderlineStyle={})),function(e){e.notPlotted="NotPlotted",e.zero="Zero",e.interplotted="Interplotted"}(e.ChartDisplayBlanksAs||(e.ChartDisplayBlanksAs={})),function(e){e.rows="Rows",e.columns="Columns"}(e.ChartPlotBy||(e.ChartPlotBy={})),function(e){e.splitByPosition="SplitByPosition",e.splitByValue="SplitByValue",e.splitByPercentValue="SplitByPercentValue",e.splitByCustomSplit="SplitByCustomSplit"}(e.ChartSplitType||(e.ChartSplitType={})),function(e){e.colorfulPalette1="ColorfulPalette1",e.colorfulPalette2="ColorfulPalette2",e.colorfulPalette3="ColorfulPalette3",e.colorfulPalette4="ColorfulPalette4",e.monochromaticPalette1="MonochromaticPalette1",e.monochromaticPalette2="MonochromaticPalette2",e.monochromaticPalette3="MonochromaticPalette3",e.monochromaticPalette4="MonochromaticPalette4",e.monochromaticPalette5="MonochromaticPalette5",e.monochromaticPalette6="MonochromaticPalette6",e.monochromaticPalette7="MonochromaticPalette7",e.monochromaticPalette8="MonochromaticPalette8",e.monochromaticPalette9="MonochromaticPalette9",e.monochromaticPalette10="MonochromaticPalette10",e.monochromaticPalette11="MonochromaticPalette11",e.monochromaticPalette12="MonochromaticPalette12",e.monochromaticPalette13="MonochromaticPalette13"}(e.ChartColorScheme||(e.ChartColorScheme={})),function(e){e.linear="Linear",e.exponential="Exponential",e.logarithmic="Logarithmic",e.movingAverage="MovingAverage",e.polynomial="Polynomial",e.power="Power"}(e.ChartTrendlineType||(e.ChartTrendlineType={})),function(e){e.bringToFront="BringToFront",e.bringForward="BringForward",e.sendToBack="SendToBack",e.sendBackward="SendBackward"}(e.ShapeZOrder||(e.ShapeZOrder={})),function(e){e.unsupported="Unsupported",e.image="Image",e.geometricShape="GeometricShape",e.group="Group",e.line="Line"}(e.ShapeType||(e.ShapeType={})),function(e){e.currentSize="CurrentSize",e.originalSize="OriginalSize"}(e.ShapeScaleType||(e.ShapeScaleType={})),function(e){e.scaleFromTopLeft="ScaleFromTopLeft",e.scaleFromMiddle="ScaleFromMiddle",e.scaleFromBottomRight="ScaleFromBottomRight"}(e.ShapeScaleFrom||(e.ShapeScaleFrom={})),function(e){e.noFill="NoFill",e.solid="Solid",e.gradient="Gradient",e.pattern="Pattern",e.pictureAndTexture="PictureAndTexture",e.mixed="Mixed"}(e.ShapeFillType||(e.ShapeFillType={})),function(e){e.none="None",e.single="Single",e.double="Double",e.heavy="Heavy",e.dotted="Dotted",e.dottedHeavy="DottedHeavy",e.dash="Dash",e.dashHeavy="DashHeavy",e.dashLong="DashLong",e.dashLongHeavy="DashLongHeavy",e.dotDash="DotDash",e.dotDashHeavy="DotDashHeavy",e.dotDotDash="DotDotDash",e.dotDotDashHeavy="DotDotDashHeavy",e.wavy="Wavy",e.wavyHeavy="WavyHeavy",e.wavyDouble="WavyDouble"}(e.ShapeFontUnderlineStyle||(e.ShapeFontUnderlineStyle={})),function(e){e.unknown="UNKNOWN",e.bmp="BMP",e.jpeg="JPEG",e.gif="GIF",e.png="PNG",e.svg="SVG"}(e.PictureFormat||(e.PictureFormat={})),function(e){e.single="Single",e.thickBetweenThin="ThickBetweenThin",e.thickThin="ThickThin",e.thinThick="ThinThick",e.thinThin="ThinThin"}(e.ShapeLineStyle||(e.ShapeLineStyle={})),function(e){e.dash="Dash",e.dashDot="DashDot",e.dashDotDot="DashDotDot",e.longDash="LongDash",e.longDashDot="LongDashDot",e.roundDot="RoundDot",e.solid="Solid",e.squareDot="SquareDot",e.longDashDotDot="LongDashDotDot",e.systemDash="SystemDash",e.systemDot="SystemDot",e.systemDashDot="SystemDashDot"}(e.ShapeLineDashStyle||(e.ShapeLineDashStyle={})),function(e){e.short="Short",e.medium="Medium",e.long="Long"}(e.ArrowheadLength||(e.ArrowheadLength={})),function(e){e.none="None",e.triangle="Triangle",e.stealth="Stealth",e.diamond="Diamond",e.oval="Oval",e.open="Open"}(e.ArrowheadStyle||(e.ArrowheadStyle={})),function(e){e.narrow="Narrow",e.medium="Medium",e.wide="Wide"}(e.ArrowheadWidth||(e.ArrowheadWidth={})),function(e){e.range="Range",e.table="Table",e.text="Text"}(e.BindingType||(e.BindingType={})),function(e){e.edgeTop="EdgeTop",e.edgeBottom="EdgeBottom",e.edgeLeft="EdgeLeft",e.edgeRight="EdgeRight",e.insideVertical="InsideVertical",e.insideHorizontal="InsideHorizontal",e.diagonalDown="DiagonalDown",e.diagonalUp="DiagonalUp"}(e.BorderIndex||(e.BorderIndex={})),function(e){e.none="None",e.continuous="Continuous",e.dash="Dash",e.dashDot="DashDot",e.dashDotDot="DashDotDot",e.dot="Dot",e.double="Double",e.slantDashDot="SlantDashDot"}(e.BorderLineStyle||(e.BorderLineStyle={})),function(e){e.hairline="Hairline",e.thin="Thin",e.medium="Medium",e.thick="Thick"}(e.BorderWeight||(e.BorderWeight={})),function(e){e.automatic="Automatic",e.automaticExceptTables="AutomaticExceptTables",e.manual="Manual"}(e.CalculationMode||(e.CalculationMode={})),function(e){e.recalculate="Recalculate",e.full="Full",e.fullRebuild="FullRebuild"}(e.CalculationType||(e.CalculationType={})),function(e){e.all="All",e.formats="Formats",e.contents="Contents",e.hyperlinks="Hyperlinks",e.removeHyperlinks="RemoveHyperlinks"}(e.ClearApplyTo||(e.ClearApplyTo={})),function(e){e.automatic="Automatic",e.none="None",e.cellMidPoint="CellMidPoint"}(e.ConditionalDataBarAxisFormat||(e.ConditionalDataBarAxisFormat={})),function(e){e.context="Context",e.leftToRight="LeftToRight",e.rightToLeft="RightToLeft"}(e.ConditionalDataBarDirection||(e.ConditionalDataBarDirection={})),function(e){e.top="Top",e.bottom="Bottom"}(e.ConditionalFormatDirection||(e.ConditionalFormatDirection={})),function(e){e.custom="Custom",e.dataBar="DataBar",e.colorScale="ColorScale",e.iconSet="IconSet",e.topBottom="TopBottom",e.presetCriteria="PresetCriteria",e.containsText="ContainsText",e.cellValue="CellValue"}(e.ConditionalFormatType||(e.ConditionalFormatType={})),function(e){e.invalid="Invalid",e.automatic="Automatic",e.lowestValue="LowestValue",e.highestValue="HighestValue",e.number="Number",e.percent="Percent",e.formula="Formula",e.percentile="Percentile"}(e.ConditionalFormatRuleType||(e.ConditionalFormatRuleType={})),function(e){e.invalid="Invalid",e.number="Number",e.percent="Percent",e.formula="Formula",e.percentile="Percentile"}(e.ConditionalFormatIconRuleType||(e.ConditionalFormatIconRuleType={})),function(e){e.invalid="Invalid",e.lowestValue="LowestValue",e.highestValue="HighestValue",e.number="Number",e.percent="Percent",e.formula="Formula",e.percentile="Percentile"}(e.ConditionalFormatColorCriterionType||(e.ConditionalFormatColorCriterionType={})),function(e){e.invalid="Invalid",e.topItems="TopItems",e.topPercent="TopPercent",e.bottomItems="BottomItems",e.bottomPercent="BottomPercent"}(e.ConditionalTopBottomCriterionType||(e.ConditionalTopBottomCriterionType={})),function(e){e.invalid="Invalid",e.blanks="Blanks",e.nonBlanks="NonBlanks",e.errors="Errors",e.nonErrors="NonErrors",e.yesterday="Yesterday",e.today="Today",e.tomorrow="Tomorrow",e.lastSevenDays="LastSevenDays",e.lastWeek="LastWeek",e.thisWeek="ThisWeek",e.nextWeek="NextWeek",e.lastMonth="LastMonth",e.thisMonth="ThisMonth",e.nextMonth="NextMonth",e.aboveAverage="AboveAverage",e.belowAverage="BelowAverage",e.equalOrAboveAverage="EqualOrAboveAverage",e.equalOrBelowAverage="EqualOrBelowAverage",e.oneStdDevAboveAverage="OneStdDevAboveAverage",e.oneStdDevBelowAverage="OneStdDevBelowAverage",e.twoStdDevAboveAverage="TwoStdDevAboveAverage",e.twoStdDevBelowAverage="TwoStdDevBelowAverage",e.threeStdDevAboveAverage="ThreeStdDevAboveAverage",e.threeStdDevBelowAverage="ThreeStdDevBelowAverage",e.uniqueValues="UniqueValues",e.duplicateValues="DuplicateValues"}(e.ConditionalFormatPresetCriterion||(e.ConditionalFormatPresetCriterion={})),function(e){e.invalid="Invalid",e.contains="Contains",e.notContains="NotContains",e.beginsWith="BeginsWith",e.endsWith="EndsWith"}(e.ConditionalTextOperator||(e.ConditionalTextOperator={})),function(e){e.invalid="Invalid",e.between="Between",e.notBetween="NotBetween",e.equalTo="EqualTo",e.notEqualTo="NotEqualTo",e.greaterThan="GreaterThan",e.lessThan="LessThan",e.greaterThanOrEqual="GreaterThanOrEqual",e.lessThanOrEqual="LessThanOrEqual"}(e.ConditionalCellValueOperator||(e.ConditionalCellValueOperator={})),function(e){e.invalid="Invalid",e.greaterThan="GreaterThan",e.greaterThanOrEqual="GreaterThanOrEqual"}(e.ConditionalIconCriterionOperator||(e.ConditionalIconCriterionOperator={})),function(e){e.edgeTop="EdgeTop",e.edgeBottom="EdgeBottom",e.edgeLeft="EdgeLeft",e.edgeRight="EdgeRight"}(e.ConditionalRangeBorderIndex||(e.ConditionalRangeBorderIndex={})),function(e){e.none="None",e.continuous="Continuous",e.dash="Dash",e.dashDot="DashDot",e.dashDotDot="DashDotDot",e.dot="Dot"}(e.ConditionalRangeBorderLineStyle||(e.ConditionalRangeBorderLineStyle={})),function(e){e.none="None",e.single="Single",e.double="Double"}(e.ConditionalRangeFontUnderlineStyle||(e.ConditionalRangeFontUnderlineStyle={})),function(e){e.none="None",e.wholeNumber="WholeNumber",e.decimal="Decimal",e.list="List",e.date="Date",e.time="Time",e.textLength="TextLength",e.custom="Custom",e.inconsistent="Inconsistent",e.mixedCriteria="MixedCriteria"}(e.DataValidationType||(e.DataValidationType={})),function(e){e.between="Between",e.notBetween="NotBetween",e.equalTo="EqualTo",e.notEqualTo="NotEqualTo",e.greaterThan="GreaterThan",e.lessThan="LessThan",e.greaterThanOrEqualTo="GreaterThanOrEqualTo",e.lessThanOrEqualTo="LessThanOrEqualTo"}(e.DataValidationOperator||(e.DataValidationOperator={})),function(e){e.stop="Stop",e.warning="Warning",e.information="Information"}(e.DataValidationAlertStyle||(e.DataValidationAlertStyle={})),function(e){e.up="Up",e.left="Left"}(e.DeleteShiftDirection||(e.DeleteShiftDirection={})),function(e){e.unknown="Unknown",e.aboveAverage="AboveAverage",e.allDatesInPeriodApril="AllDatesInPeriodApril",e.allDatesInPeriodAugust="AllDatesInPeriodAugust",e.allDatesInPeriodDecember="AllDatesInPeriodDecember",e.allDatesInPeriodFebruary="AllDatesInPeriodFebruray",e.allDatesInPeriodJanuary="AllDatesInPeriodJanuary",e.allDatesInPeriodJuly="AllDatesInPeriodJuly",e.allDatesInPeriodJune="AllDatesInPeriodJune",e.allDatesInPeriodMarch="AllDatesInPeriodMarch",e.allDatesInPeriodMay="AllDatesInPeriodMay",e.allDatesInPeriodNovember="AllDatesInPeriodNovember",e.allDatesInPeriodOctober="AllDatesInPeriodOctober",e.allDatesInPeriodQuarter1="AllDatesInPeriodQuarter1",e.allDatesInPeriodQuarter2="AllDatesInPeriodQuarter2",e.allDatesInPeriodQuarter3="AllDatesInPeriodQuarter3",e.allDatesInPeriodQuarter4="AllDatesInPeriodQuarter4",e.allDatesInPeriodSeptember="AllDatesInPeriodSeptember",e.belowAverage="BelowAverage",e.lastMonth="LastMonth",e.lastQuarter="LastQuarter",e.lastWeek="LastWeek",e.lastYear="LastYear",e.nextMonth="NextMonth",e.nextQuarter="NextQuarter",e.nextWeek="NextWeek",e.nextYear="NextYear",e.thisMonth="ThisMonth",e.thisQuarter="ThisQuarter",e.thisWeek="ThisWeek",e.thisYear="ThisYear",e.today="Today",e.tomorrow="Tomorrow",e.yearToDate="YearToDate",e.yesterday="Yesterday"}(e.DynamicFilterCriteria||(e.DynamicFilterCriteria={})),function(e){e.year="Year",e.month="Month",e.day="Day",e.hour="Hour",e.minute="Minute",e.second="Second"}(e.FilterDatetimeSpecificity||(e.FilterDatetimeSpecificity={})),function(e){e.bottomItems="BottomItems",e.bottomPercent="BottomPercent",e.cellColor="CellColor",e.dynamic="Dynamic",e.fontColor="FontColor",e.values="Values",e.topItems="TopItems",e.topPercent="TopPercent",e.icon="Icon",e.custom="Custom"}(e.FilterOn||(e.FilterOn={})),function(e){e.and="And",e.or="Or"}(e.FilterOperator||(e.FilterOperator={})),function(e){e.general="General",e.left="Left",e.center="Center",e.right="Right",e.fill="Fill",e.justify="Justify",e.centerAcrossSelection="CenterAcrossSelection",e.distributed="Distributed"}(e.HorizontalAlignment||(e.HorizontalAlignment={})),function(e){e.invalid="Invalid",e.threeArrows="ThreeArrows",e.threeArrowsGray="ThreeArrowsGray",e.threeFlags="ThreeFlags",e.threeTrafficLights1="ThreeTrafficLights1",e.threeTrafficLights2="ThreeTrafficLights2",e.threeSigns="ThreeSigns",e.threeSymbols="ThreeSymbols",e.threeSymbols2="ThreeSymbols2",e.fourArrows="FourArrows",e.fourArrowsGray="FourArrowsGray",e.fourRedToBlack="FourRedToBlack",e.fourRating="FourRating",e.fourTrafficLights="FourTrafficLights",e.fiveArrows="FiveArrows",e.fiveArrowsGray="FiveArrowsGray",e.fiveRating="FiveRating",e.fiveQuarters="FiveQuarters",e.threeStars="ThreeStars",e.threeTriangles="ThreeTriangles",e.fiveBoxes="FiveBoxes"}(e.IconSet||(e.IconSet={})),function(e){e.fit="Fit",e.fitAndCenter="FitAndCenter",e.fill="Fill"}(e.ImageFittingMode||(e.ImageFittingMode={})),function(e){e.down="Down",e.right="Right"}(e.InsertShiftDirection||(e.InsertShiftDirection={})),function(e){e.worksheet="Worksheet",e.workbook="Workbook"}(e.NamedItemScope||(e.NamedItemScope={})),function(e){e.string="String",e.integer="Integer",e.double="Double",e.boolean="Boolean",e.range="Range",e.error="Error",e.array="Array"}(e.NamedItemType||(e.NamedItemType={})),function(e){e.none="None",e.single="Single",e.double="Double",e.singleAccountant="SingleAccountant",e.doubleAccountant="DoubleAccountant"}(e.RangeUnderlineStyle||(e.RangeUnderlineStyle={})),function(e){e.visible="Visible",e.hidden="Hidden",e.veryHidden="VeryHidden"}(e.SheetVisibility||(e.SheetVisibility={})),function(e){e.unknown="Unknown",e.empty="Empty",e.string="String",e.integer="Integer",e.double="Double",e.boolean="Boolean",e.error="Error",e.richValue="RichValue"}(e.RangeValueType||(e.RangeValueType={})),function(e){e.left="Left",e.right="Right",e.up="Up",e.down="Down"}(e.KeyboardDirection||(e.KeyboardDirection={})),function(e){e.forward="Forward",e.backwards="Backwards"}(e.SearchDirection||(e.SearchDirection={})),function(e){e.rows="Rows",e.columns="Columns"}(e.SortOrientation||(e.SortOrientation={})),function(e){e.value="Value",e.cellColor="CellColor",e.fontColor="FontColor",e.icon="Icon"}(e.SortOn||(e.SortOn={})),function(e){e.normal="Normal",e.textAsNumber="TextAsNumber"}(e.SortDataOption||(e.SortDataOption={})),function(e){e.pinYin="PinYin",e.strokeCount="StrokeCount"}(e.SortMethod||(e.SortMethod={})),function(e){e.top="Top",e.center="Center",e.bottom="Bottom",e.justify="Justify",e.distributed="Distributed"}(e.VerticalAlignment||(e.VerticalAlignment={})),function(e){e.number="Number",e.boolean="Boolean",e.date="Date",e.string="String",e.float="Float"}(e.DocumentPropertyType||(e.DocumentPropertyType={})),function(e){e.atTop="AtTop",e.atBottom="AtBottom",e.off="Off"}(e.SubtotalLocationType||(e.SubtotalLocationType={})),function(e){e.compact="Compact",e.tabular="Tabular",e.outline="Outline"}(e.PivotLayoutType||(e.PivotLayoutType={})),function(e){e.normal="Normal",e.unlocked="Unlocked",e.none="None"}(e.ProtectionSelectionMode||(e.ProtectionSelectionMode={})),function(e){e.portrait="Portrait",e.landscape="Landscape"}(e.PageOrientation||(e.PageOrientation={})),function(e){e.letter="Letter",e.letterSmall="LetterSmall",e.tabloid="Tabloid",e.ledger="Ledger",e.legal="Legal",e.statement="Statement",e.executive="Executive",e.a3="A3",e.a4="A4",e.a4Small="A4Small",e.a5="A5",e.b4="B4",e.b5="B5",e.folio="Folio",e.quatro="Quatro",e.paper10x14="Paper10x14",e.paper11x17="Paper11x17",e.note="Note",e.envelope9="Envelope9",e.envelope10="Envelope10",e.envelope11="Envelope11",e.envelope12="Envelope12",e.envelope14="Envelope14",e.csheet="Csheet",e.dsheet="Dsheet",e.esheet="Esheet",e.envelopeDL="EnvelopeDL",e.envelopeC5="EnvelopeC5",e.envelopeC3="EnvelopeC3",e.envelopeC4="EnvelopeC4",e.envelopeC6="EnvelopeC6",e.envelopeC65="EnvelopeC65",e.envelopeB4="EnvelopeB4",e.envelopeB5="EnvelopeB5",e.envelopeB6="EnvelopeB6",e.envelopeItaly="EnvelopeItaly",e.envelopeMonarch="EnvelopeMonarch",e.envelopePersonal="EnvelopePersonal",e.fanfoldUS="FanfoldUS",e.fanfoldStdGerman="FanfoldStdGerman",e.fanfoldLegalGerman="FanfoldLegalGerman"}(e.PaperType||(e.PaperType={})),function(e){e.context="Context",e.leftToRight="LeftToRight",e.rightToLeft="RightToLeft"}(e.ReadingOrder||(e.ReadingOrder={})),function(e){e.normal="Normal",e.comma="Comma",e.currency="Currency",e.percent="Percent",e.wholeComma="WholeComma",e.wholeDollar="WholeDollar",e.hlink="Hlink",e.hlinkTrav="HlinkTrav",e.note="Note",e.warningText="WarningText",e.emphasis1="Emphasis1",e.emphasis2="Emphasis2",e.emphasis3="Emphasis3",e.sheetTitle="SheetTitle",e.heading1="Heading1",e.heading2="Heading2",e.heading3="Heading3",e.heading4="Heading4",e.input="Input",e.output="Output",e.calculation="Calculation",e.checkCell="CheckCell",e.linkedCell="LinkedCell",e.total="Total",e.good="Good",e.bad="Bad",e.neutral="Neutral",e.accent1="Accent1",e.accent1_20="Accent1_20",e.accent1_40="Accent1_40",e.accent1_60="Accent1_60",e.accent2="Accent2",e.accent2_20="Accent2_20",e.accent2_40="Accent2_40",e.accent2_60="Accent2_60",e.accent3="Accent3",e.accent3_20="Accent3_20",e.accent3_40="Accent3_40",e.accent3_60="Accent3_60",e.accent4="Accent4",e.accent4_20="Accent4_20",e.accent4_40="Accent4_40",e.accent4_60="Accent4_60",e.accent5="Accent5",e.accent5_20="Accent5_20",e.accent5_40="Accent5_40",e.accent5_60="Accent5_60",e.accent6="Accent6",e.accent6_20="Accent6_20",e.accent6_40="Accent6_40",e.accent6_60="Accent6_60",e.explanatoryText="ExplanatoryText"}(e.BuiltInStyle||(e.BuiltInStyle={})),function(e){e.asDisplayed="AsDisplayed",e.blank="Blank",e.dash="Dash",e.notAvailable="NotAvailable"}(e.PrintErrorType||(e.PrintErrorType={})),function(e){e.none="None",e.before="Before",e.after="After",e.beginning="Beginning",e.end="End"}(e.WorksheetPositionType||(e.WorksheetPositionType={})),function(e){e.noComments="NoComments",e.endSheet="EndSheet",e.inPlace="InPlace"}(e.PrintComments||(e.PrintComments={})),function(e){e.downThenOver="DownThenOver",e.overThenDown="OverThenDown"}(e.PrintOrder||(e.PrintOrder={})),function(e){e.points="Points",e.inches="Inches",e.centimeters="Centimeters"}(e.PrintMarginUnit||(e.PrintMarginUnit={})),function(e){e.default="Default",e.firstAndDefault="FirstAndDefault",e.oddAndEven="OddAndEven",e.firstOddAndEven="FirstOddAndEven"}(e.HeaderFooterState||(e.HeaderFooterState={})),function(e){e.fillDefault="FillDefault",e.fillCopy="FillCopy",e.fillSeries="FillSeries",e.fillFormats="FillFormats",e.fillValues="FillValues",e.fillDays="FillDays",e.fillWeekdays="FillWeekdays",e.fillMonths="FillMonths",e.fillYears="FillYears",e.linearTrend="LinearTrend",e.growthTrend="GrowthTrend",e.flashFill="FlashFill"}(e.AutoFillType||(e.AutoFillType={})),function(e){e.byRows="ByRows",e.byColumns="ByColumns"}(e.GroupOption||(e.GroupOption={})),function(e){e.all="All",e.formulas="Formulas",e.values="Values",e.formats="Formats",e.link="Link"}(e.RangeCopyType||(e.RangeCopyType={})),function(e){e.none="None",e.validLinkedData="ValidLinkedData",e.disambiguationNeeded="DisambiguationNeeded",e.brokenLinkedData="BrokenLinkedData",e.fetchingData="FetchingData"}(e.LinkedDataTypeState||(e.LinkedDataTypeState={})),function(e){e.lineInverse="LineInverse",e.triangle="Triangle",e.rightTriangle="RightTriangle",e.rectangle="Rectangle",e.diamond="Diamond",e.parallelogram="Parallelogram",e.trapezoid="Trapezoid",e.nonIsoscelesTrapezoid="NonIsoscelesTrapezoid",e.pentagon="Pentagon",e.hexagon="Hexagon",e.heptagon="Heptagon",e.octagon="Octagon",e.decagon="Decagon",e.dodecagon="Dodecagon",e.star4="Star4",e.star5="Star5",e.star6="Star6",e.star7="Star7",e.star8="Star8",e.star10="Star10",e.star12="Star12",e.star16="Star16",e.star24="Star24",e.star32="Star32",e.roundRectangle="RoundRectangle",e.round1Rectangle="Round1Rectangle",e.round2SameRectangle="Round2SameRectangle",e.round2DiagonalRectangle="Round2DiagonalRectangle",e.snipRoundRectangle="SnipRoundRectangle",e.snip1Rectangle="Snip1Rectangle",e.snip2SameRectangle="Snip2SameRectangle",e.snip2DiagonalRectangle="Snip2DiagonalRectangle",e.plaque="Plaque",e.ellipse="Ellipse",e.teardrop="Teardrop",e.homePlate="HomePlate",e.chevron="Chevron",e.pieWedge="PieWedge",e.pie="Pie",e.blockArc="BlockArc",e.donut="Donut",e.noSmoking="NoSmoking",e.rightArrow="RightArrow",e.leftArrow="LeftArrow",e.upArrow="UpArrow",e.downArrow="DownArrow",e.stripedRightArrow="StripedRightArrow",e.notchedRightArrow="NotchedRightArrow",e.bentUpArrow="BentUpArrow",e.leftRightArrow="LeftRightArrow",e.upDownArrow="UpDownArrow",e.leftUpArrow="LeftUpArrow",e.leftRightUpArrow="LeftRightUpArrow",e.quadArrow="QuadArrow",e.leftArrowCallout="LeftArrowCallout",e.rightArrowCallout="RightArrowCallout",e.upArrowCallout="UpArrowCallout",e.downArrowCallout="DownArrowCallout",e.leftRightArrowCallout="LeftRightArrowCallout",e.upDownArrowCallout="UpDownArrowCallout",e.quadArrowCallout="QuadArrowCallout",e.bentArrow="BentArrow",e.uturnArrow="UturnArrow",e.circularArrow="CircularArrow",e.leftCircularArrow="LeftCircularArrow",e.leftRightCircularArrow="LeftRightCircularArrow",e.curvedRightArrow="CurvedRightArrow",e.curvedLeftArrow="CurvedLeftArrow",e.curvedUpArrow="CurvedUpArrow",e.curvedDownArrow="CurvedDownArrow",e.swooshArrow="SwooshArrow",e.cube="Cube",e.can="Can",e.lightningBolt="LightningBolt",e.heart="Heart",e.sun="Sun",e.moon="Moon",e.smileyFace="SmileyFace",e.irregularSeal1="IrregularSeal1",e.irregularSeal2="IrregularSeal2",e.foldedCorner="FoldedCorner",e.bevel="Bevel",e.frame="Frame",e.halfFrame="HalfFrame",e.corner="Corner",e.diagonalStripe="DiagonalStripe",e.chord="Chord",e.arc="Arc",e.leftBracket="LeftBracket",e.rightBracket="RightBracket",e.leftBrace="LeftBrace",e.rightBrace="RightBrace",e.bracketPair="BracketPair",e.bracePair="BracePair",e.callout1="Callout1",e.callout2="Callout2",e.callout3="Callout3",e.accentCallout1="AccentCallout1",e.accentCallout2="AccentCallout2",e.accentCallout3="AccentCallout3",e.borderCallout1="BorderCallout1",e.borderCallout2="BorderCallout2",e.borderCallout3="BorderCallout3",e.accentBorderCallout1="AccentBorderCallout1",e.accentBorderCallout2="AccentBorderCallout2",e.accentBorderCallout3="AccentBorderCallout3",e.wedgeRectCallout="WedgeRectCallout",e.wedgeRRectCallout="WedgeRRectCallout",e.wedgeEllipseCallout="WedgeEllipseCallout",e.cloudCallout="CloudCallout",e.cloud="Cloud",e.ribbon="Ribbon",e.ribbon2="Ribbon2",e.ellipseRibbon="EllipseRibbon",e.ellipseRibbon2="EllipseRibbon2",e.leftRightRibbon="LeftRightRibbon",e.verticalScroll="VerticalScroll",e.horizontalScroll="HorizontalScroll",e.wave="Wave",e.doubleWave="DoubleWave",e.plus="Plus",e.flowChartProcess="FlowChartProcess",e.flowChartDecision="FlowChartDecision",e.flowChartInputOutput="FlowChartInputOutput",e.flowChartPredefinedProcess="FlowChartPredefinedProcess",e.flowChartInternalStorage="FlowChartInternalStorage",e.flowChartDocument="FlowChartDocument",e.flowChartMultidocument="FlowChartMultidocument",e.flowChartTerminator="FlowChartTerminator",e.flowChartPreparation="FlowChartPreparation",e.flowChartManualInput="FlowChartManualInput",e.flowChartManualOperation="FlowChartManualOperation",e.flowChartConnector="FlowChartConnector",e.flowChartPunchedCard="FlowChartPunchedCard",e.flowChartPunchedTape="FlowChartPunchedTape",e.flowChartSummingJunction="FlowChartSummingJunction",e.flowChartOr="FlowChartOr",e.flowChartCollate="FlowChartCollate",e.flowChartSort="FlowChartSort",e.flowChartExtract="FlowChartExtract",e.flowChartMerge="FlowChartMerge",e.flowChartOfflineStorage="FlowChartOfflineStorage",e.flowChartOnlineStorage="FlowChartOnlineStorage",e.flowChartMagneticTape="FlowChartMagneticTape",e.flowChartMagneticDisk="FlowChartMagneticDisk",e.flowChartMagneticDrum="FlowChartMagneticDrum",e.flowChartDisplay="FlowChartDisplay",e.flowChartDelay="FlowChartDelay",e.flowChartAlternateProcess="FlowChartAlternateProcess",e.flowChartOffpageConnector="FlowChartOffpageConnector",e.actionButtonBlank="ActionButtonBlank",e.actionButtonHome="ActionButtonHome",e.actionButtonHelp="ActionButtonHelp",e.actionButtonInformation="ActionButtonInformation",e.actionButtonForwardNext="ActionButtonForwardNext",e.actionButtonBackPrevious="ActionButtonBackPrevious",e.actionButtonEnd="ActionButtonEnd",e.actionButtonBeginning="ActionButtonBeginning",e.actionButtonReturn="ActionButtonReturn",e.actionButtonDocument="ActionButtonDocument",e.actionButtonSound="ActionButtonSound",e.actionButtonMovie="ActionButtonMovie",e.gear6="Gear6",e.gear9="Gear9",e.funnel="Funnel",e.mathPlus="MathPlus",e.mathMinus="MathMinus",e.mathMultiply="MathMultiply",e.mathDivide="MathDivide",e.mathEqual="MathEqual",e.mathNotEqual="MathNotEqual",e.cornerTabs="CornerTabs",e.squareTabs="SquareTabs",e.plaqueTabs="PlaqueTabs",e.chartX="ChartX",e.chartStar="ChartStar",e.chartPlus="ChartPlus"}(e.GeometricShapeType||(e.GeometricShapeType={})),function(e){e.straight="Straight",e.elbow="Elbow",e.curve="Curve"}(e.ConnectorType||(e.ConnectorType={})),function(e){e.plain="Plain",e.mention="Mention"}(e.ContentType||(e.ContentType={})),function(e){e.conditionalFormats="ConditionalFormats",e.dataValidations="DataValidations",e.blanks="Blanks",e.constants="Constants",e.formulas="Formulas",e.sameConditionalFormat="SameConditionalFormat",e.sameDataValidation="SameDataValidation",e.visible="Visible"}(e.SpecialCellType||(e.SpecialCellType={})),function(e){e.all="All",e.errors="Errors",e.errorsLogical="ErrorsLogical",e.errorsNumbers="ErrorsNumbers",e.errorsText="ErrorsText",e.errorsLogicalNumber="ErrorsLogicalNumber",e.errorsLogicalText="ErrorsLogicalText",e.errorsNumberText="ErrorsNumberText",e.logical="Logical",e.logicalNumbers="LogicalNumbers",e.logicalText="LogicalText",e.logicalNumbersText="LogicalNumbersText",e.numbers="Numbers",e.numbersText="NumbersText",e.text="Text"}(e.SpecialCellValueType||(e.SpecialCellValueType={})),function(e){e.twoCell="TwoCell",e.oneCell="OneCell",e.absolute="Absolute"}(e.Placement||(e.Placement={})),function(e){e.none="None",e.solid="Solid",e.gray50="Gray50",e.gray75="Gray75",e.gray25="Gray25",e.horizontal="Horizontal",e.vertical="Vertical",e.down="Down",e.up="Up",e.checker="Checker",e.semiGray75="SemiGray75",e.lightHorizontal="LightHorizontal",e.lightVertical="LightVertical",e.lightDown="LightDown",e.lightUp="LightUp",e.grid="Grid",e.crissCross="CrissCross",e.gray16="Gray16",e.gray8="Gray8",e.linearGradient="LinearGradient",e.rectangularGradient="RectangularGradient"}(e.FillPattern||(e.FillPattern={})),function(e){e.left="Left",e.center="Center",e.right="Right",e.justify="Justify",e.justifyLow="JustifyLow",e.distributed="Distributed",e.thaiDistributed="ThaiDistributed"}(e.ShapeTextHorizontalAlignment||(e.ShapeTextHorizontalAlignment={})),function(e){e.top="Top",e.middle="Middle",e.bottom="Bottom",e.justified="Justified",e.distributed="Distributed"}(e.ShapeTextVerticalAlignment||(e.ShapeTextVerticalAlignment={})),function(e){e.overflow="Overflow",e.ellipsis="Ellipsis",e.clip="Clip"}(e.ShapeTextVerticalOverflow||(e.ShapeTextVerticalOverflow={})),function(e){e.overflow="Overflow",e.clip="Clip"}(e.ShapeTextHorizontalOverflow||(e.ShapeTextHorizontalOverflow={})),function(e){e.leftToRight="LeftToRight",e.rightToLeft="RightToLeft"}(e.ShapeTextReadingOrder||(e.ShapeTextReadingOrder={})),function(e){e.horizontal="Horizontal",e.vertical="Vertical",e.vertical270="Vertical270",e.wordArtVertical="WordArtVertical",e.eastAsianVertical="EastAsianVertical",e.mongolianVertical="MongolianVertical",e.wordArtVerticalRTL="WordArtVerticalRTL"}(e.ShapeTextOrientation||(e.ShapeTextOrientation={})),function(e){e.autoSizeNone="AutoSizeNone",e.autoSizeTextToFitShape="AutoSizeTextToFitShape",e.autoSizeShapeToFitText="AutoSizeShapeToFitText",e.autoSizeMixed="AutoSizeMixed"}(e.ShapeAutoSize||(e.ShapeAutoSize={})),function(e){e.dataSourceOrder="DataSourceOrder",e.ascending="Ascending",e.descending="Descending"}(e.SlicerSortType||(e.SlicerSortType={})),function(e){e.general="General",e.number="Number",e.currency="Currency",e.accounting="Accounting",e.date="Date",e.time="Time",e.percentage="Percentage",e.fraction="Fraction",e.scientific="Scientific",e.text="Text",e.special="Special",e.custom="Custom"}(e.NumberFormatCategory||(e.NumberFormatCategory={}))}(t.ExcelScript||(t.ExcelScript={}))},64477:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.batchIntellisense=void 0;var a=r(n(76466));t.batchIntellisense=a.default.data},40149:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.code=void 0;var a=r(n(67896));t.code=a.default.data},11283:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.intellisense=void 0;var a=r(n(50726));t.intellisense=a.default.data},57063:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=n(91905);t.default=r.ExcelScript},42518:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.model=void 0;var a=r(n(17084));t.model=a.default},71008:function(e,t,n){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Scanner=void 0;var i=a(n(286)),o=n(93797),s=n(25038),l=n(29008),c=n(59147),u=n(89066),h=n(60153),p=function(){function e(e,t,n){this.sourceFile=e,this.checker=t,this.model=n,this.detectedModelApis=new Map,this.detectedModelSets=new Set,this.detectedModelUndoSets=new Set,this.traverseNode=this.traverseNode.bind(this),this.scanNode=this.scanNode.bind(this)}var t,n,a,p=e.prototype;return p.setAliasesToScanDetectedSets=function(e){var t=Object.assign({alias:"undefined"},o.defaultOfficeScriptModelSet),n=this.model.sets;return void 0===n?[t]:Array.from(e).map((function(e){var r=n[e];return void 0===r?t:Object.assign({alias:e},r)}))},e.consolidateApiSets=function(e){var t=o.consolidateApiSets(e);return t.sort(o.compareApiSets),t.map((function(e){return{name:e.name,version:e.version}}))},p.scan=function(){i.default.forEachChild(this.sourceFile,this.traverseNode)},p.traverseNode=function(e){this.scanNode(e),i.default.forEachChild(e,this.traverseNode)},p.scanNode=function(e){var t;if(i.default.isIdentifier(e)){var n=l.parseNode(e,this.checker),r=n.namespaceName,a=n.objectName,o=n.methodName,p=n.isMethod;if(u.isUnderModelNamespace(r,this.model)&&p){var d=h.getModelMethod(this.model,r,a,o),f=d&&d.set||"undefined";this.detectedModelSets.add(f);var m=(null===d||void 0===d?void 0:d.undoSet)||"undefined";this.detectedModelUndoSets.add(m);var y=r+"."+a+"."+o;if(!this.detectedModelApis.has(y)){var g=s.isModelMethod(this.model,r,a,o);this.detectedModelApis.set(y,{name:y,inModelNamespace:!0,inModel:g,positions:[],set:f,undoSet:m})}var b=c.getNodePosition(e,this.sourceFile);null===(t=this.detectedModelApis.get(y))||void 0===t||t.positions.push(b)}}},t=e,(n=[{key:"apiPositions",get:function(){return Array.from(this.detectedModelApis.values())}},{key:"allSetAliases",get:function(){var e=Array.from(this.detectedModelSets),t=Array.from(this.detectedModelUndoSets),n=[];n.push.apply(n,e),n.push.apply(n,t);var r=new Set(n);return this.setAliasesToScanDetectedSets(r)}},{key:"requiredSets",get:function(){var t=this.setAliasesToScanDetectedSets(this.detectedModelSets);return e.consolidateApiSets(t)}},{key:"undoRequiredSets",get:function(){var t=this.setAliasesToScanDetectedSets(this.detectedModelUndoSets);return e.consolidateApiSets(t)}}])&&r(t.prototype,n),a&&r(t,a),Object.defineProperty(t,"prototype",{writable:!1}),e}();t.Scanner=p},60153:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getModelMethod=void 0,t.getModelMethod=function(e,t,n,r){if(void 0!==t&&void 0!==n&&void 0!==r){var a=e.namespaces[t];if(void 0!==a){var i=a.objects[n];if(void 0!==i){var o=i.methods[r];if(void 0!==o)return o}}}}},59147:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getNodePosition=void 0;var a=r(n(286));t.getNodePosition=function(e,t){var n=a.default.getLineAndCharacterOfPosition(t,e.getStart()),r=n.line,i=n.character,o=a.default.getLineAndCharacterOfPosition(t,e.end);return{startLine:r,startChar:i,endLine:o.line,endChar:o.character}}},80777:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.scanProgram=t.scan=void 0;var r=n(11786);Object.defineProperty(t,"scan",{enumerable:!0,get:function(){return r.scan}});var a=n(7931);Object.defineProperty(t,"scanProgram",{enumerable:!0,get:function(){return a.scanProgram}})},25038:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.isModelMethod=void 0;var r=n(60153);t.isModelMethod=function(e,t,n,a){return!(void 0===r.getModelMethod(e,t,n,a))}},89066:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isUnderModelNamespace=void 0,t.isUnderModelNamespace=function(e,t){return void 0!==e&&void 0!==t.namespaces[e]}},29008:function(e,t,n){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.parseNode=void 0;var a=r(n(286));t.parseNode=function(e,t){var n,r=t.getSymbolAtLocation(e);if(void 0===r)return{};var i=(null===(n=null===r||void 0===r?void 0:r.valueDeclaration)||void 0===n?void 0:n.kind)===a.default.SyntaxKind.MethodSignature,o=t.getTypeOfSymbolAtLocation(r,e);if(void 0===o)return{};var s=o.symbol;if(void 0===s)return{};var l=s.escapedName.toString(),c=s.parent,u=c?c.escapedName.toString():void 0;if(void 0===c)return{};var h=c.parent;return{namespaceName:h?h.escapedName.toString():void 0,objectName:u,methodName:l,isMethod:i}}},11786:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.scan=void 0;var r=n(93797),a=n(7931);t.scan=function(e,t){var n=t.intellisense,i=t.model,o=Date.now(),s=r.createProgram(e,{intellisense:n}),l=Date.now()-o,c=a.scanProgram(s,{model:i});return c.performanceMetrics.createProgramMilliseconds=l,c}},7931:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.scanProgram=void 0;var r=n(93797),a=n(71008);t.scanProgram=function(e,t){var n=t.model,i=Date.now(),o=e.getTypeChecker(),s=Date.now()-i,l=r.getSingleSourceFile(e),c=new a.Scanner(l,o,n),u=Date.now();c.scan();var h=Date.now()-u;return{allSets:c.allSetAliases,requiredSets:c.requiredSets,requiredUndoSets:c.undoRequiredSets,detectedApis:c.apiPositions,performanceMetrics:{scanMilliseconds:h,createProgramMilliseconds:0,createCheckerMilliseconds:s}}}},84198:function(e,t){function n(e){return"number"===typeof e&&e>=0&&Number.isSafeInteger(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.checkOfficeScriptModel=void 0,t.checkOfficeScriptModel=function(e,t){if(void 0!==e){var r=e.namespaces,a=e.sets;void 0===r&&t("Model must contain namespaces");var i=Object.keys(e.namespaces);0===i.length&&t("Model.namespaces must contain at least one namespace");var o=new Map;if(void 0===a)t("Model must contain sets");else{var s=Object.keys(a);s.forEach((function(e){o.set(e,!1)})),s.forEach((function(e){!function(e,t,r){var a=t.major,i=t.minor,o=t.name,s=t.version;n(a)||r("set ["+e+"] major ["+a+"] must be a positive integer");n(i)||r("set ["+e+"] minor ["+i+"] must be a positive integer");"string"!==typeof o&&r("set ["+e+"] name ["+o+"] must be a string");"string"!==typeof s&&r("set ["+e+"] version ["+s+"] must be a string");var l=a+"."+i;s!==l&&r("set ["+e+"] version ["+s+"] must be ["+l+"]")}(e,a[e],t)}))}i.forEach((function(n){var r=e.namespaces[n].objects;if(void 0!==r){var a=Object.keys(r);0===a.length&&t("Model namespace ["+n+"] has no objects"),a.forEach((function(e){var a=r[e].methods;if(void 0!==a){var i=Object.keys(a);0===i.length&&t("Model namespace ["+n+"] object ["+e+"] has no methods"),i.forEach((function(r){var i=a[r],s=i.isRead,l=i.isAsync,c=i.set,u=i.undoSet;!0===l&&void 0===s&&t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] isAsync but isRead is undefined"),void 0===c?t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set is undefined"):o.has(c)?o.set(c,!0):t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set ["+c+"] is not available in sets"),void 0!==u&&(o.has(u)?o.set(u,!0):t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set ["+u+"] is not available in sets"))}))}else t("Model namespace ["+n+"] object ["+e+"] is missing a 'methods' property")}))}else t("Model namespace ["+n+"] must have a valid 'objects' property")})),Array.from(o.entries()).map((function(e){return{name:e[0],referenced:e[1]}})).filter((function(e){return!e.referenced})).forEach((function(e){var n=e.name;t("Model set ["+n+"] is not referenced")}))}else t("model must be defined")}},34539:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareApiSets=void 0,t.compareApiSets=function(e,t){return e.name===t.name?e.major===t.major?e.minor===t.minor?0:e.minor<t.minor?-1:1:e.major<t.major?-1:1:e.name<t.name?-1:1}},20811:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.consolidateApiSets=void 0,t.consolidateApiSets=function(e){return e.filter((function(e,t,n){return!n.some((function(n,r){return e.name===n.name&&e.major===n.major&&e.minor===n.minor&&t<r}))})).filter((function(e,t,n){return!n.some((function(t){return e.name===t.name&&e.major===t.major&&e.minor<t.minor}))}))}},71401:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createProgram=void 0;var r=n(51110);t.createProgram=function(e,t){var n=e;return r.createProgramFromFiles([{name:"code.ts",data:n}],t)}},51110:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.createProgramFromFiles=void 0;var o=i(n(286));t.createProgramFromFiles=function(e,t){var n=t.intellisense,r=e.map((function(e){return e.name})),a=new Map(e.map((function(e){return[e.name,e.data]}))),i=o.ScriptTarget.ES2020,s="lib.d.ts",l={target:i,strict:!0},c=Object.assign(Object.assign({},l),t.compilerOptions||{}),u=c.target||i,h=(n||[""]).join("\n\n\n"),p={fileExists:function(){return!0},getCanonicalFileName:function(e){return e},getCurrentDirectory:function(){return"/"},getDefaultLibFileName:function(){return s},getNewLine:function(){return"\n"},getSourceFile:function(e){var t=a.get(e);return void 0!==t?o.createSourceFile(e,t,u,!0):e===s?o.createSourceFile(e,h,u,!0):void 0},readFile:function(){},useCaseSensitiveFileNames:function(){return!1},writeFile:function(){}};return o.createProgram(r,c,p)}},34581:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultApiSet=void 0,t.defaultApiSet={name:"undefined",major:0,minor:0}},86954:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultOfficeScriptModelSet=void 0;var r=n(80591),a=n(34581);t.defaultOfficeScriptModelSet=r.transformApiSetToOfficeScriptModelSet(a.defaultApiSet)},88863:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getOfficeScriptModelMethod=void 0,t.getOfficeScriptModelMethod=function(e,t,n,r){if(t&&n&&r){var a=e.namespaces[t];if(a){var i=a.objects[n];if(i){var o=i.methods[r];return o||void 0}}}}},96561:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getSingleSourceFile=void 0,t.getSingleSourceFile=function(e){var t=e.getSourceFiles().filter((function(e){var t=e.fileName;return t.endsWith(".ts")&&!t.endsWith(".d.ts")}));if(t.length>1)throw new Error("Only one Source File should have a .ts extension. Mulitple Source Files are not supported.");return t[0]}},93797:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createProgram=t.getSingleSourceFile=t.getOfficeScriptModelMethod=t.consolidateApiSets=t.transformApiSetToOfficeScriptModelSet=t.compareApiSets=t.defaultOfficeScriptModelSet=t.defaultApiSet=t.validateOfficeScriptModel=t.checkOfficeScriptModel=void 0;var r=n(84198);Object.defineProperty(t,"checkOfficeScriptModel",{enumerable:!0,get:function(){return r.checkOfficeScriptModel}});var a=n(17298);Object.defineProperty(t,"validateOfficeScriptModel",{enumerable:!0,get:function(){return a.validateOfficeScriptModel}});var i=n(34581);Object.defineProperty(t,"defaultApiSet",{enumerable:!0,get:function(){return i.defaultApiSet}});var o=n(86954);Object.defineProperty(t,"defaultOfficeScriptModelSet",{enumerable:!0,get:function(){return o.defaultOfficeScriptModelSet}});var s=n(34539);Object.defineProperty(t,"compareApiSets",{enumerable:!0,get:function(){return s.compareApiSets}});var l=n(80591);Object.defineProperty(t,"transformApiSetToOfficeScriptModelSet",{enumerable:!0,get:function(){return l.transformApiSetToOfficeScriptModelSet}});var c=n(20811);Object.defineProperty(t,"consolidateApiSets",{enumerable:!0,get:function(){return c.consolidateApiSets}});var u=n(88863);Object.defineProperty(t,"getOfficeScriptModelMethod",{enumerable:!0,get:function(){return u.getOfficeScriptModelMethod}});var h=n(96561);Object.defineProperty(t,"getSingleSourceFile",{enumerable:!0,get:function(){return h.getSingleSourceFile}});var p=n(71401);Object.defineProperty(t,"createProgram",{enumerable:!0,get:function(){return p.createProgram}})},80591:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.transformApiSetToOfficeScriptModelSet=void 0,t.transformApiSetToOfficeScriptModelSet=function(e){var t=e.name,n=e.major,r=e.minor;return{name:t,version:n+"."+r,major:n,minor:r}}},17298:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.validateOfficeScriptModel=void 0;var r=n(84198);t.validateOfficeScriptModel=function(e){r.checkOfficeScriptModel(e,(function(e){throw new Error(e)}))}},1592:function(e,t){function n(e){return"number"===typeof e&&e>=0&&Number.isSafeInteger(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.checkOfficeScriptModel=void 0,t.checkOfficeScriptModel=function(e,t){if(void 0!==e){var r=e.namespaces,a=e.sets;void 0===r&&t("Model must contain namespaces");var i=Object.keys(e.namespaces);0===i.length&&t("Model.namespaces must contain at least one namespace");var o=new Map;if(void 0===a)t("Model must contain sets");else{var s=Object.keys(a);s.forEach((function(e){o.set(e,!1)})),s.forEach((function(e){!function(e,t,r){var a=t.major,i=t.minor,o=t.name,s=t.version;n(a)||r("set ["+e+"] major ["+a+"] must be a positive integer");n(i)||r("set ["+e+"] minor ["+i+"] must be a positive integer");"string"!==typeof o&&r("set ["+e+"] name ["+o+"] must be a string");"string"!==typeof s&&r("set ["+e+"] version ["+s+"] must be a string");var l=a+"."+i;s!==l&&r("set ["+e+"] version ["+s+"] must be ["+l+"]")}(e,a[e],t)}))}i.forEach((function(n){var r=e.namespaces[n].objects;if(void 0!==r){var a=Object.keys(r);0===a.length&&t("Model namespace ["+n+"] has no objects"),a.forEach((function(e){var a=r[e].methods;if(void 0!==a){var i=Object.keys(a);0===i.length&&t("Model namespace ["+n+"] object ["+e+"] has no methods"),i.forEach((function(r){var i=a[r],s=i.isRead,l=i.isAsync,c=i.set;!0===l&&void 0===s&&t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] isAsync but isRead is undefined"),void 0===c?t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set is undefined"):o.has(c)?o.set(c,!0):t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set ["+c+"] is not available in sets")}))}else t("Model namespace ["+n+"] object ["+e+"] is missing a 'methods' property")}))}else t("Model namespace ["+n+"] must have a valid 'objects' property")})),Array.from(o.entries()).map((function(e){return{name:e[0],referenced:e[1]}})).filter((function(e){return!e.referenced})).forEach((function(e){var n=e.name;t("Mode set ["+n+"] is not referenced")}))}else t("model must be defined")}},13037:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareApiSets=void 0,t.compareApiSets=function(e,t){return e.name===t.name?e.major===t.major?e.minor===t.minor?0:e.minor<t.minor?-1:1:e.major<t.major?-1:1:e.name<t.name?-1:1}},68253:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.consolidateApiSets=void 0,t.consolidateApiSets=function(e){return e.filter((function(e,t,n){return!n.some((function(n,r){return e.name===n.name&&e.major===n.major&&e.minor===n.minor&&t<r}))})).filter((function(e,t,n){return!n.some((function(t){return e.name===t.name&&e.major===t.major&&e.minor<t.minor}))}))}},79261:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createProgram=void 0;var r=n(63026);t.createProgram=function(e,t){var n=e;return r.createProgramFromFiles([{name:"code.ts",data:n}],t)}},63026:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.createProgramFromFiles=void 0;var o=i(n(286));t.createProgramFromFiles=function(e,t){var n=t.intellisense,r=e.map((function(e){return e.name})),a=new Map(e.map((function(e){return[e.name,e.data]}))),i=o.ScriptTarget.ES2020,s="lib.d.ts",l={target:i,strict:!0},c=Object.assign(Object.assign({},l),t.compilerOptions||{}),u=c.target||i,h=(n||[""]).join("\n\n\n"),p={fileExists:function(){return!0},getCanonicalFileName:function(e){return e},getCurrentDirectory:function(){return"/"},getDefaultLibFileName:function(){return s},getNewLine:function(){return"\n"},getSourceFile:function(e){var t=a.get(e);return void 0!==t?o.createSourceFile(e,t,u,!0):e===s?o.createSourceFile(e,h,u,!0):void 0},readFile:function(){},useCaseSensitiveFileNames:function(){return!1},writeFile:function(){}};return o.createProgram(r,c,p)}},34233:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultApiSet=void 0,t.defaultApiSet={name:"undefined",major:0,minor:0}},6210:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultOfficeScriptModelSet=void 0;var r=n(62272),a=n(34233);t.defaultOfficeScriptModelSet=r.transformApiSetToOfficeScriptModelSet(a.defaultApiSet)},63081:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getOfficeScriptModelMethod=void 0,t.getOfficeScriptModelMethod=function(e,t,n,r){if(t&&n&&r){var a=e.namespaces[t];if(a){var i=a.objects[n];if(i){var o=i.methods[r];return o||void 0}}}}},51299:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getSingleSourceFile=void 0,t.getSingleSourceFile=function(e){var t=e.getSourceFiles().filter((function(e){var t=e.fileName;return t.endsWith(".ts")&&!t.endsWith(".d.ts")}));if(t.length>1)throw new Error("Only one Source File should have a .ts extension. Mulitple Source Files are not supported.");return t[0]}},79590:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createProgram=t.getSingleSourceFile=t.getOfficeScriptModelMethod=t.consolidateApiSets=t.transformApiSetToOfficeScriptModelSet=t.compareApiSets=t.defaultOfficeScriptModelSet=t.defaultApiSet=t.validateOfficeScriptModel=t.checkOfficeScriptModel=void 0;var r=n(1592);Object.defineProperty(t,"checkOfficeScriptModel",{enumerable:!0,get:function(){return r.checkOfficeScriptModel}});var a=n(61383);Object.defineProperty(t,"validateOfficeScriptModel",{enumerable:!0,get:function(){return a.validateOfficeScriptModel}});var i=n(34233);Object.defineProperty(t,"defaultApiSet",{enumerable:!0,get:function(){return i.defaultApiSet}});var o=n(6210);Object.defineProperty(t,"defaultOfficeScriptModelSet",{enumerable:!0,get:function(){return o.defaultOfficeScriptModelSet}});var s=n(13037);Object.defineProperty(t,"compareApiSets",{enumerable:!0,get:function(){return s.compareApiSets}});var l=n(62272);Object.defineProperty(t,"transformApiSetToOfficeScriptModelSet",{enumerable:!0,get:function(){return l.transformApiSetToOfficeScriptModelSet}});var c=n(68253);Object.defineProperty(t,"consolidateApiSets",{enumerable:!0,get:function(){return c.consolidateApiSets}});var u=n(63081);Object.defineProperty(t,"getOfficeScriptModelMethod",{enumerable:!0,get:function(){return u.getOfficeScriptModelMethod}});var h=n(51299);Object.defineProperty(t,"getSingleSourceFile",{enumerable:!0,get:function(){return h.getSingleSourceFile}});var p=n(79261);Object.defineProperty(t,"createProgram",{enumerable:!0,get:function(){return p.createProgram}})},62272:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.transformApiSetToOfficeScriptModelSet=void 0,t.transformApiSetToOfficeScriptModelSet=function(e){var t=e.name,n=e.major,r=e.minor;return{name:t,version:n+"."+r,major:n,minor:r}}},61383:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.validateOfficeScriptModel=void 0;var r=n(1592);t.validateOfficeScriptModel=function(e){r.checkOfficeScriptModel(e,(function(e){throw new Error(e)}))}},6840:function(e,t){function n(e){return"number"===typeof e&&e>=0&&Number.isSafeInteger(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.checkOfficeScriptModel=void 0,t.checkOfficeScriptModel=function(e,t){if(void 0!==e){var r=e.namespaces,a=e.sets;void 0===r&&t("Model must contain namespaces");var i=Object.keys(e.namespaces);0===i.length&&t("Model.namespaces must contain at least one namespace");var o=new Map;if(void 0===a)t("Model must contain sets");else{var s=Object.keys(a);s.forEach((function(e){o.set(e,!1)})),s.forEach((function(e){!function(e,t,r){var a=t.major,i=t.minor,o=t.name,s=t.version;n(a)||r("set ["+e+"] major ["+a+"] must be a positive integer");n(i)||r("set ["+e+"] minor ["+i+"] must be a positive integer");"string"!==typeof o&&r("set ["+e+"] name ["+o+"] must be a string");"string"!==typeof s&&r("set ["+e+"] version ["+s+"] must be a string");var l=a+"."+i;s!==l&&r("set ["+e+"] version ["+s+"] must be ["+l+"]")}(e,a[e],t)}))}i.forEach((function(n){var r=e.namespaces[n].objects;if(void 0!==r){var a=Object.keys(r);0===a.length&&t("Model namespace ["+n+"] has no objects"),a.forEach((function(e){var a=r[e].methods;if(void 0!==a){var i=Object.keys(a);0===i.length&&t("Model namespace ["+n+"] object ["+e+"] has no methods"),i.forEach((function(r){var i=a[r],s=i.isRead,l=i.isAsync,c=i.set,u=i.undoSet;!0===l&&void 0===s&&t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] isAsync but isRead is undefined"),void 0===c?t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set is undefined"):o.has(c)?o.set(c,!0):t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set ["+c+"] is not available in sets"),void 0!==u&&(o.has(u)?o.set(u,!0):t("Model namespace ["+n+"] object ["+e+"] method ["+r+"] set ["+u+"] is not available in sets"))}))}else t("Model namespace ["+n+"] object ["+e+"] is missing a 'methods' property")}))}else t("Model namespace ["+n+"] must have a valid 'objects' property")})),Array.from(o.entries()).map((function(e){return{name:e[0],referenced:e[1]}})).filter((function(e){return!e.referenced})).forEach((function(e){var n=e.name;t("Model set ["+n+"] is not referenced")}))}else t("model must be defined")}},46752:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareApiSets=void 0,t.compareApiSets=function(e,t){return e.name===t.name?e.major===t.major?e.minor===t.minor?0:e.minor<t.minor?-1:1:e.major<t.major?-1:1:e.name<t.name?-1:1}},78589:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.consolidateApiSets=void 0,t.consolidateApiSets=function(e){return e.filter((function(e,t,n){return!n.some((function(n,r){return e.name===n.name&&e.major===n.major&&e.minor===n.minor&&t<r}))})).filter((function(e,t,n){return!n.some((function(t){return e.name===t.name&&e.major===t.major&&e.minor<t.minor}))}))}},24912:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createProgram=void 0;var r=n(16689);t.createProgram=function(e,t){var n=e;return r.createProgramFromFiles([{name:"code.ts",data:n}],t)}},16689:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.createProgramFromFiles=void 0;var o=i(n(286));t.createProgramFromFiles=function(e,t){var n=t.intellisense,r=e.map((function(e){return e.name})),a=new Map(e.map((function(e){return[e.name,e.data]}))),i=o.ScriptTarget.ES2020,s="lib.d.ts",l={target:i,strict:!0},c=Object.assign(Object.assign({},l),t.compilerOptions||{}),u=c.target||i,h=(n||[""]).join("\n\n\n"),p={fileExists:function(){return!0},getCanonicalFileName:function(e){return e},getCurrentDirectory:function(){return"/"},getDefaultLibFileName:function(){return s},getNewLine:function(){return"\n"},getSourceFile:function(e){var t=a.get(e);return void 0!==t?o.createSourceFile(e,t,u,!0):e===s?o.createSourceFile(e,h,u,!0):void 0},readFile:function(){},useCaseSensitiveFileNames:function(){return!1},writeFile:function(){}};return o.createProgram(r,c,p)}},44248:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultApiSet=void 0,t.defaultApiSet={name:"undefined",major:0,minor:0}},55251:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.defaultOfficeScriptModelSet=void 0;var r=n(13722),a=n(44248);t.defaultOfficeScriptModelSet=r.transformApiSetToOfficeScriptModelSet(a.defaultApiSet)},65081:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getOfficeScriptModelMethod=void 0,t.getOfficeScriptModelMethod=function(e,t,n,r){if(t&&n&&r){var a=e.namespaces[t];if(a){var i=a.objects[n];if(i){var o=i.methods[r];return o||void 0}}}}},76671:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getSingleSourceFile=void 0,t.getSingleSourceFile=function(e){var t=e.getSourceFiles().filter((function(e){var t=e.fileName;return t.endsWith(".ts")&&!t.endsWith(".d.ts")}));if(t.length>1)throw new Error("Only one Source File should have a .ts extension. Mulitple Source Files are not supported.");return t[0]}},30574:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.createProgram=t.getSingleSourceFile=t.getOfficeScriptModelMethod=t.consolidateApiSets=t.transformApiSetToOfficeScriptModelSet=t.compareApiSets=t.defaultOfficeScriptModelSet=t.defaultApiSet=t.validateOfficeScriptModel=t.checkOfficeScriptModel=void 0;var r=n(6840);Object.defineProperty(t,"checkOfficeScriptModel",{enumerable:!0,get:function(){return r.checkOfficeScriptModel}});var a=n(84938);Object.defineProperty(t,"validateOfficeScriptModel",{enumerable:!0,get:function(){return a.validateOfficeScriptModel}});var i=n(44248);Object.defineProperty(t,"defaultApiSet",{enumerable:!0,get:function(){return i.defaultApiSet}});var o=n(55251);Object.defineProperty(t,"defaultOfficeScriptModelSet",{enumerable:!0,get:function(){return o.defaultOfficeScriptModelSet}});var s=n(46752);Object.defineProperty(t,"compareApiSets",{enumerable:!0,get:function(){return s.compareApiSets}});var l=n(13722);Object.defineProperty(t,"transformApiSetToOfficeScriptModelSet",{enumerable:!0,get:function(){return l.transformApiSetToOfficeScriptModelSet}});var c=n(78589);Object.defineProperty(t,"consolidateApiSets",{enumerable:!0,get:function(){return c.consolidateApiSets}});var u=n(65081);Object.defineProperty(t,"getOfficeScriptModelMethod",{enumerable:!0,get:function(){return u.getOfficeScriptModelMethod}});var h=n(76671);Object.defineProperty(t,"getSingleSourceFile",{enumerable:!0,get:function(){return h.getSingleSourceFile}});var p=n(24912);Object.defineProperty(t,"createProgram",{enumerable:!0,get:function(){return p.createProgram}})},13722:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.transformApiSetToOfficeScriptModelSet=void 0,t.transformApiSetToOfficeScriptModelSet=function(e){var t=e.name,n=e.major,r=e.minor;return{name:t,version:n+"."+r,major:n,minor:r}}},84938:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0}),t.validateOfficeScriptModel=void 0;var r=n(6840);t.validateOfficeScriptModel=function(e){r.checkOfficeScriptModel(e,(function(e){throw new Error(e)}))}},76466:function(e){e.exports=JSON.parse("{\"data\":\"\\ndeclare namespace Excel {\\n\\n    /**\\n * run function\\n */\\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\\nfunction run<T>(batch: (context: RequestContext) => Promise<T>): Promise<T>;\\nfunction run<T>(\\n    options: RunOptions,\\n    batch: (context: RequestContext) => Promise<T>\\n): Promise<T>;\\n\\n\\n/**\\n * Contains the result for methods that return primitive types.\\n * The object's value property is retrieved from the document after `context.sync()` is invoked.\\n */\\ninterface ClientResult<T> {\\n    /**\\n     * The value of the result that is retrieved from the document after `context.sync()` is invoked.\\n     */\\n    value: T;\\n}\\n\\n\\n/**\\n * The RequestContext object facilitates requests to the Excel workbook.\\n * The script and the Excel workbook run in separate processes.\\n * The request context is used to synchronize data and actions between the script and the workbook.\\n */\\ninterface RequestContext {\\n    readonly workbook: Workbook;\\n    sync(): Promise<void>;\\n    trace(message: string): void;\\n}\\n\\n\\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\\ninterface RunOptions {}\\n\\n\\n// Extend workbook with context\\n\\ninterface Workbook {\\n    context: RequestContext;\\n}\\n\\n\\n    //\\n    // Class\\n    //\\n    \\n    \\n/**\\n* Contains information about a linked workbook.\\n* If a workbook has links pointing to data in another workbook, the second workbook is linked to the first workbook.\\n* In this scenario, the second workbook is called the \\\"linked workbook\\\".\\n*/\\ninterface LinkedWorkbook {\\n\\n    \\n\\n    /**\\n* Makes a request to break the links pointing to the linked workbook.\\n* Links in formulas are replaced with the latest fetched data.\\n* The current `LinkedWorkbook` object is invalidated and removed from `LinkedWorkbookCollection`.\\n*/\\nbreakLinks(): void    \\n\\n/**\\n* Makes a request to refresh the data retrieved from the linked workbook.\\n*/\\nrefresh(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of linked workbook objects.\\n*/\\ninterface LinkedWorkbookCollection {\\n\\n    /**\\n* Represents the update mode of the workbook links. The mode is same for all of the workbook links present in the workbook.\\n*/\\nworkbookLinksRefreshMode: WorkbookLinksRefreshMode | 'Manual' | 'Automatic'\\n\\n    /**\\n* Breaks all the links to the linked workbooks. Once the links are broken, any formulas referencing workbook links are removed entirely and replaced with the most recently retrieved values.\\n*/\\nbreakAllLinks(): void    \\n\\n/**\\n* Gets information about a linked workbook by its URL.\\n* @param key The URL of the linked workbook.\\n*/\\ngetItem(key:string): LinkedWorkbook    \\n\\n/**\\n* Gets information about a linked workbook by its URL. If the workbook does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties  | *OrNullObject methods and properties}.\\n* @param key The URL of the linked workbook.\\n*/\\ngetItemOrNullObject(key:string): LinkedWorkbook    \\n\\n/**\\n* Makes a request to refresh all the workbook links.\\n*/\\nrefreshAll(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: LinkedWorkbook[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel application that manages the workbook.\\n*/\\ninterface Application {\\n\\n    /**\\n* Returns the Excel calculation engine version used for the last full recalculation.\\n*/\\nreadonly calculationEngineVersion: number    \\n\\n/**\\n* Returns the calculation mode used in the workbook, as defined by the constants in `Excel.CalculationMode`. Possible values are: `Automatic`, where Excel controls recalculation; `AutomaticExceptTables`, where Excel controls recalculation but ignores changes in tables; `Manual`, where calculation is done when the user requests it.\\n*/\\ncalculationMode: CalculationMode | 'Automatic' | 'AutomaticExceptTables' | 'Manual'    \\n\\n/**\\n* Returns the calculation state of the application. See `Excel.CalculationState` for details.\\n*/\\nreadonly calculationState: CalculationState | 'Done' | 'Calculating' | 'Pending'    \\n\\n/**\\n* Provides information based on current system culture settings. This includes the culture names, number formatting, and other culturally dependent settings.\\n*/\\nreadonly cultureInfo: CultureInfo    \\n\\n/**\\n* Gets the string used as the decimal separator for numeric values. This is based on the local Excel settings.\\n*/\\nreadonly decimalSeparator: string    \\n\\n/**\\n* Returns the iterative calculation settings.\\n* In Excel on Windows and Mac, the settings will apply to the Excel Application.\\n* In Excel on the web and other platforms, the settings will apply to the active workbook.\\n*/\\nreadonly iterativeCalculation: IterativeCalculation    \\n\\n/**\\n* Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on the local Excel settings.\\n*/\\nreadonly thousandsSeparator: string    \\n\\n/**\\n* Specifies if the system separators of Excel are enabled.\\n* System separators include the decimal separator and thousands separator.\\n*/\\nreadonly useSystemSeparators: boolean\\n\\n    /**\\n* Recalculate all currently opened workbooks in Excel.\\n* @param calculationType Specifies the calculation type to use. See `Excel.CalculationType` for details.\\n*/\\ncalculate(calculationType:CalculationType | 'Recalculate' | 'Full' | 'FullRebuild'): void    \\n\\n/**\\n* Suspends calculation until the next `context.sync()` is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.\\n*/\\nsuspendApiCalculationUntilNextSync(): void    \\n\\n/**\\n* Suspends screen updating until the next `context.sync()` is called.\\n* \\n* **Note**: Don't call `suspendScreenUpdatingUntilNextSync` repeatedly (such as in a loop). Repeated calls will cause the Excel window to flicker.\\n*/\\nsuspendScreenUpdatingUntilNextSync(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the iterative calculation settings.\\n*/\\ninterface IterativeCalculation {\\n\\n    /**\\n* True if Excel will use iteration to resolve circular references.\\n*/\\nenabled: boolean    \\n\\n/**\\n* Specifies the maximum amount of change between each iteration as Excel resolves circular references.\\n*/\\nmaxChange: number    \\n\\n/**\\n* Specifies the maximum number of iterations that Excel can use to resolve a circular reference.\\n*/\\nmaxIteration: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Workbook is the top level object which contains related workbook objects such as worksheets, tables, and ranges.\\n* To learn more about the workbook object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks | Work with workbooks using the Excel JavaScript API}.\\n*/\\ninterface Workbook {\\n\\n    /**\\n* Represents the Excel application instance that contains this workbook.\\n*/\\nreadonly application: Application    \\n\\n/**\\n* Specifies if the workbook is in AutoSave mode.\\n*/\\nreadonly autoSave: boolean    \\n\\n/**\\n* Represents a collection of bindings that are part of the workbook.\\n*/\\nreadonly bindings: BindingCollection    \\n\\n/**\\n* Returns a number about the version of Excel Calculation Engine.\\n*/\\nreadonly calculationEngineVersion: number    \\n\\n/**\\n* True if all charts in the workbook are tracking the actual data points to which they are attached.\\n* False if the charts track the index of the data points.\\n*/\\nchartDataPointTrack: boolean    \\n\\n/**\\n* Represents a collection of comments associated with the workbook.\\n*/\\nreadonly comments: CommentCollection    \\n\\n/**\\n* Represents the collection of custom XML parts contained by this workbook.\\n*/\\nreadonly customXmlParts: CustomXmlPartCollection    \\n\\n/**\\n* Represents all data connections in the workbook.\\n*/\\nreadonly dataConnections: DataConnectionCollection    \\n\\n/**\\n* Specifies if changes have been made since the workbook was last saved.\\n* You can set this property to `true` if you want to close a modified workbook without either saving it or being prompted to save it.\\n*/\\nisDirty: boolean    \\n\\n/**\\n* Returns a collection of linked workbooks. In formulas, the workbook links can be used to reference data (cell values and names) outside of the current workbook.\\n*/\\nreadonly linkedWorkbooks: LinkedWorkbookCollection    \\n\\n/**\\n* Gets the workbook name.\\n*/\\nreadonly name: string    \\n\\n/**\\n* Represents a collection of workbook-scoped named items (named ranges and constants).\\n*/\\nreadonly names: NamedItemCollection    \\n\\n/**\\n* Represents a collection of PivotTableStyles associated with the workbook.\\n*/\\nreadonly pivotTableStyles: PivotTableStyleCollection    \\n\\n/**\\n* Represents a collection of PivotTables associated with the workbook.\\n*/\\nreadonly pivotTables: PivotTableCollection    \\n\\n/**\\n* Specifies if the workbook has ever been saved locally or online.\\n*/\\nreadonly previouslySaved: boolean    \\n\\n/**\\n* Gets the workbook properties.\\n*/\\nreadonly properties: DocumentProperties    \\n\\n/**\\n* Returns the protection object for a workbook.\\n*/\\nreadonly protection: WorkbookProtection    \\n\\n/**\\n* Returns `true` if the workbook is open in read-only mode.\\n*/\\nreadonly readOnly: boolean    \\n\\n/**\\n* Represents a collection of SlicerStyles associated with the workbook.\\n*/\\nreadonly slicerStyles: SlicerStyleCollection    \\n\\n/**\\n* Represents a collection of slicers associated with the workbook.\\n*/\\nreadonly slicers: SlicerCollection    \\n\\n/**\\n* Represents a collection of styles associated with the workbook.\\n*/\\nreadonly styles: StyleCollection    \\n\\n/**\\n* Represents a collection of TableStyles associated with the workbook.\\n*/\\nreadonly tableStyles: TableStyleCollection    \\n\\n/**\\n* Represents a collection of tables associated with the workbook.\\n*/\\nreadonly tables: TableCollection    \\n\\n/**\\n* Represents a collection of TimelineStyles associated with the workbook.\\n*/\\nreadonly timelineStyles: TimelineStyleCollection    \\n\\n/**\\n* True if calculations in this workbook will be done using only the precision of the numbers as they're displayed.\\n* Data will permanently lose accuracy when switching this property from `false` to `true`.\\n*/\\nusePrecisionAsDisplayed: boolean    \\n\\n/**\\n* Represents a collection of worksheets associated with the workbook.\\n*/\\nreadonly worksheets: WorksheetCollection\\n\\n    /**\\n* Gets the currently active cell from the workbook.\\n*/\\ngetActiveCell(): Range    \\n\\n/**\\n* Gets the currently active chart in the workbook. If there is no active chart, an `ItemNotFound` exception is thrown.\\n*/\\ngetActiveChart(): Chart    \\n\\n/**\\n* Gets the currently active chart in the workbook. If there is no active chart, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetActiveChartOrNullObject(): Chart    \\n\\n/**\\n* Gets the currently active slicer in the workbook. If there is no active slicer, an `ItemNotFound` exception is thrown.\\n*/\\ngetActiveSlicer(): Slicer    \\n\\n/**\\n* Gets the currently active slicer in the workbook. If there is no active slicer, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetActiveSlicerOrNullObject(): Slicer    \\n\\n/**\\n* Gets the currently selected single range from the workbook. If there are multiple ranges selected, this method will throw an error.\\n*/\\ngetSelectedRange(): Range    \\n\\n/**\\n* Gets the currently selected one or more ranges from the workbook. Unlike `getSelectedRange()`, this method returns a `RangeAreas` object that represents all the selected ranges.\\n*/\\ngetSelectedRanges(): RangeAreas\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the protection of a workbook object.\\n*/\\ninterface WorkbookProtection {\\n\\n    /**\\n* Specifies if the workbook is protected.\\n*/\\nreadonly protected: boolean\\n\\n    /**\\n* Protects a workbook. Fails if the workbook has been protected.\\n* @param password Workbook protection password.\\n*/\\nprotect(password?:string): void    \\n\\n/**\\n* Unprotects a workbook.\\n* @param password Workbook protection password.\\n*/\\nunprotect(password?:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc.\\n* To learn more about the worksheet object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets | Work with worksheets using the Excel JavaScript API}.\\n*/\\ninterface Worksheet {\\n\\n    /**\\n* Represents the `AutoFilter` object of the worksheet.\\n*/\\nreadonly autoFilter: AutoFilter    \\n\\n/**\\n* Returns a collection of charts that are part of the worksheet.\\n*/\\nreadonly charts: ChartCollection    \\n\\n/**\\n* Returns a collection of all the Comments objects on the worksheet.\\n*/\\nreadonly comments: CommentCollection    \\n\\n/**\\n* Gets a collection of worksheet-level custom properties.\\n*/\\nreadonly customProperties: WorksheetCustomPropertyCollection    \\n\\n/**\\n* Determines if Excel should recalculate the worksheet when necessary.\\n* True if Excel recalculates the worksheet when necessary. False if Excel doesn't recalculate the sheet.\\n*/\\nenableCalculation: boolean    \\n\\n/**\\n* Gets an object that can be used to manipulate frozen panes on the worksheet.\\n*/\\nreadonly freezePanes: WorksheetFreezePanes    \\n\\n/**\\n* Gets the horizontal page break collection for the worksheet. This collection only contains manual page breaks.\\n*/\\nreadonly horizontalPageBreaks: PageBreakCollection    \\n\\n/**\\n* Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved.\\n*/\\nreadonly id: string    \\n\\n/**\\n* The display name of the worksheet.\\n*/\\nname: string    \\n\\n/**\\n* Returns a collection of sheet views that are present in the worksheet.\\n*/\\nreadonly namedSheetViews: NamedSheetViewCollection    \\n\\n/**\\n* Collection of names scoped to the current worksheet.\\n*/\\nreadonly names: NamedItemCollection    \\n\\n/**\\n* Gets the `PageLayout` object of the worksheet.\\n*/\\nreadonly pageLayout: PageLayout    \\n\\n/**\\n* Collection of PivotTables that are part of the worksheet.\\n*/\\nreadonly pivotTables: PivotTableCollection    \\n\\n/**\\n* The zero-based position of the worksheet within the workbook.\\n*/\\nposition: number    \\n\\n/**\\n* Returns the sheet protection object for a worksheet.\\n*/\\nreadonly protection: WorksheetProtection    \\n\\n/**\\n* Returns the collection of all the Shape objects on the worksheet.\\n*/\\nreadonly shapes: ShapeCollection    \\n\\n/**\\n* Specifies if gridlines are visible to the user.\\n*/\\nshowGridlines: boolean    \\n\\n/**\\n* Specifies if headings are visible to the user.\\n*/\\nshowHeadings: boolean    \\n\\n/**\\n* Returns a collection of slicers that are part of the worksheet.\\n*/\\nreadonly slicers: SlicerCollection    \\n\\n/**\\n* Returns the standard (default) height of all the rows in the worksheet, in points.\\n*/\\nreadonly standardHeight: number    \\n\\n/**\\n* Specifies the standard (default) width of all the columns in the worksheet.\\n* One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.\\n*/\\nstandardWidth: number    \\n\\n/**\\n* The tab color of the worksheet.\\n* When retrieving the tab color, if the worksheet is invisible, the value will be `null`. If the worksheet is visible but the tab color is set to auto, an empty string will be returned. Otherwise, the property will be set to a color, in the form #RRGGBB (e.g., \\\"FFA500\\\").\\n* When setting the color, use an empty-string to set an \\\"auto\\\" color, or a real color otherwise.\\n*/\\ntabColor: string    \\n\\n/**\\n* Collection of tables that are part of the worksheet.\\n*/\\nreadonly tables: TableCollection    \\n\\n/**\\n* Gets the vertical page break collection for the worksheet. This collection only contains manual page breaks.\\n*/\\nreadonly verticalPageBreaks: PageBreakCollection    \\n\\n/**\\n* The visibility of the worksheet.\\n*/\\nvisibility: SheetVisibility | 'Visible' | 'Hidden' | 'VeryHidden'\\n\\n    /**\\n* Activate the worksheet in the Excel UI.\\n*/\\nactivate(): void    \\n\\n/**\\n* Calculates all cells on a worksheet.\\n* @param markAllDirty True, to mark all as dirty.\\n*/\\ncalculate(markAllDirty:boolean): void    \\n\\n/**\\n* Copies a worksheet and places it at the specified position.\\n* @param positionType The location in the workbook to place the newly created worksheet. The default value is \\\"None\\\", which inserts the worksheet at the beginning of the worksheet.\\n* @param relativeTo The existing worksheet which determines the newly created worksheet's position. This is only needed if `positionType` is \\\"Before\\\" or \\\"After\\\".\\n*/\\ncopy(positionType?:WorksheetPositionType | 'None' | 'Before' | 'After' | 'Beginning' | 'End', relativeTo?:Worksheet): Worksheet    \\n\\n/**\\n* Deletes the worksheet from the workbook. Note that if the worksheet's visibility is set to \\\"VeryHidden\\\", the delete operation will fail with an `InvalidOperation` exception. You should first change its visibility to hidden or visible before deleting it.\\n*/\\ndelete(): void    \\n\\n/**\\n* Finds all occurrences of the given string based on the criteria specified and returns them as a `RangeAreas` object, comprising one or more rectangular ranges.\\n* @param text The string to find.\\n* @param criteria Additional search criteria, including whether the search needs to match the entire cell or be case-sensitive.\\n*/\\nfindAll(text:string, criteria:WorksheetSearchCriteria): RangeAreas    \\n\\n/**\\n* Finds all occurrences of the given string based on the criteria specified and returns them as a `RangeAreas` object, comprising one or more rectangular ranges.\\n* @param text The string to find.\\n* @param criteria Additional search criteria, including whether the search needs to match the entire cell or be case-sensitive.\\n*/\\nfindAllOrNullObject(text:string, criteria:WorksheetSearchCriteria): RangeAreas    \\n\\n/**\\n* Gets the `Range` object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.\\n* @param row The row number of the cell to be retrieved. Zero-indexed.\\n* @param column The column number of the cell to be retrieved. Zero-indexed.\\n*/\\ngetCell(row:number, column:number): Range    \\n\\n/**\\n* Gets the worksheet that follows this one. If there are no worksheets following this one, this method will throw an error.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetNext(visibleOnly?:boolean): Worksheet    \\n\\n/**\\n* Gets the worksheet that follows this one. If there are no worksheets following this one, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetNextOrNullObject(visibleOnly?:boolean): Worksheet    \\n\\n/**\\n* Gets the worksheet that precedes this one. If there are no previous worksheets, this method will throw an error.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetPrevious(visibleOnly?:boolean): Worksheet    \\n\\n/**\\n* Gets the worksheet that precedes this one. If there are no previous worksheets, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetPreviousOrNullObject(visibleOnly?:boolean): Worksheet    \\n\\n/**\\n* Gets the `Range` object, representing a single rectangular block of cells, specified by the address or name.\\n* @param address Optional. The string representing the address or name of the range. For example, \\\"A1:B2\\\". If not specified, the entire worksheet range is returned.\\n*/\\ngetRange(address?:string): Range    \\n\\n/**\\n* Gets the `Range` object beginning at a particular row index and column index, and spanning a certain number of rows and columns.\\n* @param startRow Start row (zero-indexed).\\n* @param startColumn Start column (zero-indexed).\\n* @param rowCount Number of rows to include in the range.\\n* @param columnCount Number of columns to include in the range.\\n*/\\ngetRangeByIndexes(startRow:number, startColumn:number, rowCount:number, columnCount:number): Range    \\n\\n/**\\n* Gets the `RangeAreas` object, representing one or more blocks of rectangular ranges, specified by the address or name.\\n* @param address Optional. A string containing the comma-separated or semicolon-separated addresses or names of the individual ranges. For example, \\\"A1:B2, A5:B5\\\" or \\\"A1:B2; A5:B5\\\". If not specified, a `RangeAreas` object for the entire worksheet is returned.\\n*/\\ngetRanges(address?:string): RangeAreas    \\n\\n/**\\n* The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).\\n* @param valuesOnly Optional. If `true`, considers only cells with values as used cells (ignoring formatting).\\n*/\\ngetUsedRange(valuesOnly?:boolean): Range    \\n\\n/**\\n* The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, then this method returns an object with its `isNullObject` property set to `true`. For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param valuesOnly Optional. Considers only cells with values as used cells.\\n*/\\ngetUsedRangeOrNullObject(valuesOnly?:boolean): Range    \\n\\n/**\\n* Finds and replaces the given string based on the criteria specified within the current worksheet.\\n* @param text String to find.\\n* @param replacement The string that replaces the original string.\\n* @param criteria Additional replacement criteria.\\n*/\\nreplaceAll(text:string, replacement:string, criteria:ReplaceCriteria): ClientResult<number>    \\n\\n/**\\n* Shows row or column groups by their outline levels.\\n* Outlines groups and summarizes a list of data in the worksheet.\\n* The `rowLevels` and `columnLevels` parameters specify how many levels of the outline will be displayed.\\n* The acceptable argument range is between 0 and 8.\\n* A value of 0 does not change the current display. A value greater than the current number of levels displays all the levels.\\n* @param rowLevels The number of row levels of an outline to display.\\n* @param columnLevels The number of column levels of an outline to display.\\n*/\\nshowOutlineLevels(rowLevels:number, columnLevels:number): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of worksheet objects that are part of the workbook.\\n*/\\ninterface WorksheetCollection {\\n\\n    \\n\\n    /**\\n* Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call `.activate()` on it.\\n* @param name Optional. The name of the worksheet to be added. If specified, the name should be unique. If not specified, Excel determines the name of the new worksheet.\\n*/\\nadd(name?:string): Worksheet    \\n\\n/**\\n* Gets the currently active worksheet in the workbook.\\n*/\\ngetActiveWorksheet(): Worksheet    \\n\\n/**\\n* Gets the number of worksheets in the collection.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetCount(visibleOnly?:boolean): ClientResult<number>    \\n\\n/**\\n* Gets the first worksheet in the collection.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetFirst(visibleOnly?:boolean): Worksheet    \\n\\n/**\\n* Gets a worksheet object using its name or ID.\\n* @param key The name or ID of the worksheet.\\n*/\\ngetItem(key:string): Worksheet    \\n\\n/**\\n* Gets a worksheet object using its name or ID. If the worksheet does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key The name or ID of the worksheet.\\n*/\\ngetItemOrNullObject(key:string): Worksheet    \\n\\n/**\\n* Gets the last worksheet in the collection.\\n* @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n*/\\ngetLast(visibleOnly?:boolean): Worksheet\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Worksheet[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the protection of a worksheet object.\\n*/\\ninterface WorksheetProtection {\\n\\n    /**\\n* Specifies the protection options for the worksheet.\\n*/\\nreadonly options: WorksheetProtectionOptions    \\n\\n/**\\n* Specifies if the worksheet is protected.\\n*/\\nreadonly protected: boolean\\n\\n    /**\\n* Protects a worksheet. Fails if the worksheet has already been protected.\\n* @param options Optional. Sheet protection options.\\n* @param password Optional. Sheet protection password.\\n*/\\nprotect(options?:WorksheetProtectionOptions, password?:string): void    \\n\\n/**\\n* Unprotects a worksheet.\\n* @param password Sheet protection password.\\n*/\\nunprotect(password?:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\ninterface WorksheetFreezePanes {\\n\\n    \\n\\n    /**\\n* Sets the frozen cells in the active worksheet view.\\n* The range provided corresponds to cells that will be frozen in the top- and left-most pane.\\n* @param frozenRange A range that represents the cells to be frozen, or `null` to remove all frozen panes.\\n*/\\nfreezeAt(frozenRange:Range|string): void    \\n\\n/**\\n* Freeze the first column or columns of the worksheet in place.\\n* @param count Optional number of columns to freeze, or zero to unfreeze all columns\\n*/\\nfreezeColumns(count?:number): void    \\n\\n/**\\n* Freeze the top row or rows of the worksheet in place.\\n* @param count Optional number of rows to freeze, or zero to unfreeze all rows\\n*/\\nfreezeRows(count?:number): void    \\n\\n/**\\n* Gets a range that describes the frozen cells in the active worksheet view.\\n* The frozen range corresponds to cells that are frozen in the top- and left-most pane.\\n*/\\ngetLocation(): Range    \\n\\n/**\\n* Gets a range that describes the frozen cells in the active worksheet view.\\n* The frozen range corresponds to cells that are frozen in the top- and left-most pane.\\n* If there is no frozen pane, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetLocationOrNullObject(): Range    \\n\\n/**\\n* Removes all frozen panes in the worksheet.\\n*/\\nunfreeze(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Range represents a set of one or more contiguous cells such as a cell, a row, a column, or a block of cells.\\n* To learn more about how ranges are used throughout the API, start with {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-core-concepts#ranges | Ranges in the Excel JavaScript API}.\\n*/\\ninterface Range {\\n\\n    /**\\n* Specifies the range reference in A1-style. Address value contains the sheet reference (e.g., \\\"Sheet1!A1:B4\\\").\\n*/\\nreadonly address: string    \\n\\n/**\\n* Represents the range reference for the specified range in the language of the user.\\n*/\\nreadonly addressLocal: string    \\n\\n/**\\n* Specifies the number of cells in the range. This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647).\\n*/\\nreadonly cellCount: number    \\n\\n/**\\n* Specifies the total number of columns in the range.\\n*/\\nreadonly columnCount: number    \\n\\n/**\\n* Represents if all columns in the current range are hidden. Value is `true` when all columns in a range are hidden. Value is `false` when no columns in the range are hidden. Value is `null` when some columns in a range are hidden and other columns in the same range are not hidden.\\n*/\\ncolumnHidden: boolean    \\n\\n/**\\n* Specifies the column number of the first cell in the range. Zero-indexed.\\n*/\\nreadonly columnIndex: number    \\n\\n/**\\n* The collection of `ConditionalFormats` that intersect the range.\\n*/\\nreadonly conditionalFormats: ConditionalFormatCollection    \\n\\n/**\\n* Returns a data validation object.\\n*/\\nreadonly dataValidation: DataValidation    \\n\\n/**\\n* Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties.\\n*/\\nreadonly format: RangeFormat    \\n\\n/**\\n* Represents the formula in A1-style notation. If a cell has no formula, its value is returned instead.\\n*/\\nformulas: any[][]    \\n\\n/**\\n* Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English \\\"=SUM(A1, 1.5)\\\" formula would become \\\"=SUMME(A1; 1,5)\\\" in German. If a cell has no formula, its value is returned instead.\\n*/\\nformulasLocal: any[][]    \\n\\n/**\\n* Represents the formula in R1C1-style notation. If a cell has no formula, its value is returned instead.\\n*/\\nformulasR1C1: any[][]    \\n\\n/**\\n* Represents if all cells have a spill border.\\n* Returns `true` if all cells have a spill border, or `false` if all cells do not have a spill border.\\n* Returns `null` if there are cells both with and without spill borders within the range.\\n*/\\nreadonly hasSpill: boolean    \\n\\n/**\\n* Returns the distance in points, for 100% zoom, from the top edge of the range to the bottom edge of the range.\\n*/\\nreadonly height: number    \\n\\n/**\\n* Represents if all cells in the current range are hidden. Value is `true` when all cells in a range are hidden. Value is `false` when no cells in the range are hidden. Value is `null` when some cells in a range are hidden and other cells in the same range are not hidden.\\n*/\\nreadonly hidden: boolean    \\n\\n/**\\n* Represents the hyperlink for the current range.\\n*/\\nhyperlink: RangeHyperlink    \\n\\n/**\\n* Represents if the current range is an entire column.\\n*/\\nreadonly isEntireColumn: boolean    \\n\\n/**\\n* Represents if the current range is an entire row.\\n*/\\nreadonly isEntireRow: boolean    \\n\\n/**\\n* Returns the distance in points, for 100% zoom, from the left edge of the worksheet to the left edge of the range.\\n*/\\nreadonly left: number    \\n\\n/**\\n* Represents the data type state of each cell.\\n*/\\nreadonly linkedDataTypeState: LinkedDataTypeState[][]    \\n\\n/**\\n* Represents Excel's number format code for the given range.\\n*/\\nnumberFormat: any[][]    \\n\\n/**\\n* Represents the category of number format of each cell.\\n*/\\nreadonly numberFormatCategories: NumberFormatCategory[][]    \\n\\n/**\\n* Represents Excel's number format code for the given range, based on the language settings of the user.\\n* Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property.\\n* Any returned text uses the locally-formatted strings based on the language specified in the system settings.\\n*/\\nnumberFormatLocal: any[][]    \\n\\n/**\\n* Returns the total number of rows in the range.\\n*/\\nreadonly rowCount: number    \\n\\n/**\\n* Represents if all rows in the current range are hidden. Value is `true` when all rows in a range are hidden. Value is `false` when no rows in the range are hidden. Value is `null` when some rows in a range are hidden and other rows in the same range are not hidden.\\n*/\\nrowHidden: boolean    \\n\\n/**\\n* Returns the row number of the first cell in the range. Zero-indexed.\\n*/\\nreadonly rowIndex: number    \\n\\n/**\\n* Represents if all the cells would be saved as an array formula.\\n* Returns `true` if all cells would be saved as an array formula, or `false` if all cells would not be saved as an array formula.\\n* Returns `null` if some cells would be saved as an array formula and some would not be.\\n*/\\nreadonly savedAsArray: boolean    \\n\\n/**\\n* Represents the range sort of the current range.\\n*/\\nreadonly sort: RangeSort    \\n\\n/**\\n* Represents the style of the current range.\\n* If the styles of the cells are inconsistent, `null` will be returned.\\n* For custom styles, the style name will be returned. For built-in styles, a string representing a value in the `BuiltInStyle` enum will be returned.\\n*/\\nstyle: string    \\n\\n/**\\n* Text values of the specified range. The text value will not depend on the cell width. The number sign (#) substitution that happens in the Excel UI will not affect the text value returned by the API.\\n*/\\nreadonly text: string[][]    \\n\\n/**\\n* Returns the distance in points, for 100% zoom, from the top edge of the worksheet to the top edge of the range.\\n*/\\nreadonly top: number    \\n\\n/**\\n* Specifies the type of data in each cell.\\n*/\\nreadonly valueTypes: RangeValueType[][]    \\n\\n/**\\n* Represents the raw values of the specified range. The data returned could be a string, number, or boolean. Cells that contain an error will return the error string.\\n* If the returned value starts with a plus (\\\"+\\\"), minus (\\\"-\\\"), or equal sign (\\\"=\\\"), Excel interprets this value as a formula.\\n*/\\nvalues: any[][]    \\n\\n/**\\n* Returns the distance in points, for 100% zoom, from the left edge of the range to the right edge of the range.\\n*/\\nreadonly width: number    \\n\\n/**\\n* The worksheet containing the current range.\\n*/\\nreadonly worksheet: Worksheet\\n\\n    /**\\n* Fills a range from the current range to the destination range using the specified AutoFill logic.\\n* The destination range can be `null` or can extend the source range either horizontally or vertically.\\n* Discontiguous ranges are not supported.\\n* \\n* For more information, see {@link https://support.microsoft.com/office/2e79a709-c814-4b27-8bc2-c4dc84d49464 | Use AutoFill and Flash Fill}.\\n* @param destinationRange The destination range to AutoFill. If the destination range is `null`, data is filled out based on the surrounding cells (which is the behavior when double-clicking the UI\u2019s range fill handle).\\n* @param autoFillType The type of AutoFill. Specifies how the destination range is to be filled, based on the contents of the current range. Default is \\\"FillDefault\\\".\\n*/\\nautoFill(destinationRange?:Range|string, autoFillType?:AutoFillType | 'FillDefault' | 'FillCopy' | 'FillSeries' | 'FillFormats' | 'FillValues' | 'FillDays' | 'FillWeekdays' | 'FillMonths' | 'FillYears' | 'LinearTrend' | 'GrowthTrend' | 'FlashFill'): void    \\n\\n/**\\n* Calculates a range of cells on a worksheet.\\n*/\\ncalculate(): void    \\n\\n/**\\n* Clear range values, format, fill, border, etc.\\n* @param applyTo Optional. Determines the type of clear action. See `Excel.ClearApplyTo` for details.\\n*/\\nclear(applyTo?:ClearApplyTo | 'All' | 'Formats' | 'Contents' | 'Hyperlinks' | 'RemoveHyperlinks'): void    \\n\\n/**\\n* Converts the range cells with data types into text.\\n*/\\nconvertDataTypeToText(): void    \\n\\n/**\\n* Converts the range cells into linked data types in the worksheet.\\n* @param serviceID The service ID which will be used to query the data.\\n* @param languageCulture Language culture to query the service for.\\n*/\\nconvertToLinkedDataType(serviceID:number, languageCulture:string): void    \\n\\n/**\\n* Copies cell data or formatting from the source range or `RangeAreas` to the current range.\\n* The destination range can be a different size than the source range or `RangeAreas`. The destination will be expanded automatically if it is smaller than the source.\\n* @param sourceRange The source range or `RangeAreas` to copy from. When the source `RangeAreas` has multiple ranges, their form must be able to be created by removing full rows or columns from a rectangular range.\\n* @param copyType The type of cell data or formatting to copy over. Default is \\\"All\\\".\\n* @param skipBlanks True if to skip blank cells in the source range. Default is false.\\n* @param transpose True if to transpose the cells in the destination range. Default is false.\\n*/\\ncopyFrom(sourceRange:Range|RangeAreas|string, copyType?:RangeCopyType | 'All' | 'Formulas' | 'Values' | 'Formats' | 'Link', skipBlanks?:boolean, transpose?:boolean): void    \\n\\n/**\\n* Deletes the cells associated with the range.\\n* @param shift Specifies which way to shift the cells. See `Excel.DeleteShiftDirection` for details.\\n*/\\ndelete(shift:DeleteShiftDirection | 'Up' | 'Left'): void    \\n\\n/**\\n* Finds the given string based on the criteria specified.\\n* If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell.\\n* @param text The string to find.\\n* @param criteria Additional search criteria, including the search direction and whether the search needs to match the entire cell or be case-sensitive.\\n*/\\nfind(text:string, criteria:SearchCriteria): Range    \\n\\n/**\\n* Finds the given string based on the criteria specified.\\n* If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell.\\n* If there are no matches, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param text The string to find.\\n* @param criteria Additional search criteria, including the search direction and whether the search needs to match the entire cell or be case-sensitive.\\n*/\\nfindOrNullObject(text:string, criteria:SearchCriteria): Range    \\n\\n/**\\n* Does a Flash Fill to the current range. Flash Fill automatically fills data when it senses a pattern, so the range must be a single column range and have data around it in order to find a pattern.\\n*/\\nflashFill(): void    \\n\\n/**\\n* Gets a `Range` object with the same top-left cell as the current `Range` object, but with the specified numbers of rows and columns.\\n* @param numRows The number of rows of the new range size.\\n* @param numColumns The number of columns of the new range size.\\n*/\\ngetAbsoluteResizedRange(numRows:number, numColumns:number): Range    \\n\\n/**\\n* Gets the smallest range object that encompasses the given ranges. For example, the `GetBoundingRect` of \\\"B2:C5\\\" and \\\"D10:E15\\\" is \\\"B2:E15\\\".\\n* @param anotherRange The range object, address, or range name.\\n*/\\ngetBoundingRect(anotherRange:Range|string): Range    \\n\\n/**\\n* Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid. The returned cell is located relative to the top left cell of the range.\\n* @param row Row number of the cell to be retrieved. Zero-indexed.\\n* @param column Column number of the cell to be retrieved. Zero-indexed.\\n*/\\ngetCell(row:number, column:number): Range    \\n\\n/**\\n* Gets a column contained in the range.\\n* @param column Column number of the range to be retrieved. Zero-indexed.\\n*/\\ngetColumn(column:number): Range    \\n\\n/**\\n* Gets a certain number of columns to the right of the current `Range` object.\\n* @param count Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n*/\\ngetColumnsAfter(count?:number): Range    \\n\\n/**\\n* Gets a certain number of columns to the left of the current `Range` object.\\n* @param count Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n*/\\ngetColumnsBefore(count?:number): Range    \\n\\n/**\\n* Returns a `WorkbookRangeAreas` object that represents the range containing all the direct precedents of a cell in the same worksheet or in multiple worksheets.\\n*/\\ngetDirectPrecedents(): WorkbookRangeAreas    \\n\\n/**\\n* Gets an object that represents the entire column of the range (for example, if the current range represents cells \\\"B4:E11\\\", its `getEntireColumn` is a range that represents columns \\\"B:E\\\").\\n*/\\ngetEntireColumn(): Range    \\n\\n/**\\n* Gets an object that represents the entire row of the range (for example, if the current range represents cells \\\"B4:E11\\\", its `GetEntireRow` is a range that represents rows \\\"4:11\\\").\\n*/\\ngetEntireRow(): Range    \\n\\n/**\\n* Returns a range object that includes the current range and up to the edge of the range, based on the provided direction. This matches the Ctrl+Shift+Arrow key behavior in the Excel on Windows UI.\\n* @param direction The direction from the active cell.\\n* @param activeCell The active cell in this range. By default, the active cell is the top-left cell of the range. An error is thrown if the active cell is not in this range.\\n*/\\ngetExtendedRange(direction:KeyboardDirection | 'Left' | 'Right' | 'Up' | 'Down', activeCell?:Range|string): Range    \\n\\n/**\\n* Renders the range as a base64-encoded png image.\\n* **Important**: This API is currently unsupported in Excel for Mac. Visit {@link https://github.com/OfficeDev/office-js/issues/235 | OfficeDev/office-js Issue #235} for the current status.\\n*/\\ngetImage(): ClientResult<string>    \\n\\n/**\\n* Gets the range object that represents the rectangular intersection of the given ranges.\\n* @param anotherRange The range object or range address that will be used to determine the intersection of ranges.\\n*/\\ngetIntersection(anotherRange:Range|string): Range    \\n\\n/**\\n* Gets the range object that represents the rectangular intersection of the given ranges. If no intersection is found, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param anotherRange The range object or range address that will be used to determine the intersection of ranges.\\n*/\\ngetIntersectionOrNullObject(anotherRange:Range|string): Range    \\n\\n/**\\n* Gets the last cell within the range. For example, the last cell of \\\"B2:D5\\\" is \\\"D5\\\".\\n*/\\ngetLastCell(): Range    \\n\\n/**\\n* Gets the last column within the range. For example, the last column of \\\"B2:D5\\\" is \\\"D2:D5\\\".\\n*/\\ngetLastColumn(): Range    \\n\\n/**\\n* Gets the last row within the range. For example, the last row of \\\"B2:D5\\\" is \\\"B5:D5\\\".\\n*/\\ngetLastRow(): Range    \\n\\n/**\\n* Returns a `RangeAreas` object that represents the merged areas in this range. Note that if the merged areas count in this range is more than 512, then this method will fail to return the result. If the `RangeAreas` object doesn't exist, then this function will return an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetMergedAreasOrNullObject(): RangeAreas    \\n\\n/**\\n* Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.\\n* @param rowOffset The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.\\n* @param columnOffset The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.\\n*/\\ngetOffsetRange(rowOffset:number, columnOffset:number): Range    \\n\\n/**\\n* Gets a scoped collection of PivotTables that overlap with the range.\\n* @param fullyContained If `true`, returns only PivotTables that are fully contained within the range bounds. The default value is `false`.\\n*/\\ngetPivotTables(fullyContained?:boolean): PivotTableScopedCollection    \\n\\n/**\\n* Returns a range object that is the edge cell of the data region that corresponds to the provided direction. This matches the Ctrl+Arrow key behavior in the Excel on Windows UI.\\n* @param direction The direction from the active cell.\\n* @param activeCell The active cell in this range. By default, the active cell is the top-left cell of the range. An error is thrown if the active cell is not in this range.\\n*/\\ngetRangeEdge(direction:KeyboardDirection | 'Left' | 'Right' | 'Up' | 'Down', activeCell?:Range|string): Range    \\n\\n/**\\n* Gets a `Range` object similar to the current `Range` object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.\\n* @param deltaRows The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\\n* @param deltaColumns The number of columns by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\\n*/\\ngetResizedRange(deltaRows:number, deltaColumns:number): Range    \\n\\n/**\\n* Gets a row contained in the range.\\n* @param row Row number of the range to be retrieved. Zero-indexed.\\n*/\\ngetRow(row:number): Range    \\n\\n/**\\n* Gets a certain number of rows above the current `Range` object.\\n* @param count Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n*/\\ngetRowsAbove(count?:number): Range    \\n\\n/**\\n* Gets a certain number of rows below the current `Range` object.\\n* @param count Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n*/\\ngetRowsBelow(count?:number): Range    \\n\\n/**\\n* Gets the `RangeAreas` object, comprising one or more rectangular ranges, that represents all the cells that match the specified type and value.\\n* If no special cells are found, an `ItemNotFound` error will be thrown.\\n* @param cellType The type of cells to include.\\n* @param cellValueType If `cellType` is either `constants` or `formulas`, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\\n*/\\ngetSpecialCells(cellType:SpecialCellType | 'ConditionalFormats' | 'DataValidations' | 'Blanks' | 'Constants' | 'Formulas' | 'SameConditionalFormat' | 'SameDataValidation' | 'Visible', cellValueType?:SpecialCellValueType | 'All' | 'Errors' | 'ErrorsLogical' | 'ErrorsNumbers' | 'ErrorsText' | 'ErrorsLogicalNumber' | 'ErrorsLogicalText' | 'ErrorsNumberText' | 'Logical' | 'LogicalNumbers' | 'LogicalText' | 'LogicalNumbersText' | 'Numbers' | 'NumbersText' | 'Text'): RangeAreas    \\n\\n/**\\n* Gets the `RangeAreas` object, comprising one or more ranges, that represents all the cells that match the specified type and value.\\n* If no special cells are found, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param cellType The type of cells to include.\\n* @param cellValueType If `cellType` is either `constants` or `formulas`, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\\n*/\\ngetSpecialCellsOrNullObject(cellType:SpecialCellType | 'ConditionalFormats' | 'DataValidations' | 'Blanks' | 'Constants' | 'Formulas' | 'SameConditionalFormat' | 'SameDataValidation' | 'Visible', cellValueType?:SpecialCellValueType | 'All' | 'Errors' | 'ErrorsLogical' | 'ErrorsNumbers' | 'ErrorsText' | 'ErrorsLogicalNumber' | 'ErrorsLogicalText' | 'ErrorsNumberText' | 'Logical' | 'LogicalNumbers' | 'LogicalText' | 'LogicalNumbersText' | 'Numbers' | 'NumbersText' | 'Text'): RangeAreas    \\n\\n/**\\n* Gets the range object containing the anchor cell for a cell getting spilled into. Fails if applied to a range with more than one cell.\\n*/\\ngetSpillParent(): Range    \\n\\n/**\\n* Gets the range object containing the anchor cell for the cell getting spilled into.\\n* If it's not a spilled cell, or more than one cell is given, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetSpillParentOrNullObject(): Range    \\n\\n/**\\n* Gets the range object containing the spill range when called on an anchor cell. Fails if applied to a range with more than one cell.\\n*/\\ngetSpillingToRange(): Range    \\n\\n/**\\n* Gets the range object containing the spill range when called on an anchor cell.\\n* If the range isn't an anchor cell or the spill range can't be found, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetSpillingToRangeOrNullObject(): Range    \\n\\n/**\\n* Returns a `Range` object that represents the surrounding region for the top-left cell in this range. A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.\\n*/\\ngetSurroundingRegion(): Range    \\n\\n/**\\n* Gets a scoped collection of tables that overlap with the range.\\n* @param fullyContained If `true`, returns only tables that are fully contained within the range bounds. The default value is `false`.\\n*/\\ngetTables(fullyContained?:boolean): TableScopedCollection    \\n\\n/**\\n* Returns the used range of the given range object. If there are no used cells within the range, this function will throw an `ItemNotFound` error.\\n* @param valuesOnly Considers only cells with values as used cells.\\n*/\\ngetUsedRange(valuesOnly?:boolean): Range    \\n\\n/**\\n* Returns the used range of the given range object. If there are no used cells within the range, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param valuesOnly Considers only cells with values as used cells.\\n*/\\ngetUsedRangeOrNullObject(valuesOnly?:boolean): Range    \\n\\n/**\\n* Represents the visible rows of the current range.\\n*/\\ngetVisibleView(): RangeView    \\n\\n/**\\n* Groups columns and rows for an outline.\\n* @param groupOption Specifies how the range can be grouped by rows or columns.\\n* An `InvalidArgument` error is thrown when the group option differs from the range's\\n* `isEntireRow` or `isEntireColumn` property (i.e., `range.isEntireRow` is true and `groupOption` is \\\"ByColumns\\\"\\n* or `range.isEntireColumn` is true and `groupOption` is \\\"ByRows\\\").\\n*/\\ngroup(groupOption:GroupOption | 'ByRows' | 'ByColumns'): void    \\n\\n/**\\n* Hides the details of the row or column group.\\n* @param groupOption Specifies whether to hide the details of grouped rows or grouped columns.\\n*/\\nhideGroupDetails(groupOption:GroupOption | 'ByRows' | 'ByColumns'): void    \\n\\n/**\\n* Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new `Range` object at the now blank space.\\n* @param shift Specifies which way to shift the cells. See `Excel.InsertShiftDirection` for details.\\n*/\\ninsert(shift:InsertShiftDirection | 'Down' | 'Right'): Range    \\n\\n/**\\n* Merge the range cells into one region in the worksheet.\\n* @param across Optional. Set `true` to merge cells in each row of the specified range as separate merged cells. The default value is `false`.\\n*/\\nmerge(across?:boolean): void    \\n\\n/**\\n* Moves cell values, formatting, and formulas from current range to the destination range, replacing the old information in those cells.\\n* The destination range will be expanded automatically if it is smaller than the current range. Any cells in the destination range that are outside of the original range's area are not changed.\\n* @param destinationRange destinationRange Specifies the range to where the information in this range will be moved.\\n*/\\nmoveTo(destinationRange:Range|string): void    \\n\\n/**\\n* Removes duplicate values from the range specified by the columns.\\n* @param columns The columns inside the range that may contain duplicates. At least one column needs to be specified. Zero-indexed.\\n* @param includesHeader True if the input data contains header. Default is false.\\n*/\\nremoveDuplicates(columns:number[], includesHeader:boolean): RemoveDuplicatesResult    \\n\\n/**\\n* Finds and replaces the given string based on the criteria specified within the current range.\\n* @param text String to find.\\n* @param replacement The string that replaces the original string.\\n* @param criteria Additional replacement criteria.\\n*/\\nreplaceAll(text:string, replacement:string, criteria:ReplaceCriteria): ClientResult<number>    \\n\\n/**\\n* Selects the specified range in the Excel UI.\\n*/\\nselect(): void    \\n\\n/**\\n* Set a range to be recalculated when the next recalculation occurs.\\n*/\\nsetDirty(): void    \\n\\n/**\\n* Displays the card for an active cell if it has rich value content.\\n*/\\nshowCard(): void    \\n\\n/**\\n* Shows the details of the row or column group.\\n* @param groupOption Specifies whether to show the details of grouped rows or grouped columns.\\n*/\\nshowGroupDetails(groupOption:GroupOption | 'ByRows' | 'ByColumns'): void    \\n\\n/**\\n* Ungroups columns and rows for an outline.\\n* @param groupOption Specifies how the range can be ungrouped by rows or columns.\\n*/\\nungroup(groupOption:GroupOption | 'ByRows' | 'ByColumns'): void    \\n\\n/**\\n* Unmerge the range cells into separate cells.\\n*/\\nunmerge(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* `RangeAreas` represents a collection of one or more rectangular ranges in the same worksheet.\\n* To learn how to use discontiguous ranges, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges | Work with multiple ranges simultaneously in Excel add-ins}.\\n*/\\ninterface RangeAreas {\\n\\n    /**\\n* Returns the `RangeAreas` reference in A1-style. Address value will contain the worksheet name for each rectangular block of cells (e.g., \\\"Sheet1!A1:B4, Sheet1!D1:D4\\\").\\n*/\\nreadonly address: string    \\n\\n/**\\n* Returns the `RangeAreas` reference in the user locale.\\n*/\\nreadonly addressLocal: string    \\n\\n/**\\n* Returns the number of rectangular ranges that comprise this `RangeAreas` object.\\n*/\\nreadonly areaCount: number    \\n\\n/**\\n* Returns a collection of rectangular ranges that comprise this `RangeAreas` object.\\n*/\\nreadonly areas: RangeCollection    \\n\\n/**\\n* Returns the number of cells in the `RangeAreas` object, summing up the cell counts of all of the individual rectangular ranges. Returns -1 if the cell count exceeds 2^31-1 (2,147,483,647).\\n*/\\nreadonly cellCount: number    \\n\\n/**\\n* Returns a collection of conditional formats that intersect with any cells in this `RangeAreas` object.\\n*/\\nreadonly conditionalFormats: ConditionalFormatCollection    \\n\\n/**\\n* Returns a data validation object for all ranges in the `RangeAreas`.\\n*/\\nreadonly dataValidation: DataValidation    \\n\\n/**\\n* Returns a `RangeFormat` object, encapsulating the the font, fill, borders, alignment, and other properties for all ranges in the `RangeAreas` object.\\n*/\\nreadonly format: RangeFormat    \\n\\n/**\\n* Specifies if all the ranges on this `RangeAreas` object represent entire columns (e.g., \\\"A:C, Q:Z\\\").\\n*/\\nreadonly isEntireColumn: boolean    \\n\\n/**\\n* Specifies if all the ranges on this `RangeAreas` object represent entire rows (e.g., \\\"1:3, 5:7\\\").\\n*/\\nreadonly isEntireRow: boolean    \\n\\n/**\\n* Represents the style for all ranges in this `RangeAreas` object.\\n* If the styles of the cells are inconsistent, `null` will be returned.\\n* For custom styles, the style name will be returned. For built-in styles, a string representing a value in the `BuiltInStyle` enum will be returned.\\n*/\\nstyle: string    \\n\\n/**\\n* Returns the worksheet for the current `RangeAreas`.\\n*/\\nreadonly worksheet: Worksheet\\n\\n    /**\\n* Calculates all cells in the `RangeAreas`.\\n*/\\ncalculate(): void    \\n\\n/**\\n* Clears values, format, fill, border, and other properties on each of the areas that comprise this `RangeAreas` object.\\n* @param applyTo Optional. Determines the type of clear action. See `Excel.ClearApplyTo` for details. Default is \\\"All\\\".\\n*/\\nclear(applyTo?:ClearApplyTo | 'All' | 'Formats' | 'Contents' | 'Hyperlinks' | 'RemoveHyperlinks'): void    \\n\\n/**\\n* Converts all cells in the `RangeAreas` with data types into text.\\n*/\\nconvertDataTypeToText(): void    \\n\\n/**\\n* Converts all cells in the `RangeAreas` into linked data types.\\n* @param serviceID The service ID which will be used to query the data.\\n* @param languageCulture Language culture to query the service for.\\n*/\\nconvertToLinkedDataType(serviceID:number, languageCulture:string): void    \\n\\n/**\\n* Copies cell data or formatting from the source range or `RangeAreas` to the current `RangeAreas`.\\n* The destination `RangeAreas` can be a different size than the source range or `RangeAreas`. The destination will be expanded automatically if it is smaller than the source.\\n* @param sourceRange The source range or `RangeAreas` to copy from. When the source `RangeAreas` has multiple ranges, their form must able to be created by removing full rows or columns from a rectangular range.\\n* @param copyType The type of cell data or formatting to copy over. Default is \\\"All\\\".\\n* @param skipBlanks True if to skip blank cells in the source range or `RangeAreas`. Default is false.\\n* @param transpose True if to transpose the cells in the destination `RangeAreas`. Default is false.\\n*/\\ncopyFrom(sourceRange:Range|RangeAreas|string, copyType?:RangeCopyType | 'All' | 'Formulas' | 'Values' | 'Formats' | 'Link', skipBlanks?:boolean, transpose?:boolean): void    \\n\\n/**\\n* Returns a `RangeAreas` object that represents the entire columns of the `RangeAreas` (for example, if the current `RangeAreas` represents cells \\\"B4:E11, H2\\\", it returns a `RangeAreas` that represents columns \\\"B:E, H:H\\\").\\n*/\\ngetEntireColumn(): RangeAreas    \\n\\n/**\\n* Returns a `RangeAreas` object that represents the entire rows of the `RangeAreas` (for example, if the current `RangeAreas` represents cells \\\"B4:E11\\\", it returns a `RangeAreas` that represents rows \\\"4:11\\\").\\n*/\\ngetEntireRow(): RangeAreas    \\n\\n/**\\n* Returns the `RangeAreas` object that represents the intersection of the given ranges or `RangeAreas`. If no intersection is found, an `ItemNotFound` error will be thrown.\\n* @param anotherRange The range, `RangeAreas` object, or range address that will be used to determine the intersection.\\n*/\\ngetIntersection(anotherRange:Range|RangeAreas|string): RangeAreas    \\n\\n/**\\n* Returns the `RangeAreas` object that represents the intersection of the given ranges or `RangeAreas`. If no intersection is found, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param anotherRange The range, `RangeAreas` object, or address that will be used to determine the intersection.\\n*/\\ngetIntersectionOrNullObject(anotherRange:Range|RangeAreas|string): RangeAreas    \\n\\n/**\\n* Returns a `RangeAreas` object that is shifted by the specific row and column offset. The dimension of the returned `RangeAreas` will match the original object. If the resulting `RangeAreas` is forced outside the bounds of the worksheet grid, an error will be thrown.\\n* @param rowOffset The number of rows (positive, negative, or 0) by which the `RangeAreas` is to be offset. Positive values are offset downward, and negative values are offset upward.\\n* @param columnOffset The number of columns (positive, negative, or 0) by which the `RangeAreas` is to be offset. Positive values are offset to the right, and negative values are offset to the left.\\n*/\\ngetOffsetRangeAreas(rowOffset:number, columnOffset:number): RangeAreas    \\n\\n/**\\n* Returns a `RangeAreas` object that represents all the cells that match the specified type and value. Throws an error if no special cells are found that match the criteria.\\n* @param cellType The type of cells to include.\\n* @param cellValueType If `cellType` is either `constants` or `formulas`, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\\n*/\\ngetSpecialCells(cellType:SpecialCellType | 'ConditionalFormats' | 'DataValidations' | 'Blanks' | 'Constants' | 'Formulas' | 'SameConditionalFormat' | 'SameDataValidation' | 'Visible', cellValueType?:SpecialCellValueType | 'All' | 'Errors' | 'ErrorsLogical' | 'ErrorsNumbers' | 'ErrorsText' | 'ErrorsLogicalNumber' | 'ErrorsLogicalText' | 'ErrorsNumberText' | 'Logical' | 'LogicalNumbers' | 'LogicalText' | 'LogicalNumbersText' | 'Numbers' | 'NumbersText' | 'Text'): RangeAreas    \\n\\n/**\\n* Returns a `RangeAreas` object that represents all the cells that match the specified type and value. If no special cells are found that match the criteria, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param cellType The type of cells to include.\\n* @param cellValueType If `cellType` is either `constants` or `formulas`, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\\n*/\\ngetSpecialCellsOrNullObject(cellType:SpecialCellType | 'ConditionalFormats' | 'DataValidations' | 'Blanks' | 'Constants' | 'Formulas' | 'SameConditionalFormat' | 'SameDataValidation' | 'Visible', cellValueType?:SpecialCellValueType | 'All' | 'Errors' | 'ErrorsLogical' | 'ErrorsNumbers' | 'ErrorsText' | 'ErrorsLogicalNumber' | 'ErrorsLogicalText' | 'ErrorsNumberText' | 'Logical' | 'LogicalNumbers' | 'LogicalText' | 'LogicalNumbersText' | 'Numbers' | 'NumbersText' | 'Text'): RangeAreas    \\n\\n/**\\n* Returns a scoped collection of tables that overlap with any range in this `RangeAreas` object.\\n* @param fullyContained If `true`, returns only tables that are fully contained within the range bounds. Default is `false`.\\n*/\\ngetTables(fullyContained?:boolean): TableScopedCollection    \\n\\n/**\\n* Returns the used `RangeAreas` that comprises all the used areas of individual rectangular ranges in the `RangeAreas` object.\\n* If there are no used cells within the `RangeAreas`, the `ItemNotFound` error will be thrown.\\n* @param valuesOnly Whether to only consider cells with values as used cells. Default is `false`.\\n*/\\ngetUsedRangeAreas(valuesOnly?:boolean): RangeAreas    \\n\\n/**\\n* Returns the used `RangeAreas` that comprises all the used areas of individual rectangular ranges in the `RangeAreas` object.\\n* If there are no used cells within the `RangeAreas`, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param valuesOnly Whether to only consider cells with values as used cells.\\n*/\\ngetUsedRangeAreasOrNullObject(valuesOnly?:boolean): RangeAreas    \\n\\n/**\\n* Sets the `RangeAreas` to be recalculated when the next recalculation occurs.\\n*/\\nsetDirty(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of one or more rectangular ranges in multiple worksheets.\\n*/\\ninterface WorkbookRangeAreas {\\n\\n    /**\\n* Returns an array of addresses in A1-style. Address values contain the worksheet name for each rectangular block of cells (e.g., \\\"Sheet1!A1:B4, Sheet1!D1:D4\\\"). Read-only.\\n*/\\nreadonly addresses: string[]    \\n\\n/**\\n* Returns the `RangeAreasCollection` object. Each `RangeAreas` in the collection represent one or more rectangle ranges in one worksheet.\\n*/\\nreadonly areas: RangeAreasCollection    \\n\\n/**\\n* Returns ranges that comprise this object in a `RangeCollection` object.\\n*/\\nreadonly ranges: RangeCollection\\n\\n    /**\\n* Returns the `RangeAreas` object based on worksheet ID or name in the collection.\\n* @param key The name or ID of the worksheet.\\n*/\\ngetRangeAreasBySheet(key:string): RangeAreas    \\n\\n/**\\n* Returns the `RangeAreas` object based on worksheet name or ID in the collection. If the worksheet does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key The name or ID of the worksheet.\\n*/\\ngetRangeAreasOrNullObjectBySheet(key:string): RangeAreas\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* RangeView represents a set of visible cells of the parent range.\\n*/\\ninterface RangeView {\\n\\n    /**\\n* Represents the cell addresses of the `RangeView`.\\n*/\\nreadonly cellAddresses: any[][]    \\n\\n/**\\n* The number of visible columns.\\n*/\\nreadonly columnCount: number    \\n\\n/**\\n* Represents the formula in A1-style notation. If a cell has no formula, its value is returned instead.\\n*/\\nformulas: any[][]    \\n\\n/**\\n* Represents the formula in A1-style notation, in the user's language and number-formatting locale.  For example, the English \\\"=SUM(A1, 1.5)\\\" formula would become \\\"=SUMME(A1; 1,5)\\\" in German. If a cell has no formula, its value is returned instead.\\n*/\\nformulasLocal: any[][]    \\n\\n/**\\n* Represents the formula in R1C1-style notation. If a cell has no formula, its value is returned instead.\\n*/\\nformulasR1C1: any[][]    \\n\\n/**\\n* Returns a value that represents the index of the `RangeView`.\\n*/\\nreadonly index: number    \\n\\n/**\\n* Represents Excel's number format code for the given cell.\\n*/\\nnumberFormat: any[][]    \\n\\n/**\\n* The number of visible rows.\\n*/\\nreadonly rowCount: number    \\n\\n/**\\n* Represents a collection of range views associated with the range.\\n*/\\nreadonly rows: RangeViewCollection    \\n\\n/**\\n* Text values of the specified range. The text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\\n*/\\nreadonly text: string[][]    \\n\\n/**\\n* Represents the type of data of each cell.\\n*/\\nreadonly valueTypes: RangeValueType[][]    \\n\\n/**\\n* Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\\n*/\\nvalues: any[][]\\n\\n    /**\\n* Gets the parent range associated with the current `RangeView`.\\n*/\\ngetRange(): Range\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of `RangeView` objects.\\n*/\\ninterface RangeViewCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of `RangeView` objects in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a `RangeView` row via its index. Zero-indexed.\\n* @param index Index of the visible row.\\n*/\\ngetItemAt(index:number): RangeView\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: RangeView[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of key-value pair setting objects that are part of the workbook. The scope is limited to per file and add-in (task-pane or content) combination.\\n*/\\ninterface SettingCollection {\\n\\n    \\n\\n    /**\\n* Sets or adds the specified setting to the workbook.\\n* @param key The key of the new setting.\\n* @param value The value for the new setting.\\n*/\\nadd(key:string, value:string|number|boolean|Date|Array<any>|any): Setting    \\n\\n/**\\n* Gets the number of settings in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a setting entry via the key.\\n* @param key Key of the setting.\\n*/\\ngetItem(key:string): Setting    \\n\\n/**\\n* Gets a setting entry via the key. If the setting does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key The key of the setting.\\n*/\\ngetItemOrNullObject(key:string): Setting\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Setting[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Setting represents a key-value pair of a setting persisted to the document (per file, per add-in). These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in. Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.\\n*/\\ninterface Setting {\\n\\n    /**\\n* The key that represents the ID of the setting.\\n*/\\nreadonly key: string    \\n\\n/**\\n* Represents the value stored for this setting.\\n*/\\nvalue: any\\n\\n    /**\\n* Deletes the setting.\\n*/\\ndelete(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A collection of all the `NamedItem` objects that are part of the workbook or worksheet, depending on how it was reached.\\n*/\\ninterface NamedItemCollection {\\n\\n    \\n\\n    /**\\n* Adds a new name to the collection of the given scope.\\n* @param name The name of the named item.\\n* @param reference The formula or the range that the name will refer to.\\n* @param comment Optional. The comment associated with the named item.\\n*/\\nadd(name:string, reference:Range|string, comment?:string): NamedItem    \\n\\n/**\\n* Adds a new name to the collection of the given scope using the user's locale for the formula.\\n* @param name The name of the named item.\\n* @param formula The formula in the user's locale that the name will refer to.\\n* @param comment Optional. The comment associated with the named item.\\n*/\\naddFormulaLocal(name:string, formula:string, comment?:string): NamedItem    \\n\\n/**\\n* Gets the number of named items in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a `NamedItem` object using its name.\\n* @param name Nameditem name.\\n*/\\ngetItem(name:string): NamedItem    \\n\\n/**\\n* Gets a `NamedItem` object using its name. If the object does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Nameditem name.\\n*/\\ngetItemOrNullObject(name:string): NamedItem\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: NamedItem[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type below), range object, or a reference to a range. This object can be used to obtain range object associated with names.\\n*/\\ninterface NamedItem {\\n\\n    /**\\n* Returns an object containing values and types of the named item.\\n*/\\nreadonly arrayValues: NamedItemArrayValues    \\n\\n/**\\n* Specifies the comment associated with this name.\\n*/\\ncomment: string    \\n\\n/**\\n* The formula of the named item. Formulas always start with an equal sign (\\\"=\\\").\\n*/\\nformula: any    \\n\\n/**\\n* The name of the object.\\n*/\\nreadonly name: string    \\n\\n/**\\n* Specifies if the name is scoped to the workbook or to a specific worksheet. Possible values are: Worksheet, Workbook.\\n*/\\nreadonly scope: NamedItemScope | 'Worksheet' | 'Workbook'    \\n\\n/**\\n* Specifies the type of the value returned by the name's formula. See `Excel.NamedItemType` for details.\\n*/\\nreadonly type: NamedItemType | 'String' | 'Integer' | 'Double' | 'Boolean' | 'Range' | 'Error' | 'Array'    \\n\\n/**\\n* Represents the value computed by the name's formula. For a named range, will return the range address.\\n*/\\nreadonly value: any    \\n\\n/**\\n* Specifies if the object is visible.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Returns the worksheet on which the named item is scoped to. Throws an error if the item is scoped to the workbook instead.\\n*/\\nreadonly worksheet: Worksheet    \\n\\n/**\\n* Returns the worksheet to which the named item is scoped. If the item is scoped to the workbook instead, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\nreadonly worksheetOrNullObject: Worksheet\\n\\n    /**\\n* Deletes the given name.\\n*/\\ndelete(): void    \\n\\n/**\\n* Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Returns the range object that is associated with the name. If the named item's type is not a range, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetRangeOrNullObject(): Range\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an object containing values and types of a named item.\\n*/\\ninterface NamedItemArrayValues {\\n\\n    /**\\n* Represents the types for each item in the named item array\\n*/\\nreadonly types: RangeValueType[][]    \\n\\n/**\\n* Represents the values of each item in the named item array.\\n*/\\nreadonly values: any[][]\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an Office.js binding that is defined in the workbook.\\n*/\\ninterface Binding {\\n\\n    /**\\n* Represents the binding identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the type of the binding. See `Excel.BindingType` for details.\\n*/\\nreadonly type: BindingType | 'Range' | 'Table' | 'Text'\\n\\n    /**\\n* Deletes the binding.\\n*/\\ndelete(): void    \\n\\n/**\\n* Returns the range represented by the binding. Will throw an error if the binding is not of the correct type.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Returns the table represented by the binding. Will throw an error if the binding is not of the correct type.\\n*/\\ngetTable(): Table    \\n\\n/**\\n* Returns the text represented by the binding. Will throw an error if the binding is not of the correct type.\\n*/\\ngetText(): ClientResult<string>\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the collection of all the binding objects that are part of the workbook.\\n*/\\ninterface BindingCollection {\\n\\n    /**\\n* Returns the number of bindings in the collection.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Add a new binding to a particular Range.\\n* @param range Range to bind the binding to. May be a `Range` object or a string. If string, must contain the full address, including the sheet name\\n* @param bindingType Type of binding. See `Excel.BindingType`.\\n* @param id Name of the binding.\\n*/\\nadd(range:Range|string, bindingType:BindingType | 'Range' | 'Table' | 'Text', id:string): Binding    \\n\\n/**\\n* Add a new binding based on a named item in the workbook.\\n* If the named item references to multiple areas, the `InvalidReference` error will be returned.\\n* @param name Name from which to create binding.\\n* @param bindingType Type of binding. See `Excel.BindingType`.\\n* @param id Name of the binding.\\n*/\\naddFromNamedItem(name:string, bindingType:BindingType | 'Range' | 'Table' | 'Text', id:string): Binding    \\n\\n/**\\n* Add a new binding based on the current selection.\\n* If the selection has multiple areas, the `InvalidReference` error will be returned.\\n* @param bindingType Type of binding. See `Excel.BindingType`.\\n* @param id Name of the binding.\\n*/\\naddFromSelection(bindingType:BindingType | 'Range' | 'Table' | 'Text', id:string): Binding    \\n\\n/**\\n* Gets the number of bindings in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a binding object by ID.\\n* @param id ID of the binding object to be retrieved.\\n*/\\ngetItem(id:string): Binding    \\n\\n/**\\n* Gets a binding object based on its position in the items array.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Binding    \\n\\n/**\\n* Gets a binding object by ID. If the binding object does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param id ID of the binding object to be retrieved.\\n*/\\ngetItemOrNullObject(id:string): Binding\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Binding[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.\\n*/\\ninterface TableCollection {\\n\\n    /**\\n* Returns the number of tables in the workbook.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Creates a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.\\n* @param address A `Range` object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used.\\n* @param hasHeaders A boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e., when this property set to `false`), Excel will automatically generate a header and shift the data down by one row.\\n*/\\nadd(address:Range|string, hasHeaders:boolean): Table    \\n\\n/**\\n* Gets the number of tables in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a table by name or ID.\\n* @param key Name or ID of the table to be retrieved.\\n*/\\ngetItem(key:string): Table    \\n\\n/**\\n* Gets a table based on its position in the collection.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Table    \\n\\n/**\\n* Gets a table by name or ID. If the table doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key Name or ID of the table to be retrieved.\\n*/\\ngetItemOrNullObject(key:string): Table\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Table[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a scoped collection of tables. For each table its top-left corner is considered its anchor location, and the tables are sorted top-to-bottom and then left-to-right.\\n*/\\ninterface TableScopedCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of tables in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets the first table in the collection. The tables in the collection are sorted top-to-bottom and left-to-right, such that top-left table is the first table in the collection.\\n*/\\ngetFirst(): Table    \\n\\n/**\\n* Gets a table by name or ID.\\n* @param key Name or ID of the table to be retrieved.\\n*/\\ngetItem(key:string): Table\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Table[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an Excel table.\\n* To learn more about the table object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables | Work with tables using the Excel JavaScript API}.\\n*/\\ninterface Table {\\n\\n    /**\\n* Represents the `AutoFilter` object of the table.\\n*/\\nreadonly autoFilter: AutoFilter    \\n\\n/**\\n* Represents a collection of all the columns in the table.\\n*/\\nreadonly columns: TableColumnCollection    \\n\\n/**\\n* Specifies if the first column contains special formatting.\\n*/\\nhighlightFirstColumn: boolean    \\n\\n/**\\n* Specifies if the last column contains special formatting.\\n*/\\nhighlightLastColumn: boolean    \\n\\n/**\\n* Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns a numeric ID.\\n*/\\nreadonly legacyId: string    \\n\\n/**\\n* Name of the table.\\n* \\n* The set name of the table must follow the guidelines specified in the {@link https://support.microsoft.com/office/fbf49a4f-82a3-43eb-8ba2-44d21233b114 | Rename an Excel table} article.\\n*/\\nname: string    \\n\\n/**\\n* Represents a collection of all the rows in the table.\\n*/\\nreadonly rows: TableRowCollection    \\n\\n/**\\n* Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones, to make reading the table easier.\\n*/\\nshowBandedColumns: boolean    \\n\\n/**\\n* Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones, to make reading the table easier.\\n*/\\nshowBandedRows: boolean    \\n\\n/**\\n* Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.\\n*/\\nshowFilterButton: boolean    \\n\\n/**\\n* Specifies if the header row is visible. This value can be set to show or remove the header row.\\n*/\\nshowHeaders: boolean    \\n\\n/**\\n* Specifies if the total row is visible. This value can be set to show or remove the total row.\\n*/\\nshowTotals: boolean    \\n\\n/**\\n* Represents the sorting for the table.\\n*/\\nreadonly sort: TableSort    \\n\\n/**\\n* Constant value that represents the table style. Possible values are: \\\"TableStyleLight1\\\" through \\\"TableStyleLight21\\\", \\\"TableStyleMedium1\\\" through \\\"TableStyleMedium28\\\", \\\"TableStyleDark1\\\" through \\\"TableStyleDark11\\\". A custom user-defined style present in the workbook can also be specified.\\n*/\\nstyle: string    \\n\\n/**\\n* The worksheet containing the current table.\\n*/\\nreadonly worksheet: Worksheet\\n\\n    /**\\n* Clears all the filters currently applied on the table.\\n*/\\nclearFilters(): void    \\n\\n/**\\n* Converts the table into a normal range of cells. All data is preserved.\\n*/\\nconvertToRange(): Range    \\n\\n/**\\n* Deletes the table.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the range object associated with the data body of the table.\\n*/\\ngetDataBodyRange(): Range    \\n\\n/**\\n* Gets the range object associated with the header row of the table.\\n*/\\ngetHeaderRowRange(): Range    \\n\\n/**\\n* Gets the range object associated with the entire table.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Gets the range object associated with the totals row of the table.\\n*/\\ngetTotalRowRange(): Range    \\n\\n/**\\n* Reapplies all the filters currently on the table.\\n*/\\nreapplyFilters(): void    \\n\\n/**\\n* Resize the table to the new range. The new range must overlap with the original table range and the headers (or the top of the table) must be in the same row.\\n* @param newRange The range object or range address that will be used to determine the new size of the table.\\n*/\\nresize(newRange:Range|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the columns that are part of the table.\\n*/\\ninterface TableColumnCollection {\\n\\n    /**\\n* Returns the number of columns in the table.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Adds a new column to the table.\\n* @param index Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.\\n* @param values Optional. A 2D array of unformatted values of the table column.\\n* @param name Optional. Specifies the name of the new column. If `null`, the default name will be used.\\n*/\\nadd(index?:number, values?:Array<Array<boolean|string|number>>|boolean|string|number, name?:string): TableColumn    \\n\\n/**\\n* Gets the number of columns in the table.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a column object by name or ID.\\n* @param key Column name or ID.\\n*/\\ngetItem(key:number|string): TableColumn    \\n\\n/**\\n* Gets a column based on its position in the collection.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): TableColumn    \\n\\n/**\\n* Gets a column object by name or ID. If the column doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key Column name or ID.\\n*/\\ngetItemOrNullObject(key:number|string): TableColumn\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: TableColumn[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a column in a table.\\n*/\\ninterface TableColumn {\\n\\n    /**\\n* Retrieves the filter applied to the column.\\n*/\\nreadonly filter: Filter    \\n\\n/**\\n* Returns a unique key that identifies the column within the table.\\n*/\\nreadonly id: number    \\n\\n/**\\n* Returns the index number of the column within the columns collection of the table. Zero-indexed.\\n*/\\nreadonly index: number    \\n\\n/**\\n* Specifies the name of the table column.\\n*/\\nname: string    \\n\\n/**\\n* Represents the raw values of the specified range. The data returned could be a string, number, or boolean. Cells that contain an error will return the error string.\\n* If the returned value starts with a plus (\\\"+\\\"), minus (\\\"-\\\"), or equal sign (\\\"=\\\"), Excel interprets this value as a formula.\\n*/\\nvalues: any[][]\\n\\n    /**\\n* Deletes the column from the table.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the range object associated with the data body of the column.\\n*/\\ngetDataBodyRange(): Range    \\n\\n/**\\n* Gets the range object associated with the header row of the column.\\n*/\\ngetHeaderRowRange(): Range    \\n\\n/**\\n* Gets the range object associated with the entire column.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Gets the range object associated with the totals row of the column.\\n*/\\ngetTotalRowRange(): Range\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the rows that are part of the table.\\n* \\n* Note that unlike ranges or columns, which will adjust if new rows or columns are added before them,\\n* a `TableRow` object represents the physical location of the table row, but not the data.\\n* That is, if the data is sorted or if new rows are added, a table row will continue\\n* to point at the index for which it was created.\\n*/\\ninterface TableRowCollection {\\n\\n    /**\\n* Returns the number of rows in the table.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Adds one or more rows to the table. The return object will be the top of the newly added row(s).\\n* \\n* Note that unlike ranges or columns, which will adjust if new rows or columns are added before them,\\n* a `TableRow` object represents the physical location of the table row, but not the data.\\n* That is, if the data is sorted or if new rows are added, a table row will continue\\n* to point at the index for which it was created.\\n* @param index Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.\\n* @param values Optional. A 2D array of unformatted values of the table row.\\n* @param alwaysInsert Optional. Specifies whether the new rows will be inserted into the table when new rows are added. If `true`, the new rows will be inserted into the table. If `false`, the new rows will be added below the table. Default is `true`.\\n*/\\nadd(index?:number, values?:Array<Array<boolean|string|number>>|boolean|string|number, alwaysInsert?:boolean): TableRow    \\n\\n/**\\n* Delete multiple rows from a table.\\n* These rows don't need to be sequential. This method will throw the `InvalidArgument` error if a chosen row has already been deleted or doesn't exist.\\n* This method will throw the `InsertDeleteConflict` error if the table on which the method is called has a filter applied.\\n* @param rows An array of row index numbers or row objects to delete from the table.\\n*/\\ndeleteRows(rows:number[]|TableRow[]): void    \\n\\n/**\\n* Delete a specified number of rows from a table, starting at a given index.\\n* This method will throw the `InsertDeleteConflict` error if the table on which the method is called has a filter applied.\\n* @param index The index value of the row to be deleted. Note: Row indexes update each time that a preceding row in the table is deleted, after each delete operation. Ensure that the index of the row that you want to delete hasn't changed between the time that you determined the value and the time that you run the operation.\\n* @param count Number of rows to delete. By default, a single row will be deleted.\\n*/\\ndeleteRowsAt(index:number, count?:number): void    \\n\\n/**\\n* Gets the number of rows in the table.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a row based on its position in the collection.\\n* \\n* Note that unlike ranges or columns, which will adjust if new rows or columns are added before them,\\n* a `TableRow` object represents the physical location of the table row, but not the data.\\n* That is, if the data is sorted or if new rows are added, a table row will continue\\n* to point at the index for which it was created.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): TableRow\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: TableRow[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a row in a table.\\n* \\n* Note that unlike ranges or columns, which will adjust if new rows or columns are added before them,\\n* a `TableRow` object represents the physical location of the table row, but not the data.\\n* That is, if the data is sorted or if new rows are added, a table row will continue\\n* to point at the index for which it was created.\\n*/\\ninterface TableRow {\\n\\n    /**\\n* Represents the raw values of the specified range. The data returned could be a string, number, or boolean. Cells that contain an error will return the error string.\\n* If the returned value starts with a plus (\\\"+\\\"), minus (\\\"-\\\"), or equal sign (\\\"=\\\"), Excel interprets this value as a formula.\\n*/\\nvalues: any[][]\\n\\n    /**\\n* Deletes the row from the table.\\n*/\\ndelete(): void    \\n\\n/**\\n* Returns the range object associated with the entire row.\\n*/\\ngetRange(): Range\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the data validation applied to the current range.\\n* To learn more about the data validation object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-data-validation | Add data validation to Excel ranges}.\\n*/\\ninterface DataValidation {\\n\\n    /**\\n* Error alert when user enters invalid data.\\n*/\\nerrorAlert: DataValidationErrorAlert    \\n\\n/**\\n* Specifies if data validation will be performed on blank cells. Default is `true`.\\n*/\\nignoreBlanks: boolean    \\n\\n/**\\n* Prompt when users select a cell.\\n*/\\nprompt: DataValidationPrompt    \\n\\n/**\\n* Data validation rule that contains different type of data validation criteria.\\n*/\\nrule: DataValidationRule    \\n\\n/**\\n* Type of the data validation, see `Excel.DataValidationType` for details.\\n*/\\nreadonly type: DataValidationType | 'None' | 'WholeNumber' | 'Decimal' | 'List' | 'Date' | 'Time' | 'TextLength' | 'Custom' | 'Inconsistent' | 'MixedCriteria'    \\n\\n/**\\n* Represents if all cell values are valid according to the data validation rules.\\n* Returns `true` if all cell values are valid, or `false` if all cell values are invalid.\\n* Returns `null` if there are both valid and invalid cell values within the range.\\n*/\\nreadonly valid: boolean\\n\\n    /**\\n* Clears the data validation from the current range.\\n*/\\nclear(): void    \\n\\n/**\\n* Returns a `RangeAreas` object, comprising one or more rectangular ranges, with invalid cell values. If all cell values are valid, this function will throw an `ItemNotFound` error.\\n*/\\ngetInvalidCells(): RangeAreas    \\n\\n/**\\n* Returns a `RangeAreas` object, comprising one or more rectangular ranges, with invalid cell values. If all cell values are valid, this function will return `null`.\\n*/\\ngetInvalidCellsOrNullObject(): RangeAreas\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the results from `Range.removeDuplicates`.\\n*/\\ninterface RemoveDuplicatesResult {\\n\\n    /**\\n* Number of duplicated rows removed by the operation.\\n*/\\nreadonly removed: number    \\n\\n/**\\n* Number of remaining unique rows present in the resulting range.\\n*/\\nreadonly uniqueRemaining: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A format object encapsulating the range's font, fill, borders, alignment, and other properties.\\n*/\\ninterface RangeFormat {\\n\\n    /**\\n* Specifies if text is automatically indented when text alignment is set to equal distribution.\\n*/\\nautoIndent: boolean    \\n\\n/**\\n* Collection of border objects that apply to the overall range.\\n*/\\nreadonly borders: RangeBorderCollection    \\n\\n/**\\n* Specifies the width of all colums within the range. If the column widths are not uniform, `null` will be returned.\\n*/\\ncolumnWidth: number    \\n\\n/**\\n* Returns the fill object defined on the overall range.\\n*/\\nreadonly fill: RangeFill    \\n\\n/**\\n* Returns the font object defined on the overall range.\\n*/\\nreadonly font: RangeFont    \\n\\n/**\\n* Represents the horizontal alignment for the specified object. See `Excel.HorizontalAlignment` for details.\\n*/\\nhorizontalAlignment: HorizontalAlignment | 'General' | 'Left' | 'Center' | 'Right' | 'Fill' | 'Justify' | 'CenterAcrossSelection' | 'Distributed'    \\n\\n/**\\n* An integer from 0 to 250 that indicates the indent level.\\n*/\\nindentLevel: number    \\n\\n/**\\n* Returns the format protection object for a range.\\n*/\\nreadonly protection: FormatProtection    \\n\\n/**\\n* The reading order for the range.\\n*/\\nreadingOrder: ReadingOrder | 'Context' | 'LeftToRight' | 'RightToLeft'    \\n\\n/**\\n* The height of all rows in the range. If the row heights are not uniform, `null` will be returned.\\n*/\\nrowHeight: number    \\n\\n/**\\n* Specifies if text automatically shrinks to fit in the available column width.\\n*/\\nshrinkToFit: boolean    \\n\\n/**\\n* The text orientation of all the cells within the range.\\n* The text orientation should be an integer either from -90 to 90, or 180 for vertically-oriented text.\\n* If the orientation within a range are not uniform, then `null` will be returned.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Determines if the row height of the `Range` object equals the standard height of the sheet.\\n* Returns `true` if the row height of the `Range` object equals the standard height of the sheet.\\n* Returns `null` if the range contains more than one row and the rows aren't all the same height.\\n* Returns `false` otherwise.\\n* Note: This property is only intended to be set to `true`. Setting it to `false` has no effect.\\n*/\\nuseStandardHeight: boolean    \\n\\n/**\\n* Specifies if the column width of the `Range` object equals the standard width of the sheet.\\n* Returns `true` if the column width of the `Range` object equals the standard width of the sheet.\\n* Returns `null` if the range contains more than one column and the columns aren't all the same height.\\n* Returns `false` otherwise.\\n* Note: This property is only intended to be set to `true`. Setting it to `false` has no effect.\\n*/\\nuseStandardWidth: boolean    \\n\\n/**\\n* Represents the vertical alignment for the specified object. See `Excel.VerticalAlignment` for details.\\n*/\\nverticalAlignment: VerticalAlignment | 'Top' | 'Center' | 'Bottom' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Specifies if Excel wraps the text in the object. A `null` value indicates that the entire range doesn't have a uniform wrap setting\\n*/\\nwrapText: boolean\\n\\n    /**\\n* Adjusts the indentation of the range formatting. The indent value ranges from 0 to 250 and is measured in characters.\\n* @param amount The number of character spaces by which the current indent is adjusted. This value should be between -250 and 250.\\n* **Note**: If the amount would raise the indent level above 250, the indent level stays with 250.\\n* Similarly, if the amount would lower the indent level below 0, the indent level stays 0.\\n*/\\nadjustIndent(amount:number): void    \\n\\n/**\\n* Changes the width of the columns of the current range to achieve the best fit, based on the current data in the columns.\\n*/\\nautofitColumns(): void    \\n\\n/**\\n* Changes the height of the rows of the current range to achieve the best fit, based on the current data in the columns.\\n*/\\nautofitRows(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the format protection of a range object.\\n*/\\ninterface FormatProtection {\\n\\n    /**\\n* Specifies if Excel hides the formula for the cells in the range. A `null` value indicates that the entire range doesn't have a uniform formula hidden setting.\\n*/\\nformulaHidden: boolean    \\n\\n/**\\n* Specifies if Excel locks the cells in the object. A `null` value indicates that the entire range doesn't have a uniform lock setting.\\n*/\\nlocked: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the background of a range object.\\n*/\\ninterface RangeFill {\\n\\n    /**\\n* HTML color code representing the color of the background, in the form #RRGGBB (e.g., \\\"FFA500\\\"), or as a named HTML color (e.g., \\\"orange\\\")\\n*/\\ncolor: string    \\n\\n/**\\n* The pattern of a range. See `Excel.FillPattern` for details. LinearGradient and RectangularGradient are not supported.\\n* A `null` value indicates that the entire range doesn't have a uniform pattern setting.\\n*/\\npattern: FillPattern | 'None' | 'Solid' | 'Gray50' | 'Gray75' | 'Gray25' | 'Horizontal' | 'Vertical' | 'Down' | 'Up' | 'Checker' | 'SemiGray75' | 'LightHorizontal' | 'LightVertical' | 'LightDown' | 'LightUp' | 'Grid' | 'CrissCross' | 'Gray16' | 'Gray8' | 'LinearGradient' | 'RectangularGradient'    \\n\\n/**\\n* The HTML color code representing the color of the range pattern, in the form #RRGGBB (e.g., \\\"FFA500\\\"), or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\npatternColor: string    \\n\\n/**\\n* Specifies a double that lightens or darkens a pattern color for the range fill. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n* A `null` value indicates that the range doesn't have uniform `patternTintAndShade` settings.\\n*/\\npatternTintAndShade: number    \\n\\n/**\\n* Specifies a double that lightens or darkens a color for the range fill. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n* A `null` value indicates that the range doesn't have uniform `tintAndShade` settings.\\n*/\\ntintAndShade: number\\n\\n    /**\\n* Resets the range background.\\n*/\\nclear(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the border of an object.\\n*/\\ninterface RangeBorder {\\n\\n    /**\\n* HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\\"FFA500\\\"), or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\ncolor: string    \\n\\n/**\\n* Constant value that indicates the specific side of the border. See `Excel.BorderIndex` for details.\\n*/\\nreadonly sideIndex: BorderIndex | 'EdgeTop' | 'EdgeBottom' | 'EdgeLeft' | 'EdgeRight' | 'InsideVertical' | 'InsideHorizontal' | 'DiagonalDown' | 'DiagonalUp'    \\n\\n/**\\n* One of the constants of line style specifying the line style for the border. See `Excel.BorderLineStyle` for details.\\n*/\\nstyle: BorderLineStyle | 'None' | 'Continuous' | 'Dash' | 'DashDot' | 'DashDotDot' | 'Dot' | 'Double' | 'SlantDashDot'    \\n\\n/**\\n* Specifies a double that lightens or darkens a color for the range border, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n* A `null` value indicates that the border doesn't have a uniform `tintAndShade` setting.\\n*/\\ntintAndShade: number    \\n\\n/**\\n* Specifies the weight of the border around a range. See `Excel.BorderWeight` for details.\\n*/\\nweight: BorderWeight | 'Hairline' | 'Thin' | 'Medium' | 'Thick'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the border objects that make up the range border.\\n*/\\ninterface RangeBorderCollection {\\n\\n    /**\\n* Number of border objects in the collection.\\n*/\\nreadonly count: number    \\n\\n/**\\n* Specifies a double that lightens or darkens a color for range borders. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n* A `null` value indicates that the entire border collection doesn't have a uniform `tintAndShade` setting.\\n*/\\ntintAndShade: number\\n\\n    /**\\n* Gets a border object using its name.\\n* @param index Index value of the border object to be retrieved. See `Excel.BorderIndex` for details.\\n*/\\ngetItem(index:BorderIndex | 'EdgeTop' | 'EdgeBottom' | 'EdgeLeft' | 'EdgeRight' | 'InsideVertical' | 'InsideHorizontal' | 'DiagonalDown' | 'DiagonalUp'): RangeBorder    \\n\\n/**\\n* Gets a border object using its index.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): RangeBorder\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: RangeBorder[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the font attributes (font name, font size, color, etc.) for an object.\\n*/\\ninterface RangeFont {\\n\\n    /**\\n* Represents the bold status of the font.\\n*/\\nbold: boolean    \\n\\n/**\\n* HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n*/\\ncolor: string    \\n\\n/**\\n* Specifies the italic status of the font.\\n*/\\nitalic: boolean    \\n\\n/**\\n* Font name (e.g., \\\"Calibri\\\"). The name's length should not be greater than 31 characters.\\n*/\\nname: string    \\n\\n/**\\n* Font size.\\n*/\\nsize: number    \\n\\n/**\\n* Specifies the strikethrough status of font. A `null` value indicates that the entire range doesn't have a uniform strikethrough setting.\\n*/\\nstrikethrough: boolean    \\n\\n/**\\n* Specifies the subscript status of font.\\n* Returns `true` if all the fonts of the range are subscript.\\n* Returns `false` if all the fonts of the range are superscript or normal (neither superscript, nor subscript).\\n* Returns `null` otherwise.\\n*/\\nsubscript: boolean    \\n\\n/**\\n* Specifies the superscript status of font.\\n* Returns `true` if all the fonts of the range are superscript.\\n* Returns `false` if all the fonts of the range are subscript or normal (neither superscript, nor subscript).\\n* Returns `null` otherwise.\\n*/\\nsuperscript: boolean    \\n\\n/**\\n* Specifies a double that lightens or darkens a color for the range font. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n* A `null` value indicates that the entire range doesn't have a uniform font `tintAndShade` setting.\\n*/\\ntintAndShade: number    \\n\\n/**\\n* Type of underline applied to the font. See `Excel.RangeUnderlineStyle` for details.\\n*/\\nunderline: RangeUnderlineStyle | 'None' | 'Single' | 'Double' | 'SingleAccountant' | 'DoubleAccountant'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A collection of all the chart objects on a worksheet.\\n*/\\ninterface ChartCollection {\\n\\n    /**\\n* Returns the number of charts in the worksheet.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Creates a new chart.\\n* @param type Represents the type of a chart. See `Excel.ChartType` for details.\\n* @param sourceData The `Range` object corresponding to the source data.\\n* @param seriesBy Optional. Specifies the way columns or rows are used as data series on the chart. See `Excel.ChartSeriesBy` for details.\\n*/\\nadd(type:ChartType | 'Invalid' | 'ColumnClustered' | 'ColumnStacked' | 'ColumnStacked100' | '3DColumnClustered' | '3DColumnStacked' | '3DColumnStacked100' | 'BarClustered' | 'BarStacked' | 'BarStacked100' | '3DBarClustered' | '3DBarStacked' | '3DBarStacked100' | 'LineStacked' | 'LineStacked100' | 'LineMarkers' | 'LineMarkersStacked' | 'LineMarkersStacked100' | 'PieOfPie' | 'PieExploded' | '3DPieExploded' | 'BarOfPie' | 'XyscatterSmooth' | 'XyscatterSmoothNoMarkers' | 'XyscatterLines' | 'XyscatterLinesNoMarkers' | 'AreaStacked' | 'AreaStacked100' | '3DAreaStacked' | '3DAreaStacked100' | 'DoughnutExploded' | 'RadarMarkers' | 'RadarFilled' | 'Surface' | 'SurfaceWireframe' | 'SurfaceTopView' | 'SurfaceTopViewWireframe' | 'Bubble' | 'Bubble3DEffect' | 'StockHLC' | 'StockOHLC' | 'StockVHLC' | 'StockVOHLC' | 'CylinderColClustered' | 'CylinderColStacked' | 'CylinderColStacked100' | 'CylinderBarClustered' | 'CylinderBarStacked' | 'CylinderBarStacked100' | 'CylinderCol' | 'ConeColClustered' | 'ConeColStacked' | 'ConeColStacked100' | 'ConeBarClustered' | 'ConeBarStacked' | 'ConeBarStacked100' | 'ConeCol' | 'PyramidColClustered' | 'PyramidColStacked' | 'PyramidColStacked100' | 'PyramidBarClustered' | 'PyramidBarStacked' | 'PyramidBarStacked100' | 'PyramidCol' | '3DColumn' | 'Line' | '3DLine' | '3DPie' | 'Pie' | 'Xyscatter' | '3DArea' | 'Area' | 'Doughnut' | 'Radar' | 'Histogram' | 'Boxwhisker' | 'Pareto' | 'RegionMap' | 'Treemap' | 'Waterfall' | 'Sunburst' | 'Funnel', sourceData:Range, seriesBy?:ChartSeriesBy | 'Auto' | 'Columns' | 'Rows'): Chart    \\n\\n/**\\n* Returns the number of charts in the worksheet.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.\\n* @param name Name of the chart to be retrieved.\\n*/\\ngetItem(name:string): Chart    \\n\\n/**\\n* Gets a chart based on its position in the collection.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Chart    \\n\\n/**\\n* Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If the chart doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the chart to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): Chart\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Chart[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a chart object in a workbook.\\n* To learn more about the chart object model, see {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts | Work with charts using the Excel JavaScript API}.\\n*/\\ninterface Chart {\\n\\n    /**\\n* Represents chart axes.\\n*/\\nreadonly axes: ChartAxes    \\n\\n/**\\n* Specifies a chart category label level enumeration constant, referring to the level of the source category labels.\\n*/\\ncategoryLabelLevel: number    \\n\\n/**\\n* Specifies the type of the chart. See `Excel.ChartType` for details.\\n*/\\nchartType: ChartType | 'Invalid' | 'ColumnClustered' | 'ColumnStacked' | 'ColumnStacked100' | '3DColumnClustered' | '3DColumnStacked' | '3DColumnStacked100' | 'BarClustered' | 'BarStacked' | 'BarStacked100' | '3DBarClustered' | '3DBarStacked' | '3DBarStacked100' | 'LineStacked' | 'LineStacked100' | 'LineMarkers' | 'LineMarkersStacked' | 'LineMarkersStacked100' | 'PieOfPie' | 'PieExploded' | '3DPieExploded' | 'BarOfPie' | 'XyscatterSmooth' | 'XyscatterSmoothNoMarkers' | 'XyscatterLines' | 'XyscatterLinesNoMarkers' | 'AreaStacked' | 'AreaStacked100' | '3DAreaStacked' | '3DAreaStacked100' | 'DoughnutExploded' | 'RadarMarkers' | 'RadarFilled' | 'Surface' | 'SurfaceWireframe' | 'SurfaceTopView' | 'SurfaceTopViewWireframe' | 'Bubble' | 'Bubble3DEffect' | 'StockHLC' | 'StockOHLC' | 'StockVHLC' | 'StockVOHLC' | 'CylinderColClustered' | 'CylinderColStacked' | 'CylinderColStacked100' | 'CylinderBarClustered' | 'CylinderBarStacked' | 'CylinderBarStacked100' | 'CylinderCol' | 'ConeColClustered' | 'ConeColStacked' | 'ConeColStacked100' | 'ConeBarClustered' | 'ConeBarStacked' | 'ConeBarStacked100' | 'ConeCol' | 'PyramidColClustered' | 'PyramidColStacked' | 'PyramidColStacked100' | 'PyramidBarClustered' | 'PyramidBarStacked' | 'PyramidBarStacked100' | 'PyramidCol' | '3DColumn' | 'Line' | '3DLine' | '3DPie' | 'Pie' | 'Xyscatter' | '3DArea' | 'Area' | 'Doughnut' | 'Radar' | 'Histogram' | 'Boxwhisker' | 'Pareto' | 'RegionMap' | 'Treemap' | 'Waterfall' | 'Sunburst' | 'Funnel'    \\n\\n/**\\n* Represents the data labels on the chart.\\n*/\\nreadonly dataLabels: ChartDataLabels    \\n\\n/**\\n* Specifies the way that blank cells are plotted on a chart.\\n*/\\ndisplayBlanksAs: ChartDisplayBlanksAs | 'NotPlotted' | 'Zero' | 'Interplotted'    \\n\\n/**\\n* Encapsulates the format properties for the chart area.\\n*/\\nreadonly format: ChartAreaFormat    \\n\\n/**\\n* Specifies the height, in points, of the chart object.\\n*/\\nheight: number    \\n\\n/**\\n* The unique ID of chart.\\n*/\\nreadonly id: string    \\n\\n/**\\n* The distance, in points, from the left side of the chart to the worksheet origin.\\n*/\\nleft: number    \\n\\n/**\\n* Represents the legend for the chart.\\n*/\\nreadonly legend: ChartLegend    \\n\\n/**\\n* Specifies the name of a chart object.\\n*/\\nname: string    \\n\\n/**\\n* Encapsulates the options for a pivot chart.\\n*/\\nreadonly pivotOptions: ChartPivotOptions    \\n\\n/**\\n* Represents the plot area for the chart.\\n*/\\nreadonly plotArea: ChartPlotArea    \\n\\n/**\\n* Specifies the way columns or rows are used as data series on the chart.\\n*/\\nplotBy: ChartPlotBy | 'Rows' | 'Columns'    \\n\\n/**\\n* True if only visible cells are plotted. False if both visible and hidden cells are plotted.\\n*/\\nplotVisibleOnly: boolean    \\n\\n/**\\n* Represents either a single series or collection of series in the chart.\\n*/\\nreadonly series: ChartSeriesCollection    \\n\\n/**\\n* Specifies a chart series name level enumeration constant, referring to the level of the source series names.\\n*/\\nseriesNameLevel: number    \\n\\n/**\\n* Specifies whether to display all field buttons on a PivotChart.\\n*/\\nshowAllFieldButtons: boolean    \\n\\n/**\\n* Specifies whether to show the data labels when the value is greater than the maximum value on the value axis.\\n* If the value axis becomes smaller than the size of the data points, you can use this property to set whether to show the data labels.\\n* This property applies to 2-D charts only.\\n*/\\nshowDataLabelsOverMaximum: boolean    \\n\\n/**\\n* Specifies the chart style for the chart.\\n*/\\nstyle: number    \\n\\n/**\\n* Represents the title of the specified chart, including the text, visibility, position, and formatting of the title.\\n*/\\nreadonly title: ChartTitle    \\n\\n/**\\n* Specifies the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).\\n*/\\ntop: number    \\n\\n/**\\n* Specifies the width, in points, of the chart object.\\n*/\\nwidth: number    \\n\\n/**\\n* The worksheet containing the current chart.\\n*/\\nreadonly worksheet: Worksheet\\n\\n    /**\\n* Activates the chart in the Excel UI.\\n*/\\nactivate(): void    \\n\\n/**\\n* Deletes the chart object.\\n*/\\ndelete(): void    \\n\\n/**\\n* Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.\\n* The aspect ratio is preserved as part of the resizing.\\n* @param height Optional. The desired height of the resulting image.\\n* @param width Optional. The desired width of the resulting image.\\n* @param fittingMode Optional. The method used to scale the chart to the specified dimensions (if both height and width are set).\\n*/\\ngetImage(width?:number, height?:number, fittingMode?:ImageFittingMode | 'Fit' | 'FitAndCenter' | 'Fill'): ClientResult<string>    \\n\\n/**\\n* Resets the source data for the chart.\\n* @param sourceData The range object corresponding to the source data.\\n* @param seriesBy Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto (default), Rows, and Columns. See `Excel.ChartSeriesBy` for details.\\n*/\\nsetData(sourceData:Range, seriesBy?:ChartSeriesBy | 'Auto' | 'Columns' | 'Rows'): void    \\n\\n/**\\n* Positions the chart relative to cells on the worksheet.\\n* @param startCell The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.\\n* @param endCell Optional. The end cell. If specified, the chart's width and height will be set to fully cover up this cell/range.\\n*/\\nsetPosition(startCell:Range|string, endCell?:Range|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the options for the pivot chart.\\n*/\\ninterface ChartPivotOptions {\\n\\n    /**\\n* Specifies whether to display the axis field buttons on a PivotChart. The `showAxisFieldButtons` property corresponds to the \\\"Show Axis Field Buttons\\\" command on the \\\"Field Buttons\\\" drop-down list of the \\\"Analyze\\\" tab, which is available when a PivotChart is selected.\\n*/\\nshowAxisFieldButtons: boolean    \\n\\n/**\\n* Specifies whether to display the legend field buttons on a PivotChart.\\n*/\\nshowLegendFieldButtons: boolean    \\n\\n/**\\n* Specifies whether to display the report filter field buttons on a PivotChart.\\n*/\\nshowReportFilterFieldButtons: boolean    \\n\\n/**\\n* Specifies whether to display the show value field buttons on a PivotChart.\\n*/\\nshowValueFieldButtons: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for the overall chart area.\\n*/\\ninterface ChartAreaFormat {\\n\\n    /**\\n* Represents the border format of chart area, which includes color, linestyle, and weight.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Specifies the color scheme of the chart.\\n*/\\ncolorScheme: ChartColorScheme | 'ColorfulPalette1' | 'ColorfulPalette2' | 'ColorfulPalette3' | 'ColorfulPalette4' | 'MonochromaticPalette1' | 'MonochromaticPalette2' | 'MonochromaticPalette3' | 'MonochromaticPalette4' | 'MonochromaticPalette5' | 'MonochromaticPalette6' | 'MonochromaticPalette7' | 'MonochromaticPalette8' | 'MonochromaticPalette9' | 'MonochromaticPalette10' | 'MonochromaticPalette11' | 'MonochromaticPalette12' | 'MonochromaticPalette13'    \\n\\n/**\\n* Represents the fill format of an object, which includes background formatting information.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Represents the font attributes (font name, font size, color, etc.) for the current object.\\n*/\\nreadonly font: ChartFont    \\n\\n/**\\n* Specifies if the chart area of the chart has rounded corners.\\n*/\\nroundedCorners: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of chart series.\\n*/\\ninterface ChartSeriesCollection {\\n\\n    /**\\n* Returns the number of series in the collection.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Add a new series to the collection. The new added series is not visible until values, x-axis values, or bubble sizes for it are set (depending on chart type).\\n* @param name Optional. Name of the series.\\n* @param index Optional. Index value of the series to be added. Zero-indexed.\\n*/\\nadd(name?:string, index?:number): ChartSeries    \\n\\n/**\\n* Returns the number of series in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Retrieves a series based on its position in the collection.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): ChartSeries\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: ChartSeries[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a series in a chart.\\n*/\\ninterface ChartSeries {\\n\\n    /**\\n* Specifies the group for the specified series.\\n*/\\naxisGroup: ChartAxisGroup | 'Primary' | 'Secondary'    \\n\\n/**\\n* Encapsulates the bin options for histogram charts and pareto charts.\\n*/\\nreadonly binOptions: ChartBinOptions    \\n\\n/**\\n* Encapsulates the options for the box and whisker charts.\\n*/\\nreadonly boxwhiskerOptions: ChartBoxwhiskerOptions    \\n\\n/**\\n* This can be an integer value from 0 (zero) to 300, representing the percentage of the default size. This property only applies to bubble charts.\\n*/\\nbubbleScale: number    \\n\\n/**\\n* Represents the chart type of a series. See `Excel.ChartType` for details.\\n*/\\nchartType: ChartType | 'Invalid' | 'ColumnClustered' | 'ColumnStacked' | 'ColumnStacked100' | '3DColumnClustered' | '3DColumnStacked' | '3DColumnStacked100' | 'BarClustered' | 'BarStacked' | 'BarStacked100' | '3DBarClustered' | '3DBarStacked' | '3DBarStacked100' | 'LineStacked' | 'LineStacked100' | 'LineMarkers' | 'LineMarkersStacked' | 'LineMarkersStacked100' | 'PieOfPie' | 'PieExploded' | '3DPieExploded' | 'BarOfPie' | 'XyscatterSmooth' | 'XyscatterSmoothNoMarkers' | 'XyscatterLines' | 'XyscatterLinesNoMarkers' | 'AreaStacked' | 'AreaStacked100' | '3DAreaStacked' | '3DAreaStacked100' | 'DoughnutExploded' | 'RadarMarkers' | 'RadarFilled' | 'Surface' | 'SurfaceWireframe' | 'SurfaceTopView' | 'SurfaceTopViewWireframe' | 'Bubble' | 'Bubble3DEffect' | 'StockHLC' | 'StockOHLC' | 'StockVHLC' | 'StockVOHLC' | 'CylinderColClustered' | 'CylinderColStacked' | 'CylinderColStacked100' | 'CylinderBarClustered' | 'CylinderBarStacked' | 'CylinderBarStacked100' | 'CylinderCol' | 'ConeColClustered' | 'ConeColStacked' | 'ConeColStacked100' | 'ConeBarClustered' | 'ConeBarStacked' | 'ConeBarStacked100' | 'ConeCol' | 'PyramidColClustered' | 'PyramidColStacked' | 'PyramidColStacked100' | 'PyramidBarClustered' | 'PyramidBarStacked' | 'PyramidBarStacked100' | 'PyramidCol' | '3DColumn' | 'Line' | '3DLine' | '3DPie' | 'Pie' | 'Xyscatter' | '3DArea' | 'Area' | 'Doughnut' | 'Radar' | 'Histogram' | 'Boxwhisker' | 'Pareto' | 'RegionMap' | 'Treemap' | 'Waterfall' | 'Sunburst' | 'Funnel'    \\n\\n/**\\n* Represents a collection of all data labels in the series.\\n*/\\nreadonly dataLabels: ChartDataLabels    \\n\\n/**\\n* Represents the doughnut hole size of a chart series. Only valid on doughnut and doughnut exploded charts.\\n* Throws an `InvalidArgument` error on invalid charts.\\n*/\\ndoughnutHoleSize: number    \\n\\n/**\\n* Specifies the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).\\n*/\\nexplosion: number    \\n\\n/**\\n* Specifies if the series is filtered. Not applicable for surface charts.\\n*/\\nfiltered: boolean    \\n\\n/**\\n* Specifies the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts. Can be a value from 0 through 360.\\n*/\\nfirstSliceAngle: number    \\n\\n/**\\n* Represents the formatting of a chart series, which includes fill and line formatting.\\n*/\\nreadonly format: ChartSeriesFormat    \\n\\n/**\\n* Represents the gap width of a chart series. Only valid on bar and column charts, as well as\\n* specific classes of line and pie charts. Throws an invalid argument exception on invalid charts.\\n*/\\ngapWidth: number    \\n\\n/**\\n* Specifies the color for maximum value of a region map chart series.\\n*/\\ngradientMaximumColor: string    \\n\\n/**\\n* Specifies the type for maximum value of a region map chart series.\\n*/\\ngradientMaximumType: ChartGradientStyleType | 'ExtremeValue' | 'Number' | 'Percent'    \\n\\n/**\\n* Specifies the maximum value of a region map chart series.\\n*/\\ngradientMaximumValue: number    \\n\\n/**\\n* Specifies the color for the midpoint value of a region map chart series.\\n*/\\ngradientMidpointColor: string    \\n\\n/**\\n* Specifies the type for the midpoint value of a region map chart series.\\n*/\\ngradientMidpointType: ChartGradientStyleType | 'ExtremeValue' | 'Number' | 'Percent'    \\n\\n/**\\n* Specifies the midpoint value of a region map chart series.\\n*/\\ngradientMidpointValue: number    \\n\\n/**\\n* Specifies the color for the minimum value of a region map chart series.\\n*/\\ngradientMinimumColor: string    \\n\\n/**\\n* Specifies the type for the minimum value of a region map chart series.\\n*/\\ngradientMinimumType: ChartGradientStyleType | 'ExtremeValue' | 'Number' | 'Percent'    \\n\\n/**\\n* Specifies the minimum value of a region map chart series.\\n*/\\ngradientMinimumValue: number    \\n\\n/**\\n* Specifies the series gradient style of a region map chart.\\n*/\\ngradientStyle: ChartGradientStyle | 'TwoPhaseColor' | 'ThreePhaseColor'    \\n\\n/**\\n* Specifies if the series has data labels.\\n*/\\nhasDataLabels: boolean    \\n\\n/**\\n* Specifies the fill color for negative data points in a series.\\n*/\\ninvertColor: string    \\n\\n/**\\n* True if Excel inverts the pattern in the item when it corresponds to a negative number.\\n*/\\ninvertIfNegative: boolean    \\n\\n/**\\n* Encapsulates the options for a region map chart.\\n*/\\nreadonly mapOptions: ChartMapOptions    \\n\\n/**\\n* Specifies the marker background color of a chart series.\\n*/\\nmarkerBackgroundColor: string    \\n\\n/**\\n* Specifies the marker foreground color of a chart series.\\n*/\\nmarkerForegroundColor: string    \\n\\n/**\\n* Specifies the marker size of a chart series.\\n*/\\nmarkerSize: number    \\n\\n/**\\n* Specifies the marker style of a chart series. See `Excel.ChartMarkerStyle` for details.\\n*/\\nmarkerStyle: ChartMarkerStyle | 'Invalid' | 'Automatic' | 'None' | 'Square' | 'Diamond' | 'Triangle' | 'X' | 'Star' | 'Dot' | 'Dash' | 'Circle' | 'Plus' | 'Picture'    \\n\\n/**\\n* Specifies the name of a series in a chart. The name's length should not be greater than 255 characters.\\n*/\\nname: string    \\n\\n/**\\n* Specifies how bars and columns are positioned. Can be a value between \u2013100 and 100. Applies only to 2-D bar and 2-D column charts.\\n*/\\noverlap: number    \\n\\n/**\\n* Specifies the series parent label strategy area for a treemap chart.\\n*/\\nparentLabelStrategy: ChartParentLabelStrategy | 'None' | 'Banner' | 'Overlapping'    \\n\\n/**\\n* Specifies the plot order of a chart series within the chart group.\\n*/\\nplotOrder: number    \\n\\n/**\\n* Returns a collection of all points in the series.\\n*/\\nreadonly points: ChartPointsCollection    \\n\\n/**\\n* Specifies the size of the secondary section of either a pie-of-pie chart or a bar-of-pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.\\n*/\\nsecondPlotSize: number    \\n\\n/**\\n* Specifies whether connector lines are shown in waterfall charts.\\n*/\\nshowConnectorLines: boolean    \\n\\n/**\\n* Specifies whether leader lines are displayed for each data label in the series.\\n*/\\nshowLeaderLines: boolean    \\n\\n/**\\n* Specifies if the series has a shadow.\\n*/\\nshowShadow: boolean    \\n\\n/**\\n* Specifies if the series is smooth. Only applicable to line and scatter charts.\\n*/\\nsmooth: boolean    \\n\\n/**\\n* Specifies the way the two sections of either a pie-of-pie chart or a bar-of-pie chart are split.\\n*/\\nsplitType: ChartSplitType | 'SplitByPosition' | 'SplitByValue' | 'SplitByPercentValue' | 'SplitByCustomSplit'    \\n\\n/**\\n* Specifies the threshold value that separates two sections of either a pie-of-pie chart or a bar-of-pie chart.\\n*/\\nsplitValue: number    \\n\\n/**\\n* The collection of trendlines in the series.\\n*/\\nreadonly trendlines: ChartTrendlineCollection    \\n\\n/**\\n* True if Excel assigns a different color or pattern to each data marker. The chart must contain only one series.\\n*/\\nvaryByCategories: boolean    \\n\\n/**\\n* Represents the error bar object of a chart series.\\n*/\\nreadonly xErrorBars: ChartErrorBars    \\n\\n/**\\n* Represents the error bar object of a chart series.\\n*/\\nreadonly yErrorBars: ChartErrorBars\\n\\n    /**\\n* Deletes the chart series.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the values from a single dimension of the chart series. These could be either category values or data values, depending on the dimension specified and how the data is mapped for the chart series.\\n* @param dimension The dimension of the axis where the data is from.\\n*/\\ngetDimensionValues(dimension:ChartSeriesDimension | 'Categories' | 'Values' | 'Xvalues' | 'Yvalues' | 'BubbleSizes'): ClientResult<string[]>    \\n\\n/**\\n* Sets the bubble sizes for a chart series. Only works for bubble charts.\\n* @param sourceData The `Range` object corresponding to the source data.\\n*/\\nsetBubbleSizes(sourceData:Range): void    \\n\\n/**\\n* Sets the values for a chart series. For scatter charts, it refers to y-axis values.\\n* @param sourceData The `Range` object corresponding to the source data.\\n*/\\nsetValues(sourceData:Range): void    \\n\\n/**\\n* Sets the values of the x-axis for a chart series. Only works for scatter charts.\\n* @param sourceData The `Range` object corresponding to the source data.\\n*/\\nsetXAxisValues(sourceData:Range): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for the chart series\\n*/\\ninterface ChartSeriesFormat {\\n\\n    /**\\n* Represents the fill format of a chart series, which includes background formatting information.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Represents line formatting.\\n*/\\nreadonly line: ChartLineFormat\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A collection of all the chart points within a series inside a chart.\\n*/\\ninterface ChartPointsCollection {\\n\\n    /**\\n* Returns the number of chart points in the series.\\n*/\\nreadonly count: number\\n\\n    /**\\n* Returns the number of chart points in the series.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Retrieve a point based on its position within the series.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): ChartPoint\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: ChartPoint[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a point of a series in a chart.\\n*/\\ninterface ChartPoint {\\n\\n    /**\\n* Returns the data label of a chart point.\\n*/\\nreadonly dataLabel: ChartDataLabel    \\n\\n/**\\n* Encapsulates the format properties chart point.\\n*/\\nreadonly format: ChartPointFormat    \\n\\n/**\\n* Represents whether a data point has a data label. Not applicable for surface charts.\\n*/\\nhasDataLabel: boolean    \\n\\n/**\\n* HTML color code representation of the marker background color of a data point (e.g., #FF0000 represents Red).\\n*/\\nmarkerBackgroundColor: string    \\n\\n/**\\n* HTML color code representation of the marker foreground color of a data point (e.g., #FF0000 represents Red).\\n*/\\nmarkerForegroundColor: string    \\n\\n/**\\n* Represents marker size of a data point.\\n*/\\nmarkerSize: number    \\n\\n/**\\n* Represents marker style of a chart data point. See `Excel.ChartMarkerStyle` for details.\\n*/\\nmarkerStyle: ChartMarkerStyle | 'Invalid' | 'Automatic' | 'None' | 'Square' | 'Diamond' | 'Triangle' | 'X' | 'Star' | 'Dot' | 'Dash' | 'Circle' | 'Plus' | 'Picture'    \\n\\n/**\\n* Returns the value of a chart point.\\n*/\\nreadonly value: any\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the formatting object for chart points.\\n*/\\ninterface ChartPointFormat {\\n\\n    /**\\n* Represents the border format of a chart data point, which includes color, style, and weight information.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Represents the fill format of a chart, which includes background formatting information.\\n*/\\nreadonly fill: ChartFill\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the chart axes.\\n*/\\ninterface ChartAxes {\\n\\n    /**\\n* Represents the category axis in a chart.\\n*/\\nreadonly categoryAxis: ChartAxis    \\n\\n/**\\n* Represents the series axis of a 3-D chart.\\n*/\\nreadonly seriesAxis: ChartAxis    \\n\\n/**\\n* Represents the value axis in an axis.\\n*/\\nreadonly valueAxis: ChartAxis\\n\\n    /**\\n* Returns the specific axis identified by type and group.\\n* @param type Specifies the axis type. See `Excel.ChartAxisType` for details.\\n* @param group Optional. Specifies the axis group. See `Excel.ChartAxisGroup` for details.\\n*/\\ngetItem(type:ChartAxisType | 'Invalid' | 'Category' | 'Value' | 'Series', group?:ChartAxisGroup | 'Primary' | 'Secondary'): ChartAxis\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a single axis in a chart.\\n*/\\ninterface ChartAxis {\\n\\n    /**\\n* Specifies the alignment for the specified axis tick label. See `Excel.ChartTextHorizontalAlignment` for detail.\\n*/\\nalignment: ChartTickLabelAlignment | 'Center' | 'Left' | 'Right'    \\n\\n/**\\n* Specifies the group for the specified axis. See `Excel.ChartAxisGroup` for details.\\n*/\\nreadonly axisGroup: ChartAxisGroup | 'Primary' | 'Secondary'    \\n\\n/**\\n* Specifies the base unit for the specified category axis.\\n*/\\nbaseTimeUnit: ChartAxisTimeUnit | 'Days' | 'Months' | 'Years'    \\n\\n/**\\n* Specifies the category axis type.\\n*/\\ncategoryType: ChartAxisCategoryType | 'Automatic' | 'TextAxis' | 'DateAxis'    \\n\\n/**\\n* Specifies the custom axis display unit value. To set this property, please use the `SetCustomDisplayUnit(double)` method.\\n*/\\nreadonly customDisplayUnit: number    \\n\\n/**\\n* Represents the axis display unit. See `Excel.ChartAxisDisplayUnit` for details.\\n*/\\ndisplayUnit: ChartAxisDisplayUnit | 'None' | 'Hundreds' | 'Thousands' | 'TenThousands' | 'HundredThousands' | 'Millions' | 'TenMillions' | 'HundredMillions' | 'Billions' | 'Trillions' | 'Custom'    \\n\\n/**\\n* Represents the formatting of a chart object, which includes line and font formatting.\\n*/\\nreadonly format: ChartAxisFormat    \\n\\n/**\\n* Specifies the height, in points, of the chart axis. Returns `null` if the axis is not visible.\\n*/\\nreadonly height: number    \\n\\n/**\\n* Specifies if the value axis crosses the category axis between categories.\\n*/\\nisBetweenCategories: boolean    \\n\\n/**\\n* Specifies the distance, in points, from the left edge of the axis to the left of chart area. Returns `null` if the axis is not visible.\\n*/\\nreadonly left: number    \\n\\n/**\\n* Specifies if the number format is linked to the cells. If `true`, the number format will change in the labels when it changes in the cells.\\n*/\\nlinkNumberFormat: boolean    \\n\\n/**\\n* Specifies the base of the logarithm when using logarithmic scales.\\n*/\\nlogBase: number    \\n\\n/**\\n* Returns an object that represents the major gridlines for the specified axis.\\n*/\\nreadonly majorGridlines: ChartGridlines    \\n\\n/**\\n* Specifies the type of major tick mark for the specified axis. See `Excel.ChartAxisTickMark` for details.\\n*/\\nmajorTickMark: ChartAxisTickMark | 'None' | 'Cross' | 'Inside' | 'Outside'    \\n\\n/**\\n* Specifies the major unit scale value for the category axis when the `categoryType` property is set to `dateAxis`.\\n*/\\nmajorTimeUnitScale: ChartAxisTimeUnit | 'Days' | 'Months' | 'Years'    \\n\\n/**\\n* Represents the interval between two major tick marks. Can be set to a numeric value or an empty string. The returned value is always a number.\\n*/\\nmajorUnit: any    \\n\\n/**\\n* Represents the maximum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\\n*/\\nmaximum: any    \\n\\n/**\\n* Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\\n*/\\nminimum: any    \\n\\n/**\\n* Returns an object that represents the minor gridlines for the specified axis.\\n*/\\nreadonly minorGridlines: ChartGridlines    \\n\\n/**\\n* Specifies the type of minor tick mark for the specified axis. See `Excel.ChartAxisTickMark` for details.\\n*/\\nminorTickMark: ChartAxisTickMark | 'None' | 'Cross' | 'Inside' | 'Outside'    \\n\\n/**\\n* Specifies the minor unit scale value for the category axis when the `categoryType` property is set to `dateAxis`.\\n*/\\nminorTimeUnitScale: ChartAxisTimeUnit | 'Days' | 'Months' | 'Years'    \\n\\n/**\\n* Represents the interval between two minor tick marks. Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.\\n*/\\nminorUnit: any    \\n\\n/**\\n* Specifies if an axis is multilevel.\\n*/\\nmultiLevel: boolean    \\n\\n/**\\n* Specifies the format code for the axis tick label.\\n*/\\nnumberFormat: string    \\n\\n/**\\n* Specifies the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.\\n*/\\noffset: number    \\n\\n/**\\n* Specifies the specified axis position where the other axis crosses. See `Excel.ChartAxisPosition` for details.\\n*/\\nposition: ChartAxisPosition | 'Automatic' | 'Maximum' | 'Minimum' | 'Custom'    \\n\\n/**\\n* Specifies the axis position where the other axis crosses. You should use the `SetPositionAt(double)` method to set this property.\\n*/\\nreadonly positionAt: number    \\n\\n/**\\n* Specifies if Excel plots data points from last to first.\\n*/\\nreversePlotOrder: boolean    \\n\\n/**\\n* Specifies the value axis scale type. See `Excel.ChartAxisScaleType` for details.\\n*/\\nscaleType: ChartAxisScaleType | 'Linear' | 'Logarithmic'    \\n\\n/**\\n* Specifies if the axis display unit label is visible.\\n*/\\nshowDisplayUnitLabel: boolean    \\n\\n/**\\n* Specifies the angle to which the text is oriented for the chart axis tick label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n*/\\ntextOrientation: any    \\n\\n/**\\n* Specifies the position of tick-mark labels on the specified axis. See `Excel.ChartAxisTickLabelPosition` for details.\\n*/\\ntickLabelPosition: ChartAxisTickLabelPosition | 'NextToAxis' | 'High' | 'Low' | 'None'    \\n\\n/**\\n* Specifies the number of categories or series between tick-mark labels. Can be a value from 1 through 31999 or an empty string for automatic setting. The returned value is always a number.\\n*/\\ntickLabelSpacing: any    \\n\\n/**\\n* Specifies the number of categories or series between tick marks.\\n*/\\ntickMarkSpacing: number    \\n\\n/**\\n* Represents the axis title.\\n*/\\nreadonly title: ChartAxisTitle    \\n\\n/**\\n* Specifies the distance, in points, from the top edge of the axis to the top of chart area. Returns `null` if the axis is not visible.\\n*/\\nreadonly top: number    \\n\\n/**\\n* Specifies the axis type. See `Excel.ChartAxisType` for details.\\n*/\\nreadonly type: ChartAxisType | 'Invalid' | 'Category' | 'Value' | 'Series'    \\n\\n/**\\n* Specifies if the axis is visible.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Specifies the width, in points, of the chart axis. Returns `null` if the axis is not visible.\\n*/\\nreadonly width: number\\n\\n    /**\\n* Sets all the category names for the specified axis.\\n* @param sourceData The `Range` object corresponding to the source data.\\n*/\\nsetCategoryNames(sourceData:Range): void    \\n\\n/**\\n* Sets the axis display unit to a custom value.\\n* @param value Custom value of the display unit.\\n*/\\nsetCustomDisplayUnit(value:number): void    \\n\\n/**\\n* Sets the specified axis position where the other axis crosses.\\n* @param value Custom value of the crossing point.\\n*/\\nsetPositionAt(value:number): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for the chart axis.\\n*/\\ninterface ChartAxisFormat {\\n\\n    /**\\n* Specifies chart fill formatting.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Specifies the font attributes (font name, font size, color, etc.) for a chart axis element.\\n*/\\nreadonly font: ChartFont    \\n\\n/**\\n* Specifies chart line formatting.\\n*/\\nreadonly line: ChartLineFormat\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the title of a chart axis.\\n*/\\ninterface ChartAxisTitle {\\n\\n    /**\\n* Specifies the formatting of the chart axis title.\\n*/\\nreadonly format: ChartAxisTitleFormat    \\n\\n/**\\n* Specifies the axis title.\\n*/\\ntext: string    \\n\\n/**\\n* Specifies the angle to which the text is oriented for the chart axis title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Specifies if the axis title is visibile.\\n*/\\nvisible: boolean\\n\\n    /**\\n* A string value that represents the formula of chart axis title using A1-style notation.\\n* @param formula A string that represents the formula to set.\\n*/\\nsetFormula(formula:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the chart axis title formatting.\\n*/\\ninterface ChartAxisTitleFormat {\\n\\n    /**\\n* Specifies the chart axis title's border format, which includes color, linestyle, and weight.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Specifies the chart axis title's fill formatting.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Specifies the chart axis title's font attributes, such as font name, font size, or color, of the chart axis title object.\\n*/\\nreadonly font: ChartFont\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the data labels on a chart point.\\n*/\\ninterface ChartDataLabels {\\n\\n    /**\\n* Specifies if data labels automatically generate appropriate text based on context.\\n*/\\nautoText: boolean    \\n\\n/**\\n* Specifies the format of chart data labels, which includes fill and font formatting.\\n*/\\nreadonly format: ChartDataLabelFormat    \\n\\n/**\\n* Specifies the horizontal alignment for chart data label. See `Excel.ChartTextHorizontalAlignment` for details.\\n* This property is valid only when the `TextOrientation` of data label is 0.\\n*/\\nhorizontalAlignment: ChartTextHorizontalAlignment | 'Center' | 'Left' | 'Right' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Specifies if the number format is linked to the cells. If `true`, the number format will change in the labels when it changes in the cells.\\n*/\\nlinkNumberFormat: boolean    \\n\\n/**\\n* Specifies the format code for data labels.\\n*/\\nnumberFormat: string    \\n\\n/**\\n* Value that represents the position of the data label. See `Excel.ChartDataLabelPosition` for details.\\n*/\\nposition: ChartDataLabelPosition | 'Invalid' | 'None' | 'Center' | 'InsideEnd' | 'InsideBase' | 'OutsideEnd' | 'Left' | 'Right' | 'Top' | 'Bottom' | 'BestFit' | 'Callout'    \\n\\n/**\\n* String representing the separator used for the data labels on a chart.\\n*/\\nseparator: string    \\n\\n/**\\n* Specifies if the data label bubble size is visible.\\n*/\\nshowBubbleSize: boolean    \\n\\n/**\\n* Specifies if the data label category name is visible.\\n*/\\nshowCategoryName: boolean    \\n\\n/**\\n* Specifies if the data label legend key is visible.\\n*/\\nshowLegendKey: boolean    \\n\\n/**\\n* Specifies if the data label percentage is visible.\\n*/\\nshowPercentage: boolean    \\n\\n/**\\n* Specifies if the data label series name is visible.\\n*/\\nshowSeriesName: boolean    \\n\\n/**\\n* Specifies if the data label value is visible.\\n*/\\nshowValue: boolean    \\n\\n/**\\n* Represents the angle to which the text is oriented for data labels. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Represents the vertical alignment of chart data label. See `Excel.ChartTextVerticalAlignment` for details.\\n* This property is valid only when `TextOrientation` of the data label is -90, 90, or 180.\\n*/\\nverticalAlignment: ChartTextVerticalAlignment | 'Center' | 'Bottom' | 'Top' | 'Justify' | 'Distributed'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the data label of a chart point.\\n*/\\ninterface ChartDataLabel {\\n\\n    /**\\n* Specifies if the data label automatically generates appropriate text based on context.\\n*/\\nautoText: boolean    \\n\\n/**\\n* Represents the format of chart data label.\\n*/\\nreadonly format: ChartDataLabelFormat    \\n\\n/**\\n* String value that represents the formula of chart data label using A1-style notation.\\n*/\\nformula: string    \\n\\n/**\\n* Returns the height, in points, of the chart data label. Value is `null` if the chart data label is not visible.\\n*/\\nreadonly height: number    \\n\\n/**\\n* Represents the horizontal alignment for chart data label. See `Excel.ChartTextHorizontalAlignment` for details.\\n* This property is valid only when `TextOrientation` of data label is -90, 90, or 180.\\n*/\\nhorizontalAlignment: ChartTextHorizontalAlignment | 'Center' | 'Left' | 'Right' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Represents the distance, in points, from the left edge of chart data label to the left edge of chart area. Value is `null` if the chart data label is not visible.\\n*/\\nleft: number    \\n\\n/**\\n* Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\\n*/\\nlinkNumberFormat: boolean    \\n\\n/**\\n* String value that represents the format code for data label.\\n*/\\nnumberFormat: string    \\n\\n/**\\n* Value that represents the position of the data label. See `Excel.ChartDataLabelPosition` for details.\\n*/\\nposition: ChartDataLabelPosition | 'Invalid' | 'None' | 'Center' | 'InsideEnd' | 'InsideBase' | 'OutsideEnd' | 'Left' | 'Right' | 'Top' | 'Bottom' | 'BestFit' | 'Callout'    \\n\\n/**\\n* String representing the separator used for the data label on a chart.\\n*/\\nseparator: string    \\n\\n/**\\n* Specifies if the data label bubble size is visible.\\n*/\\nshowBubbleSize: boolean    \\n\\n/**\\n* Specifies if the data label category name is visible.\\n*/\\nshowCategoryName: boolean    \\n\\n/**\\n* Specifies if the data label legend key is visible.\\n*/\\nshowLegendKey: boolean    \\n\\n/**\\n* Specifies if the data label percentage is visible.\\n*/\\nshowPercentage: boolean    \\n\\n/**\\n* Specifies if the data label series name is visible.\\n*/\\nshowSeriesName: boolean    \\n\\n/**\\n* Specifies if the data label value is visible.\\n*/\\nshowValue: boolean    \\n\\n/**\\n* String representing the text of the data label on a chart.\\n*/\\ntext: string    \\n\\n/**\\n* Represents the angle to which the text is oriented for the chart data label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Represents the distance, in points, from the top edge of chart data label to the top of chart area. Value is `null` if the chart data label is not visible.\\n*/\\ntop: number    \\n\\n/**\\n* Represents the vertical alignment of chart data label. See `Excel.ChartTextVerticalAlignment` for details.\\n* This property is valid only when `TextOrientation` of data label is 0.\\n*/\\nverticalAlignment: ChartTextVerticalAlignment | 'Center' | 'Bottom' | 'Top' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Returns the width, in points, of the chart data label. Value is `null` if the chart data label is not visible.\\n*/\\nreadonly width: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for the chart data labels.\\n*/\\ninterface ChartDataLabelFormat {\\n\\n    /**\\n* Represents the border format, which includes color, linestyle, and weight.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Represents the fill format of the current chart data label.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Represents the font attributes (such as font name, font size, and color) for a chart data label.\\n*/\\nreadonly font: ChartFont\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the attributes for a chart's error bars.\\n*/\\ninterface ChartErrorBars {\\n\\n    /**\\n* Specifies if error bars have an end style cap.\\n*/\\nendStyleCap: boolean    \\n\\n/**\\n* Specifies the formatting type of the error bars.\\n*/\\nreadonly format: ChartErrorBarsFormat    \\n\\n/**\\n* Specifies which parts of the error bars to include.\\n*/\\ninclude: ChartErrorBarsInclude | 'Both' | 'MinusValues' | 'PlusValues'    \\n\\n/**\\n* The type of range marked by the error bars.\\n*/\\ntype: ChartErrorBarsType | 'FixedValue' | 'Percent' | 'StDev' | 'StError' | 'Custom'    \\n\\n/**\\n* Specifies whether the error bars are displayed.\\n*/\\nvisible: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for chart error bars.\\n*/\\ninterface ChartErrorBarsFormat {\\n\\n    /**\\n* Represents the chart line formatting.\\n*/\\nreadonly line: ChartLineFormat\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents major or minor gridlines on a chart axis.\\n*/\\ninterface ChartGridlines {\\n\\n    /**\\n* Represents the formatting of chart gridlines.\\n*/\\nreadonly format: ChartGridlinesFormat    \\n\\n/**\\n* Specifies if the axis gridlines are visible.\\n*/\\nvisible: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for chart gridlines.\\n*/\\ninterface ChartGridlinesFormat {\\n\\n    /**\\n* Represents chart line formatting.\\n*/\\nreadonly line: ChartLineFormat\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the legend in a chart.\\n*/\\ninterface ChartLegend {\\n\\n    /**\\n* Represents the formatting of a chart legend, which includes fill and font formatting.\\n*/\\nreadonly format: ChartLegendFormat    \\n\\n/**\\n* Specifies the height, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n*/\\nheight: number    \\n\\n/**\\n* Specifies the left value, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n*/\\nleft: number    \\n\\n/**\\n* Represents a collection of legendEntries in the legend.\\n*/\\nreadonly legendEntries: ChartLegendEntryCollection    \\n\\n/**\\n* Specifies if the chart legend should overlap with the main body of the chart.\\n*/\\noverlay: boolean    \\n\\n/**\\n* Specifies the position of the legend on the chart. See `Excel.ChartLegendPosition` for details.\\n*/\\nposition: ChartLegendPosition | 'Invalid' | 'Top' | 'Bottom' | 'Left' | 'Right' | 'Corner' | 'Custom'    \\n\\n/**\\n* Specifies if the legend has a shadow on the chart.\\n*/\\nshowShadow: boolean    \\n\\n/**\\n* Specifies the top of a chart legend.\\n*/\\ntop: number    \\n\\n/**\\n* Specifies if the chart legend is visible.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Specifies the width, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n*/\\nwidth: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the legend entry in `legendEntryCollection`.\\n*/\\ninterface ChartLegendEntry {\\n\\n    /**\\n* Specifies the height of the legend entry on the chart legend.\\n*/\\nreadonly height: number    \\n\\n/**\\n* Specifies the index of the legend entry in the chart legend.\\n*/\\nreadonly index: number    \\n\\n/**\\n* Specifies the left value of a chart legend entry.\\n*/\\nreadonly left: number    \\n\\n/**\\n* Specifies the top of a chart legend entry.\\n*/\\nreadonly top: number    \\n\\n/**\\n* Represents the visibility of a chart legend entry.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Represents the width of the legend entry on the chart Legend.\\n*/\\nreadonly width: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of legend entries.\\n*/\\ninterface ChartLegendEntryCollection {\\n\\n    \\n\\n    /**\\n* Returns the number of legend entries in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Returns a legend entry at the given index.\\n* @param index Index of the legend entry to be retrieved.\\n*/\\ngetItemAt(index:number): ChartLegendEntry\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: ChartLegendEntry[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties of a chart legend.\\n*/\\ninterface ChartLegendFormat {\\n\\n    /**\\n* Represents the border format, which includes color, linestyle, and weight.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Represents the fill format of an object, which includes background formatting information.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Represents the font attributes such as font name, font size, and color of a chart legend.\\n*/\\nreadonly font: ChartFont\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the properties for a region map chart.\\n*/\\ninterface ChartMapOptions {\\n\\n    /**\\n* Specifies the series map labels strategy of a region map chart.\\n*/\\nlabelStrategy: ChartMapLabelStrategy | 'None' | 'BestFit' | 'ShowAll'    \\n\\n/**\\n* Specifies the series mapping level of a region map chart.\\n*/\\nlevel: ChartMapAreaLevel | 'Automatic' | 'DataOnly' | 'City' | 'County' | 'State' | 'Country' | 'Continent' | 'World'    \\n\\n/**\\n* Specifies the series projection type of a region map chart.\\n*/\\nprojectionType: ChartMapProjectionType | 'Automatic' | 'Mercator' | 'Miller' | 'Robinson' | 'Albers'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a chart title object of a chart.\\n*/\\ninterface ChartTitle {\\n\\n    /**\\n* Represents the formatting of a chart title, which includes fill and font formatting.\\n*/\\nreadonly format: ChartTitleFormat    \\n\\n/**\\n* Returns the height, in points, of the chart title. Value is `null` if the chart title is not visible.\\n*/\\nreadonly height: number    \\n\\n/**\\n* Specifies the horizontal alignment for chart title.\\n*/\\nhorizontalAlignment: ChartTextHorizontalAlignment | 'Center' | 'Left' | 'Right' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Specifies the distance, in points, from the left edge of chart title to the left edge of chart area. Value is `null` if the chart title is not visible.\\n*/\\nleft: number    \\n\\n/**\\n* Specifies if the chart title will overlay the chart.\\n*/\\noverlay: boolean    \\n\\n/**\\n* Represents the position of chart title. See `Excel.ChartTitlePosition` for details.\\n*/\\nposition: ChartTitlePosition | 'Automatic' | 'Top' | 'Bottom' | 'Left' | 'Right'    \\n\\n/**\\n* Represents a boolean value that determines if the chart title has a shadow.\\n*/\\nshowShadow: boolean    \\n\\n/**\\n* Specifies the chart's title text.\\n*/\\ntext: string    \\n\\n/**\\n* Specifies the angle to which the text is oriented for the chart title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Specifies the distance, in points, from the top edge of chart title to the top of chart area. Value is `null` if the chart title is not visible.\\n*/\\ntop: number    \\n\\n/**\\n* Specifies the vertical alignment of chart title. See `Excel.ChartTextVerticalAlignment` for details.\\n*/\\nverticalAlignment: ChartTextVerticalAlignment | 'Center' | 'Bottom' | 'Top' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Specifies if the chart title is visibile.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Specifies the width, in points, of the chart title. Value is `null` if the chart title is not visible.\\n*/\\nreadonly width: number\\n\\n    /**\\n* Get the substring of a chart title. Line break '\\\\n' counts one character.\\n* @param start Start position of substring to be retrieved. Zero-indexed.\\n* @param length Length of the substring to be retrieved.\\n*/\\ngetSubstring(start:number, length:number): ChartFormatString    \\n\\n/**\\n* Sets a string value that represents the formula of chart title using A1-style notation.\\n* @param formula A string that represents the formula to set.\\n*/\\nsetFormula(formula:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the substring in chart related objects that contain text, like a `ChartTitle` object or `ChartAxisTitle` object.\\n*/\\ninterface ChartFormatString {\\n\\n    /**\\n* Represents the font attributes, such as font name, font size, and color of a chart characters object.\\n*/\\nreadonly font: ChartFont\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Provides access to the formatting options for a chart title.\\n*/\\ninterface ChartTitleFormat {\\n\\n    /**\\n* Represents the border format of chart title, which includes color, linestyle, and weight.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Represents the fill format of an object, which includes background formatting information.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Represents the font attributes (such as font name, font size, and color) for an object.\\n*/\\nreadonly font: ChartFont\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the fill formatting for a chart element.\\n*/\\ninterface ChartFill {\\n\\n    \\n\\n    /**\\n* Clears the fill color of a chart element.\\n*/\\nclear(): void    \\n\\n/**\\n* Sets the fill formatting of a chart element to a uniform color.\\n* @param color HTML color code representing the color of the background, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\nsetSolidColor(color:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the border formatting of a chart element.\\n*/\\ninterface ChartBorder {\\n\\n    /**\\n* HTML color code representing the color of borders in the chart.\\n*/\\ncolor: string    \\n\\n/**\\n* Represents the line style of the border. See `Excel.ChartLineStyle` for details.\\n*/\\nlineStyle: ChartLineStyle | 'None' | 'Continuous' | 'Dash' | 'DashDot' | 'DashDotDot' | 'Dot' | 'Grey25' | 'Grey50' | 'Grey75' | 'Automatic' | 'RoundDot'    \\n\\n/**\\n* Represents weight of the border, in points.\\n*/\\nweight: number\\n\\n    /**\\n* Clear the border format of a chart element.\\n*/\\nclear(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the bin options for histogram charts and pareto charts.\\n*/\\ninterface ChartBinOptions {\\n\\n    /**\\n* Specifies if bin overflow is enabled in a histogram chart or pareto chart.\\n*/\\nallowOverflow: boolean    \\n\\n/**\\n* Specifies if bin underflow is enabled in a histogram chart or pareto chart.\\n*/\\nallowUnderflow: boolean    \\n\\n/**\\n* Specifies the bin count of a histogram chart or pareto chart.\\n*/\\ncount: number    \\n\\n/**\\n* Specifies the bin overflow value of a histogram chart or pareto chart.\\n*/\\noverflowValue: number    \\n\\n/**\\n* Specifies the bin's type for a histogram chart or pareto chart.\\n*/\\ntype: ChartBinType | 'Category' | 'Auto' | 'BinWidth' | 'BinCount'    \\n\\n/**\\n* Specifies the bin underflow value of a histogram chart or pareto chart.\\n*/\\nunderflowValue: number    \\n\\n/**\\n* Specifies the bin width value of a histogram chart or pareto chart.\\n*/\\nwidth: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the properties of a box and whisker chart.\\n*/\\ninterface ChartBoxwhiskerOptions {\\n\\n    /**\\n* Specifies if the quartile calculation type of a box and whisker chart.\\n*/\\nquartileCalculation: ChartBoxQuartileCalculation | 'Inclusive' | 'Exclusive'    \\n\\n/**\\n* Specifies if inner points are shown in a box and whisker chart.\\n*/\\nshowInnerPoints: boolean    \\n\\n/**\\n* Specifies if the mean line is shown in a box and whisker chart.\\n*/\\nshowMeanLine: boolean    \\n\\n/**\\n* Specifies if the mean marker is shown in a box and whisker chart.\\n*/\\nshowMeanMarker: boolean    \\n\\n/**\\n* Specifies if outlier points are shown in a box and whisker chart.\\n*/\\nshowOutlierPoints: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the formatting options for line elements.\\n*/\\ninterface ChartLineFormat {\\n\\n    /**\\n* HTML color code representing the color of lines in the chart.\\n*/\\ncolor: string    \\n\\n/**\\n* Represents the line style. See `Excel.ChartLineStyle` for details.\\n*/\\nlineStyle: ChartLineStyle | 'None' | 'Continuous' | 'Dash' | 'DashDot' | 'DashDotDot' | 'Dot' | 'Grey25' | 'Grey50' | 'Grey75' | 'Automatic' | 'RoundDot'    \\n\\n/**\\n* Represents weight of the line, in points.\\n*/\\nweight: number\\n\\n    /**\\n* Clears the line format of a chart element.\\n*/\\nclear(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the font attributes (such as font name, font size, and color) for a chart object.\\n*/\\ninterface ChartFont {\\n\\n    /**\\n* Represents the bold status of font.\\n*/\\nbold: boolean    \\n\\n/**\\n* HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n*/\\ncolor: string    \\n\\n/**\\n* Represents the italic status of the font.\\n*/\\nitalic: boolean    \\n\\n/**\\n* Font name (e.g., \\\"Calibri\\\")\\n*/\\nname: string    \\n\\n/**\\n* Size of the font (e.g., 11)\\n*/\\nsize: number    \\n\\n/**\\n* Type of underline applied to the font. See `Excel.ChartUnderlineStyle` for details.\\n*/\\nunderline: ChartUnderlineStyle | 'None' | 'Single'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the attributes for a chart trendline object.\\n*/\\ninterface ChartTrendline {\\n\\n    /**\\n* Represents the number of periods that the trendline extends backward.\\n*/\\nbackwardPeriod: number    \\n\\n/**\\n* Represents the formatting of a chart trendline.\\n*/\\nreadonly format: ChartTrendlineFormat    \\n\\n/**\\n* Represents the number of periods that the trendline extends forward.\\n*/\\nforwardPeriod: number    \\n\\n/**\\n* Represents the intercept value of the trendline. Can be set to a numeric value or an empty string (for automatic values). The returned value is always a number.\\n*/\\nintercept: any    \\n\\n/**\\n* Represents the label of a chart trendline.\\n*/\\nreadonly label: ChartTrendlineLabel    \\n\\n/**\\n* Represents the period of a chart trendline. Only applicable to trendlines with the type `MovingAverage`.\\n*/\\nmovingAveragePeriod: number    \\n\\n/**\\n* Represents the name of the trendline. Can be set to a string value, a `null` value represents automatic values. The returned value is always a string\\n*/\\nname: string    \\n\\n/**\\n* Represents the order of a chart trendline. Only applicable to trendlines with the type `Polynomial`.\\n*/\\npolynomialOrder: number    \\n\\n/**\\n* True if the equation for the trendline is displayed on the chart.\\n*/\\nshowEquation: boolean    \\n\\n/**\\n* True if the r-squared value for the trendline is displayed on the chart.\\n*/\\nshowRSquared: boolean    \\n\\n/**\\n* Represents the type of a chart trendline.\\n*/\\ntype: ChartTrendlineType | 'Linear' | 'Exponential' | 'Logarithmic' | 'MovingAverage' | 'Polynomial' | 'Power'\\n\\n    /**\\n* Delete the trendline object.\\n*/\\ndelete(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of chart trendlines.\\n*/\\ninterface ChartTrendlineCollection {\\n\\n    \\n\\n    /**\\n* Adds a new trendline to trendline collection.\\n* @param type Specifies the trendline type. The default value is \\\"Linear\\\". See `Excel.ChartTrendline` for details.\\n*/\\nadd(type?:ChartTrendlineType | 'Linear' | 'Exponential' | 'Logarithmic' | 'MovingAverage' | 'Polynomial' | 'Power'): ChartTrendline    \\n\\n/**\\n* Returns the number of trendlines in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a trendline object by index, which is the insertion order in the items array.\\n* @param index Represents the insertion order in the items array.\\n*/\\ngetItem(index:number): ChartTrendline\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: ChartTrendline[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the format properties for the chart trendline.\\n*/\\ninterface ChartTrendlineFormat {\\n\\n    /**\\n* Represents chart line formatting.\\n*/\\nreadonly line: ChartLineFormat\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the attributes for a chart trendline label object.\\n*/\\ninterface ChartTrendlineLabel {\\n\\n    /**\\n* Specifies if the trendline label automatically generates appropriate text based on context.\\n*/\\nautoText: boolean    \\n\\n/**\\n* The format of the chart trendline label.\\n*/\\nreadonly format: ChartTrendlineLabelFormat    \\n\\n/**\\n* String value that represents the formula of the chart trendline label using A1-style notation.\\n*/\\nformula: string    \\n\\n/**\\n* Returns the height, in points, of the chart trendline label. Value is `null` if the chart trendline label is not visible.\\n*/\\nreadonly height: number    \\n\\n/**\\n* Represents the horizontal alignment of the chart trendline label. See `Excel.ChartTextHorizontalAlignment` for details.\\n* This property is valid only when `TextOrientation` of a trendline label is -90, 90, or 180.\\n*/\\nhorizontalAlignment: ChartTextHorizontalAlignment | 'Center' | 'Left' | 'Right' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Represents the distance, in points, from the left edge of the chart trendline label to the left edge of the chart area. Value is `null` if the chart trendline label is not visible.\\n*/\\nleft: number    \\n\\n/**\\n* Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\\n*/\\nlinkNumberFormat: boolean    \\n\\n/**\\n* String value that represents the format code for the trendline label.\\n*/\\nnumberFormat: string    \\n\\n/**\\n* String representing the text of the trendline label on a chart.\\n*/\\ntext: string    \\n\\n/**\\n* Represents the angle to which the text is oriented for the chart trendline label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Represents the distance, in points, from the top edge of the chart trendline label to the top of the chart area. Value is `null` if the chart trendline label is not visible.\\n*/\\ntop: number    \\n\\n/**\\n* Represents the vertical alignment of the chart trendline label. See `Excel.ChartTextVerticalAlignment` for details.\\n* This property is valid only when `TextOrientation` of a trendline label is 0.\\n*/\\nverticalAlignment: ChartTextVerticalAlignment | 'Center' | 'Bottom' | 'Top' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Returns the width, in points, of the chart trendline label. Value is `null` if the chart trendline label is not visible.\\n*/\\nreadonly width: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Encapsulates the format properties for the chart trendline label.\\n*/\\ninterface ChartTrendlineLabelFormat {\\n\\n    /**\\n* Specifies the border format, which includes color, linestyle, and weight.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Specifies the fill format of the current chart trendline label.\\n*/\\nreadonly fill: ChartFill    \\n\\n/**\\n* Specifies the font attributes (such as font name, font size, and color) for a chart trendline label.\\n*/\\nreadonly font: ChartFont\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the attributes for a chart plot area.\\n*/\\ninterface ChartPlotArea {\\n\\n    /**\\n* Specifies the formatting of a chart plot area.\\n*/\\nreadonly format: ChartPlotAreaFormat    \\n\\n/**\\n* Specifies the height value of a plot area.\\n*/\\nheight: number    \\n\\n/**\\n* Specifies the inside height value of a plot area.\\n*/\\ninsideHeight: number    \\n\\n/**\\n* Specifies the inside left value of a plot area.\\n*/\\ninsideLeft: number    \\n\\n/**\\n* Specifies the inside top value of a plot area.\\n*/\\ninsideTop: number    \\n\\n/**\\n* Specifies the inside width value of a plot area.\\n*/\\ninsideWidth: number    \\n\\n/**\\n* Specifies the left value of a plot area.\\n*/\\nleft: number    \\n\\n/**\\n* Specifies the position of a plot area.\\n*/\\nposition: ChartPlotAreaPosition | 'Automatic' | 'Custom'    \\n\\n/**\\n* Specifies the top value of a plot area.\\n*/\\ntop: number    \\n\\n/**\\n* Specifies the width value of a plot area.\\n*/\\nwidth: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the format properties for a chart plot area.\\n*/\\ninterface ChartPlotAreaFormat {\\n\\n    /**\\n* Specifies the border attributes of a chart plot area.\\n*/\\nreadonly border: ChartBorder    \\n\\n/**\\n* Specifies the fill format of an object, which includes background formatting information.\\n*/\\nreadonly fill: ChartFill\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Manages sorting operations on `Range` objects.\\n*/\\ninterface RangeSort {\\n\\n    \\n\\n    /**\\n* Perform a sort operation.\\n* @param fields The list of conditions to sort on.\\n* @param matchCase Optional. Whether to have the casing impact string ordering.\\n* @param hasHeaders Optional. Whether the range has a header.\\n* @param orientation Optional. Whether the operation is sorting rows or columns.\\n* @param method Optional. The ordering method used for Chinese characters.\\n*/\\napply(fields:SortField[], matchCase?:boolean, hasHeaders?:boolean, orientation?:SortOrientation | 'Rows' | 'Columns', method?:SortMethod | 'PinYin' | 'StrokeCount'): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Manages sorting operations on `Table` objects.\\n*/\\ninterface TableSort {\\n\\n    /**\\n* Specifies the current conditions used to last sort the table.\\n*/\\nreadonly fields: SortField[]    \\n\\n/**\\n* Specifies if the casing impacts the last sort of the table.\\n*/\\nreadonly matchCase: boolean    \\n\\n/**\\n* Represents the Chinese character ordering method last used to sort the table.\\n*/\\nreadonly method: SortMethod | 'PinYin' | 'StrokeCount'\\n\\n    /**\\n* Perform a sort operation.\\n* @param fields The list of conditions to sort on.\\n* @param matchCase Optional. Whether to have the casing impact string ordering.\\n* @param method Optional. The ordering method used for Chinese characters.\\n*/\\napply(fields:SortField[], matchCase?:boolean, method?:SortMethod | 'PinYin' | 'StrokeCount'): void    \\n\\n/**\\n* Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons.\\n*/\\nclear(): void    \\n\\n/**\\n* Reapplies the current sorting parameters to the table.\\n*/\\nreapply(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Manages the filtering of a table's column.\\n*/\\ninterface Filter {\\n\\n    /**\\n* The currently applied filter on the given column.\\n*/\\nreadonly criteria: FilterCriteria\\n\\n    /**\\n* Apply the given filter criteria on the given column.\\n* @param criteria The criteria to apply.\\n*/\\napply(criteria:FilterCriteria): void    \\n\\n/**\\n* Apply a \\\"Bottom Item\\\" filter to the column for the given number of elements.\\n* @param count The number of elements from the bottom to show.\\n*/\\napplyBottomItemsFilter(count:number): void    \\n\\n/**\\n* Apply a \\\"Bottom Percent\\\" filter to the column for the given percentage of elements.\\n* @param percent The percentage of elements from the bottom to show.\\n*/\\napplyBottomPercentFilter(percent:number): void    \\n\\n/**\\n* Apply a \\\"Cell Color\\\" filter to the column for the given color.\\n* @param color The background color of the cells to show.\\n*/\\napplyCellColorFilter(color:string): void    \\n\\n/**\\n* Apply an \\\"Icon\\\" filter to the column for the given criteria strings.\\n* @param criteria1 The first criteria string.\\n* @param criteria2 Optional. The second criteria string.\\n* @param oper Optional. The operator that describes how the two criteria are joined.\\n*/\\napplyCustomFilter(criteria1:string, criteria2?:string, oper?:FilterOperator | 'And' | 'Or'): void    \\n\\n/**\\n* Apply a \\\"Dynamic\\\" filter to the column.\\n* @param criteria The dynamic criteria to apply.\\n*/\\napplyDynamicFilter(criteria:DynamicFilterCriteria | 'Unknown' | 'AboveAverage' | 'AllDatesInPeriodApril' | 'AllDatesInPeriodAugust' | 'AllDatesInPeriodDecember' | 'AllDatesInPeriodFebruray' | 'AllDatesInPeriodJanuary' | 'AllDatesInPeriodJuly' | 'AllDatesInPeriodJune' | 'AllDatesInPeriodMarch' | 'AllDatesInPeriodMay' | 'AllDatesInPeriodNovember' | 'AllDatesInPeriodOctober' | 'AllDatesInPeriodQuarter1' | 'AllDatesInPeriodQuarter2' | 'AllDatesInPeriodQuarter3' | 'AllDatesInPeriodQuarter4' | 'AllDatesInPeriodSeptember' | 'BelowAverage' | 'LastMonth' | 'LastQuarter' | 'LastWeek' | 'LastYear' | 'NextMonth' | 'NextQuarter' | 'NextWeek' | 'NextYear' | 'ThisMonth' | 'ThisQuarter' | 'ThisWeek' | 'ThisYear' | 'Today' | 'Tomorrow' | 'YearToDate' | 'Yesterday'): void    \\n\\n/**\\n* Apply a \\\"Font Color\\\" filter to the column for the given color.\\n* @param color The font color of the cells to show.\\n*/\\napplyFontColorFilter(color:string): void    \\n\\n/**\\n* Apply an \\\"Icon\\\" filter to the column for the given icon.\\n* @param icon The icons of the cells to show.\\n*/\\napplyIconFilter(icon:Icon): void    \\n\\n/**\\n* Apply a \\\"Top Item\\\" filter to the column for the given number of elements.\\n* @param count The number of elements from the top to show.\\n*/\\napplyTopItemsFilter(count:number): void    \\n\\n/**\\n* Apply a \\\"Top Percent\\\" filter to the column for the given percentage of elements.\\n* @param percent The percentage of elements from the top to show.\\n*/\\napplyTopPercentFilter(percent:number): void    \\n\\n/**\\n* Apply a \\\"Values\\\" filter to the column for the given values.\\n* @param values The list of values to show. This must be an array of strings or an array of `Excel.FilterDateTime` objects.\\n*/\\napplyValuesFilter(values:Array<string|FilterDatetime>): void    \\n\\n/**\\n* Clear the filter on the given column.\\n*/\\nclear(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the `AutoFilter` object.\\n* AutoFilter turns the values in Excel column into specific filters based on the cell contents.\\n*/\\ninterface AutoFilter {\\n\\n    /**\\n* An array that holds all the filter criteria in the autofiltered range.\\n*/\\nreadonly criteria: FilterCriteria[]    \\n\\n/**\\n* Specifies if the AutoFilter is enabled.\\n*/\\nreadonly enabled: boolean    \\n\\n/**\\n* Specifies if the AutoFilter has filter criteria.\\n*/\\nreadonly isDataFiltered: boolean\\n\\n    /**\\n* Applies the AutoFilter to a range. This filters the column if column index and filter criteria are specified.\\n* @param range The range on which the AutoFilter will apply.\\n* @param columnIndex The zero-based column index to which the AutoFilter is applied.\\n* @param criteria The filter criteria.\\n*/\\napply(range:Range|string, columnIndex?:number, criteria?:FilterCriteria): void    \\n\\n/**\\n* Clears the filter criteria and sort state of the AutoFilter.\\n*/\\nclearCriteria(): void    \\n\\n/**\\n* Returns the `Range` object that represents the range to which the AutoFilter applies.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Returns the `Range` object that represents the range to which the AutoFilter applies.\\n* If there is no `Range` object associated with the AutoFilter, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetRangeOrNullObject(): Range    \\n\\n/**\\n* Applies the specified AutoFilter object currently on the range.\\n*/\\nreapply(): void    \\n\\n/**\\n* Removes the AutoFilter for the range.\\n*/\\nremove(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Provides information based on current system culture settings. This includes the culture names, number formatting, and other culturally dependent settings.\\n*/\\ninterface CultureInfo {\\n\\n    /**\\n* Defines the culturally appropriate format of displaying date and time. This is based on current system culture settings.\\n*/\\nreadonly datetimeFormat: DatetimeFormatInfo    \\n\\n/**\\n* Gets the culture name in the format languagecode2-country/regioncode2 (e.g., \\\"zh-cn\\\" or \\\"en-us\\\"). This is based on current system settings.\\n*/\\nreadonly name: string    \\n\\n/**\\n* Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\\n*/\\nreadonly numberFormat: NumberFormatInfo\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\\n*/\\ninterface NumberFormatInfo {\\n\\n    /**\\n* Gets the string used as the decimal separator for numeric values. This is based on current system settings.\\n*/\\nreadonly numberDecimalSeparator: string    \\n\\n/**\\n* Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on current system settings.\\n*/\\nreadonly numberGroupSeparator: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\\n*/\\ninterface DatetimeFormatInfo {\\n\\n    /**\\n* Gets the string used as the date separator. This is based on current system settings.\\n*/\\nreadonly dateSeparator: string    \\n\\n/**\\n* Gets the format string for a long date value. This is based on current system settings.\\n*/\\nreadonly longDatePattern: string    \\n\\n/**\\n* Gets the format string for a long time value. This is based on current system settings.\\n*/\\nreadonly longTimePattern: string    \\n\\n/**\\n* Gets the format string for a short date value. This is based on current system settings.\\n*/\\nreadonly shortDatePattern: string    \\n\\n/**\\n* Gets the string used as the time separator. This is based on current system settings.\\n*/\\nreadonly timeSeparator: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A scoped collection of custom XML parts.\\n* A scoped collection is the result of some operation (e.g., filtering by namespace).\\n* A scoped collection cannot be scoped any further.\\n*/\\ninterface CustomXmlPartScopedCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of CustomXML parts in this collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a custom XML part based on its ID.\\n* @param id ID of the object to be retrieved.\\n*/\\ngetItem(id:string): CustomXmlPart    \\n\\n/**\\n* Gets a custom XML part based on its ID.\\n* If the `CustomXmlPart` does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param id ID of the object to be retrieved.\\n*/\\ngetItemOrNullObject(id:string): CustomXmlPart    \\n\\n/**\\n* If the collection contains exactly one item, this method returns it.\\n* Otherwise, this method produces an error.\\n*/\\ngetOnlyItem(): CustomXmlPart    \\n\\n/**\\n* If the collection contains exactly one item, this method returns it.\\n* Otherwise, this method returns `null`.\\n*/\\ngetOnlyItemOrNullObject(): CustomXmlPart\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: CustomXmlPart[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A collection of custom XML parts.\\n*/\\ninterface CustomXmlPartCollection {\\n\\n    \\n\\n    /**\\n* Adds a new custom XML part to the workbook.\\n* @param xml XML content. Must be a valid XML fragment.\\n*/\\nadd(xml:string): CustomXmlPart    \\n\\n/**\\n* Gets a new scoped collection of custom XML parts whose namespaces match the given namespace.\\n* @param namespaceUri This must be a fully qualified schema URI; for example, \\\"http://schemas.contoso.com/review/1.0\\\".\\n*/\\ngetByNamespace(namespaceUri:string): CustomXmlPartScopedCollection    \\n\\n/**\\n* Gets the number of custom XML parts in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a custom XML part based on its ID.\\n* @param id ID of the object to be retrieved.\\n*/\\ngetItem(id:string): CustomXmlPart    \\n\\n/**\\n* Gets a custom XML part based on its ID.\\n* If the `CustomXmlPart` does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param id ID of the object to be retrieved.\\n*/\\ngetItemOrNullObject(id:string): CustomXmlPart\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: CustomXmlPart[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a custom XML part object in a workbook.\\n*/\\ninterface CustomXmlPart {\\n\\n    /**\\n* The custom XML part's ID.\\n*/\\nreadonly id: string    \\n\\n/**\\n* The custom XML part's namespace URI.\\n*/\\nreadonly namespaceUri: string\\n\\n    /**\\n* Deletes the custom XML part.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the custom XML part's full XML content.\\n*/\\ngetXml(): ClientResult<string>    \\n\\n/**\\n* Sets the custom XML part's full XML content.\\n* @param xml XML content for the part.\\n*/\\nsetXml(xml:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a scoped collection of PivotTables. The PivotTables are sorted based on the location of the PivotTable's top-left corner. They are ordered top-to-bottom and then left-to-right.\\n*/\\ninterface PivotTableScopedCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of PivotTables in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets the first PivotTable in the collection. The PivotTables in the collection are sorted top-to-bottom and left-to-right, such that top-left table is the first PivotTable in the collection.\\n*/\\ngetFirst(): PivotTable    \\n\\n/**\\n* Gets a PivotTable by name.\\n* @param key Name of the PivotTable to be retrieved.\\n*/\\ngetItem(key:string): PivotTable    \\n\\n/**\\n* Gets a PivotTable by name. If the PivotTable does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the PivotTable to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): PivotTable\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PivotTable[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the PivotTables that are part of the workbook or worksheet.\\n*/\\ninterface PivotTableCollection {\\n\\n    \\n\\n    /**\\n* Add a PivotTable based on the specified source data and insert it at the top-left cell of the destination range.\\n* @param name The name of the new PivotTable.\\n* @param source The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.\\n* @param destination The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).\\n*/\\nadd(name:string, source:Range|string|Table, destination:Range|string): PivotTable    \\n\\n/**\\n* Gets the number of pivot tables in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a PivotTable by name.\\n* @param name Name of the PivotTable to be retrieved.\\n*/\\ngetItem(name:string): PivotTable    \\n\\n/**\\n* Gets a PivotTable by name. If the PivotTable does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the PivotTable to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): PivotTable    \\n\\n/**\\n* Refreshes all the pivot tables in the collection.\\n*/\\nrefreshAll(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PivotTable[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an Excel PivotTable.\\n* To learn more about the PivotTable object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables | Work with PivotTables using the Excel JavaScript API}.\\n*/\\ninterface PivotTable {\\n\\n    /**\\n* Specifies if the PivotTable allows the application of multiple PivotFilters on a given PivotField in the table.\\n*/\\nallowMultipleFiltersPerField: boolean    \\n\\n/**\\n* The Column Pivot Hierarchies of the PivotTable.\\n*/\\nreadonly columnHierarchies: RowColumnPivotHierarchyCollection    \\n\\n/**\\n* The Data Pivot Hierarchies of the PivotTable.\\n*/\\nreadonly dataHierarchies: DataPivotHierarchyCollection    \\n\\n/**\\n* Specifies if the PivotTable allows values in the data body to be edited by the user.\\n*/\\nenableDataValueEditing: boolean    \\n\\n/**\\n* The Filter Pivot Hierarchies of the PivotTable.\\n*/\\nreadonly filterHierarchies: FilterPivotHierarchyCollection    \\n\\n/**\\n* The Pivot Hierarchies of the PivotTable.\\n*/\\nreadonly hierarchies: PivotHierarchyCollection    \\n\\n/**\\n* ID of the PivotTable.\\n*/\\nreadonly id: string    \\n\\n/**\\n* The PivotLayout describing the layout and visual structure of the PivotTable.\\n*/\\nreadonly layout: PivotLayout    \\n\\n/**\\n* Name of the PivotTable.\\n*/\\nname: string    \\n\\n/**\\n* The Row Pivot Hierarchies of the PivotTable.\\n*/\\nreadonly rowHierarchies: RowColumnPivotHierarchyCollection    \\n\\n/**\\n* Specifies if the PivotTable uses custom lists when sorting.\\n*/\\nuseCustomSortLists: boolean    \\n\\n/**\\n* The worksheet containing the current PivotTable.\\n*/\\nreadonly worksheet: Worksheet\\n\\n    /**\\n* Deletes the PivotTable.\\n*/\\ndelete(): void    \\n\\n/**\\n* Refreshes the PivotTable.\\n*/\\nrefresh(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the visual layout of the PivotTable.\\n*/\\ninterface PivotLayout {\\n\\n    /**\\n* Specifies if formatting will be automatically formatted when it\u2019s refreshed or when fields are moved.\\n*/\\nautoFormat: boolean    \\n\\n/**\\n* Specifies if the field list can be shown in the UI.\\n*/\\nenableFieldList: boolean    \\n\\n/**\\n* This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this will be null.\\n*/\\nlayoutType: PivotLayoutType | 'Compact' | 'Tabular' | 'Outline'    \\n\\n/**\\n* Specifies if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.\\n*/\\npreserveFormatting: boolean    \\n\\n/**\\n* Specifies if the PivotTable report shows grand totals for columns.\\n*/\\nshowColumnGrandTotals: boolean    \\n\\n/**\\n* Specifies if the PivotTable report shows grand totals for rows.\\n*/\\nshowRowGrandTotals: boolean    \\n\\n/**\\n* This property indicates the `SubtotalLocationType` of all fields on the PivotTable. If fields have different states, this will be `null`.\\n*/\\nsubtotalLocation: SubtotalLocationType | 'AtTop' | 'AtBottom' | 'Off'\\n\\n    /**\\n* Returns the range where the PivotTable's column labels reside.\\n*/\\ngetColumnLabelRange(): Range    \\n\\n/**\\n* Returns the range where the PivotTable's data values reside.\\n*/\\ngetDataBodyRange(): Range    \\n\\n/**\\n* Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.\\n* @param cell A single cell within the PivotTable data body.\\n*/\\ngetDataHierarchy(cell:Range|string): DataPivotHierarchy    \\n\\n/**\\n* Returns the range of the PivotTable's filter area.\\n*/\\ngetFilterAxisRange(): Range    \\n\\n/**\\n* Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.\\n* @param axis The axis from which to get the PivotItems. Must be either \\\"row\\\" or \\\"column.\\\"\\n* @param cell A single cell within the PivotTable's data body.\\n*/\\ngetPivotItems(axis:PivotAxis | 'Unknown' | 'Row' | 'Column' | 'Data' | 'Filter', cell:Range|string): PivotItemCollection    \\n\\n/**\\n* Returns the range the PivotTable exists on, excluding the filter area.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Returns the range where the PivotTable's row labels reside.\\n*/\\ngetRowLabelRange(): Range    \\n\\n/**\\n* Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context. This behaves identically to applying an autosort from the UI.\\n* @param cell A single cell to use get the criteria from for applying the autosort.\\n* @param sortBy The direction of the sort.\\n*/\\nsetAutoSortOnCell(cell:Range|string, sortBy:SortBy | 'Ascending' | 'Descending'): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the PivotHierarchies that are part of the PivotTable.\\n*/\\ninterface PivotHierarchyCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of pivot hierarchies in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a PivotHierarchy by its name or ID.\\n* @param name Name of the PivotHierarchy to be retrieved.\\n*/\\ngetItem(name:string): PivotHierarchy    \\n\\n/**\\n* Gets a PivotHierarchy by name. If the PivotHierarchy does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the PivotHierarchy to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): PivotHierarchy\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PivotHierarchy[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel PivotHierarchy.\\n*/\\ninterface PivotHierarchy {\\n\\n    /**\\n* Returns the PivotFields associated with the PivotHierarchy.\\n*/\\nreadonly fields: PivotFieldCollection    \\n\\n/**\\n* ID of the PivotHierarchy.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Name of the PivotHierarchy.\\n*/\\nname: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of RowColumnPivotHierarchy items associated with the PivotTable.\\n*/\\ninterface RowColumnPivotHierarchyCollection {\\n\\n    \\n\\n    /**\\n* Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column,\\n* or filter axis, it will be removed from that location.\\n*/\\nadd(pivotHierarchy:PivotHierarchy): RowColumnPivotHierarchy    \\n\\n/**\\n* Gets the number of pivot hierarchies in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a RowColumnPivotHierarchy by its name or ID.\\n* @param name Name of the RowColumnPivotHierarchy to be retrieved.\\n*/\\ngetItem(name:string): RowColumnPivotHierarchy    \\n\\n/**\\n* Gets a RowColumnPivotHierarchy by name. If the RowColumnPivotHierarchy does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the RowColumnPivotHierarchy to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): RowColumnPivotHierarchy    \\n\\n/**\\n* Removes the PivotHierarchy from the current axis.\\n*/\\nremove(rowColumnPivotHierarchy:RowColumnPivotHierarchy): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: RowColumnPivotHierarchy[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel RowColumnPivotHierarchy.\\n*/\\ninterface RowColumnPivotHierarchy {\\n\\n    /**\\n* Returns the PivotFields associated with the RowColumnPivotHierarchy.\\n*/\\nreadonly fields: PivotFieldCollection    \\n\\n/**\\n* ID of the RowColumnPivotHierarchy.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Name of the RowColumnPivotHierarchy.\\n*/\\nname: string    \\n\\n/**\\n* Position of the RowColumnPivotHierarchy.\\n*/\\nposition: number\\n\\n    /**\\n* Reset the RowColumnPivotHierarchy back to its default values.\\n*/\\nsetToDefault(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of FilterPivotHierarchy items associated with the PivotTable.\\n*/\\ninterface FilterPivotHierarchyCollection {\\n\\n    \\n\\n    /**\\n* Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column,\\n* or filter axis, it will be removed from that location.\\n*/\\nadd(pivotHierarchy:PivotHierarchy): FilterPivotHierarchy    \\n\\n/**\\n* Gets the number of pivot hierarchies in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a FilterPivotHierarchy by its name or ID.\\n* @param name Name of the FilterPivotHierarchy to be retrieved.\\n*/\\ngetItem(name:string): FilterPivotHierarchy    \\n\\n/**\\n* Gets a FilterPivotHierarchy by name. If the FilterPivotHierarchy does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the FilterPivotHierarchy to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): FilterPivotHierarchy    \\n\\n/**\\n* Removes the PivotHierarchy from the current axis.\\n*/\\nremove(filterPivotHierarchy:FilterPivotHierarchy): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: FilterPivotHierarchy[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel FilterPivotHierarchy.\\n*/\\ninterface FilterPivotHierarchy {\\n\\n    /**\\n* Determines whether to allow multiple filter items.\\n*/\\nenableMultipleFilterItems: boolean    \\n\\n/**\\n* Returns the PivotFields associated with the FilterPivotHierarchy.\\n*/\\nreadonly fields: PivotFieldCollection    \\n\\n/**\\n* ID of the FilterPivotHierarchy.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Name of the FilterPivotHierarchy.\\n*/\\nname: string    \\n\\n/**\\n* Position of the FilterPivotHierarchy.\\n*/\\nposition: number\\n\\n    /**\\n* Reset the FilterPivotHierarchy back to its default values.\\n*/\\nsetToDefault(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of DataPivotHierarchy items associated with the PivotTable.\\n*/\\ninterface DataPivotHierarchyCollection {\\n\\n    \\n\\n    /**\\n* Adds the PivotHierarchy to the current axis.\\n*/\\nadd(pivotHierarchy:PivotHierarchy): DataPivotHierarchy    \\n\\n/**\\n* Gets the number of pivot hierarchies in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a DataPivotHierarchy by its name or ID.\\n* @param name Name of the DataPivotHierarchy to be retrieved.\\n*/\\ngetItem(name:string): DataPivotHierarchy    \\n\\n/**\\n* Gets a DataPivotHierarchy by name. If the DataPivotHierarchy does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the DataPivotHierarchy to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): DataPivotHierarchy    \\n\\n/**\\n* Removes the PivotHierarchy from the current axis.\\n*/\\nremove(DataPivotHierarchy:DataPivotHierarchy): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: DataPivotHierarchy[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel DataPivotHierarchy.\\n*/\\ninterface DataPivotHierarchy {\\n\\n    /**\\n* Returns the PivotFields associated with the DataPivotHierarchy.\\n*/\\nreadonly field: PivotField    \\n\\n/**\\n* ID of the DataPivotHierarchy.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Name of the DataPivotHierarchy.\\n*/\\nname: string    \\n\\n/**\\n* Number format of the DataPivotHierarchy.\\n*/\\nnumberFormat: string    \\n\\n/**\\n* Position of the DataPivotHierarchy.\\n*/\\nposition: number    \\n\\n/**\\n* Specifies if the data should be shown as a specific summary calculation.\\n*/\\nshowAs: ShowAsRule    \\n\\n/**\\n* Specifies if all items of the DataPivotHierarchy are shown.\\n*/\\nsummarizeBy: AggregationFunction | 'Unknown' | 'Automatic' | 'Sum' | 'Count' | 'Average' | 'Max' | 'Min' | 'Product' | 'CountNumbers' | 'StandardDeviation' | 'StandardDeviationP' | 'Variance' | 'VarianceP'\\n\\n    /**\\n* Reset the DataPivotHierarchy back to its default values.\\n*/\\nsetToDefault(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the PivotFields that are part of a PivotTable's hierarchy.\\n*/\\ninterface PivotFieldCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of pivot fields in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a PivotField by its name or ID.\\n* @param name Name of the PivotField to be retrieved.\\n*/\\ngetItem(name:string): PivotField    \\n\\n/**\\n* Gets a PivotField by name. If the PivotField does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the PivotField to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): PivotField\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PivotField[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel PivotField.\\n*/\\ninterface PivotField {\\n\\n    /**\\n* ID of the PivotField.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the PivotItems associated with the PivotField.\\n*/\\nreadonly items: PivotItemCollection    \\n\\n/**\\n* Name of the PivotField.\\n*/\\nname: string    \\n\\n/**\\n* Determines whether to show all items of the PivotField.\\n*/\\nshowAllItems: boolean    \\n\\n/**\\n* Subtotals of the PivotField.\\n*/\\nsubtotals: Subtotals\\n\\n    /**\\n* Sets one or more of the field's current PivotFilters and applies them to the field.\\n* If the provided filters are invalid or cannot be applied, an exception is thrown.\\n* @param filter A configured specific PivotFilter, or a PivotFilters interface containing multiple configured filters.\\n*/\\napplyFilter(filter:PivotFilters): void    \\n\\n/**\\n* Clears all criteria from all of the field's filters. This removes any active filtering on the field.\\n*/\\nclearAllFilters(): void    \\n\\n/**\\n* Clears all existing criteria from the field's filter of the given type (if one is currently applied).\\n* @param filterType The type of filter on the field of which to clear all criteria.\\n*/\\nclearFilter(filterType:PivotFilterType | 'Unknown' | 'Value' | 'Manual' | 'Label' | 'Date'): void    \\n\\n/**\\n* Gets all filters currently applied on the field.\\n*/\\ngetFilters(): ClientResult<PivotFilters>    \\n\\n/**\\n* Checks if there are any applied filters on the field.\\n* @param filterType The filter type to check. If no type is provided, this method will check if any filter is applied.\\n*/\\nisFiltered(filterType?:PivotFilterType | 'Unknown' | 'Value' | 'Manual' | 'Label' | 'Date'): ClientResult<boolean>    \\n\\n/**\\n* Sorts the PivotField. If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.\\n* @param sortBy Specifies if the sorting is done in ascending or descending order.\\n*/\\nsortByLabels(sortBy:SortBy | 'Ascending' | 'Descending'): void    \\n\\n/**\\n* Sorts the PivotField by specified values in a given scope. The scope defines which specific values will be used to sort when\\n* there are multiple values from the same DataPivotHierarchy.\\n* @param sortBy Specifies if the sorting is done in ascending or descending order.\\n* @param valuesHierarchy Specifies the values hierarchy on the data axis to be used for sorting.\\n* @param pivotItemScope The items that should be used for the scope of the sorting. These will be the\\n* items that make up the row or column that you want to sort on. If a string is used instead of a PivotItem,\\n* the string represents the ID of the PivotItem. If there are no items other than data hierarchy on the axis\\n* you want to sort on, this can be empty.\\n*/\\nsortByValues(sortBy:SortBy | 'Ascending' | 'Descending', valuesHierarchy:DataPivotHierarchy, pivotItemScope?:Array<PivotItem|string>): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the PivotItems related to their parent PivotField.\\n*/\\ninterface PivotItemCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of PivotItems in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a PivotItem by its name or ID.\\n* @param name Name of the PivotItem to be retrieved.\\n*/\\ngetItem(name:string): PivotItem    \\n\\n/**\\n* Gets a PivotItem by name. If the PivotItem does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the PivotItem to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): PivotItem\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PivotItem[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the Excel PivotItem.\\n*/\\ninterface PivotItem {\\n\\n    /**\\n* ID of the PivotItem.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Determines whether the item is expanded to show child items or if it's collapsed and child items are hidden.\\n*/\\nisExpanded: boolean    \\n\\n/**\\n* Name of the PivotItem.\\n*/\\nname: string    \\n\\n/**\\n* Specifies if the PivotItem is visible.\\n*/\\nvisible: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a worksheet-level custom property.\\n*/\\ninterface WorksheetCustomProperty {\\n\\n    /**\\n* Gets the key of the custom property. Custom property keys are case-insensitive. The key is limited to 255 characters (larger values will cause an `InvalidArgument` error to be thrown.)\\n*/\\nreadonly key: string    \\n\\n/**\\n* Gets or sets the value of the custom property.\\n*/\\nvalue: string\\n\\n    /**\\n* Deletes the custom property.\\n*/\\ndelete(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Contains the collection of worksheet-level custom property.\\n*/\\ninterface WorksheetCustomPropertyCollection {\\n\\n    \\n\\n    /**\\n* Adds a new custom property that maps to the provided key. This overwrites existing custom properties with that key.\\n* @param key The key that identifies the custom property object. It is case-insensitive.The key is limited to 255 characters (larger values will cause an `InvalidArgument` error to be thrown.)\\n* @param value The value of this custom property.\\n*/\\nadd(key:string, value:string): WorksheetCustomProperty    \\n\\n/**\\n* Gets the number of custom properties on this worksheet.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a custom property object by its key, which is case-insensitive. Throws an error if the custom property does not exist.\\n* @param key The key that identifies the custom property object. It is case-insensitive.\\n*/\\ngetItem(key:string): WorksheetCustomProperty    \\n\\n/**\\n* Gets a custom property object by its key, which is case-insensitive. If the custom property doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key The key that identifies the custom property object. It is case-insensitive.\\n*/\\ngetItemOrNullObject(key:string): WorksheetCustomProperty\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: WorksheetCustomProperty[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents workbook properties.\\n*/\\ninterface DocumentProperties {\\n\\n    /**\\n* The author of the workbook.\\n*/\\nauthor: string    \\n\\n/**\\n* The category of the workbook.\\n*/\\ncategory: string    \\n\\n/**\\n* The comments of the workbook.\\n*/\\ncomments: string    \\n\\n/**\\n* The company of the workbook.\\n*/\\ncompany: string    \\n\\n/**\\n* Gets the creation date of the workbook.\\n*/\\nreadonly creationDate: Date    \\n\\n/**\\n* Gets the collection of custom properties of the workbook.\\n*/\\nreadonly custom: CustomPropertyCollection    \\n\\n/**\\n* The keywords of the workbook.\\n*/\\nkeywords: string    \\n\\n/**\\n* Gets the last author of the workbook.\\n*/\\nreadonly lastAuthor: string    \\n\\n/**\\n* The manager of the workbook.\\n*/\\nmanager: string    \\n\\n/**\\n* Gets the revision number of the workbook.\\n*/\\nrevisionNumber: number    \\n\\n/**\\n* The subject of the workbook.\\n*/\\nsubject: string    \\n\\n/**\\n* The title of the workbook.\\n*/\\ntitle: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a custom property.\\n*/\\ninterface CustomProperty {\\n\\n    /**\\n* The key of the custom property. The key is limited to 255 characters outside of Excel on the web (larger keys are automatically trimmed to 255 characters on other platforms).\\n*/\\nreadonly key: string    \\n\\n/**\\n* The type of the value used for the custom property.\\n*/\\nreadonly type: DocumentPropertyType | 'Number' | 'Boolean' | 'Date' | 'String' | 'Float'    \\n\\n/**\\n* The value of the custom property. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\\n*/\\nvalue: any\\n\\n    /**\\n* Deletes the custom property.\\n*/\\ndelete(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Contains the collection of custom properties.\\n*/\\ninterface CustomPropertyCollection {\\n\\n    \\n\\n    /**\\n* Creates a new or sets an existing custom property.\\n* @param key Required. The custom property's key, which is case-insensitive. The key is limited to 255 characters outside of Excel on the web (larger keys are automatically trimmed to 255 characters on other platforms).\\n* @param value Required. The custom property's value. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\\n*/\\nadd(key:string, value:any): CustomProperty    \\n\\n/**\\n* Deletes all custom properties in this collection.\\n*/\\ndeleteAll(): void    \\n\\n/**\\n* Gets the count of custom properties.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a custom property object by its key, which is case-insensitive. Throws an error if the custom property does not exist.\\n* @param key The key that identifies the custom property object.\\n*/\\ngetItem(key:string): CustomProperty    \\n\\n/**\\n* Gets a custom property object by its key, which is case-insensitive. If the custom property doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key Required. The key that identifies the custom property object.\\n*/\\ngetItemOrNullObject(key:string): CustomProperty\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: CustomProperty[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the conditional formats that are overlap the range.\\n*/\\ninterface ConditionalFormatCollection {\\n\\n    \\n\\n    /**\\n* Adds a new conditional format to the collection at the first/top priority.\\n* @param type The type of conditional format being added. See `Excel.ConditionalFormatType` for details.\\n*/\\nadd(type:ConditionalFormatType | 'Custom' | 'DataBar' | 'ColorScale' | 'IconSet' | 'TopBottom' | 'PresetCriteria' | 'ContainsText' | 'CellValue'): ConditionalFormat    \\n\\n/**\\n* Clears all conditional formats active on the current specified range.\\n*/\\nclearAll(): void    \\n\\n/**\\n* Returns the number of conditional formats in the workbook.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Returns a conditional format for the given ID.\\n* @param id The ID of the conditional format.\\n*/\\ngetItem(id:string): ConditionalFormat    \\n\\n/**\\n* Returns a conditional format at the given index.\\n* @param index Index of the conditional formats to be retrieved.\\n*/\\ngetItemAt(index:number): ConditionalFormat\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: ConditionalFormat[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* An object encapsulating a conditional format's range, format, rule, and other properties.\\n* To learn more about the conditional formatting object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-conditional-formatting | Apply conditional formatting to Excel ranges}.\\n*/\\ninterface ConditionalFormat {\\n\\n    /**\\n* Returns the cell value conditional format properties if the current conditional format is a `CellValue` type.\\n*/\\nreadonly cellValue: CellValueConditionalFormat    \\n\\n/**\\n* Returns the cell value conditional format properties if the current conditional format is a `CellValue` type.\\n*/\\nreadonly cellValueOrNullObject: CellValueConditionalFormat    \\n\\n/**\\n* Returns the color scale conditional format properties if the current conditional format is a `ColorScale` type.\\n*/\\nreadonly colorScale: ColorScaleConditionalFormat    \\n\\n/**\\n* Returns the color scale conditional format properties if the current conditional format is a `ColorScale` type.\\n*/\\nreadonly colorScaleOrNullObject: ColorScaleConditionalFormat    \\n\\n/**\\n* Returns the custom conditional format properties if the current conditional format is a custom type.\\n*/\\nreadonly custom: CustomConditionalFormat    \\n\\n/**\\n* Returns the custom conditional format properties if the current conditional format is a custom type.\\n*/\\nreadonly customOrNullObject: CustomConditionalFormat    \\n\\n/**\\n* Returns the data bar properties if the current conditional format is a data bar.\\n*/\\nreadonly dataBar: DataBarConditionalFormat    \\n\\n/**\\n* Returns the data bar properties if the current conditional format is a data bar.\\n*/\\nreadonly dataBarOrNullObject: DataBarConditionalFormat    \\n\\n/**\\n* Returns the icon set conditional format properties if the current conditional format is an `IconSet` type.\\n*/\\nreadonly iconSet: IconSetConditionalFormat    \\n\\n/**\\n* Returns the icon set conditional format properties if the current conditional format is an `IconSet` type.\\n*/\\nreadonly iconSetOrNullObject: IconSetConditionalFormat    \\n\\n/**\\n* The priority of the conditional format in the current `ConditionalFormatCollection`.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the preset criteria conditional format. See `Excel.PresetCriteriaConditionalFormat` for more details.\\n*/\\nreadonly preset: PresetCriteriaConditionalFormat    \\n\\n/**\\n* Returns the preset criteria conditional format. See `Excel.PresetCriteriaConditionalFormat` for more details.\\n*/\\nreadonly presetOrNullObject: PresetCriteriaConditionalFormat    \\n\\n/**\\n* The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also\\n* changes other conditional formats' priorities, to allow for a contiguous priority order.\\n* Use a negative priority to begin from the back.\\n* Priorities greater than the bounds will get and set to the maximum (or minimum if negative) priority.\\n* Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.\\n*/\\npriority: number    \\n\\n/**\\n* If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.\\n* Value is `null` on data bars, icon sets, and color scales as there's no concept of `StopIfTrue` for these.\\n*/\\nstopIfTrue: boolean    \\n\\n/**\\n* Returns the specific text conditional format properties if the current conditional format is a text type.\\n* For example, to format cells matching the word \\\"Text\\\".\\n*/\\nreadonly textComparison: TextConditionalFormat    \\n\\n/**\\n* Returns the specific text conditional format properties if the current conditional format is a text type.\\n* For example, to format cells matching the word \\\"Text\\\".\\n*/\\nreadonly textComparisonOrNullObject: TextConditionalFormat    \\n\\n/**\\n* Returns the top/bottom conditional format properties if the current conditional format is a `TopBottom` type.\\n* For example, to format the top 10% or bottom 10 items.\\n*/\\nreadonly topBottom: TopBottomConditionalFormat    \\n\\n/**\\n* Returns the top/bottom conditional format properties if the current conditional format is a `TopBottom` type.\\n* For example, to format the top 10% or bottom 10 items.\\n*/\\nreadonly topBottomOrNullObject: TopBottomConditionalFormat    \\n\\n/**\\n* A type of conditional format. Only one can be set at a time.\\n*/\\nreadonly type: ConditionalFormatType | 'Custom' | 'DataBar' | 'ColorScale' | 'IconSet' | 'TopBottom' | 'PresetCriteria' | 'ContainsText' | 'CellValue'\\n\\n    /**\\n* Deletes this conditional format.\\n*/\\ndelete(): void    \\n\\n/**\\n* Returns the range the conditonal format is applied to. Throws an error if the conditional format is applied to multiple ranges.\\n*/\\ngetRange(): Range    \\n\\n/**\\n* Returns the range to which the conditonal format is applied. If the conditional format is applied to multiple ranges, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetRangeOrNullObject(): Range    \\n\\n/**\\n* Returns the `RangeAreas`, comprising one or more rectangular ranges, to which the conditonal format is applied.\\n*/\\ngetRanges(): RangeAreas\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an Excel conditional data bar type.\\n*/\\ninterface DataBarConditionalFormat {\\n\\n    /**\\n* HTML color code representing the color of the Axis line, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n* Value is \\\"\\\" (an empty string) if no axis is present or set.\\n*/\\naxisColor: string    \\n\\n/**\\n* Representation of how the axis is determined for an Excel data bar.\\n*/\\naxisFormat: ConditionalDataBarAxisFormat | 'Automatic' | 'None' | 'CellMidPoint'    \\n\\n/**\\n* Specifies the direction that the data bar graphic should be based on.\\n*/\\nbarDirection: ConditionalDataBarDirection | 'Context' | 'LeftToRight' | 'RightToLeft'    \\n\\n/**\\n* The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar.\\n* The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`).\\n*/\\nlowerBoundRule: ConditionalDataBarRule    \\n\\n/**\\n* Representation of all values to the left of the axis in an Excel data bar.\\n*/\\nreadonly negativeFormat: ConditionalDataBarNegativeFormat    \\n\\n/**\\n* Representation of all values to the right of the axis in an Excel data bar.\\n*/\\nreadonly positiveFormat: ConditionalDataBarPositiveFormat    \\n\\n/**\\n* If `true`, hides the values from the cells where the data bar is applied.\\n*/\\nshowDataBarOnly: boolean    \\n\\n/**\\n* The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar.\\n* The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`).\\n*/\\nupperBoundRule: ConditionalDataBarRule\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a conditional format for the positive side of the data bar.\\n*/\\ninterface ConditionalDataBarPositiveFormat {\\n\\n    /**\\n* HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n* Value is \\\"\\\" (an empty string) if no border is present or set.\\n*/\\nborderColor: string    \\n\\n/**\\n* HTML color code representing the fill color, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\nfillColor: string    \\n\\n/**\\n* Specifies if the data bar has a gradient.\\n*/\\ngradientFill: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a conditional format for the negative side of the data bar.\\n*/\\ninterface ConditionalDataBarNegativeFormat {\\n\\n    /**\\n* HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n* Value is \\\"\\\" (an empty string) if no border is present or set.\\n*/\\nborderColor: string    \\n\\n/**\\n* HTML color code representing the fill color, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\nfillColor: string    \\n\\n/**\\n* Specifies if the negative data bar has the same border color as the positive data bar.\\n*/\\nmatchPositiveBorderColor: boolean    \\n\\n/**\\n* Specifies if the negative data bar has the same fill color as the positive data bar.\\n*/\\nmatchPositiveFillColor: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a custom conditional format type.\\n*/\\ninterface CustomConditionalFormat {\\n\\n    /**\\n* Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\\n*/\\nreadonly format: ConditionalRangeFormat    \\n\\n/**\\n* Specifies the `Rule` object on this conditional format.\\n*/\\nreadonly rule: ConditionalFormatRule\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a rule, for all traditional rule/format pairings.\\n*/\\ninterface ConditionalFormatRule {\\n\\n    /**\\n* The formula, if required, on which to evaluate the conditional format rule.\\n*/\\nformula: string    \\n\\n/**\\n* The formula, if required, on which to evaluate the conditional format rule in the user's language.\\n*/\\nformulaLocal: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an icon set criteria for conditional formatting.\\n*/\\ninterface IconSetConditionalFormat {\\n\\n    /**\\n* An array of criteria and icon sets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.\\n*/\\ncriteria: ConditionalIconCriterion[]    \\n\\n/**\\n* If `true`, reverses the icon orders for the icon set. Note that this cannot be set if custom icons are used.\\n*/\\nreverseIconOrder: boolean    \\n\\n/**\\n* If `true`, hides the values and only shows icons.\\n*/\\nshowIconOnly: boolean    \\n\\n/**\\n* If set, displays the icon set option for the conditional format.\\n*/\\nstyle: IconSet | 'Invalid' | 'ThreeArrows' | 'ThreeArrowsGray' | 'ThreeFlags' | 'ThreeTrafficLights1' | 'ThreeTrafficLights2' | 'ThreeSigns' | 'ThreeSymbols' | 'ThreeSymbols2' | 'FourArrows' | 'FourArrowsGray' | 'FourRedToBlack' | 'FourRating' | 'FourTrafficLights' | 'FiveArrows' | 'FiveArrowsGray' | 'FiveRating' | 'FiveQuarters' | 'ThreeStars' | 'ThreeTriangles' | 'FiveBoxes'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the color scale criteria for conditional formatting.\\n*/\\ninterface ColorScaleConditionalFormat {\\n\\n    /**\\n* The criteria of the color scale. Midpoint is optional when using a two point color scale.\\n*/\\ncriteria: ConditionalColorScaleCriteria    \\n\\n/**\\n* If `true`, the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).\\n*/\\nreadonly threeColorScale: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a top/bottom conditional format.\\n*/\\ninterface TopBottomConditionalFormat {\\n\\n    /**\\n* Returns a format object, encapsulating the conditional format's font, fill, borders, and other properties.\\n*/\\nreadonly format: ConditionalRangeFormat    \\n\\n/**\\n* The criteria of the top/bottom conditional format.\\n*/\\nrule: ConditionalTopBottomRule\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the the preset criteria conditional format such as above average, below average, unique values, contains blank, nonblank, error, and noerror.\\n*/\\ninterface PresetCriteriaConditionalFormat {\\n\\n    /**\\n* Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\\n*/\\nreadonly format: ConditionalRangeFormat    \\n\\n/**\\n* The rule of the conditional format.\\n*/\\nrule: ConditionalPresetCriteriaRule\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a specific text conditional format.\\n*/\\ninterface TextConditionalFormat {\\n\\n    /**\\n* Returns a format object, encapsulating the conditional format's font, fill, borders, and other properties.\\n*/\\nreadonly format: ConditionalRangeFormat    \\n\\n/**\\n* The rule of the conditional format.\\n*/\\nrule: ConditionalTextComparisonRule\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a cell value conditional format.\\n*/\\ninterface CellValueConditionalFormat {\\n\\n    /**\\n* Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\\n*/\\nreadonly format: ConditionalRangeFormat    \\n\\n/**\\n* Specifies the rule object on this conditional format.\\n*/\\nrule: ConditionalCellValueRule\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* A format object encapsulating the conditional formats range's font, fill, borders, and other properties.\\n*/\\ninterface ConditionalRangeFormat {\\n\\n    /**\\n* Collection of border objects that apply to the overall conditional format range.\\n*/\\nreadonly borders: ConditionalRangeBorderCollection    \\n\\n/**\\n* Returns the fill object defined on the overall conditional format range.\\n*/\\nreadonly fill: ConditionalRangeFill    \\n\\n/**\\n* Returns the font object defined on the overall conditional format range.\\n*/\\nreadonly font: ConditionalRangeFont    \\n\\n/**\\n* Represents Excel's number format code for the given range. Cleared if `null` is passed in.\\n*/\\nnumberFormat: any\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* This object represents the font attributes (font style, color, etc.) for an object.\\n*/\\ninterface ConditionalRangeFont {\\n\\n    /**\\n* Specifies if the font is bold.\\n*/\\nbold: boolean    \\n\\n/**\\n* HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n*/\\ncolor: string    \\n\\n/**\\n* Specifies if the font is italic.\\n*/\\nitalic: boolean    \\n\\n/**\\n* Specifies the strikethrough status of the font.\\n*/\\nstrikethrough: boolean    \\n\\n/**\\n* The type of underline applied to the font. See `Excel.ConditionalRangeFontUnderlineStyle` for details.\\n*/\\nunderline: ConditionalRangeFontUnderlineStyle | 'None' | 'Single' | 'Double'\\n\\n    /**\\n* Resets the font formats.\\n*/\\nclear(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the background of a conditional range object.\\n*/\\ninterface ConditionalRangeFill {\\n\\n    /**\\n* HTML color code representing the color of the fill, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\ncolor: string\\n\\n    /**\\n* Resets the fill.\\n*/\\nclear(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the border of an object.\\n*/\\ninterface ConditionalRangeBorder {\\n\\n    /**\\n* HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\ncolor: string    \\n\\n/**\\n* Constant value that indicates the specific side of the border. See `Excel.ConditionalRangeBorderIndex` for details.\\n*/\\nreadonly sideIndex: ConditionalRangeBorderIndex | 'EdgeTop' | 'EdgeBottom' | 'EdgeLeft' | 'EdgeRight'    \\n\\n/**\\n* One of the constants of line style specifying the line style for the border. See `Excel.BorderLineStyle` for details.\\n*/\\nstyle: ConditionalRangeBorderLineStyle | 'None' | 'Continuous' | 'Dash' | 'DashDot' | 'DashDotDot' | 'Dot'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the border objects that make up range border.\\n*/\\ninterface ConditionalRangeBorderCollection {\\n\\n    /**\\n* Gets the bottom border.\\n*/\\nreadonly bottom: ConditionalRangeBorder    \\n\\n/**\\n* Number of border objects in the collection.\\n*/\\nreadonly count: number    \\n\\n/**\\n* Gets the left border.\\n*/\\nreadonly left: ConditionalRangeBorder    \\n\\n/**\\n* Gets the right border.\\n*/\\nreadonly right: ConditionalRangeBorder    \\n\\n/**\\n* Gets the top border.\\n*/\\nreadonly top: ConditionalRangeBorder\\n\\n    /**\\n* Gets a border object using its name.\\n* @param index Index value of the border object to be retrieved. See `Excel.ConditionalRangeBorderIndex` for details.\\n*/\\ngetItem(index:ConditionalRangeBorderIndex | 'EdgeTop' | 'EdgeBottom' | 'EdgeLeft' | 'EdgeRight'): ConditionalRangeBorder    \\n\\n/**\\n* Gets a border object using its index.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): ConditionalRangeBorder\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: ConditionalRangeBorder[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* An object encapsulating a style's format and other properties.\\n*/\\ninterface Style {\\n\\n    /**\\n* Specifies if text is automatically indented when the text alignment in a cell is set to equal distribution.\\n*/\\nautoIndent: boolean    \\n\\n/**\\n* A collection of four border objects that represent the style of the four borders.\\n*/\\nreadonly borders: RangeBorderCollection    \\n\\n/**\\n* Specifies if the style is a built-in style.\\n*/\\nreadonly builtIn: boolean    \\n\\n/**\\n* The fill of the style.\\n*/\\nreadonly fill: RangeFill    \\n\\n/**\\n* A `Font` object that represents the font of the style.\\n*/\\nreadonly font: RangeFont    \\n\\n/**\\n* Specifies if the formula will be hidden when the worksheet is protected.\\n*/\\nformulaHidden: boolean    \\n\\n/**\\n* Represents the horizontal alignment for the style. See `Excel.HorizontalAlignment` for details.\\n*/\\nhorizontalAlignment: HorizontalAlignment | 'General' | 'Left' | 'Center' | 'Right' | 'Fill' | 'Justify' | 'CenterAcrossSelection' | 'Distributed'    \\n\\n/**\\n* Specifies if the style includes the auto indent, horizontal alignment, vertical alignment, wrap text, indent level, and text orientation properties.\\n*/\\nincludeAlignment: boolean    \\n\\n/**\\n* Specifies if the style includes the color, color index, line style, and weight border properties.\\n*/\\nincludeBorder: boolean    \\n\\n/**\\n* Specifies if the style includes the background, bold, color, color index, font style, italic, name, size, strikethrough, subscript, superscript, and underline font properties.\\n*/\\nincludeFont: boolean    \\n\\n/**\\n* Specifies if the style includes the number format property.\\n*/\\nincludeNumber: boolean    \\n\\n/**\\n* Specifies if the style includes the color, color index, invert if negative, pattern, pattern color, and pattern color index interior properties.\\n*/\\nincludePatterns: boolean    \\n\\n/**\\n* Specifies if the style includes the formula hidden and locked protection properties.\\n*/\\nincludeProtection: boolean    \\n\\n/**\\n* An integer from 0 to 250 that indicates the indent level for the style.\\n*/\\nindentLevel: number    \\n\\n/**\\n* Specifies if the object is locked when the worksheet is protected.\\n*/\\nlocked: boolean    \\n\\n/**\\n* The name of the style.\\n*/\\nreadonly name: string    \\n\\n/**\\n* The format code of the number format for the style.\\n*/\\nnumberFormat: string    \\n\\n/**\\n* The localized format code of the number format for the style.\\n*/\\nnumberFormatLocal: string    \\n\\n/**\\n* The reading order for the style.\\n*/\\nreadingOrder: ReadingOrder | 'Context' | 'LeftToRight' | 'RightToLeft'    \\n\\n/**\\n* Specifies if text automatically shrinks to fit in the available column width.\\n*/\\nshrinkToFit: boolean    \\n\\n/**\\n* The text orientation for the style.\\n*/\\ntextOrientation: number    \\n\\n/**\\n* Specifies the vertical alignment for the style. See `Excel.VerticalAlignment` for details.\\n*/\\nverticalAlignment: VerticalAlignment | 'Top' | 'Center' | 'Bottom' | 'Justify' | 'Distributed'    \\n\\n/**\\n* Specifies if Excel wraps the text in the object.\\n*/\\nwrapText: boolean\\n\\n    /**\\n* Deletes this style.\\n*/\\ndelete(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the styles.\\n*/\\ninterface StyleCollection {\\n\\n    \\n\\n    /**\\n* Adds a new style to the collection.\\n* @param name Name of the style to be added.\\n*/\\nadd(name:string): void    \\n\\n/**\\n* Gets the number of styles in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a `Style` by name.\\n* @param name Name of the style to be retrieved.\\n*/\\ngetItem(name:string): Style    \\n\\n/**\\n* Gets a style based on its position in the collection.\\n* @param index Index value of the style object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Style\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Style[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of table styles.\\n*/\\ninterface TableStyleCollection {\\n\\n    \\n\\n    /**\\n* Creates a blank `TableStyle` with the specified name.\\n* @param name The unique name for the new table style. Will throw an `InvalidArgument` error if the name is already in use.\\n* @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n*/\\nadd(name:string, makeUniqueName?:boolean): TableStyle    \\n\\n/**\\n* Gets the number of table styles in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets the default table style for the parent object's scope.\\n*/\\ngetDefault(): TableStyle    \\n\\n/**\\n* Gets a `TableStyle` by name.\\n* @param name Name of the table style to be retrieved.\\n*/\\ngetItem(name:string): TableStyle    \\n\\n/**\\n* Gets a `TableStyle` by name. If the table style does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the table style to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): TableStyle    \\n\\n/**\\n* Sets the default table style for use in the parent object's scope.\\n* @param newDefaultStyle The `TableStyle` object, or name of the `TableStyle` object, that should be the new default.\\n*/\\nsetDefault(newDefaultStyle:TableStyle|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: TableStyle[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a table style, which defines the style elements by region of the table.\\n*/\\ninterface TableStyle {\\n\\n    /**\\n* Gets the name of the table style.\\n*/\\nname: string    \\n\\n/**\\n* Specifies if this `TableStyle` object is read-only.\\n*/\\nreadonly readOnly: boolean\\n\\n    /**\\n* Deletes the table style.\\n*/\\ndelete(): void    \\n\\n/**\\n* Creates a duplicate of this table style with copies of all the style elements.\\n*/\\nduplicate(): TableStyle\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of PivotTable styles.\\n*/\\ninterface PivotTableStyleCollection {\\n\\n    \\n\\n    /**\\n* Creates a blank `PivotTableStyle` with the specified name.\\n* @param name The unique name for the new PivotTable style. Will throw an `InvalidArgument` error if the name is already in use.\\n* @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n*/\\nadd(name:string, makeUniqueName?:boolean): PivotTableStyle    \\n\\n/**\\n* Gets the number of PivotTable styles in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets the default PivotTable style for the parent object's scope.\\n*/\\ngetDefault(): PivotTableStyle    \\n\\n/**\\n* Gets a `PivotTableStyle` by name.\\n* @param name Name of the PivotTable style to be retrieved.\\n*/\\ngetItem(name:string): PivotTableStyle    \\n\\n/**\\n* Gets a `PivotTableStyle` by name. If the `PivotTableStyle` does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the PivotTable style to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): PivotTableStyle    \\n\\n/**\\n* Sets the default PivotTable style for use in the parent object's scope.\\n* @param newDefaultStyle The `PivotTableStyle` object, or name of the `PivotTableStyle` object, that should be the new default.\\n*/\\nsetDefault(newDefaultStyle:PivotTableStyle|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PivotTableStyle[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a PivotTable style, which defines style elements by PivotTable region.\\n*/\\ninterface PivotTableStyle {\\n\\n    /**\\n* Gets the name of the PivotTable style.\\n*/\\nname: string    \\n\\n/**\\n* Specifies if this `PivotTableStyle` object is read-only.\\n*/\\nreadonly readOnly: boolean\\n\\n    /**\\n* Deletes the PivotTable style.\\n*/\\ndelete(): void    \\n\\n/**\\n* Creates a duplicate of this PivotTable style with copies of all the style elements.\\n*/\\nduplicate(): PivotTableStyle\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of `SlicerStyle` objects.\\n*/\\ninterface SlicerStyleCollection {\\n\\n    \\n\\n    /**\\n* Creates a blank slicer style with the specified name.\\n* @param name The unique name for the new slicer style. Will throw an `InvalidArgument` exception if the name is already in use.\\n* @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n*/\\nadd(name:string, makeUniqueName?:boolean): SlicerStyle    \\n\\n/**\\n* Gets the number of slicer styles in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets the default `SlicerStyle` for the parent object's scope.\\n*/\\ngetDefault(): SlicerStyle    \\n\\n/**\\n* Gets a `SlicerStyle` by name.\\n* @param name Name of the slicer style to be retrieved.\\n*/\\ngetItem(name:string): SlicerStyle    \\n\\n/**\\n* Gets a `SlicerStyle` by name. If the slicer style doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the slicer style to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): SlicerStyle    \\n\\n/**\\n* Sets the default slicer style for use in the parent object's scope.\\n* @param newDefaultStyle The `SlicerStyle` object, or name of the `SlicerStyle` object, that should be the new default.\\n*/\\nsetDefault(newDefaultStyle:SlicerStyle|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: SlicerStyle[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a slicer style, which defines style elements by region of the slicer.\\n*/\\ninterface SlicerStyle {\\n\\n    /**\\n* Gets the name of the slicer style.\\n*/\\nname: string    \\n\\n/**\\n* Specifies if this `SlicerStyle` object is read-only.\\n*/\\nreadonly readOnly: boolean\\n\\n    /**\\n* Deletes the slicer style.\\n*/\\ndelete(): void    \\n\\n/**\\n* Creates a duplicate of this slicer style with copies of all the style elements.\\n*/\\nduplicate(): SlicerStyle\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of timeline styles.\\n*/\\ninterface TimelineStyleCollection {\\n\\n    \\n\\n    /**\\n* Creates a blank `TimelineStyle` with the specified name.\\n* @param name The unique name for the new timeline style. Will throw an `InvalidArgument` error if the name is already in use.\\n* @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n*/\\nadd(name:string, makeUniqueName?:boolean): TimelineStyle    \\n\\n/**\\n* Gets the number of timeline styles in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets the default timeline style for the parent object's scope.\\n*/\\ngetDefault(): TimelineStyle    \\n\\n/**\\n* Gets a `TimelineStyle` by name.\\n* @param name Name of the timeline style to be retrieved.\\n*/\\ngetItem(name:string): TimelineStyle    \\n\\n/**\\n* Gets a `TimelineStyle` by name. If the timeline style doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param name Name of the timeline style to be retrieved.\\n*/\\ngetItemOrNullObject(name:string): TimelineStyle    \\n\\n/**\\n* Sets the default timeline style for use in the parent object's scope.\\n* @param newDefaultStyle The `TimelineStyle` object, or name of the `TimelineStyle` object, that should be the new default.\\n*/\\nsetDefault(newDefaultStyle:TimelineStyle|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: TimelineStyle[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a `TimelineStyle`, which defines style elements by region in the timeline.\\n*/\\ninterface TimelineStyle {\\n\\n    /**\\n* Gets the name of the timeline style.\\n*/\\nname: string    \\n\\n/**\\n* Specifies if this `TimelineStyle` object is read-only.\\n*/\\nreadonly readOnly: boolean\\n\\n    /**\\n* Deletes the table style.\\n*/\\ndelete(): void    \\n\\n/**\\n* Creates a duplicate of this timeline style with copies of all the style elements.\\n*/\\nduplicate(): TimelineStyle\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents layout and print settings that are not dependent on any printer-specific implementation. These settings include margins, orientation, page numbering, title rows, and print area.\\n*/\\ninterface PageLayout {\\n\\n    /**\\n* The worksheet's black and white print option.\\n*/\\nblackAndWhite: boolean    \\n\\n/**\\n* The worksheet's bottom page margin to use for printing in points.\\n*/\\nbottomMargin: number    \\n\\n/**\\n* The worksheet's center horizontally flag. This flag determines whether the worksheet will be centered horizontally when it's printed.\\n*/\\ncenterHorizontally: boolean    \\n\\n/**\\n* The worksheet's center vertically flag. This flag determines whether the worksheet will be centered vertically when it's printed.\\n*/\\ncenterVertically: boolean    \\n\\n/**\\n* The worksheet's draft mode option. If `true`, the sheet will be printed without graphics.\\n*/\\ndraftMode: boolean    \\n\\n/**\\n* The worksheet's first page number to print. A `null` value represents \\\"auto\\\" page numbering.\\n*/\\nfirstPageNumber: number|\\\"\\\"    \\n\\n/**\\n* The worksheet's footer margin, in points, for use when printing.\\n*/\\nfooterMargin: number    \\n\\n/**\\n* The worksheet's header margin, in points, for use when printing.\\n*/\\nheaderMargin: number    \\n\\n/**\\n* Header and footer configuration for the worksheet.\\n*/\\nreadonly headersFooters: HeaderFooterGroup    \\n\\n/**\\n* The worksheet's left margin, in points, for use when printing.\\n*/\\nleftMargin: number    \\n\\n/**\\n* The worksheet's orientation of the page.\\n*/\\norientation: PageOrientation | 'Portrait' | 'Landscape'    \\n\\n/**\\n* The worksheet's paper size of the page.\\n*/\\npaperSize: PaperType | 'Letter' | 'LetterSmall' | 'Tabloid' | 'Ledger' | 'Legal' | 'Statement' | 'Executive' | 'A3' | 'A4' | 'A4Small' | 'A5' | 'B4' | 'B5' | 'Folio' | 'Quatro' | 'Paper10x14' | 'Paper11x17' | 'Note' | 'Envelope9' | 'Envelope10' | 'Envelope11' | 'Envelope12' | 'Envelope14' | 'Csheet' | 'Dsheet' | 'Esheet' | 'EnvelopeDL' | 'EnvelopeC5' | 'EnvelopeC3' | 'EnvelopeC4' | 'EnvelopeC6' | 'EnvelopeC65' | 'EnvelopeB4' | 'EnvelopeB5' | 'EnvelopeB6' | 'EnvelopeItaly' | 'EnvelopeMonarch' | 'EnvelopePersonal' | 'FanfoldUS' | 'FanfoldStdGerman' | 'FanfoldLegalGerman'    \\n\\n/**\\n* Specifies if the worksheet's comments should be displayed when printing.\\n*/\\nprintComments: PrintComments | 'NoComments' | 'EndSheet' | 'InPlace'    \\n\\n/**\\n* The worksheet's print errors option.\\n*/\\nprintErrors: PrintErrorType | 'AsDisplayed' | 'Blank' | 'Dash' | 'NotAvailable'    \\n\\n/**\\n* Specifies if the worksheet's gridlines will be printed.\\n*/\\nprintGridlines: boolean    \\n\\n/**\\n* Specifies if the worksheet's headings will be printed.\\n*/\\nprintHeadings: boolean    \\n\\n/**\\n* The worksheet's page print order option. This specifies the order to use for processing the page number printed.\\n*/\\nprintOrder: PrintOrder | 'DownThenOver' | 'OverThenDown'    \\n\\n/**\\n* The worksheet's right margin, in points, for use when printing.\\n*/\\nrightMargin: number    \\n\\n/**\\n* The worksheet's top margin, in points, for use when printing.\\n*/\\ntopMargin: number    \\n\\n/**\\n* The worksheet's print zoom options.\\n* The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`).\\n*/\\nzoom: PageLayoutZoomOptions\\n\\n    /**\\n* Gets the `RangeAreas` object, comprising one or more rectangular ranges, that represents the print area for the worksheet. If there is no print area, an `ItemNotFound` error will be thrown.\\n*/\\ngetPrintArea(): RangeAreas    \\n\\n/**\\n* Gets the `RangeAreas` object, comprising one or more rectangular ranges, that represents the print area for the worksheet. If there is no print area, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetPrintAreaOrNullObject(): RangeAreas    \\n\\n/**\\n* Gets the range object representing the title columns.\\n*/\\ngetPrintTitleColumns(): Range    \\n\\n/**\\n* Gets the range object representing the title columns. If not set, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetPrintTitleColumnsOrNullObject(): Range    \\n\\n/**\\n* Gets the range object representing the title rows.\\n*/\\ngetPrintTitleRows(): Range    \\n\\n/**\\n* Gets the range object representing the title rows. If not set, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n*/\\ngetPrintTitleRowsOrNullObject(): Range    \\n\\n/**\\n* Sets the worksheet's print area.\\n* @param printArea The range or ranges of the content to print.\\n*/\\nsetPrintArea(printArea:Range|RangeAreas|string): void    \\n\\n/**\\n* Sets the worksheet's page margins with units.\\n* @param unit Measurement unit for the margins provided.\\n* @param marginOptions Margin values to set. Margins not provided remain unchanged.\\n*/\\nsetPrintMargins(unit:PrintMarginUnit | 'Points' | 'Inches' | 'Centimeters', marginOptions:PageLayoutMarginOptions): void    \\n\\n/**\\n* Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.\\n* @param printTitleColumns The columns to be repeated to the left of each page. The range must span the entire column to be valid.\\n*/\\nsetPrintTitleColumns(printTitleColumns:Range|string): void    \\n\\n/**\\n* Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.\\n* @param printTitleRows The rows to be repeated at the top of each page. The range must span the entire row to be valid.\\n*/\\nsetPrintTitleRows(printTitleRows:Range|string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\ninterface HeaderFooter {\\n\\n    /**\\n* The center footer of the worksheet.\\n* To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n*/\\ncenterFooter: string    \\n\\n/**\\n* The center header of the worksheet.\\n* To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n*/\\ncenterHeader: string    \\n\\n/**\\n* The left footer of the worksheet.\\n* To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n*/\\nleftFooter: string    \\n\\n/**\\n* The left header of the worksheet.\\n* To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n*/\\nleftHeader: string    \\n\\n/**\\n* The right footer of the worksheet.\\n* To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n*/\\nrightFooter: string    \\n\\n/**\\n* The right header of the worksheet.\\n* To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n*/\\nrightHeader: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\ninterface HeaderFooterGroup {\\n\\n    /**\\n* The general header/footer, used for all pages unless even/odd or first page is specified.\\n*/\\nreadonly defaultForAllPages: HeaderFooter    \\n\\n/**\\n* The header/footer to use for even pages, odd header/footer needs to be specified for odd pages.\\n*/\\nreadonly evenPages: HeaderFooter    \\n\\n/**\\n* The first page header/footer, for all other pages general or even/odd is used.\\n*/\\nreadonly firstPage: HeaderFooter    \\n\\n/**\\n* The header/footer to use for odd pages, even header/footer needs to be specified for even pages.\\n*/\\nreadonly oddPages: HeaderFooter    \\n\\n/**\\n* The state by which headers/footers are set. See `Excel.HeaderFooterState` for details.\\n*/\\nstate: HeaderFooterState | 'Default' | 'FirstAndDefault' | 'OddAndEven' | 'FirstOddAndEven'    \\n\\n/**\\n* Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options for the worksheet.\\n*/\\nuseSheetMargins: boolean    \\n\\n/**\\n* Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page layout options for the worksheet.\\n*/\\nuseSheetScale: boolean\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\ninterface PageBreak {\\n\\n    /**\\n* Specifies the column index for the page break.\\n*/\\nreadonly columnIndex: number\\n\\n    /**\\n* Deletes a page break object.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the first cell after the page break.\\n*/\\ngetCellAfterBreak(): Range\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\ninterface PageBreakCollection {\\n\\n    \\n\\n    /**\\n* Adds a page break before the top-left cell of the range specified.\\n* @param pageBreakRange The range immediately after the page break to be added.\\n*/\\nadd(pageBreakRange:Range|string): PageBreak    \\n\\n/**\\n* Gets the number of page breaks in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a page break object via the index.\\n* @param index Index of the page break.\\n*/\\ngetItem(index:number): PageBreak    \\n\\n/**\\n* Resets all manual page breaks in the collection.\\n*/\\nremovePageBreaks(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: PageBreak[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the data connections that are part of the workbook or worksheet.\\n*/\\ninterface DataConnectionCollection {\\n\\n    \\n\\n    /**\\n* Refreshes all the data connections in the collection.\\n*/\\nrefreshAll(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\ninterface RangeCollection {\\n\\n    \\n\\n    /**\\n* Returns the number of ranges in the `RangeCollection`.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Returns the range object based on its position in the `RangeCollection`.\\n* @param index Index value of the range object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Range\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Range[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Contains the collection of cross-workbook level ranges.\\n*/\\ninterface RangeAreasCollection {\\n\\n    \\n\\n    /**\\n* Gets the number of `RangeAreas` objects in this collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Returns the `RangeAreas` object based on position in the collection.\\n* @param index Index value of the range object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): RangeAreas\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: RangeAreas[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of comment objects that are part of the workbook.\\n*/\\ninterface CommentCollection {\\n\\n    \\n\\n    /**\\n* Creates a new comment with the given content on the given cell. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n* @param cellAddress The cell to which the comment is added. This can be a `Range` object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n* @param content The comment's content. This can be either a string or `CommentRichContent` object. Strings are used for plain text. `CommentRichContent` objects allow for other comment features, such as mentions.\\n* @param contentType Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\\n*/\\nadd(cellAddress:Range|string, content:CommentRichContent|string, contentType?:ContentType | 'Plain' | 'Mention'): Comment    \\n\\n/**\\n* Gets the number of comments in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a comment from the collection based on its ID.\\n* @param commentId The identifier for the comment.\\n*/\\ngetItem(commentId:string): Comment    \\n\\n/**\\n* Gets a comment from the collection based on its position.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Comment    \\n\\n/**\\n* Gets the comment from the specified cell.\\n* @param cellAddress The cell which the comment is on. This can be a `Range` object or a string. If it's a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n*/\\ngetItemByCell(cellAddress:Range|string): Comment    \\n\\n/**\\n* Gets the comment to which the given reply is connected.\\n* @param replyId The identifier of comment reply.\\n*/\\ngetItemByReplyId(replyId:string): Comment\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Comment[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a comment in the workbook.\\n*/\\ninterface Comment {\\n\\n    /**\\n* Gets the email of the comment's author.\\n*/\\nreadonly authorEmail: string    \\n\\n/**\\n* Gets the name of the comment's author.\\n*/\\nreadonly authorName: string    \\n\\n/**\\n* The comment's content. The string is plain text.\\n*/\\ncontent: string    \\n\\n/**\\n* Gets the content type of the comment.\\n*/\\nreadonly contentType: ContentType | 'Plain' | 'Mention'    \\n\\n/**\\n* Gets the creation time of the comment. Returns `null` if the comment was converted from a note, since the comment does not have a creation date.\\n*/\\nreadonly creationDate: Date    \\n\\n/**\\n* Specifies the comment identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Gets the entities (e.g., people) that are mentioned in comments.\\n*/\\nreadonly mentions: CommentMention[]    \\n\\n/**\\n* Represents a collection of reply objects associated with the comment.\\n*/\\nreadonly replies: CommentReplyCollection    \\n\\n/**\\n* The comment thread status. A value of `true` means that the comment thread is resolved.\\n*/\\nresolved: boolean    \\n\\n/**\\n* Gets the rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\\n*/\\nreadonly richContent: string\\n\\n    /**\\n* Deletes the comment and all the connected replies.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the cell where this comment is located.\\n*/\\ngetLocation(): Range    \\n\\n/**\\n* Updates the comment content with a specially formatted string and a list of mentions.\\n* @param contentWithMentions The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\\n*/\\nupdateMentions(contentWithMentions:CommentRichContent): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of comment reply objects that are part of the comment.\\n*/\\ninterface CommentReplyCollection {\\n\\n    \\n\\n    /**\\n* Creates a comment reply for a comment.\\n* @param content The comment's content. This can be either a string or a `CommentRichContent` object (e.g., for comments with mentions).\\n* @param contentType Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\\n*/\\nadd(content:CommentRichContent|string, contentType?:ContentType | 'Plain' | 'Mention'): CommentReply    \\n\\n/**\\n* Gets the number of comment replies in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Returns a comment reply identified by its ID.\\n* @param commentReplyId The identifier for the comment reply.\\n*/\\ngetItem(commentReplyId:string): CommentReply    \\n\\n/**\\n* Gets a comment reply based on its position in the collection.\\n* @param index The index value of the comment reply to be retrieved. The collection uses zero-based indexing.\\n*/\\ngetItemAt(index:number): CommentReply\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: CommentReply[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a comment reply in the workbook.\\n*/\\ninterface CommentReply {\\n\\n    /**\\n* Gets the email of the comment reply's author.\\n*/\\nreadonly authorEmail: string    \\n\\n/**\\n* Gets the name of the comment reply's author.\\n*/\\nreadonly authorName: string    \\n\\n/**\\n* The comment reply's content. The string is plain text.\\n*/\\ncontent: string    \\n\\n/**\\n* The content type of the reply.\\n*/\\nreadonly contentType: ContentType | 'Plain' | 'Mention'    \\n\\n/**\\n* Gets the creation time of the comment reply.\\n*/\\nreadonly creationDate: Date    \\n\\n/**\\n* Specifies the comment reply identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* The entities (e.g., people) that are mentioned in comments.\\n*/\\nreadonly mentions: CommentMention[]    \\n\\n/**\\n* The comment reply status. A value of `true` means the reply is in the resolved state.\\n*/\\nreadonly resolved: boolean    \\n\\n/**\\n* The rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\\n*/\\nreadonly richContent: string\\n\\n    /**\\n* Deletes the comment reply.\\n*/\\ndelete(): void    \\n\\n/**\\n* Gets the cell where this comment reply is located.\\n*/\\ngetLocation(): Range    \\n\\n/**\\n* Gets the parent comment of this reply.\\n*/\\ngetParentComment(): Comment    \\n\\n/**\\n* Updates the comment content with a specially formatted string and a list of mentions.\\n* @param contentWithMentions The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\\n*/\\nupdateMentions(contentWithMentions:CommentRichContent): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the shapes in the worksheet.\\n*/\\ninterface ShapeCollection {\\n\\n    \\n\\n    /**\\n* Adds a geometric shape to the worksheet. Returns a `Shape` object that represents the new shape.\\n* @param geometricShapeType Represents the type of the geometric shape. See `Excel.GeometricShapeType` for details.\\n*/\\naddGeometricShape(geometricShapeType:GeometricShapeType | 'LineInverse' | 'Triangle' | 'RightTriangle' | 'Rectangle' | 'Diamond' | 'Parallelogram' | 'Trapezoid' | 'NonIsoscelesTrapezoid' | 'Pentagon' | 'Hexagon' | 'Heptagon' | 'Octagon' | 'Decagon' | 'Dodecagon' | 'Star4' | 'Star5' | 'Star6' | 'Star7' | 'Star8' | 'Star10' | 'Star12' | 'Star16' | 'Star24' | 'Star32' | 'RoundRectangle' | 'Round1Rectangle' | 'Round2SameRectangle' | 'Round2DiagonalRectangle' | 'SnipRoundRectangle' | 'Snip1Rectangle' | 'Snip2SameRectangle' | 'Snip2DiagonalRectangle' | 'Plaque' | 'Ellipse' | 'Teardrop' | 'HomePlate' | 'Chevron' | 'PieWedge' | 'Pie' | 'BlockArc' | 'Donut' | 'NoSmoking' | 'RightArrow' | 'LeftArrow' | 'UpArrow' | 'DownArrow' | 'StripedRightArrow' | 'NotchedRightArrow' | 'BentUpArrow' | 'LeftRightArrow' | 'UpDownArrow' | 'LeftUpArrow' | 'LeftRightUpArrow' | 'QuadArrow' | 'LeftArrowCallout' | 'RightArrowCallout' | 'UpArrowCallout' | 'DownArrowCallout' | 'LeftRightArrowCallout' | 'UpDownArrowCallout' | 'QuadArrowCallout' | 'BentArrow' | 'UturnArrow' | 'CircularArrow' | 'LeftCircularArrow' | 'LeftRightCircularArrow' | 'CurvedRightArrow' | 'CurvedLeftArrow' | 'CurvedUpArrow' | 'CurvedDownArrow' | 'SwooshArrow' | 'Cube' | 'Can' | 'LightningBolt' | 'Heart' | 'Sun' | 'Moon' | 'SmileyFace' | 'IrregularSeal1' | 'IrregularSeal2' | 'FoldedCorner' | 'Bevel' | 'Frame' | 'HalfFrame' | 'Corner' | 'DiagonalStripe' | 'Chord' | 'Arc' | 'LeftBracket' | 'RightBracket' | 'LeftBrace' | 'RightBrace' | 'BracketPair' | 'BracePair' | 'Callout1' | 'Callout2' | 'Callout3' | 'AccentCallout1' | 'AccentCallout2' | 'AccentCallout3' | 'BorderCallout1' | 'BorderCallout2' | 'BorderCallout3' | 'AccentBorderCallout1' | 'AccentBorderCallout2' | 'AccentBorderCallout3' | 'WedgeRectCallout' | 'WedgeRRectCallout' | 'WedgeEllipseCallout' | 'CloudCallout' | 'Cloud' | 'Ribbon' | 'Ribbon2' | 'EllipseRibbon' | 'EllipseRibbon2' | 'LeftRightRibbon' | 'VerticalScroll' | 'HorizontalScroll' | 'Wave' | 'DoubleWave' | 'Plus' | 'FlowChartProcess' | 'FlowChartDecision' | 'FlowChartInputOutput' | 'FlowChartPredefinedProcess' | 'FlowChartInternalStorage' | 'FlowChartDocument' | 'FlowChartMultidocument' | 'FlowChartTerminator' | 'FlowChartPreparation' | 'FlowChartManualInput' | 'FlowChartManualOperation' | 'FlowChartConnector' | 'FlowChartPunchedCard' | 'FlowChartPunchedTape' | 'FlowChartSummingJunction' | 'FlowChartOr' | 'FlowChartCollate' | 'FlowChartSort' | 'FlowChartExtract' | 'FlowChartMerge' | 'FlowChartOfflineStorage' | 'FlowChartOnlineStorage' | 'FlowChartMagneticTape' | 'FlowChartMagneticDisk' | 'FlowChartMagneticDrum' | 'FlowChartDisplay' | 'FlowChartDelay' | 'FlowChartAlternateProcess' | 'FlowChartOffpageConnector' | 'ActionButtonBlank' | 'ActionButtonHome' | 'ActionButtonHelp' | 'ActionButtonInformation' | 'ActionButtonForwardNext' | 'ActionButtonBackPrevious' | 'ActionButtonEnd' | 'ActionButtonBeginning' | 'ActionButtonReturn' | 'ActionButtonDocument' | 'ActionButtonSound' | 'ActionButtonMovie' | 'Gear6' | 'Gear9' | 'Funnel' | 'MathPlus' | 'MathMinus' | 'MathMultiply' | 'MathDivide' | 'MathEqual' | 'MathNotEqual' | 'CornerTabs' | 'SquareTabs' | 'PlaqueTabs' | 'ChartX' | 'ChartStar' | 'ChartPlus'): Shape    \\n\\n/**\\n* Groups a subset of shapes in this collection's worksheet. Returns a `Shape` object that represents the new group of shapes.\\n* @param values An array of shape IDs or shape objects.\\n*/\\naddGroup(values:Array<string|Shape>): Shape    \\n\\n/**\\n* Creates an image from a base64-encoded string and adds it to the worksheet. Returns the `Shape` object that represents the new image.\\n* @param base64ImageString A base64-encoded string representing an image in either JPEG or PNG format.\\n*/\\naddImage(base64ImageString:string): Shape    \\n\\n/**\\n* Adds a line to worksheet. Returns a `Shape` object that represents the new line.\\n* @param startLeft The distance, in points, from the start of the line to the left side of the worksheet.\\n* @param startTop The distance, in points, from the start of the line to the top of the worksheet.\\n* @param endLeft The distance, in points, from the end of the line to the left of the worksheet.\\n* @param endTop The distance, in points, from the end of the line to the top of the worksheet.\\n* @param connectorType Represents the connector type. See `Excel.ConnectorType` for details.\\n*/\\naddLine(startLeft:number, startTop:number, endLeft:number, endTop:number, connectorType?:ConnectorType | 'Straight' | 'Elbow' | 'Curve'): Shape    \\n\\n/**\\n* Adds a text box to the worksheet with the provided text as the content. Returns a `Shape` object that represents the new text box.\\n* @param text Represents the text that will be shown in the created text box.\\n*/\\naddTextBox(text?:string): Shape    \\n\\n/**\\n* Returns the number of shapes in the worksheet.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a shape using its name or ID.\\n* @param key The name or ID of the shape to be retrieved.\\n*/\\ngetItem(key:string): Shape    \\n\\n/**\\n* Gets a shape using its position in the collection.\\n* @param index The zero-based index of the shape to be retrieved.\\n*/\\ngetItemAt(index:number): Shape    \\n\\n/**\\n* Returns a shape identified by the shape ID.\\n* @param shapeId The identifier for the shape.\\n*/\\n_GetItem(shapeId:string): Shape\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Shape[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a generic shape object in the worksheet. A shape could be a geometric shape, a line, a group of shapes, etc.\\n* To learn more about the shape object model, read {@link https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes | Work with shapes using the Excel JavaScript API}.\\n*/\\ninterface Shape {\\n\\n    /**\\n* Specifies the alternative description text for a `Shape` object.\\n*/\\naltTextDescription: string    \\n\\n/**\\n* Specifies the alternative title text for a `Shape` object.\\n*/\\naltTextTitle: string    \\n\\n/**\\n* Returns the number of connection sites on this shape.\\n*/\\nreadonly connectionSiteCount: number    \\n\\n/**\\n* Returns the fill formatting of this shape.\\n*/\\nreadonly fill: ShapeFill    \\n\\n/**\\n* Returns the geometric shape associated with the shape. An error will be thrown if the shape type is not \\\"GeometricShape\\\".\\n*/\\nreadonly geometricShape: GeometricShape    \\n\\n/**\\n* Specifies the geometric shape type of this geometric shape. See `Excel.GeometricShapeType` for details. Returns `null` if the shape type is not \\\"GeometricShape\\\".\\n*/\\ngeometricShapeType: GeometricShapeType | 'LineInverse' | 'Triangle' | 'RightTriangle' | 'Rectangle' | 'Diamond' | 'Parallelogram' | 'Trapezoid' | 'NonIsoscelesTrapezoid' | 'Pentagon' | 'Hexagon' | 'Heptagon' | 'Octagon' | 'Decagon' | 'Dodecagon' | 'Star4' | 'Star5' | 'Star6' | 'Star7' | 'Star8' | 'Star10' | 'Star12' | 'Star16' | 'Star24' | 'Star32' | 'RoundRectangle' | 'Round1Rectangle' | 'Round2SameRectangle' | 'Round2DiagonalRectangle' | 'SnipRoundRectangle' | 'Snip1Rectangle' | 'Snip2SameRectangle' | 'Snip2DiagonalRectangle' | 'Plaque' | 'Ellipse' | 'Teardrop' | 'HomePlate' | 'Chevron' | 'PieWedge' | 'Pie' | 'BlockArc' | 'Donut' | 'NoSmoking' | 'RightArrow' | 'LeftArrow' | 'UpArrow' | 'DownArrow' | 'StripedRightArrow' | 'NotchedRightArrow' | 'BentUpArrow' | 'LeftRightArrow' | 'UpDownArrow' | 'LeftUpArrow' | 'LeftRightUpArrow' | 'QuadArrow' | 'LeftArrowCallout' | 'RightArrowCallout' | 'UpArrowCallout' | 'DownArrowCallout' | 'LeftRightArrowCallout' | 'UpDownArrowCallout' | 'QuadArrowCallout' | 'BentArrow' | 'UturnArrow' | 'CircularArrow' | 'LeftCircularArrow' | 'LeftRightCircularArrow' | 'CurvedRightArrow' | 'CurvedLeftArrow' | 'CurvedUpArrow' | 'CurvedDownArrow' | 'SwooshArrow' | 'Cube' | 'Can' | 'LightningBolt' | 'Heart' | 'Sun' | 'Moon' | 'SmileyFace' | 'IrregularSeal1' | 'IrregularSeal2' | 'FoldedCorner' | 'Bevel' | 'Frame' | 'HalfFrame' | 'Corner' | 'DiagonalStripe' | 'Chord' | 'Arc' | 'LeftBracket' | 'RightBracket' | 'LeftBrace' | 'RightBrace' | 'BracketPair' | 'BracePair' | 'Callout1' | 'Callout2' | 'Callout3' | 'AccentCallout1' | 'AccentCallout2' | 'AccentCallout3' | 'BorderCallout1' | 'BorderCallout2' | 'BorderCallout3' | 'AccentBorderCallout1' | 'AccentBorderCallout2' | 'AccentBorderCallout3' | 'WedgeRectCallout' | 'WedgeRRectCallout' | 'WedgeEllipseCallout' | 'CloudCallout' | 'Cloud' | 'Ribbon' | 'Ribbon2' | 'EllipseRibbon' | 'EllipseRibbon2' | 'LeftRightRibbon' | 'VerticalScroll' | 'HorizontalScroll' | 'Wave' | 'DoubleWave' | 'Plus' | 'FlowChartProcess' | 'FlowChartDecision' | 'FlowChartInputOutput' | 'FlowChartPredefinedProcess' | 'FlowChartInternalStorage' | 'FlowChartDocument' | 'FlowChartMultidocument' | 'FlowChartTerminator' | 'FlowChartPreparation' | 'FlowChartManualInput' | 'FlowChartManualOperation' | 'FlowChartConnector' | 'FlowChartPunchedCard' | 'FlowChartPunchedTape' | 'FlowChartSummingJunction' | 'FlowChartOr' | 'FlowChartCollate' | 'FlowChartSort' | 'FlowChartExtract' | 'FlowChartMerge' | 'FlowChartOfflineStorage' | 'FlowChartOnlineStorage' | 'FlowChartMagneticTape' | 'FlowChartMagneticDisk' | 'FlowChartMagneticDrum' | 'FlowChartDisplay' | 'FlowChartDelay' | 'FlowChartAlternateProcess' | 'FlowChartOffpageConnector' | 'ActionButtonBlank' | 'ActionButtonHome' | 'ActionButtonHelp' | 'ActionButtonInformation' | 'ActionButtonForwardNext' | 'ActionButtonBackPrevious' | 'ActionButtonEnd' | 'ActionButtonBeginning' | 'ActionButtonReturn' | 'ActionButtonDocument' | 'ActionButtonSound' | 'ActionButtonMovie' | 'Gear6' | 'Gear9' | 'Funnel' | 'MathPlus' | 'MathMinus' | 'MathMultiply' | 'MathDivide' | 'MathEqual' | 'MathNotEqual' | 'CornerTabs' | 'SquareTabs' | 'PlaqueTabs' | 'ChartX' | 'ChartStar' | 'ChartPlus'    \\n\\n/**\\n* Returns the shape group associated with the shape. An error will be thrown if the shape type is not \\\"GroupShape\\\".\\n*/\\nreadonly group: ShapeGroup    \\n\\n/**\\n* Specifies the height, in points, of the shape.\\n* Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n*/\\nheight: number    \\n\\n/**\\n* Specifies the shape identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the image associated with the shape. An error will be thrown if the shape type is not \\\"Image\\\".\\n*/\\nreadonly image: Image    \\n\\n/**\\n* The distance, in points, from the left side of the shape to the left side of the worksheet.\\n* Throws an `InvalidArgument` exception when set with a negative value as an input.\\n*/\\nleft: number    \\n\\n/**\\n* Specifies the level of the specified shape. For example, a level of 0 means that the shape is not part of any groups, a level of 1 means the shape is part of a top-level group, and a level of 2 means the shape is part of a sub-group of the top level.\\n*/\\nreadonly level: number    \\n\\n/**\\n* Returns the line associated with the shape. An error will be thrown if the shape type is not \\\"Line\\\".\\n*/\\nreadonly line: Line    \\n\\n/**\\n* Returns the line formatting of this shape.\\n*/\\nreadonly lineFormat: ShapeLineFormat    \\n\\n/**\\n* Specifies if the aspect ratio of this shape is locked.\\n*/\\nlockAspectRatio: boolean    \\n\\n/**\\n* Specifies the name of the shape.\\n*/\\nname: string    \\n\\n/**\\n* Specifies the parent group of this shape.\\n*/\\nreadonly parentGroup: Shape    \\n\\n/**\\n* Represents how the object is attached to the cells below it.\\n*/\\nplacement: Placement | 'TwoCell' | 'OneCell' | 'Absolute'    \\n\\n/**\\n* Specifies the rotation, in degrees, of the shape.\\n*/\\nrotation: number    \\n\\n/**\\n* Returns the text frame object of this shape.\\n*/\\nreadonly textFrame: TextFrame    \\n\\n/**\\n* The distance, in points, from the top edge of the shape to the top edge of the worksheet.\\n* Throws an `InvalidArgument` exception when set with a negative value as an input.\\n*/\\ntop: number    \\n\\n/**\\n* Returns the type of this shape. See `Excel.ShapeType` for details.\\n*/\\nreadonly type: ShapeType | 'Unsupported' | 'Image' | 'GeometricShape' | 'Group' | 'Line'    \\n\\n/**\\n* Specifies if the shape is visible.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Specifies the width, in points, of the shape.\\n* Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n*/\\nwidth: number    \\n\\n/**\\n* Returns the position of the specified shape in the z-order, with 0 representing the bottom of the order stack.\\n*/\\nreadonly zOrderPosition: number\\n\\n    /**\\n* Copies and pastes a `Shape` object.\\n* The pasted shape is copied to the same pixel location as this shape.\\n* @param destinationSheet The sheet to which the shape object will be pasted. The default value is the copied shape's worksheet.\\n*/\\ncopyTo(destinationSheet?:Worksheet|string): Shape    \\n\\n/**\\n* Removes the shape from the worksheet.\\n*/\\ndelete(): void    \\n\\n/**\\n* Converts the shape to an image and returns the image as a base64-encoded string. The DPI is 96. The only supported formats are `Excel.PictureFormat.BMP`, `Excel.PictureFormat.PNG`, `Excel.PictureFormat.JPEG`, and `Excel.PictureFormat.GIF`.\\n* @param format Specifies the format of the image.\\n*/\\ngetAsImage(format:PictureFormat | 'Unknown' | 'Bmp' | 'Jpeg' | 'Gif' | 'Png' | 'Svg'): ClientResult<string>    \\n\\n/**\\n* Moves the shape horizontally by the specified number of points.\\n* @param increment The increment, in points, the shape will be horizontally moved. A positive value moves the shape to the right and a negative value moves it to the left. If the sheet is right-to-left oriented, this is reversed: positive values will move the shape to the left and negative values will move it to the right.\\n*/\\nincrementLeft(increment:number): void    \\n\\n/**\\n* Rotates the shape clockwise around the z-axis by the specified number of degrees.\\n* Use the `rotation` property to set the absolute rotation of the shape.\\n* @param increment How many degrees the shape will be rotated. A positive value rotates the shape clockwise and a negative value rotates it counterclockwise.\\n*/\\nincrementRotation(increment:number): void    \\n\\n/**\\n* Moves the shape vertically by the specified number of points.\\n* @param increment The increment, in points, the shape will be vertically moved. A positive value moves the shape down and a negative value moves it up.\\n*/\\nincrementTop(increment:number): void    \\n\\n/**\\n* Scales the height of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.\\n* @param scaleFactor Specifies the ratio between the height of the shape after you resize it and the current or original height.\\n* @param scaleType Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\\n* @param scaleFrom Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its position.\\n*/\\nscaleHeight(scaleFactor:number, scaleType:ShapeScaleType | 'CurrentSize' | 'OriginalSize', scaleFrom?:ShapeScaleFrom | 'ScaleFromTopLeft' | 'ScaleFromMiddle' | 'ScaleFromBottomRight'): void    \\n\\n/**\\n* Scales the width of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current width.\\n* @param scaleFactor Specifies the ratio between the width of the shape after you resize it and the current or original width.\\n* @param scaleType Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\\n* @param scaleFrom Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape's upper left corner retains its position.\\n*/\\nscaleWidth(scaleFactor:number, scaleType:ShapeScaleType | 'CurrentSize' | 'OriginalSize', scaleFrom?:ShapeScaleFrom | 'ScaleFromTopLeft' | 'ScaleFromMiddle' | 'ScaleFromBottomRight'): void    \\n\\n/**\\n* Moves the specified shape up or down the collection's z-order, which shifts it in front of or behind other shapes.\\n* @param position Where to move the shape in the z-order stack relative to the other shapes. See `Excel.ShapeZOrder` for details.\\n*/\\nsetZOrder(position:ShapeZOrder | 'BringToFront' | 'BringForward' | 'SendToBack' | 'SendBackward'): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a geometric shape inside a worksheet. A geometric shape can be a rectangle, block arrow, equation symbol, flowchart item, star, banner, callout, or any other basic shape in Excel.\\n*/\\ninterface GeometricShape {\\n\\n    /**\\n* Returns the shape identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the `Shape` object for the geometric shape.\\n*/\\nreadonly shape: Shape\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents an image in the worksheet. To get the corresponding `Shape` object, use `Image.shape`.\\n*/\\ninterface Image {\\n\\n    /**\\n* Specifies the shape identifier for the image object.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the `Shape` object associated with the image.\\n*/\\nreadonly shape: Shape    \\n\\n/**\\n* Returns the format of the image.\\n*/\\nreadonly format: PictureFormat | 'Unknown' | 'Bmp' | 'Jpeg' | 'Gif' | 'Png' | 'Svg'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a shape group inside a worksheet. To get the corresponding `Shape` object, use `ShapeGroup.shape`.\\n*/\\ninterface ShapeGroup {\\n\\n    /**\\n* Specifies the shape identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Returns the `Shape` object associated with the group.\\n*/\\nreadonly shape: Shape    \\n\\n/**\\n* Returns the collection of `Shape` objects.\\n*/\\nreadonly shapes: GroupShapeCollection\\n\\n    /**\\n* Ungroups any grouped shapes in the specified shape group.\\n*/\\nungroup(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the shape collection inside a shape group.\\n*/\\ninterface GroupShapeCollection {\\n\\n    \\n\\n    /**\\n* Returns the number of shapes in the shape group.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a shape using its name or ID.\\n* @param key The name or ID of the shape to be retrieved.\\n*/\\ngetItem(key:string): Shape    \\n\\n/**\\n* Gets a shape based on its position in the collection.\\n* @param index The zero-based index value of the object to be retrieved.\\n*/\\ngetItemAt(index:number): Shape    \\n\\n/**\\n* Returns a shape identified by the shape ID.\\n* @param shapeId The identifier for the shape.\\n*/\\n_GetItem(shapeId:string): Shape\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Shape[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a line inside a worksheet. To get the corresponding `Shape` object, use `Line.shape`.\\n*/\\ninterface Line {\\n\\n    /**\\n* Represents the length of the arrowhead at the beginning of the specified line.\\n*/\\nbeginArrowheadLength: ArrowheadLength | 'Short' | 'Medium' | 'Long'    \\n\\n/**\\n* Represents the style of the arrowhead at the beginning of the specified line.\\n*/\\nbeginArrowheadStyle: ArrowheadStyle | 'None' | 'Triangle' | 'Stealth' | 'Diamond' | 'Oval' | 'Open'    \\n\\n/**\\n* Represents the width of the arrowhead at the beginning of the specified line.\\n*/\\nbeginArrowheadWidth: ArrowheadWidth | 'Narrow' | 'Medium' | 'Wide'    \\n\\n/**\\n* Represents the shape to which the beginning of the specified line is attached.\\n*/\\nreadonly beginConnectedShape: Shape    \\n\\n/**\\n* Represents the connection site to which the beginning of a connector is connected. Returns `null` when the beginning of the line is not attached to any shape.\\n*/\\nreadonly beginConnectedSite: number    \\n\\n/**\\n* Represents the length of the arrowhead at the end of the specified line.\\n*/\\nendArrowheadLength: ArrowheadLength | 'Short' | 'Medium' | 'Long'    \\n\\n/**\\n* Represents the style of the arrowhead at the end of the specified line.\\n*/\\nendArrowheadStyle: ArrowheadStyle | 'None' | 'Triangle' | 'Stealth' | 'Diamond' | 'Oval' | 'Open'    \\n\\n/**\\n* Represents the width of the arrowhead at the end of the specified line.\\n*/\\nendArrowheadWidth: ArrowheadWidth | 'Narrow' | 'Medium' | 'Wide'    \\n\\n/**\\n* Represents the shape to which the end of the specified line is attached.\\n*/\\nreadonly endConnectedShape: Shape    \\n\\n/**\\n* Represents the connection site to which the end of a connector is connected. Returns `null` when the end of the line is not attached to any shape.\\n*/\\nreadonly endConnectedSite: number    \\n\\n/**\\n* Specifies the shape identifier.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Specifies if the beginning of the specified line is connected to a shape.\\n*/\\nreadonly isBeginConnected: boolean    \\n\\n/**\\n* Specifies if the end of the specified line is connected to a shape.\\n*/\\nreadonly isEndConnected: boolean    \\n\\n/**\\n* Returns the `Shape` object associated with the line.\\n*/\\nreadonly shape: Shape    \\n\\n/**\\n* Represents the connector type for the line.\\n*/\\nconnectorType: ConnectorType | 'Straight' | 'Elbow' | 'Curve'\\n\\n    /**\\n* Attaches the beginning of the specified connector to a specified shape.\\n* @param shape The shape to connect.\\n* @param connectionSite The connection site on the shape to which the beginning of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\\n*/\\nconnectBeginShape(shape:Shape, connectionSite:number): void    \\n\\n/**\\n* Attaches the end of the specified connector to a specified shape.\\n* @param shape The shape to connect.\\n* @param connectionSite The connection site on the shape to which the end of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\\n*/\\nconnectEndShape(shape:Shape, connectionSite:number): void    \\n\\n/**\\n* Detaches the beginning of the specified connector from a shape.\\n*/\\ndisconnectBeginShape(): void    \\n\\n/**\\n* Detaches the end of the specified connector from a shape.\\n*/\\ndisconnectEndShape(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the fill formatting of a shape object.\\n*/\\ninterface ShapeFill {\\n\\n    /**\\n* Represents the shape fill foreground color in HTML color format, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\")\\n*/\\nforegroundColor: string    \\n\\n/**\\n* Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.\\n*/\\ntransparency: number    \\n\\n/**\\n* Returns the fill type of the shape. See `Excel.ShapeFillType` for details.\\n*/\\nreadonly type: ShapeFillType | 'NoFill' | 'Solid' | 'Gradient' | 'Pattern' | 'PictureAndTexture' | 'Mixed'\\n\\n    /**\\n* Clears the fill formatting of this shape.\\n*/\\nclear(): void    \\n\\n/**\\n* Sets the fill formatting of the shape to a uniform color. This changes the fill type to \\\"Solid\\\".\\n* @param color A string that represents the fill color in HTML color format, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\nsetSolidColor(color:string): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the line formatting for the shape object. For images and geometric shapes, line formatting represents the border of the shape.\\n*/\\ninterface ShapeLineFormat {\\n\\n    /**\\n* Represents the line color in HTML color format, in the form #RRGGBB (e.g., \\\"FFA500\\\") or as a named HTML color (e.g., \\\"orange\\\").\\n*/\\ncolor: string    \\n\\n/**\\n* Represents the line style of the shape. Returns `null` when the line is not visible or there are inconsistent dash styles. See `Excel.ShapeLineDashStyle` for details.\\n*/\\ndashStyle: ShapeLineDashStyle | 'Dash' | 'DashDot' | 'DashDotDot' | 'LongDash' | 'LongDashDot' | 'RoundDot' | 'Solid' | 'SquareDot' | 'LongDashDotDot' | 'SystemDash' | 'SystemDot' | 'SystemDashDot'    \\n\\n/**\\n* Represents the line style of the shape. Returns `null` when the line is not visible or there are inconsistent styles. See `Excel.ShapeLineStyle` for details.\\n*/\\nstyle: ShapeLineStyle | 'Single' | 'ThickBetweenThin' | 'ThickThin' | 'ThinThick' | 'ThinThin'    \\n\\n/**\\n* Represents the degree of transparency of the specified line as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` when the shape has inconsistent transparencies.\\n*/\\ntransparency: number    \\n\\n/**\\n* Specifies if the line formatting of a shape element is visible. Returns `null` when the shape has inconsistent visibilities.\\n*/\\nvisible: boolean    \\n\\n/**\\n* Represents the weight of the line, in points. Returns `null` when the line is not visible or there are inconsistent line weights.\\n*/\\nweight: number\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the text frame of a shape object.\\n*/\\ninterface TextFrame {\\n\\n    /**\\n* The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.\\n*/\\nautoSizeSetting: ShapeAutoSize | 'AutoSizeNone' | 'AutoSizeTextToFitShape' | 'AutoSizeShapeToFitText' | 'AutoSizeMixed'    \\n\\n/**\\n* Represents the bottom margin, in points, of the text frame.\\n*/\\nbottomMargin: number    \\n\\n/**\\n* Specifies if the text frame contains text.\\n*/\\nreadonly hasText: boolean    \\n\\n/**\\n* Represents the horizontal alignment of the text frame. See `Excel.ShapeTextHorizontalAlignment` for details.\\n*/\\nhorizontalAlignment: ShapeTextHorizontalAlignment | 'Left' | 'Center' | 'Right' | 'Justify' | 'JustifyLow' | 'Distributed' | 'ThaiDistributed'    \\n\\n/**\\n* Represents the horizontal overflow behavior of the text frame. See `Excel.ShapeTextHorizontalOverflow` for details.\\n*/\\nhorizontalOverflow: ShapeTextHorizontalOverflow | 'Overflow' | 'Clip'    \\n\\n/**\\n* Represents the left margin, in points, of the text frame.\\n*/\\nleftMargin: number    \\n\\n/**\\n* Represents the angle to which the text is oriented for the text frame. See `Excel.ShapeTextOrientation` for details.\\n*/\\norientation: ShapeTextOrientation | 'Horizontal' | 'Vertical' | 'Vertical270' | 'WordArtVertical' | 'EastAsianVertical' | 'MongolianVertical' | 'WordArtVerticalRTL'    \\n\\n/**\\n* Represents the reading order of the text frame, either left-to-right or right-to-left. See `Excel.ShapeTextReadingOrder` for details.\\n*/\\nreadingOrder: ShapeTextReadingOrder | 'LeftToRight' | 'RightToLeft'    \\n\\n/**\\n* Represents the right margin, in points, of the text frame.\\n*/\\nrightMargin: number    \\n\\n/**\\n* Represents the text that is attached to a shape in the text frame, and properties and methods for manipulating the text. See `Excel.TextRange` for details.\\n*/\\nreadonly textRange: TextRange    \\n\\n/**\\n* Represents the top margin, in points, of the text frame.\\n*/\\ntopMargin: number    \\n\\n/**\\n* Represents the vertical alignment of the text frame. See `Excel.ShapeTextVerticalAlignment` for details.\\n*/\\nverticalAlignment: ShapeTextVerticalAlignment | 'Top' | 'Middle' | 'Bottom' | 'Justified' | 'Distributed'    \\n\\n/**\\n* Represents the vertical overflow behavior of the text frame. See `Excel.ShapeTextVerticalOverflow` for details.\\n*/\\nverticalOverflow: ShapeTextVerticalOverflow | 'Overflow' | 'Ellipsis' | 'Clip'\\n\\n    /**\\n* Deletes all the text in the text frame.\\n*/\\ndeleteText(): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Contains the text that is attached to a shape, in addition to properties and methods for manipulating the text.\\n*/\\ninterface TextRange {\\n\\n    /**\\n* Returns a `ShapeFont` object that represents the font attributes for the text range.\\n*/\\nreadonly font: ShapeFont    \\n\\n/**\\n* Represents the plain text content of the text range.\\n*/\\ntext: string\\n\\n    /**\\n* Returns a TextRange object for the substring in the given range.\\n* @param start The zero-based index of the first character to get from the text range.\\n* @param length Optional. The number of characters to be returned in the new text range. If length is omitted, all the characters from start to the end of the text range's last paragraph will be returned.\\n*/\\ngetSubstring(start:number, length?:number): TextRange\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the font attributes, such as font name, font size, and color, for a shape's `TextRange` object.\\n*/\\ninterface ShapeFont {\\n\\n    /**\\n* Represents the bold status of font. Returns `null` if the `TextRange` includes both bold and non-bold text fragments.\\n*/\\nbold: boolean    \\n\\n/**\\n* HTML color code representation of the text color (e.g., \\\"#FF0000\\\" represents red). Returns `null` if the `TextRange` includes text fragments with different colors.\\n*/\\ncolor: string    \\n\\n/**\\n* Represents the italic status of font. Returns `null` if the `TextRange` includes both italic and non-italic text fragments.\\n*/\\nitalic: boolean    \\n\\n/**\\n* Represents font name (e.g., \\\"Calibri\\\"). If the text is a Complex Script or East Asian language, this is the corresponding font name; otherwise it is the Latin font name.\\n*/\\nname: string    \\n\\n/**\\n* Represents font size in points (e.g., 11). Returns `null` if the `TextRange` includes text fragments with different font sizes.\\n*/\\nsize: number    \\n\\n/**\\n* Type of underline applied to the font. Returns `null` if the `TextRange` includes text fragments with different underline styles. See `Excel.ShapeFontUnderlineStyle` for details.\\n*/\\nunderline: ShapeFontUnderlineStyle | 'None' | 'Single' | 'Double' | 'Heavy' | 'Dotted' | 'DottedHeavy' | 'Dash' | 'DashHeavy' | 'DashLong' | 'DashLongHeavy' | 'DotDash' | 'DotDashHeavy' | 'DotDotDash' | 'DotDotDashHeavy' | 'Wavy' | 'WavyHeavy' | 'WavyDouble'\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a `Slicer` object in the workbook.\\n*/\\ninterface Slicer {\\n\\n    /**\\n* Represents the caption of the slicer.\\n*/\\ncaption: string    \\n\\n/**\\n* Represents the height, in points, of the slicer.\\n* Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n*/\\nheight: number    \\n\\n/**\\n* Represents the unique ID of the slicer.\\n*/\\nreadonly id: string    \\n\\n/**\\n* Value is `true` if all filters currently applied on the slicer are cleared.\\n*/\\nreadonly isFilterCleared: boolean    \\n\\n/**\\n* Represents the distance, in points, from the left side of the slicer to the left of the worksheet.\\n* Throws an `InvalidArgument` error when set with a negative value as an input.\\n*/\\nleft: number    \\n\\n/**\\n* Represents the name of the slicer.\\n*/\\nname: string    \\n\\n/**\\n* Represents the collection of slicer items that are part of the slicer.\\n*/\\nreadonly slicerItems: SlicerItemCollection    \\n\\n/**\\n* Represents the sort order of the items in the slicer. Possible values are: \\\"DataSourceOrder\\\", \\\"Ascending\\\", \\\"Descending\\\".\\n*/\\nsortBy: SlicerSortType | 'DataSourceOrder' | 'Ascending' | 'Descending'    \\n\\n/**\\n* Constant value that represents the slicer style. Possible values are: \\\"SlicerStyleLight1\\\" through \\\"SlicerStyleLight6\\\", \\\"TableStyleOther1\\\" through \\\"TableStyleOther2\\\", \\\"SlicerStyleDark1\\\" through \\\"SlicerStyleDark6\\\". A custom user-defined style present in the workbook can also be specified.\\n*/\\nstyle: string    \\n\\n/**\\n* Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.\\n* Throws an `InvalidArgument` error when set with a negative value as an input.\\n*/\\ntop: number    \\n\\n/**\\n* Represents the width, in points, of the slicer.\\n* Throws an `InvalidArgument` error when set with a negative value or zero as an input.\\n*/\\nwidth: number    \\n\\n/**\\n* Represents the worksheet containing the slicer.\\n*/\\nreadonly worksheet: Worksheet\\n\\n    /**\\n* Clears all the filters currently applied on the slicer.\\n*/\\nclearFilters(): void    \\n\\n/**\\n* Deletes the slicer.\\n*/\\ndelete(): void    \\n\\n/**\\n* Returns an array of selected items' keys.\\n*/\\ngetSelectedItems(): ClientResult<string[]>    \\n\\n/**\\n* Selects slicer items based on their keys. The previous selections are cleared.\\n* All items will be selected by default if the array is empty.\\n* @param items Optional. The specified slicer item names to be selected.\\n*/\\nselectItems(items?:string[]): void\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the slicer objects in the workbook or a worksheet.\\n*/\\ninterface SlicerCollection {\\n\\n    \\n\\n    /**\\n* Adds a new slicer to the workbook.\\n* @param slicerSource The data source that the new slicer will be based on. It can be a `PivotTable` object, a `Table` object, or a string. When a PivotTable object is passed, the data source is the source of the `PivotTable` object. When a `Table` object is passed, the data source is the `Table` object. When a string is passed, it is interpreted as the name or ID of a PivotTable or table.\\n* @param sourceField The field in the data source to filter by. It can be a `PivotField` object, a `TableColumn` object, the ID of a `PivotField` or the name or ID of a `TableColumn`.\\n* @param slicerDestination Optional. The worksheet in which the new slicer will be created. It can be a `Worksheet` object or the name or ID of a worksheet. This parameter can be omitted if the slicer collection is retrieved from a worksheet.\\n*/\\nadd(slicerSource:string|PivotTable|Table, sourceField:string|PivotField|number|TableColumn, slicerDestination?:string|Worksheet): Slicer    \\n\\n/**\\n* Returns the number of slicers in the collection.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a slicer object using its name or ID.\\n* @param key The name or ID of the slicer.\\n*/\\ngetItem(key:string): Slicer    \\n\\n/**\\n* Gets a slicer based on its position in the collection.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): Slicer    \\n\\n/**\\n* Gets a slicer using its name or ID. If the slicer doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key Name or ID of the slicer to be retrieved.\\n*/\\ngetItemOrNullObject(key:string): Slicer\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: Slicer[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a slicer item in a slicer.\\n*/\\ninterface SlicerItem {\\n\\n    /**\\n* Value is `true` if the slicer item has data.\\n*/\\nreadonly hasData: boolean    \\n\\n/**\\n* Value is `true` if the slicer item is selected.\\n* Setting this value will not clear the selected state of other slicer items.\\n* By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.\\n*/\\nisSelected: boolean    \\n\\n/**\\n* Represents the unique value representing the slicer item.\\n*/\\nreadonly key: string    \\n\\n/**\\n* Represents the title displayed in the Excel UI.\\n*/\\nreadonly name: string\\n\\n    \\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a collection of all the slicer item objects in the slicer.\\n*/\\ninterface SlicerItemCollection {\\n\\n    \\n\\n    /**\\n* Returns the number of slicer items in the slicer.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a slicer item object using its key or name.\\n* @param key The key or name of the slicer item.\\n*/\\ngetItem(key:string): SlicerItem    \\n\\n/**\\n* Gets a slicer item based on its position in the collection.\\n* @param index Index value of the object to be retrieved. Zero-indexed.\\n*/\\ngetItemAt(index:number): SlicerItem    \\n\\n/**\\n* Gets a slicer item using its key or name. If the slicer item doesn't exist, then this method returns an object with its `isNullObject` property set to `true`.\\n* For further information, see {@link https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties | *OrNullObject methods and properties}.\\n* @param key Key or name of the slicer to be retrieved.\\n*/\\ngetItemOrNullObject(key:string): SlicerItem\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: SlicerItem[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents a named sheet view of a worksheet. A sheet view stores the sort and filter rules for a particular worksheet.\\n* Every sheet view (even a temporary sheet view) has a unique, worksheet-scoped name that is used to access the view.\\n*/\\ninterface NamedSheetView {\\n\\n    /**\\n* Gets or sets the name of the sheet view.\\n* The temporary sheet view name is the empty string (\\\"\\\").  Naming the view by using the name property causes the sheet view to be saved.\\n*/\\nname: string\\n\\n    /**\\n* Activates this sheet view. This is equivalent to using \\\"Switch To\\\" in the Excel UI.\\n*/\\nactivate(): void    \\n\\n/**\\n* Removes the sheet view from the worksheet.\\n*/\\ndelete(): void    \\n\\n/**\\n* Creates a copy of this sheet view.\\n* @param name The name of the duplicated sheet view. If no name is provided, one will be generated.\\n*/\\nduplicate(name?:string): NamedSheetView\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n/**\\n* Represents the collection of sheet views in the worksheet.\\n*/\\ninterface NamedSheetViewCollection {\\n\\n    \\n\\n    /**\\n* Creates a new sheet view with the given name.\\n* @param name The name of the sheet view to be created.\\n* Throws an error when the provided name already exists, is empty, or is a name reserved by the worksheet.\\n*/\\nadd(name:string): NamedSheetView    \\n\\n/**\\n* Creates and activates a new temporary sheet view.\\n* Temporary views are removed when closing the application, exiting the temporary view with the exit method, or switching to another sheet view.\\n* The temporary sheet view can also be acccessed with the empty string (\\\"\\\"), if the temporary view exists.\\n*/\\nenterTemporary(): NamedSheetView    \\n\\n/**\\n* Exits the currently active sheet view.\\n*/\\nexit(): void    \\n\\n/**\\n* Gets the worksheet's currently active sheet view.\\n*/\\ngetActive(): NamedSheetView    \\n\\n/**\\n* Gets the number of sheet views in this worksheet.\\n* Includes the temporary sheet view if it exists.\\n*/\\ngetCount(): ClientResult<number>    \\n\\n/**\\n* Gets a sheet view using its name.\\n* @param key The case-sensitive name of the sheet view. Use the empty string (\\\"\\\") to get the temporary sheet view, if the temporary view exists.\\n*/\\ngetItem(key:string): NamedSheetView    \\n\\n/**\\n* Gets a sheet view by its index in the collection.\\n* @param index The index of the sheet view object in the collection.\\n*/\\ngetItemAt(index:number): NamedSheetView\\n\\n    \\n    /**\\n     * Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading the properties.\\n     *\\n     * @param propertyNames A comma-delimited string or an array of strings that specify the properties to load.\\n     */\\n    load(propertyNames?: string | string[]): void;\\n\\n\\n    \\n    /**\\n     * The loaded items in the collection.\\n     */\\n    readonly items: NamedSheetView[];\\n\\n    \\n    /**\\n     * Returns a boolean value for whether the corresponding object is a null object. \\n     * Before reading the isNullObject property `context.sync()` must be called.\\n     */\\n    isNullObject: boolean;\\n}\\n    \\n\\n    //\\n    // Interface\\n    //\\n\\n    /**\\n* Configurable template for a date filter to apply to a PivotField.\\n* The `condition` defines what criteria need to be set in order for the filter to operate.\\n*/\\ninterface PivotDateFilter {\\n    /**\\n* The comparator is the static value to which other values are compared. The type of comparison is defined by the condition.\\n*/\\ncomparator?: FilterDatetime\\n    /**\\n* Specifies the condition for the filter, which defines the necessary filtering criteria.\\n*/\\ncondition: DateFilterCondition | 'Unknown' | 'Equals' | 'Before' | 'BeforeOrEqualTo' | 'After' | 'AfterOrEqualTo' | 'Between' | 'Tomorrow' | 'Today' | 'Yesterday' | 'NextWeek' | 'ThisWeek' | 'LastWeek' | 'NextMonth' | 'ThisMonth' | 'LastMonth' | 'NextQuarter' | 'ThisQuarter' | 'LastQuarter' | 'NextYear' | 'ThisYear' | 'LastYear' | 'YearToDate' | 'AllDatesInPeriodQuarter1' | 'AllDatesInPeriodQuarter2' | 'AllDatesInPeriodQuarter3' | 'AllDatesInPeriodQuarter4' | 'AllDatesInPeriodJanuary' | 'AllDatesInPeriodFebruary' | 'AllDatesInPeriodMarch' | 'AllDatesInPeriodApril' | 'AllDatesInPeriodMay' | 'AllDatesInPeriodJune' | 'AllDatesInPeriodJuly' | 'AllDatesInPeriodAugust' | 'AllDatesInPeriodSeptember' | 'AllDatesInPeriodOctober' | 'AllDatesInPeriodNovember' | 'AllDatesInPeriodDecember'\\n    /**\\n* If `true`, filter *excludes* items that meet criteria. The default is `false` (filter to include items that meet criteria).\\n*/\\nexclusive?: boolean\\n    /**\\n* The lower-bound of the range for the `between` filter condition.\\n*/\\nlowerBound?: FilterDatetime\\n    /**\\n* The upper-bound of the range for the `between` filter condition.\\n*/\\nupperBound?: FilterDatetime\\n    /**\\n* For `equals`, `before`, `after`, and `between` filter conditions, indicates if comparisons should be made as whole days.\\n*/\\nwholeDays?: boolean\\n}\\n/**\\n* An interface representing all PivotFilters currently applied to a given PivotField.\\n*/\\ninterface PivotFilters {\\n    /**\\n* The PivotField's currently applied date filter. This property is `null` if no value filter is applied.\\n*/\\ndateFilter?: PivotDateFilter\\n    /**\\n* The PivotField's currently applied label filter. This property is `null` if no value filter is applied.\\n*/\\nlabelFilter?: PivotLabelFilter\\n    /**\\n* The PivotField's currently applied manual filter. This property is `null` if no value filter is applied.\\n*/\\nmanualFilter?: PivotManualFilter\\n    /**\\n* The PivotField's currently applied value filter. This property is `null` if no value filter is applied.\\n*/\\nvalueFilter?: PivotValueFilter\\n}\\n/**\\n* Configurable template for a label filter to apply to a PivotField.\\n* The `condition` defines what criteria need to be set in order for the filter to operate.\\n*/\\ninterface PivotLabelFilter {\\n    /**\\n* Specifies the condition for the filter, which defines the necessary filtering criteria.\\n*/\\ncondition: LabelFilterCondition | 'Unknown' | 'Equals' | 'BeginsWith' | 'EndsWith' | 'Contains' | 'GreaterThan' | 'GreaterThanOrEqualTo' | 'LessThan' | 'LessThanOrEqualTo' | 'Between'\\n    /**\\n* If `true`, filter *excludes* items that meet criteria. The default is `false` (filter to include items that meet criteria).\\n*/\\nexclusive?: boolean\\n    /**\\n* The lower-bound of the range for the `between` filter condition.\\n* Note: A numeric string is treated as a number when being compared against other numeric strings.\\n*/\\nlowerBound?: string\\n    /**\\n* The substring used for `beginsWith`, `endsWith`, and `contains` filter conditions.\\n*/\\nsubstring?: string\\n    /**\\n* The upper-bound of the range for the `between` filter condition.\\n* Note: A numeric string is treated as a number when being compared against other numeric strings.\\n*/\\nupperBound?: string\\n}\\n/**\\n* Configurable template for a manual filter to apply to a PivotField.\\n* The `condition` defines what criteria need to be set in order for the filter to operate.\\n*/\\ninterface PivotManualFilter {\\n    /**\\n* A list of selected items to manually filter. These must be existing and valid items from the chosen field.\\n*/\\nselectedItems?: (string|PivotItem)[]\\n}\\n/**\\n* Configurable template for a value filter to apply to a PivotField.\\n* The `condition` defines what criteria need to be set in order for the filter to operate.\\n*/\\ninterface PivotValueFilter {\\n    /**\\n* The comparator is the static value to which other values are compared. The type of comparison is defined by the condition.\\n* For example, if comparator is \\\"50\\\" and condition is \\\"greaterThan\\\", all item values that are not greater than 50 will be removed by the filter.\\n*/\\ncomparator?: number\\n    /**\\n* Specifies the condition for the filter, which defines the necessary filtering criteria.\\n*/\\ncondition: ValueFilterCondition | 'Unknown' | 'Equals' | 'GreaterThan' | 'GreaterThanOrEqualTo' | 'LessThan' | 'LessThanOrEqualTo' | 'Between' | 'TopN' | 'BottomN'\\n    /**\\n* If `true`, filter *excludes* items that meet criteria. The default is `false` (filter to include items that meet criteria).\\n*/\\nexclusive?: boolean\\n    /**\\n* The lower-bound of the range for the `between` filter condition.\\n*/\\nlowerBound?: number\\n    /**\\n* Specifies if the filter is for the top/bottom N items, top/bottom N percent, or top/bottom N sum.\\n*/\\nselectionType?: TopBottomSelectionType | 'Items' | 'Percent' | 'Sum'\\n    /**\\n* The \\\"N\\\" threshold number of items, percent, or sum to be filtered for a top/bottom filter condition.\\n*/\\nthreshold?: number\\n    /**\\n* The upper-bound of the range for the `between` filter condition.\\n*/\\nupperBound?: number\\n    /**\\n* Name of the chosen \\\"value\\\" in the field by which to filter.\\n*/\\nvalue: string\\n}\\n/**\\n* Represents the options in sheet protection.\\n*/\\ninterface WorksheetProtectionOptions {\\n    /**\\n* Represents the worksheet protection option allowing use of the AutoFilter feature.\\n*/\\nallowAutoFilter?: boolean\\n    /**\\n* Represents the worksheet protection option allowing deleting of columns.\\n*/\\nallowDeleteColumns?: boolean\\n    /**\\n* Represents the worksheet protection option allowing deleting of rows.\\n*/\\nallowDeleteRows?: boolean\\n    /**\\n* Represents the worksheet protection option allowing editing of objects.\\n*/\\nallowEditObjects?: boolean\\n    /**\\n* Represents the worksheet protection option allowing editing of scenarios.\\n*/\\nallowEditScenarios?: boolean\\n    /**\\n* Represents the worksheet protection option allowing formatting of cells.\\n*/\\nallowFormatCells?: boolean\\n    /**\\n* Represents the worksheet protection option allowing formatting of columns.\\n*/\\nallowFormatColumns?: boolean\\n    /**\\n* Represents the worksheet protection option allowing formatting of rows.\\n*/\\nallowFormatRows?: boolean\\n    /**\\n* Represents the worksheet protection option allowing inserting of columns.\\n*/\\nallowInsertColumns?: boolean\\n    /**\\n* Represents the worksheet protection option allowing inserting of hyperlinks.\\n*/\\nallowInsertHyperlinks?: boolean\\n    /**\\n* Represents the worksheet protection option allowing inserting of rows.\\n*/\\nallowInsertRows?: boolean\\n    /**\\n* Represents the worksheet protection option allowing use of the PivotTable feature.\\n*/\\nallowPivotTables?: boolean\\n    /**\\n* Represents the worksheet protection option allowing use of the sort feature.\\n*/\\nallowSort?: boolean\\n    /**\\n* Represents the worksheet protection option of selection mode.\\n*/\\nselectionMode?: ProtectionSelectionMode | 'Normal' | 'Unlocked' | 'None'\\n}\\n/**\\n* Represents a string reference of the form \\\"SheetName!A1:B5\\\", or a global or local named range.\\n*/\\ninterface RangeReference {\\n    /**\\n* The address of the range, for example \\\"SheetName!A1:B5\\\".\\n*/\\naddress: string\\n}\\n/**\\n* Represents the necessary strings to get/set a hyperlink (XHL) object.\\n*/\\ninterface RangeHyperlink {\\n    /**\\n* Represents the URL target for the hyperlink.\\n*/\\naddress?: string\\n    /**\\n* Represents the document reference target for the hyperlink.\\n*/\\ndocumentReference?: string\\n    /**\\n* Represents the string displayed when hovering over the hyperlink.\\n*/\\nscreenTip?: string\\n    /**\\n* Represents the string that is displayed in the top left most cell in the range.\\n*/\\ntextToDisplay?: string\\n}\\n/**\\n* Represents the search criteria to be used.\\n*/\\ninterface SearchCriteria {\\n    /**\\n* Specifies if the match needs to be complete or partial.\\n* A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`).\\n* Default is `false` (partial).\\n*/\\ncompleteMatch?: boolean\\n    /**\\n* Specifies if the match is case-sensitive. Default is `false` (case-insensitive).\\n*/\\nmatchCase?: boolean\\n    /**\\n* Specifies the search direction. Default is forward. See `Excel.SearchDirection`.\\n*/\\nsearchDirection?: SearchDirection | 'Forward' | 'Backwards'\\n}\\n/**\\n* Represents the worksheet search criteria to be used.\\n*/\\ninterface WorksheetSearchCriteria {\\n    /**\\n* Specifies if the match needs to be complete or partial.\\n* A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`).\\n* Default is `false` (partial).\\n*/\\ncompleteMatch?: boolean\\n    /**\\n* Specifies if the match is case-sensitive. Default is `false` (case-insensitive).\\n*/\\nmatchCase?: boolean\\n}\\n/**\\n* Represents the replace criteria to be used.\\n*/\\ninterface ReplaceCriteria {\\n    /**\\n* Specifies if the match needs to be complete or partial.\\n* A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`).\\n* Default is `false` (partial).\\n*/\\ncompleteMatch?: boolean\\n    /**\\n* Specifies if the match is case-sensitive. Default is `false` (case-insensitive).\\n*/\\nmatchCase?: boolean\\n}\\n/**\\n* Specifies which properties to load on the `format.fill` object.\\n*/\\ninterface CellPropertiesFillLoadOptions {\\n    /**\\n* Specifies whether to load the `color` property.\\n*/\\ncolor?: boolean\\n    /**\\n* Specifies whether to load the `pattern` property.\\n*/\\npattern?: boolean\\n    /**\\n* Specifies whether to load the `patternColor` property.\\n*/\\npatternColor?: boolean\\n    /**\\n* Specifies whether to load the `patternTintAndShade` property.\\n*/\\npatternTintAndShade?: boolean\\n    /**\\n* Specifies whether to load the `tintAndShade` property.\\n*/\\ntintAndShade?: boolean\\n}\\n/**\\n* Specifies which properties to load on the `format.font` object.\\n*/\\ninterface CellPropertiesFontLoadOptions {\\n    /**\\n* Specifies whether to load the `bold` property.\\n*/\\nbold?: boolean\\n    /**\\n* Specifies whether to load the `color` property.\\n*/\\ncolor?: boolean\\n    /**\\n* Specifies whether to load the `italic` property.\\n*/\\nitalic?: boolean\\n    /**\\n* Specifies whether to load the `name` property.\\n*/\\nname?: boolean\\n    /**\\n* Specifies whether to load the `size` property.\\n*/\\nsize?: boolean\\n    /**\\n* Specifies whether to load the `strikethrough` property.\\n*/\\nstrikethrough?: boolean\\n    /**\\n* Specifies whether to load the `subscript` property.\\n*/\\nsubscript?: boolean\\n    /**\\n* Specifies whether to load the `superscript` property.\\n*/\\nsuperscript?: boolean\\n    /**\\n* Specifies whether to load the `tintAndShade` property.\\n*/\\ntintAndShade?: boolean\\n    /**\\n* Specifies whether to load the `underline` property.\\n*/\\nunderline?: boolean\\n}\\n/**\\n* Specifies which properties to load on the `format.borders` object.\\n*/\\ninterface CellPropertiesBorderLoadOptions {\\n    /**\\n* Specifies whether to load the `color` property.\\n*/\\ncolor?: boolean\\n    /**\\n* Specifies whether to load the `style` property.\\n*/\\nstyle?: boolean\\n    /**\\n* Specifies whether to load the `tintAndShade` property.\\n*/\\ntintAndShade?: boolean\\n    /**\\n* Specifies whether to load the `weight` property.\\n*/\\nweight?: boolean\\n}\\n/**\\n* Represents the `format.protection` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties`, or the `format.protection` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\\n*/\\ninterface CellPropertiesProtection {\\n    /**\\n* Represents the `format.protection.formulaHidden` property.\\n*/\\nformulaHidden?: boolean\\n    /**\\n* Represents the `format.protection.locked` property.\\n*/\\nlocked?: boolean\\n}\\n/**\\n* Represents the `format.fill` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties` or the `format.fill` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\\n*/\\ninterface CellPropertiesFill {\\n    /**\\n* Represents the `format.fill.color` property.\\n*/\\ncolor?: string\\n    /**\\n* Represents the `format.fill.pattern` property.\\n*/\\npattern?: FillPattern | 'None' | 'Solid' | 'Gray50' | 'Gray75' | 'Gray25' | 'Horizontal' | 'Vertical' | 'Down' | 'Up' | 'Checker' | 'SemiGray75' | 'LightHorizontal' | 'LightVertical' | 'LightDown' | 'LightUp' | 'Grid' | 'CrissCross' | 'Gray16' | 'Gray8' | 'LinearGradient' | 'RectangularGradient'\\n    /**\\n* Represents the `format.fill.patternColor` property.\\n*/\\npatternColor?: string\\n    /**\\n* Represents the `format.fill.patternTintAndShade` property.\\n*/\\npatternTintAndShade?: number\\n    /**\\n* Represents the `format.fill.tintAndShade` property.\\n*/\\ntintAndShade?: number\\n}\\n/**\\n* Represents the `format.font` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties`, or the `format.font` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\\n*/\\ninterface CellPropertiesFont {\\n    /**\\n* Represents the `format.font.bold` property.\\n*/\\nbold?: boolean\\n    /**\\n* Represents the `format.font.color` property.\\n*/\\ncolor?: string\\n    /**\\n* Represents the `format.font.italic` property.\\n*/\\nitalic?: boolean\\n    /**\\n* Represents the `format.font.name` property.\\n*/\\nname?: string\\n    /**\\n* Represents the `format.font.size` property.\\n*/\\nsize?: number\\n    /**\\n* Represents the `format.font.strikethrough` property.\\n*/\\nstrikethrough?: boolean\\n    /**\\n* Represents the `format.font.subscript` property.\\n*/\\nsubscript?: boolean\\n    /**\\n* Represents the `format.font.superscript` property.\\n*/\\nsuperscript?: boolean\\n    /**\\n* Represents the `format.font.tintAndShade` property.\\n*/\\ntintAndShade?: number\\n    /**\\n* Represents the `format.font.underline` property.\\n*/\\nunderline?: RangeUnderlineStyle | 'None' | 'Single' | 'Double' | 'SingleAccountant' | 'DoubleAccountant'\\n}\\n/**\\n* Represents the `format.borders` properties of `getCellProperties`, `getRowProperties`, and `getColumnProperties`, or the `format.borders` input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\\n*/\\ninterface CellBorderCollection {\\n    /**\\n* Represents the `format.borders.bottom` property.\\n*/\\nbottom?: CellBorder\\n    /**\\n* Represents the `format.borders.diagonalDown` property.\\n*/\\ndiagonalDown?: CellBorder\\n    /**\\n* Represents the `format.borders.diagonalUp` property.\\n*/\\ndiagonalUp?: CellBorder\\n    /**\\n* Represents the `format.borders.horizontal` property.\\n*/\\nhorizontal?: CellBorder\\n    /**\\n* Represents the `format.borders.left` property.\\n*/\\nleft?: CellBorder\\n    /**\\n* Represents the `format.borders.right` property.\\n*/\\nright?: CellBorder\\n    /**\\n* Represents the `format.borders.top` property.\\n*/\\ntop?: CellBorder\\n    /**\\n* Represents the `format.borders.vertical` property.\\n*/\\nvertical?: CellBorder\\n}\\n/**\\n* Represents the properties of a single border returned by `getCellProperties`, `getRowProperties`, and `getColumnProperties`, or the border property input parameter of `setCellProperties`, `setRowProperties`, and `setColumnProperties`.\\n*/\\ninterface CellBorder {\\n    /**\\n* Represents the `color` property of a single border.\\n*/\\ncolor?: string\\n    /**\\n* Represents the `style` property of a single border.\\n*/\\nstyle?: BorderLineStyle | 'None' | 'Continuous' | 'Dash' | 'DashDot' | 'DashDotDot' | 'Dot' | 'Double' | 'SlantDashDot'\\n    /**\\n* Represents the `tintAndShade` property of a single border.\\n*/\\ntintAndShade?: number\\n    /**\\n* Represents the `weight` property of a single border.\\n*/\\nweight?: BorderWeight | 'Hairline' | 'Thin' | 'Medium' | 'Thick'\\n}\\n/**\\n* A data validation rule contains different types of data validation. You can only use one of them at a time according the `Excel.DataValidationType`.\\n*/\\ninterface DataValidationRule {\\n    /**\\n* Custom data validation criteria.\\n*/\\ncustom?: CustomDataValidation\\n    /**\\n* Date data validation criteria.\\n*/\\ndate?: DateTimeDataValidation\\n    /**\\n* Decimal data validation criteria.\\n*/\\ndecimal?: BasicDataValidation\\n    /**\\n* List data validation criteria.\\n*/\\nlist?: ListDataValidation\\n    /**\\n* Text length data validation criteria.\\n*/\\ntextLength?: BasicDataValidation\\n    /**\\n* Time data validation criteria.\\n*/\\ntime?: DateTimeDataValidation\\n    /**\\n* Whole number data validation criteria.\\n*/\\nwholeNumber?: BasicDataValidation\\n}\\n/**\\n* Represents the basic type data validation criteria.\\n*/\\ninterface BasicDataValidation {\\n    /**\\n* Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand.\\n* For example, setting formula1 to 10 and operator to GreaterThan means that valid data for the range must be greater than 10.\\n* When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \\\"=A1\\\", or a formula like \\\"=MIN(A1, B1)\\\").\\n* When retrieving the value, it will always be returned as a string formula, for example: \\\"=10\\\", \\\"=A1\\\", \\\"=SUM(A1:B5)\\\", etc.\\n*/\\nformula1: string|number|Range\\n    /**\\n* With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan.\\n* When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \\\"=A1\\\", or a formula like \\\"=MIN(A1, B1)\\\").\\n* When retrieving the value, it will always be returned as a string formula, for example: \\\"=10\\\", \\\"=A1\\\", \\\"=SUM(A1:B5)\\\", etc.\\n*/\\nformula2?: string|number|Range\\n    /**\\n* The operator to use for validating the data.\\n*/\\noperator: DataValidationOperator | 'Between' | 'NotBetween' | 'EqualTo' | 'NotEqualTo' | 'GreaterThan' | 'LessThan' | 'GreaterThanOrEqualTo' | 'LessThanOrEqualTo'\\n}\\n/**\\n* Represents the date data validation criteria.\\n*/\\ninterface DateTimeDataValidation {\\n    /**\\n* Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand.\\n* When setting the value, it can be passed in as a Date, a Range object, or a string formula (where the string is either a stringified date/time in ISO8601 format, a cell reference like \\\"=A1\\\", or a formula like \\\"=MIN(A1, B1)\\\").\\n* When retrieving the value, it will always be returned as a string formula, for example: \\\"=10\\\", \\\"=A1\\\", \\\"=SUM(A1:B5)\\\", etc.\\n*/\\nformula1: string|Date|Range\\n    /**\\n* With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan.\\n* When setting the value, it can be passed in as a Date, a Range object, or a string (where the string is either a stringified date/time in ISO8601 format, a cell reference like \\\"=A1\\\", or a formula like \\\"=MIN(A1, B1)\\\").\\n* When retrieving the value, it will always be returned as a string formula, for example: \\\"=10\\\", \\\"=A1\\\", \\\"=SUM(A1:B5)\\\", etc.\\n*/\\nformula2?: string|Date|Range\\n    /**\\n* The operator to use for validating the data.\\n*/\\noperator: DataValidationOperator | 'Between' | 'NotBetween' | 'EqualTo' | 'NotEqualTo' | 'GreaterThan' | 'LessThan' | 'GreaterThanOrEqualTo' | 'LessThanOrEqualTo'\\n}\\n/**\\n* Represents the List data validation criteria.\\n*/\\ninterface ListDataValidation {\\n    /**\\n* Specifies whether to display the list in a cell drop-down. The default is `true`.\\n*/\\ninCellDropDown: boolean\\n    /**\\n* Source of the list for data validation\\n* When setting the value, it can be passed in as a `Range` object, or a string that contains a comma-separated number, boolean, or date.\\n*/\\nsource: string|Range\\n}\\n/**\\n* Represents the custom data validation criteria.\\n*/\\ninterface CustomDataValidation {\\n    /**\\n* A custom data validation formula. This creates special input rules, such as preventing duplicates, or limiting the total in a range of cells.\\n*/\\nformula: string\\n}\\n/**\\n* Represents the error alert properties for the data validation.\\n*/\\ninterface DataValidationErrorAlert {\\n    /**\\n* Represents the error alert message.\\n*/\\nmessage: string\\n    /**\\n* Specifies whether to show an error alert dialog when a user enters invalid data. The default is `true`.\\n*/\\nshowAlert: boolean\\n    /**\\n* The data validation alert type, please see `Excel.DataValidationAlertStyle` for details.\\n*/\\nstyle: DataValidationAlertStyle | 'Stop' | 'Warning' | 'Information'\\n    /**\\n* Represents the error alert dialog title.\\n*/\\ntitle: string\\n}\\n/**\\n* Represents the user prompt properties for the data validation.\\n*/\\ninterface DataValidationPrompt {\\n    /**\\n* Specifies the message of the prompt.\\n*/\\nmessage: string\\n    /**\\n* Specifies if a prompt is shown when a user selects a cell with data validation.\\n*/\\nshowPrompt: boolean\\n    /**\\n* Specifies the title for the prompt.\\n*/\\ntitle: string\\n}\\n/**\\n* Represents a condition in a sorting operation.\\n*/\\ninterface SortField {\\n    /**\\n* Specifies if the sorting is done in an ascending fashion.\\n*/\\nascending?: boolean\\n    /**\\n* Specifies the color that is the target of the condition if the sorting is on font or cell color.\\n*/\\ncolor?: string\\n    /**\\n* Represents additional sorting options for this field.\\n*/\\ndataOption?: SortDataOption | 'Normal' | 'TextAsNumber'\\n    /**\\n* Specifies the icon that is the target of the condition, if the sorting is on the cell's icon.\\n*/\\nicon?: Icon\\n    /**\\n* Specifies the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).\\n*/\\nkey: number\\n    /**\\n* Specifies the type of sorting of this condition.\\n*/\\nsortOn?: SortOn | 'Value' | 'CellColor' | 'FontColor' | 'Icon'\\n    /**\\n* Specifies the subfield that is the target property name of a rich value to sort on.\\n*/\\nsubField?: string\\n}\\n/**\\n* Represents the filtering criteria applied to a column.\\n*/\\ninterface FilterCriteria {\\n    /**\\n* The HTML color string used to filter cells. Used with `cellColor` and `fontColor` filtering.\\n*/\\ncolor?: string\\n    /**\\n* The first criterion used to filter data. Used as an operator in the case of `custom` filtering.\\n* For example \\\">50\\\" for numbers greater than 50, or \\\"=*s\\\" for values ending in \\\"s\\\".\\n* \\n* Used as a number in the case of top/bottom items/percents (e.g., \\\"5\\\" for the top 5 items if `filterOn` is set to `topItems`).\\n*/\\ncriterion1?: string\\n    /**\\n* The second criterion used to filter data. Only used as an operator in the case of `custom` filtering.\\n*/\\ncriterion2?: string\\n    /**\\n* The dynamic criteria from the `Excel.DynamicFilterCriteria` set to apply on this column. Used with `dynamic` filtering.\\n*/\\ndynamicCriteria?: DynamicFilterCriteria | 'Unknown' | 'AboveAverage' | 'AllDatesInPeriodApril' | 'AllDatesInPeriodAugust' | 'AllDatesInPeriodDecember' | 'AllDatesInPeriodFebruray' | 'AllDatesInPeriodJanuary' | 'AllDatesInPeriodJuly' | 'AllDatesInPeriodJune' | 'AllDatesInPeriodMarch' | 'AllDatesInPeriodMay' | 'AllDatesInPeriodNovember' | 'AllDatesInPeriodOctober' | 'AllDatesInPeriodQuarter1' | 'AllDatesInPeriodQuarter2' | 'AllDatesInPeriodQuarter3' | 'AllDatesInPeriodQuarter4' | 'AllDatesInPeriodSeptember' | 'BelowAverage' | 'LastMonth' | 'LastQuarter' | 'LastWeek' | 'LastYear' | 'NextMonth' | 'NextQuarter' | 'NextWeek' | 'NextYear' | 'ThisMonth' | 'ThisQuarter' | 'ThisWeek' | 'ThisYear' | 'Today' | 'Tomorrow' | 'YearToDate' | 'Yesterday'\\n    /**\\n* The property used by the filter to determine whether the values should stay visible.\\n*/\\nfilterOn: FilterOn | 'BottomItems' | 'BottomPercent' | 'CellColor' | 'Dynamic' | 'FontColor' | 'Values' | 'TopItems' | 'TopPercent' | 'Icon' | 'Custom'\\n    /**\\n* The icon used to filter cells. Used with `icon` filtering.\\n*/\\nicon?: Icon\\n    /**\\n* The operator used to combine criterion 1 and 2 when using `custom` filtering.\\n*/\\noperator?: FilterOperator | 'And' | 'Or'\\n    /**\\n* The property used by the filter to do a rich filter on rich values.\\n*/\\nsubField?: string\\n    /**\\n* The set of values to be used as part of `values` filtering.\\n*/\\nvalues?: Array<string|FilterDatetime>\\n}\\n/**\\n* Represents how to filter a date when filtering on values.\\n*/\\ninterface FilterDatetime {\\n    /**\\n* The date in ISO8601 format used to filter data.\\n*/\\ndate: string\\n    /**\\n* How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to \\\"month\\\", the filter operation will keep all rows with a date in the month of April 2005.\\n*/\\nspecificity: FilterDatetimeSpecificity | 'Year' | 'Month' | 'Day' | 'Hour' | 'Minute' | 'Second'\\n}\\n/**\\n* Represents a cell icon.\\n*/\\ninterface Icon {\\n    /**\\n* Specifies the index of the icon in the given set.\\n*/\\nindex: number\\n    /**\\n* Specifies the set that the icon is part of.\\n*/\\nset: IconSet | 'Invalid' | 'ThreeArrows' | 'ThreeArrowsGray' | 'ThreeFlags' | 'ThreeTrafficLights1' | 'ThreeTrafficLights2' | 'ThreeSigns' | 'ThreeSymbols' | 'ThreeSymbols2' | 'FourArrows' | 'FourArrowsGray' | 'FourRedToBlack' | 'FourRating' | 'FourTrafficLights' | 'FiveArrows' | 'FiveArrowsGray' | 'FiveRating' | 'FiveQuarters' | 'ThreeStars' | 'ThreeTriangles' | 'FiveBoxes'\\n}\\ninterface ShowAsRule {\\n    /**\\n* The PivotField to base the `ShowAs` calculation on, if applicable according to the `ShowAsCalculation` type, else `null`.\\n*/\\nbaseField?: PivotField\\n    /**\\n* The item to base the `ShowAs` calculation on, if applicable according to the `ShowAsCalculation` type, else `null`.\\n*/\\nbaseItem?: PivotItem\\n    /**\\n* The `ShowAs` calculation to use for the PivotField. See `Excel.ShowAsCalculation` for details.\\n*/\\ncalculation: ShowAsCalculation | 'Unknown' | 'None' | 'PercentOfGrandTotal' | 'PercentOfRowTotal' | 'PercentOfColumnTotal' | 'PercentOfParentRowTotal' | 'PercentOfParentColumnTotal' | 'PercentOfParentTotal' | 'PercentOf' | 'RunningTotal' | 'PercentRunningTotal' | 'DifferenceFrom' | 'PercentDifferenceFrom' | 'RankAscending' | 'RankDecending' | 'Index'\\n}\\n/**\\n* Subtotals for the Pivot Field.\\n*/\\ninterface Subtotals {\\n    /**\\n* If `Automatic` is set to `true`, then all other values will be ignored when setting the `Subtotals`.\\n*/\\nautomatic?: boolean\\n    /**\\n* Average\\n*/\\naverage?: boolean\\n    /**\\n* Count\\n*/\\ncount?: boolean\\n    /**\\n* CountNumbers\\n*/\\ncountNumbers?: boolean\\n    /**\\n* Max\\n*/\\nmax?: boolean\\n    /**\\n* Min\\n*/\\nmin?: boolean\\n    /**\\n* Product\\n*/\\nproduct?: boolean\\n    /**\\n* StandardDeviation\\n*/\\nstandardDeviation?: boolean\\n    /**\\n* StandardDeviationP\\n*/\\nstandardDeviationP?: boolean\\n    /**\\n* Sum\\n*/\\nsum?: boolean\\n    /**\\n* Variance\\n*/\\nvariance?: boolean\\n    /**\\n* VarianceP\\n*/\\nvarianceP?: boolean\\n}\\n/**\\n* Represents a rule-type for a data bar.\\n*/\\ninterface ConditionalDataBarRule {\\n    /**\\n* The formula, if required, on which to evaluate the data bar rule.\\n*/\\nformula?: string\\n    /**\\n* The type of rule for the data bar.\\n*/\\ntype: ConditionalFormatRuleType | 'Invalid' | 'Automatic' | 'LowestValue' | 'HighestValue' | 'Number' | 'Percent' | 'Formula' | 'Percentile'\\n}\\n/**\\n* Represents an icon criterion which contains a type, value, an operator, and an optional custom icon, if not using an icon set.\\n*/\\ninterface ConditionalIconCriterion {\\n    /**\\n* The custom icon for the current criterion, if different from the default icon set, else `null` will be returned.\\n*/\\ncustomIcon?: Icon\\n    /**\\n* A number or a formula depending on the type.\\n*/\\nformula: string\\n    /**\\n* `greaterThan` or `greaterThanOrEqual` for each of the rule types for the icon conditional format.\\n*/\\noperator: ConditionalIconCriterionOperator | 'Invalid' | 'GreaterThan' | 'GreaterThanOrEqual'\\n    /**\\n* What the icon conditional formula should be based on.\\n*/\\ntype: ConditionalFormatIconRuleType | 'Invalid' | 'Number' | 'Percent' | 'Formula' | 'Percentile'\\n}\\n/**\\n* Represents the criteria of the color scale.\\n*/\\ninterface ConditionalColorScaleCriteria {\\n    /**\\n* The maximum point of the color scale criterion.\\n*/\\nmaximum: ConditionalColorScaleCriterion\\n    /**\\n* The midpoint of the color scale criterion, if the color scale is a 3-color scale.\\n*/\\nmidpoint?: ConditionalColorScaleCriterion\\n    /**\\n* The minimum point of the color scale criterion.\\n*/\\nminimum: ConditionalColorScaleCriterion\\n}\\n/**\\n* Represents a color scale criterion which contains a type, value, and a color.\\n*/\\ninterface ConditionalColorScaleCriterion {\\n    /**\\n* HTML color code representation of the color scale color (e.g., #FF0000 represents Red).\\n*/\\ncolor?: string\\n    /**\\n* A number, a formula, or `null` (if `type` is `lowestValue`).\\n*/\\nformula?: string\\n    /**\\n* What the criterion conditional formula should be based on.\\n*/\\ntype: ConditionalFormatColorCriterionType | 'Invalid' | 'LowestValue' | 'HighestValue' | 'Number' | 'Percent' | 'Formula' | 'Percentile'\\n}\\n/**\\n* Represents the rule of the top/bottom conditional format.\\n*/\\ninterface ConditionalTopBottomRule {\\n    /**\\n* The rank between 1 and 1000 for numeric ranks or 1 and 100 for percent ranks.\\n*/\\nrank: number\\n    /**\\n* Format values based on the top or bottom rank.\\n*/\\ntype: ConditionalTopBottomCriterionType | 'Invalid' | 'TopItems' | 'TopPercent' | 'BottomItems' | 'BottomPercent'\\n}\\n/**\\n* Represents the preset criteria conditional format rule.\\n*/\\ninterface ConditionalPresetCriteriaRule {\\n    /**\\n* The criterion of the conditional format.\\n*/\\ncriterion: ConditionalFormatPresetCriterion | 'Invalid' | 'Blanks' | 'NonBlanks' | 'Errors' | 'NonErrors' | 'Yesterday' | 'Today' | 'Tomorrow' | 'LastSevenDays' | 'LastWeek' | 'ThisWeek' | 'NextWeek' | 'LastMonth' | 'ThisMonth' | 'NextMonth' | 'AboveAverage' | 'BelowAverage' | 'EqualOrAboveAverage' | 'EqualOrBelowAverage' | 'OneStdDevAboveAverage' | 'OneStdDevBelowAverage' | 'TwoStdDevAboveAverage' | 'TwoStdDevBelowAverage' | 'ThreeStdDevAboveAverage' | 'ThreeStdDevBelowAverage' | 'UniqueValues' | 'DuplicateValues'\\n}\\n/**\\n* Represents a cell value conditional format rule.\\n*/\\ninterface ConditionalTextComparisonRule {\\n    /**\\n* The operator of the text conditional format.\\n*/\\noperator: ConditionalTextOperator | 'Invalid' | 'Contains' | 'NotContains' | 'BeginsWith' | 'EndsWith'\\n    /**\\n* The text value of the conditional format.\\n*/\\ntext: string\\n}\\n/**\\n* Represents a cell value conditional format rule.\\n*/\\ninterface ConditionalCellValueRule {\\n    /**\\n* The formula, if required, on which to evaluate the conditional format rule.\\n*/\\nformula1: string\\n    /**\\n* The formula, if required, on which to evaluate the conditional format rule.\\n*/\\nformula2?: string\\n    /**\\n* The operator of the cell value conditional format.\\n*/\\noperator: ConditionalCellValueOperator | 'Invalid' | 'Between' | 'NotBetween' | 'EqualTo' | 'NotEqualTo' | 'GreaterThan' | 'LessThan' | 'GreaterThanOrEqual' | 'LessThanOrEqual'\\n}\\n/**\\n* Represents page zoom properties.\\n*/\\ninterface PageLayoutZoomOptions {\\n    /**\\n* Number of pages to fit horizontally. This value can be `null` if percentage scale is used.\\n*/\\nhorizontalFitToPages?: number\\n    /**\\n* Print page scale value can be between 10 and 400. This value can be `null` if fit to page tall or wide is specified.\\n*/\\nscale?: number\\n    /**\\n* Number of pages to fit vertically. This value can be `null` if percentage scale is used.\\n*/\\nverticalFitToPages?: number\\n}\\n/**\\n* Represents the options in page layout margins.\\n*/\\ninterface PageLayoutMarginOptions {\\n    /**\\n* Specifies the page layout bottom margin in the unit specified to use for printing.\\n*/\\nbottom?: number\\n    /**\\n* Specifies the page layout footer margin in the unit specified to use for printing.\\n*/\\nfooter?: number\\n    /**\\n* Specifies the page layout header margin in the unit specified to use for printing.\\n*/\\nheader?: number\\n    /**\\n* Specifies the page layout left margin in the unit specified to use for printing.\\n*/\\nleft?: number\\n    /**\\n* Specifies the page layout right margin in the unit specified to use for printing.\\n*/\\nright?: number\\n    /**\\n* Specifies the page layout top margin in the unit specified to use for printing.\\n*/\\ntop?: number\\n}\\n/**\\n* Represents the entity that is mentioned in comments.\\n*/\\ninterface CommentMention {\\n    /**\\n* The email address of the entity that is mentioned in a comment.\\n*/\\nemail: string\\n    /**\\n* The ID of the entity. The ID matches one of the IDs in `CommentRichContent.richContent`.\\n*/\\nid: number\\n    /**\\n* The name of the entity that is mentioned in a comment.\\n*/\\nname: string\\n}\\n/**\\n* Represents the content contained within a comment or comment reply. Rich content incudes the text string and any other objects contained within the comment body, such as mentions.\\n*/\\ninterface CommentRichContent {\\n    /**\\n* An array containing all the entities (e.g., people) mentioned within the comment.\\n*/\\nmentions?: CommentMention[]\\n    /**\\n* Specifies the rich content of the comment (e.g., comment content with mentions, the first mentioned entity has an ID attribute of 0, and the second mentioned entity has an ID attribute of 1).\\n*/\\nrichContent: string\\n}\\n\\n\\n    //\\n    // Enum\\n    //\\n    /**\\n* Represents the refresh mode of the workbook links.\\n*/\\nenum WorkbookLinksRefreshMode {\\n/**\\n* The workbook links are updated manually.\\n*/\\nmanual = \\\"Manual\\\",\\n\\n    /**\\n* The workbook links are updated at a set interval determined by the Excel application.\\n*/\\nautomatic = \\\"Automatic\\\",\\n}/**\\n* Enum representing all accepted conditions by which a date filter can be applied.\\n* Used to configure the type of PivotFilter that is applied to the field.\\n*/\\nenum DateFilterCondition {\\n/**\\n* `DateFilterCondition` is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* Equals comparator criterion.\\n* \\n* Required Criteria: {`comparator`}.\\n* Optional Criteria: {`wholeDays`, `exclusive`}.\\n*/\\nequals = \\\"Equals\\\",\\n\\n    /**\\n* Date is before comparator date.\\n* \\n* Required Criteria: {`comparator`}.\\n* Optional Criteria: {`wholeDays`}.\\n*/\\nbefore = \\\"Before\\\",\\n\\n    /**\\n* Date is before or equal to comparator date.\\n* \\n* Required Criteria: {`comparator`}.\\n* Optional Criteria: {`wholeDays`}.\\n*/\\nbeforeOrEqualTo = \\\"BeforeOrEqualTo\\\",\\n\\n    /**\\n* Date is after comparator date.\\n* \\n* Required Criteria: {`comparator`}.\\n* Optional Criteria: {`wholeDays`}.\\n*/\\nafter = \\\"After\\\",\\n\\n    /**\\n* Date is after or equal to comparator date.\\n* \\n* Required Criteria: {`comparator`}.\\n* Optional Criteria: {`wholeDays`}.\\n*/\\nafterOrEqualTo = \\\"AfterOrEqualTo\\\",\\n\\n    /**\\n* Between `lowerBound` and `upperBound` dates.\\n* \\n* Required Criteria: {`lowerBound`, `upperBound`}.\\n* Optional Criteria: {`wholeDays`, `exclusive`}.\\n*/\\nbetween = \\\"Between\\\",\\n\\n    /**\\n* Date is tomorrow.\\n*/\\ntomorrow = \\\"Tomorrow\\\",\\n\\n    /**\\n* Date is today.\\n*/\\ntoday = \\\"Today\\\",\\n\\n    /**\\n* Date is yesterday.\\n*/\\nyesterday = \\\"Yesterday\\\",\\n\\n    /**\\n* Date is next week.\\n*/\\nnextWeek = \\\"NextWeek\\\",\\n\\n    /**\\n* Date is this week.\\n*/\\nthisWeek = \\\"ThisWeek\\\",\\n\\n    /**\\n* Date is last week.\\n*/\\nlastWeek = \\\"LastWeek\\\",\\n\\n    /**\\n* Date is next month.\\n*/\\nnextMonth = \\\"NextMonth\\\",\\n\\n    /**\\n* Date is this month.\\n*/\\nthisMonth = \\\"ThisMonth\\\",\\n\\n    /**\\n* Date is last month.\\n*/\\nlastMonth = \\\"LastMonth\\\",\\n\\n    /**\\n* Date is next quarter.\\n*/\\nnextQuarter = \\\"NextQuarter\\\",\\n\\n    /**\\n* Date is this quarter.\\n*/\\nthisQuarter = \\\"ThisQuarter\\\",\\n\\n    /**\\n* Date is last quarter.\\n*/\\nlastQuarter = \\\"LastQuarter\\\",\\n\\n    /**\\n* Date is next year.\\n*/\\nnextYear = \\\"NextYear\\\",\\n\\n    /**\\n* Date is this year.\\n*/\\nthisYear = \\\"ThisYear\\\",\\n\\n    /**\\n* Date is last year.\\n*/\\nlastYear = \\\"LastYear\\\",\\n\\n    /**\\n* Date is in the same year to date.\\n*/\\nyearToDate = \\\"YearToDate\\\",\\n\\n    /**\\n* Date is in Quarter 1.\\n*/\\nallDatesInPeriodQuarter1 = \\\"AllDatesInPeriodQuarter1\\\",\\n\\n    /**\\n* Date is in Quarter 2.\\n*/\\nallDatesInPeriodQuarter2 = \\\"AllDatesInPeriodQuarter2\\\",\\n\\n    /**\\n* Date is in Quarter 3.\\n*/\\nallDatesInPeriodQuarter3 = \\\"AllDatesInPeriodQuarter3\\\",\\n\\n    /**\\n* Date is in Quarter 4.\\n*/\\nallDatesInPeriodQuarter4 = \\\"AllDatesInPeriodQuarter4\\\",\\n\\n    /**\\n* Date is in January.\\n*/\\nallDatesInPeriodJanuary = \\\"AllDatesInPeriodJanuary\\\",\\n\\n    /**\\n* Date is in February.\\n*/\\nallDatesInPeriodFebruary = \\\"AllDatesInPeriodFebruary\\\",\\n\\n    /**\\n* Date is in March.\\n*/\\nallDatesInPeriodMarch = \\\"AllDatesInPeriodMarch\\\",\\n\\n    /**\\n* Date is in April.\\n*/\\nallDatesInPeriodApril = \\\"AllDatesInPeriodApril\\\",\\n\\n    /**\\n* Date is in May.\\n*/\\nallDatesInPeriodMay = \\\"AllDatesInPeriodMay\\\",\\n\\n    /**\\n* Date is in June.\\n*/\\nallDatesInPeriodJune = \\\"AllDatesInPeriodJune\\\",\\n\\n    /**\\n* Date is in July.\\n*/\\nallDatesInPeriodJuly = \\\"AllDatesInPeriodJuly\\\",\\n\\n    /**\\n* Date is in August.\\n*/\\nallDatesInPeriodAugust = \\\"AllDatesInPeriodAugust\\\",\\n\\n    /**\\n* Date is in September.\\n*/\\nallDatesInPeriodSeptember = \\\"AllDatesInPeriodSeptember\\\",\\n\\n    /**\\n* Date is in October.\\n*/\\nallDatesInPeriodOctober = \\\"AllDatesInPeriodOctober\\\",\\n\\n    /**\\n* Date is in November.\\n*/\\nallDatesInPeriodNovember = \\\"AllDatesInPeriodNovember\\\",\\n\\n    /**\\n* Date is in December.\\n*/\\nallDatesInPeriodDecember = \\\"AllDatesInPeriodDecember\\\",\\n}/**\\n* Enum representing all accepted conditions by which a label filter can be applied.\\n* Used to configure the type of PivotFilter that is applied to the field.\\n* `PivotFilter.criteria.exclusive` can be set to `true` to invert many of these conditions.\\n*/\\nenum LabelFilterCondition {\\n/**\\n* `LabelFilterCondition` is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* Equals comparator criterion.\\n* \\n* Required Criteria: {`comparator`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\nequals = \\\"Equals\\\",\\n\\n    /**\\n* Label begins with substring criterion.\\n* \\n* Required Criteria: {`substring`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\nbeginsWith = \\\"BeginsWith\\\",\\n\\n    /**\\n* Label ends with substring criterion.\\n* \\n* Required Criteria: {`substring`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\nendsWith = \\\"EndsWith\\\",\\n\\n    /**\\n* Label contains substring criterion.\\n* \\n* Required Criteria: {`substring`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\ncontains = \\\"Contains\\\",\\n\\n    /**\\n* Greater than comparator criterion.\\n* \\n* Required Criteria: {`comparator`}.\\n*/\\ngreaterThan = \\\"GreaterThan\\\",\\n\\n    /**\\n* Greater than or equal to comparator criterion.\\n* \\n* Required Criteria: {`comparator`}.\\n*/\\ngreaterThanOrEqualTo = \\\"GreaterThanOrEqualTo\\\",\\n\\n    /**\\n* Less than comparator criterion.\\n* \\n* Required Criteria: {`comparator`}.\\n*/\\nlessThan = \\\"LessThan\\\",\\n\\n    /**\\n* Less than or equal to comparator criterion.\\n* \\n* Required Criteria: {`comparator`}.\\n*/\\nlessThanOrEqualTo = \\\"LessThanOrEqualTo\\\",\\n\\n    /**\\n* Between `lowerBound` and `upperBound` criteria.\\n* \\n* Required Criteria: {`lowerBound`, `upperBound`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\nbetween = \\\"Between\\\",\\n}/**\\n* A simple enum that represents a type of filter for a PivotField.\\n*/\\nenum PivotFilterType {\\n/**\\n* `PivotFilterType` is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* Filters based on the value of a PivotItem with respect to a `DataPivotHierarchy`.\\n*/\\nvalue = \\\"Value\\\",\\n\\n    /**\\n* Filters specific manually selected PivotItems from the PivotTable.\\n*/\\nmanual = \\\"Manual\\\",\\n\\n    /**\\n* Filters PivotItems based on their labels.\\n* Note: A PivotField cannot simultaneously have a label filter and a date filter applied.\\n*/\\nlabel = \\\"Label\\\",\\n\\n    /**\\n* Filters PivotItems with a date in place of a label.\\n* Note: A PivotField cannot simultaneously have a label filter and a date filter applied.\\n*/\\ndate = \\\"Date\\\",\\n}/**\\n* A simple enum for top/bottom filters to select whether to filter by the top N or bottom N percent, number, or sum of values.\\n*/\\nenum TopBottomSelectionType {\\n/**\\n* Filter the top/bottom N number of items as measured by the chosen value.\\n*/\\nitems = \\\"Items\\\",\\n\\n    /**\\n* Filter the top/bottom N percent of items as measured by the chosen value.\\n*/\\npercent = \\\"Percent\\\",\\n\\n    /**\\n* Filter the top/bottom N sum as measured by the chosen value.\\n*/\\nsum = \\\"Sum\\\",\\n}/**\\n* Enum representing all accepted conditions by which a value filter can be applied.\\n* Used to configure the type of PivotFilter that is applied to the field.\\n* `PivotFilter.exclusive` can be set to `true` to invert many of these conditions.\\n*/\\nenum ValueFilterCondition {\\n/**\\n* `ValueFilterCondition` is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* Equals comparator criterion.\\n* \\n* Required Criteria: {`value`, `comparator`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\nequals = \\\"Equals\\\",\\n\\n    /**\\n* Greater than comparator criterion.\\n* \\n* Required Criteria: {`value`, `comparator`}.\\n*/\\ngreaterThan = \\\"GreaterThan\\\",\\n\\n    /**\\n* Greater than or equal to comparator criterion.\\n* \\n* Required Criteria: {`value`, `comparator`}.\\n*/\\ngreaterThanOrEqualTo = \\\"GreaterThanOrEqualTo\\\",\\n\\n    /**\\n* Less than comparator criterion.\\n* \\n* Required Criteria: {`value`, `comparator`}.\\n*/\\nlessThan = \\\"LessThan\\\",\\n\\n    /**\\n* Less than or equal to comparator criterion.\\n* \\n* Required Criteria: {`value`, `comparator`}.\\n*/\\nlessThanOrEqualTo = \\\"LessThanOrEqualTo\\\",\\n\\n    /**\\n* Between `lowerBound` and `upperBound` criteria.\\n* \\n* Required Criteria: {`value`, `lowerBound`, `upperBound`}.\\n* Optional Criteria: {`exclusive`}.\\n*/\\nbetween = \\\"Between\\\",\\n\\n    /**\\n* In top N (`threshold`) [items, percent, sum] of value category.\\n* \\n* Required Criteria: {`value`, `threshold`, `selectionType`}.\\n*/\\ntopN = \\\"TopN\\\",\\n\\n    /**\\n* In bottom N (`threshold`) [items, percent, sum] of value category.\\n* \\n* Required Criteria: {`value`, `threshold`, `selectionType`}.\\n*/\\nbottomN = \\\"BottomN\\\",\\n}/**\\n* Represents the dimensions when getting values from chart series.\\n*/\\nenum ChartSeriesDimension {\\n/**\\n* The chart series axis for the categories.\\n*/\\ncategories = \\\"Categories\\\",\\n\\n    /**\\n* The chart series axis for the values.\\n*/\\nvalues = \\\"Values\\\",\\n\\n    /**\\n* The chart series axis for the x-axis values in scatter and bubble charts.\\n*/\\nxvalues = \\\"Xvalues\\\",\\n\\n    /**\\n* The chart series axis for the y-axis values in scatter and bubble charts.\\n*/\\nyvalues = \\\"Yvalues\\\",\\n\\n    /**\\n* The chart series axis for the bubble sizes in bubble charts.\\n*/\\nbubbleSizes = \\\"BubbleSizes\\\",\\n}/**\\n* Represents the criteria for the top/bottom values filter.\\n*/\\nenum PivotFilterTopBottomCriterion {\\ninvalid = \\\"Invalid\\\",\\n\\n    topItems = \\\"TopItems\\\",\\n\\n    topPercent = \\\"TopPercent\\\",\\n\\n    topSum = \\\"TopSum\\\",\\n\\n    bottomItems = \\\"BottomItems\\\",\\n\\n    bottomPercent = \\\"BottomPercent\\\",\\n\\n    bottomSum = \\\"BottomSum\\\",\\n}/**\\n* Represents the sort direction.\\n*/\\nenum SortBy {\\n/**\\n* Ascending sort. Smallest to largest or A to Z.\\n*/\\nascending = \\\"Ascending\\\",\\n\\n    /**\\n* Descending sort. Largest to smallest or Z to A.\\n*/\\ndescending = \\\"Descending\\\",\\n}/**\\n* Aggregation function for the DataPivotField.\\n*/\\nenum AggregationFunction {\\n/**\\n* Aggregation function is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* Excel will automatically select the aggregation based on the data items.\\n*/\\nautomatic = \\\"Automatic\\\",\\n\\n    /**\\n* Aggregate using the sum of the data, equivalent to the SUM function.\\n*/\\nsum = \\\"Sum\\\",\\n\\n    /**\\n* Aggregate using the count of items in the data, equivalent to the COUNTA function.\\n*/\\ncount = \\\"Count\\\",\\n\\n    /**\\n* Aggregate using the average of the data, equivalent to the AVERAGE function.\\n*/\\naverage = \\\"Average\\\",\\n\\n    /**\\n* Aggregate using the maximum value of the data, equivalent to the MAX function.\\n*/\\nmax = \\\"Max\\\",\\n\\n    /**\\n* Aggregate using the minimum value of the data, equivalent to the MIN function.\\n*/\\nmin = \\\"Min\\\",\\n\\n    /**\\n* Aggregate using the product of the data, equivalent to the PRODUCT function.\\n*/\\nproduct = \\\"Product\\\",\\n\\n    /**\\n* Aggregate using the count of numbers in the data, equivalent to the COUNT function.\\n*/\\ncountNumbers = \\\"CountNumbers\\\",\\n\\n    /**\\n* Aggregate using the standard deviation of the data, equivalent to the STDEV function.\\n*/\\nstandardDeviation = \\\"StandardDeviation\\\",\\n\\n    /**\\n* Aggregate using the standard deviation of the data, equivalent to the STDEVP function.\\n*/\\nstandardDeviationP = \\\"StandardDeviationP\\\",\\n\\n    /**\\n* Aggregate using the variance of the data, equivalent to the VAR function.\\n*/\\nvariance = \\\"Variance\\\",\\n\\n    /**\\n* Aggregate using the variance of the data, equivalent to the VARP function.\\n*/\\nvarianceP = \\\"VarianceP\\\",\\n}/**\\n* The ShowAs calculation function for the DataPivotField.\\n*/\\nenum ShowAsCalculation {\\n/**\\n* Calculation is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* No calculation is applied.\\n*/\\nnone = \\\"None\\\",\\n\\n    /**\\n* Percent of the grand total.\\n*/\\npercentOfGrandTotal = \\\"PercentOfGrandTotal\\\",\\n\\n    /**\\n* Percent of the row total.\\n*/\\npercentOfRowTotal = \\\"PercentOfRowTotal\\\",\\n\\n    /**\\n* Percent of the column total.\\n*/\\npercentOfColumnTotal = \\\"PercentOfColumnTotal\\\",\\n\\n    /**\\n* Percent of the row total for the specified Base field.\\n*/\\npercentOfParentRowTotal = \\\"PercentOfParentRowTotal\\\",\\n\\n    /**\\n* Percent of the column total for the specified Base field.\\n*/\\npercentOfParentColumnTotal = \\\"PercentOfParentColumnTotal\\\",\\n\\n    /**\\n* Percent of the grand total for the specified Base field.\\n*/\\npercentOfParentTotal = \\\"PercentOfParentTotal\\\",\\n\\n    /**\\n* Percent of the specified Base field and Base item.\\n*/\\npercentOf = \\\"PercentOf\\\",\\n\\n    /**\\n* Running total of the specified Base field.\\n*/\\nrunningTotal = \\\"RunningTotal\\\",\\n\\n    /**\\n* Percent running total of the specified Base field.\\n*/\\npercentRunningTotal = \\\"PercentRunningTotal\\\",\\n\\n    /**\\n* Difference from the specified Base field and Base item.\\n*/\\ndifferenceFrom = \\\"DifferenceFrom\\\",\\n\\n    /**\\n* Difference from the specified Base field and Base item.\\n*/\\npercentDifferenceFrom = \\\"PercentDifferenceFrom\\\",\\n\\n    /**\\n* Ascending rank of the specified Base field.\\n*/\\nrankAscending = \\\"RankAscending\\\",\\n\\n    /**\\n* Descending rank of the specified Base field.\\n*/\\nrankDecending = \\\"RankDecending\\\",\\n\\n    /**\\n* Calculates the values as follows:\\n* ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))\\n*/\\nindex = \\\"Index\\\",\\n}/**\\n* Represents the axis from which to get the PivotItems.\\n*/\\nenum PivotAxis {\\n/**\\n* The axis or region is unknown or unsupported.\\n*/\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* The row axis.\\n*/\\nrow = \\\"Row\\\",\\n\\n    /**\\n* The column axis.\\n*/\\ncolumn = \\\"Column\\\",\\n\\n    /**\\n* The data axis.\\n*/\\ndata = \\\"Data\\\",\\n\\n    /**\\n* The filter axis.\\n*/\\nfilter = \\\"Filter\\\",\\n}enum ChartAxisType {\\ninvalid = \\\"Invalid\\\",\\n\\n    /**\\n* Axis displays categories.\\n*/\\ncategory = \\\"Category\\\",\\n\\n    /**\\n* Axis displays values.\\n*/\\nvalue = \\\"Value\\\",\\n\\n    /**\\n* Axis displays data series.\\n*/\\nseries = \\\"Series\\\",\\n}enum ChartAxisGroup {\\nprimary = \\\"Primary\\\",\\n\\n    secondary = \\\"Secondary\\\",\\n}enum ChartAxisScaleType {\\nlinear = \\\"Linear\\\",\\n\\n    logarithmic = \\\"Logarithmic\\\",\\n}enum ChartAxisPosition {\\nautomatic = \\\"Automatic\\\",\\n\\n    maximum = \\\"Maximum\\\",\\n\\n    minimum = \\\"Minimum\\\",\\n\\n    custom = \\\"Custom\\\",\\n}enum ChartAxisTickMark {\\nnone = \\\"None\\\",\\n\\n    cross = \\\"Cross\\\",\\n\\n    inside = \\\"Inside\\\",\\n\\n    outside = \\\"Outside\\\",\\n}/**\\n* Represents the state of calculation across the entire Excel application.\\n*/\\nenum CalculationState {\\n/**\\n* Calculations complete.\\n*/\\ndone = \\\"Done\\\",\\n\\n    /**\\n* Calculations in progress.\\n*/\\ncalculating = \\\"Calculating\\\",\\n\\n    /**\\n* Changes that trigger calculation have been made, but a recalculation has not yet been performed.\\n*/\\npending = \\\"Pending\\\",\\n}enum ChartAxisTickLabelPosition {\\nnextToAxis = \\\"NextToAxis\\\",\\n\\n    high = \\\"High\\\",\\n\\n    low = \\\"Low\\\",\\n\\n    none = \\\"None\\\",\\n}enum ChartAxisDisplayUnit {\\n/**\\n* Default option. This will reset display unit to the axis, and set unit label invisible.\\n*/\\nnone = \\\"None\\\",\\n\\n    /**\\n* This will set the axis in units of hundreds.\\n*/\\nhundreds = \\\"Hundreds\\\",\\n\\n    /**\\n* This will set the axis in units of thousands.\\n*/\\nthousands = \\\"Thousands\\\",\\n\\n    /**\\n* This will set the axis in units of tens of thousands.\\n*/\\ntenThousands = \\\"TenThousands\\\",\\n\\n    /**\\n* This will set the axis in units of hundreds of thousands.\\n*/\\nhundredThousands = \\\"HundredThousands\\\",\\n\\n    /**\\n* This will set the axis in units of millions.\\n*/\\nmillions = \\\"Millions\\\",\\n\\n    /**\\n* This will set the axis in units of tens of millions.\\n*/\\ntenMillions = \\\"TenMillions\\\",\\n\\n    /**\\n* This will set the axis in units of hundreds of millions.\\n*/\\nhundredMillions = \\\"HundredMillions\\\",\\n\\n    /**\\n* This will set the axis in units of billions.\\n*/\\nbillions = \\\"Billions\\\",\\n\\n    /**\\n* This will set the axis in units of trillions.\\n*/\\ntrillions = \\\"Trillions\\\",\\n\\n    /**\\n* This will set the axis in units of custom value.\\n*/\\ncustom = \\\"Custom\\\",\\n}/**\\n* Specifies the unit of time for chart axes and data series.\\n*/\\nenum ChartAxisTimeUnit {\\ndays = \\\"Days\\\",\\n\\n    months = \\\"Months\\\",\\n\\n    years = \\\"Years\\\",\\n}/**\\n* Represents the quartile calculation type of chart series layout. Only applies to a box and whisker chart.\\n*/\\nenum ChartBoxQuartileCalculation {\\ninclusive = \\\"Inclusive\\\",\\n\\n    exclusive = \\\"Exclusive\\\",\\n}/**\\n* Specifies the type of the category axis.\\n*/\\nenum ChartAxisCategoryType {\\n/**\\n* Excel controls the axis type.\\n*/\\nautomatic = \\\"Automatic\\\",\\n\\n    /**\\n* Axis groups data by an arbitrary set of categories.\\n*/\\ntextAxis = \\\"TextAxis\\\",\\n\\n    /**\\n* Axis groups data on a time scale.\\n*/\\ndateAxis = \\\"DateAxis\\\",\\n}/**\\n* Specifies the bin type of a histogram chart or pareto chart series.\\n*/\\nenum ChartBinType {\\ncategory = \\\"Category\\\",\\n\\n    auto = \\\"Auto\\\",\\n\\n    binWidth = \\\"BinWidth\\\",\\n\\n    binCount = \\\"BinCount\\\",\\n}enum ChartLineStyle {\\nnone = \\\"None\\\",\\n\\n    continuous = \\\"Continuous\\\",\\n\\n    dash = \\\"Dash\\\",\\n\\n    dashDot = \\\"DashDot\\\",\\n\\n    dashDotDot = \\\"DashDotDot\\\",\\n\\n    dot = \\\"Dot\\\",\\n\\n    grey25 = \\\"Grey25\\\",\\n\\n    grey50 = \\\"Grey50\\\",\\n\\n    grey75 = \\\"Grey75\\\",\\n\\n    automatic = \\\"Automatic\\\",\\n\\n    roundDot = \\\"RoundDot\\\",\\n}enum ChartDataLabelPosition {\\ninvalid = \\\"Invalid\\\",\\n\\n    none = \\\"None\\\",\\n\\n    center = \\\"Center\\\",\\n\\n    insideEnd = \\\"InsideEnd\\\",\\n\\n    insideBase = \\\"InsideBase\\\",\\n\\n    outsideEnd = \\\"OutsideEnd\\\",\\n\\n    left = \\\"Left\\\",\\n\\n    right = \\\"Right\\\",\\n\\n    top = \\\"Top\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n\\n    bestFit = \\\"BestFit\\\",\\n\\n    callout = \\\"Callout\\\",\\n}/**\\n* Represents which parts of the error bar to include.\\n*/\\nenum ChartErrorBarsInclude {\\nboth = \\\"Both\\\",\\n\\n    minusValues = \\\"MinusValues\\\",\\n\\n    plusValues = \\\"PlusValues\\\",\\n}/**\\n* Represents the range type for error bars.\\n*/\\nenum ChartErrorBarsType {\\nfixedValue = \\\"FixedValue\\\",\\n\\n    percent = \\\"Percent\\\",\\n\\n    stDev = \\\"StDev\\\",\\n\\n    stError = \\\"StError\\\",\\n\\n    custom = \\\"Custom\\\",\\n}/**\\n* Represents the mapping level of a chart series. This only applies to region map charts.\\n*/\\nenum ChartMapAreaLevel {\\nautomatic = \\\"Automatic\\\",\\n\\n    dataOnly = \\\"DataOnly\\\",\\n\\n    city = \\\"City\\\",\\n\\n    county = \\\"County\\\",\\n\\n    state = \\\"State\\\",\\n\\n    country = \\\"Country\\\",\\n\\n    continent = \\\"Continent\\\",\\n\\n    world = \\\"World\\\",\\n}/**\\n* Represents the gradient style of a chart series. This is only applicable for region map charts.\\n*/\\nenum ChartGradientStyle {\\ntwoPhaseColor = \\\"TwoPhaseColor\\\",\\n\\n    threePhaseColor = \\\"ThreePhaseColor\\\",\\n}/**\\n* Represents the gradient style type of a chart series. This is only applicable for region map charts.\\n*/\\nenum ChartGradientStyleType {\\nextremeValue = \\\"ExtremeValue\\\",\\n\\n    number = \\\"Number\\\",\\n\\n    percent = \\\"Percent\\\",\\n}/**\\n* Represents the position of the chart title.\\n*/\\nenum ChartTitlePosition {\\nautomatic = \\\"Automatic\\\",\\n\\n    top = \\\"Top\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n\\n    left = \\\"Left\\\",\\n\\n    right = \\\"Right\\\",\\n}enum ChartLegendPosition {\\ninvalid = \\\"Invalid\\\",\\n\\n    top = \\\"Top\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n\\n    left = \\\"Left\\\",\\n\\n    right = \\\"Right\\\",\\n\\n    corner = \\\"Corner\\\",\\n\\n    custom = \\\"Custom\\\",\\n}enum ChartMarkerStyle {\\ninvalid = \\\"Invalid\\\",\\n\\n    automatic = \\\"Automatic\\\",\\n\\n    none = \\\"None\\\",\\n\\n    square = \\\"Square\\\",\\n\\n    diamond = \\\"Diamond\\\",\\n\\n    triangle = \\\"Triangle\\\",\\n\\n    x = \\\"X\\\",\\n\\n    star = \\\"Star\\\",\\n\\n    dot = \\\"Dot\\\",\\n\\n    dash = \\\"Dash\\\",\\n\\n    circle = \\\"Circle\\\",\\n\\n    plus = \\\"Plus\\\",\\n\\n    picture = \\\"Picture\\\",\\n}enum ChartPlotAreaPosition {\\nautomatic = \\\"Automatic\\\",\\n\\n    custom = \\\"Custom\\\",\\n}/**\\n* Represents the region level of a chart series layout. This only applies to region map charts.\\n*/\\nenum ChartMapLabelStrategy {\\nnone = \\\"None\\\",\\n\\n    bestFit = \\\"BestFit\\\",\\n\\n    showAll = \\\"ShowAll\\\",\\n}/**\\n* Represents the region projection type of a chart series layout. This only applies to region map charts.\\n*/\\nenum ChartMapProjectionType {\\nautomatic = \\\"Automatic\\\",\\n\\n    mercator = \\\"Mercator\\\",\\n\\n    miller = \\\"Miller\\\",\\n\\n    robinson = \\\"Robinson\\\",\\n\\n    albers = \\\"Albers\\\",\\n}/**\\n* Represents the parent label strategy of the chart series layout. This only applies to treemap charts\\n*/\\nenum ChartParentLabelStrategy {\\nnone = \\\"None\\\",\\n\\n    banner = \\\"Banner\\\",\\n\\n    overlapping = \\\"Overlapping\\\",\\n}/**\\n* Specifies whether the series are by rows or by columns. In Excel on desktop, the \\\"auto\\\" option will inspect the source data shape to automatically guess whether the data is by rows or columns. In Excel on the web, \\\"auto\\\" will simply default to \\\"columns\\\".\\n*/\\nenum ChartSeriesBy {\\n/**\\n* In Excel on desktop, the \\\"auto\\\" option will inspect the source data shape to automatically guess whether the data is by rows or columns. In Excel on the web, \\\"auto\\\" will simply default to \\\"columns\\\".\\n*/\\nauto = \\\"Auto\\\",\\n\\n    columns = \\\"Columns\\\",\\n\\n    rows = \\\"Rows\\\",\\n}/**\\n* Represents the horizontal alignment for the specified object.\\n*/\\nenum ChartTextHorizontalAlignment {\\ncenter = \\\"Center\\\",\\n\\n    left = \\\"Left\\\",\\n\\n    right = \\\"Right\\\",\\n\\n    justify = \\\"Justify\\\",\\n\\n    distributed = \\\"Distributed\\\",\\n}/**\\n* Represents the vertical alignment for the specified object.\\n*/\\nenum ChartTextVerticalAlignment {\\ncenter = \\\"Center\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n\\n    top = \\\"Top\\\",\\n\\n    justify = \\\"Justify\\\",\\n\\n    distributed = \\\"Distributed\\\",\\n}enum ChartTickLabelAlignment {\\ncenter = \\\"Center\\\",\\n\\n    left = \\\"Left\\\",\\n\\n    right = \\\"Right\\\",\\n}enum ChartType {\\ninvalid = \\\"Invalid\\\",\\n\\n    columnClustered = \\\"ColumnClustered\\\",\\n\\n    columnStacked = \\\"ColumnStacked\\\",\\n\\n    columnStacked100 = \\\"ColumnStacked100\\\",\\n\\n    _3DColumnClustered = \\\"3DColumnClustered\\\",\\n\\n    _3DColumnStacked = \\\"3DColumnStacked\\\",\\n\\n    _3DColumnStacked100 = \\\"3DColumnStacked100\\\",\\n\\n    barClustered = \\\"BarClustered\\\",\\n\\n    barStacked = \\\"BarStacked\\\",\\n\\n    barStacked100 = \\\"BarStacked100\\\",\\n\\n    _3DBarClustered = \\\"3DBarClustered\\\",\\n\\n    _3DBarStacked = \\\"3DBarStacked\\\",\\n\\n    _3DBarStacked100 = \\\"3DBarStacked100\\\",\\n\\n    lineStacked = \\\"LineStacked\\\",\\n\\n    lineStacked100 = \\\"LineStacked100\\\",\\n\\n    lineMarkers = \\\"LineMarkers\\\",\\n\\n    lineMarkersStacked = \\\"LineMarkersStacked\\\",\\n\\n    lineMarkersStacked100 = \\\"LineMarkersStacked100\\\",\\n\\n    pieOfPie = \\\"PieOfPie\\\",\\n\\n    pieExploded = \\\"PieExploded\\\",\\n\\n    _3DPieExploded = \\\"3DPieExploded\\\",\\n\\n    barOfPie = \\\"BarOfPie\\\",\\n\\n    xyscatterSmooth = \\\"XyscatterSmooth\\\",\\n\\n    xyscatterSmoothNoMarkers = \\\"XyscatterSmoothNoMarkers\\\",\\n\\n    xyscatterLines = \\\"XyscatterLines\\\",\\n\\n    xyscatterLinesNoMarkers = \\\"XyscatterLinesNoMarkers\\\",\\n\\n    areaStacked = \\\"AreaStacked\\\",\\n\\n    areaStacked100 = \\\"AreaStacked100\\\",\\n\\n    _3DAreaStacked = \\\"3DAreaStacked\\\",\\n\\n    _3DAreaStacked100 = \\\"3DAreaStacked100\\\",\\n\\n    doughnutExploded = \\\"DoughnutExploded\\\",\\n\\n    radarMarkers = \\\"RadarMarkers\\\",\\n\\n    radarFilled = \\\"RadarFilled\\\",\\n\\n    surface = \\\"Surface\\\",\\n\\n    surfaceWireframe = \\\"SurfaceWireframe\\\",\\n\\n    surfaceTopView = \\\"SurfaceTopView\\\",\\n\\n    surfaceTopViewWireframe = \\\"SurfaceTopViewWireframe\\\",\\n\\n    bubble = \\\"Bubble\\\",\\n\\n    bubble3DEffect = \\\"Bubble3DEffect\\\",\\n\\n    stockHLC = \\\"StockHLC\\\",\\n\\n    stockOHLC = \\\"StockOHLC\\\",\\n\\n    stockVHLC = \\\"StockVHLC\\\",\\n\\n    stockVOHLC = \\\"StockVOHLC\\\",\\n\\n    cylinderColClustered = \\\"CylinderColClustered\\\",\\n\\n    cylinderColStacked = \\\"CylinderColStacked\\\",\\n\\n    cylinderColStacked100 = \\\"CylinderColStacked100\\\",\\n\\n    cylinderBarClustered = \\\"CylinderBarClustered\\\",\\n\\n    cylinderBarStacked = \\\"CylinderBarStacked\\\",\\n\\n    cylinderBarStacked100 = \\\"CylinderBarStacked100\\\",\\n\\n    cylinderCol = \\\"CylinderCol\\\",\\n\\n    coneColClustered = \\\"ConeColClustered\\\",\\n\\n    coneColStacked = \\\"ConeColStacked\\\",\\n\\n    coneColStacked100 = \\\"ConeColStacked100\\\",\\n\\n    coneBarClustered = \\\"ConeBarClustered\\\",\\n\\n    coneBarStacked = \\\"ConeBarStacked\\\",\\n\\n    coneBarStacked100 = \\\"ConeBarStacked100\\\",\\n\\n    coneCol = \\\"ConeCol\\\",\\n\\n    pyramidColClustered = \\\"PyramidColClustered\\\",\\n\\n    pyramidColStacked = \\\"PyramidColStacked\\\",\\n\\n    pyramidColStacked100 = \\\"PyramidColStacked100\\\",\\n\\n    pyramidBarClustered = \\\"PyramidBarClustered\\\",\\n\\n    pyramidBarStacked = \\\"PyramidBarStacked\\\",\\n\\n    pyramidBarStacked100 = \\\"PyramidBarStacked100\\\",\\n\\n    pyramidCol = \\\"PyramidCol\\\",\\n\\n    _3DColumn = \\\"3DColumn\\\",\\n\\n    line = \\\"Line\\\",\\n\\n    _3DLine = \\\"3DLine\\\",\\n\\n    _3DPie = \\\"3DPie\\\",\\n\\n    pie = \\\"Pie\\\",\\n\\n    xyscatter = \\\"Xyscatter\\\",\\n\\n    _3DArea = \\\"3DArea\\\",\\n\\n    area = \\\"Area\\\",\\n\\n    doughnut = \\\"Doughnut\\\",\\n\\n    radar = \\\"Radar\\\",\\n\\n    histogram = \\\"Histogram\\\",\\n\\n    boxwhisker = \\\"Boxwhisker\\\",\\n\\n    pareto = \\\"Pareto\\\",\\n\\n    regionMap = \\\"RegionMap\\\",\\n\\n    treemap = \\\"Treemap\\\",\\n\\n    waterfall = \\\"Waterfall\\\",\\n\\n    sunburst = \\\"Sunburst\\\",\\n\\n    funnel = \\\"Funnel\\\",\\n}enum ChartUnderlineStyle {\\nnone = \\\"None\\\",\\n\\n    single = \\\"Single\\\",\\n}enum ChartDisplayBlanksAs {\\nnotPlotted = \\\"NotPlotted\\\",\\n\\n    zero = \\\"Zero\\\",\\n\\n    interplotted = \\\"Interplotted\\\",\\n}enum ChartPlotBy {\\nrows = \\\"Rows\\\",\\n\\n    columns = \\\"Columns\\\",\\n}enum ChartSplitType {\\nsplitByPosition = \\\"SplitByPosition\\\",\\n\\n    splitByValue = \\\"SplitByValue\\\",\\n\\n    splitByPercentValue = \\\"SplitByPercentValue\\\",\\n\\n    splitByCustomSplit = \\\"SplitByCustomSplit\\\",\\n}enum ChartColorScheme {\\ncolorfulPalette1 = \\\"ColorfulPalette1\\\",\\n\\n    colorfulPalette2 = \\\"ColorfulPalette2\\\",\\n\\n    colorfulPalette3 = \\\"ColorfulPalette3\\\",\\n\\n    colorfulPalette4 = \\\"ColorfulPalette4\\\",\\n\\n    monochromaticPalette1 = \\\"MonochromaticPalette1\\\",\\n\\n    monochromaticPalette2 = \\\"MonochromaticPalette2\\\",\\n\\n    monochromaticPalette3 = \\\"MonochromaticPalette3\\\",\\n\\n    monochromaticPalette4 = \\\"MonochromaticPalette4\\\",\\n\\n    monochromaticPalette5 = \\\"MonochromaticPalette5\\\",\\n\\n    monochromaticPalette6 = \\\"MonochromaticPalette6\\\",\\n\\n    monochromaticPalette7 = \\\"MonochromaticPalette7\\\",\\n\\n    monochromaticPalette8 = \\\"MonochromaticPalette8\\\",\\n\\n    monochromaticPalette9 = \\\"MonochromaticPalette9\\\",\\n\\n    monochromaticPalette10 = \\\"MonochromaticPalette10\\\",\\n\\n    monochromaticPalette11 = \\\"MonochromaticPalette11\\\",\\n\\n    monochromaticPalette12 = \\\"MonochromaticPalette12\\\",\\n\\n    monochromaticPalette13 = \\\"MonochromaticPalette13\\\",\\n}enum ChartTrendlineType {\\nlinear = \\\"Linear\\\",\\n\\n    exponential = \\\"Exponential\\\",\\n\\n    logarithmic = \\\"Logarithmic\\\",\\n\\n    movingAverage = \\\"MovingAverage\\\",\\n\\n    polynomial = \\\"Polynomial\\\",\\n\\n    power = \\\"Power\\\",\\n}/**\\n* Specifies where in the z-order a shape should be moved relative to other shapes.\\n*/\\nenum ShapeZOrder {\\nbringToFront = \\\"BringToFront\\\",\\n\\n    bringForward = \\\"BringForward\\\",\\n\\n    sendToBack = \\\"SendToBack\\\",\\n\\n    sendBackward = \\\"SendBackward\\\",\\n}/**\\n* Specifies the type of a shape.\\n*/\\nenum ShapeType {\\nunsupported = \\\"Unsupported\\\",\\n\\n    image = \\\"Image\\\",\\n\\n    geometricShape = \\\"GeometricShape\\\",\\n\\n    group = \\\"Group\\\",\\n\\n    line = \\\"Line\\\",\\n}/**\\n* Specifies whether the shape is scaled relative to its original or current size.\\n*/\\nenum ShapeScaleType {\\ncurrentSize = \\\"CurrentSize\\\",\\n\\n    originalSize = \\\"OriginalSize\\\",\\n}/**\\n* Specifies which part of the shape retains its position when the shape is scaled.\\n*/\\nenum ShapeScaleFrom {\\nscaleFromTopLeft = \\\"ScaleFromTopLeft\\\",\\n\\n    scaleFromMiddle = \\\"ScaleFromMiddle\\\",\\n\\n    scaleFromBottomRight = \\\"ScaleFromBottomRight\\\",\\n}/**\\n* Specifies a shape's fill type.\\n*/\\nenum ShapeFillType {\\n/**\\n* No fill.\\n*/\\nnoFill = \\\"NoFill\\\",\\n\\n    /**\\n* Solid fill.\\n*/\\nsolid = \\\"Solid\\\",\\n\\n    /**\\n* Gradient fill.\\n*/\\ngradient = \\\"Gradient\\\",\\n\\n    /**\\n* Pattern fill.\\n*/\\npattern = \\\"Pattern\\\",\\n\\n    /**\\n* Picture and texture fill.\\n*/\\npictureAndTexture = \\\"PictureAndTexture\\\",\\n\\n    /**\\n* Mixed fill.\\n*/\\nmixed = \\\"Mixed\\\",\\n}/**\\n* The type of underline applied to a font.\\n*/\\nenum ShapeFontUnderlineStyle {\\nnone = \\\"None\\\",\\n\\n    single = \\\"Single\\\",\\n\\n    double = \\\"Double\\\",\\n\\n    heavy = \\\"Heavy\\\",\\n\\n    dotted = \\\"Dotted\\\",\\n\\n    dottedHeavy = \\\"DottedHeavy\\\",\\n\\n    dash = \\\"Dash\\\",\\n\\n    dashHeavy = \\\"DashHeavy\\\",\\n\\n    dashLong = \\\"DashLong\\\",\\n\\n    dashLongHeavy = \\\"DashLongHeavy\\\",\\n\\n    dotDash = \\\"DotDash\\\",\\n\\n    dotDashHeavy = \\\"DotDashHeavy\\\",\\n\\n    dotDotDash = \\\"DotDotDash\\\",\\n\\n    dotDotDashHeavy = \\\"DotDotDashHeavy\\\",\\n\\n    wavy = \\\"Wavy\\\",\\n\\n    wavyHeavy = \\\"WavyHeavy\\\",\\n\\n    wavyDouble = \\\"WavyDouble\\\",\\n}/**\\n* The format of the image.\\n*/\\nenum PictureFormat {\\nunknown = \\\"Unknown\\\",\\n\\n    /**\\n* Bitmap image.\\n*/\\nbmp = \\\"Bmp\\\",\\n\\n    /**\\n* Joint Photographic Experts Group.\\n*/\\njpeg = \\\"Jpeg\\\",\\n\\n    /**\\n* Graphics Interchange Format.\\n*/\\ngif = \\\"Gif\\\",\\n\\n    /**\\n* Portable Network Graphics.\\n*/\\npng = \\\"Png\\\",\\n\\n    /**\\n* Scalable Vector Graphic.\\n*/\\nsvg = \\\"Svg\\\",\\n}/**\\n* The style for a line.\\n*/\\nenum ShapeLineStyle {\\n/**\\n* Single line.\\n*/\\nsingle = \\\"Single\\\",\\n\\n    /**\\n* Thick line with a thin line on each side.\\n*/\\nthickBetweenThin = \\\"ThickBetweenThin\\\",\\n\\n    /**\\n* Thick line next to thin line. For horizontal lines, the thick line is above the thin line. For vertical lines, the thick line is to the left of the thin line.\\n*/\\nthickThin = \\\"ThickThin\\\",\\n\\n    /**\\n* Thick line next to thin line. For horizontal lines, the thick line is below the thin line. For vertical lines, the thick line is to the right of the thin line.\\n*/\\nthinThick = \\\"ThinThick\\\",\\n\\n    /**\\n* Two thin lines.\\n*/\\nthinThin = \\\"ThinThin\\\",\\n}/**\\n* The dash style for a line.\\n*/\\nenum ShapeLineDashStyle {\\ndash = \\\"Dash\\\",\\n\\n    dashDot = \\\"DashDot\\\",\\n\\n    dashDotDot = \\\"DashDotDot\\\",\\n\\n    longDash = \\\"LongDash\\\",\\n\\n    longDashDot = \\\"LongDashDot\\\",\\n\\n    roundDot = \\\"RoundDot\\\",\\n\\n    solid = \\\"Solid\\\",\\n\\n    squareDot = \\\"SquareDot\\\",\\n\\n    longDashDotDot = \\\"LongDashDotDot\\\",\\n\\n    systemDash = \\\"SystemDash\\\",\\n\\n    systemDot = \\\"SystemDot\\\",\\n\\n    systemDashDot = \\\"SystemDashDot\\\",\\n}enum ArrowheadLength {\\nshort = \\\"Short\\\",\\n\\n    medium = \\\"Medium\\\",\\n\\n    long = \\\"Long\\\",\\n}enum ArrowheadStyle {\\nnone = \\\"None\\\",\\n\\n    triangle = \\\"Triangle\\\",\\n\\n    stealth = \\\"Stealth\\\",\\n\\n    diamond = \\\"Diamond\\\",\\n\\n    oval = \\\"Oval\\\",\\n\\n    open = \\\"Open\\\",\\n}enum ArrowheadWidth {\\nnarrow = \\\"Narrow\\\",\\n\\n    medium = \\\"Medium\\\",\\n\\n    wide = \\\"Wide\\\",\\n}enum BindingType {\\nrange = \\\"Range\\\",\\n\\n    table = \\\"Table\\\",\\n\\n    text = \\\"Text\\\",\\n}enum BorderIndex {\\nedgeTop = \\\"EdgeTop\\\",\\n\\n    edgeBottom = \\\"EdgeBottom\\\",\\n\\n    edgeLeft = \\\"EdgeLeft\\\",\\n\\n    edgeRight = \\\"EdgeRight\\\",\\n\\n    insideVertical = \\\"InsideVertical\\\",\\n\\n    insideHorizontal = \\\"InsideHorizontal\\\",\\n\\n    diagonalDown = \\\"DiagonalDown\\\",\\n\\n    diagonalUp = \\\"DiagonalUp\\\",\\n}enum BorderLineStyle {\\nnone = \\\"None\\\",\\n\\n    continuous = \\\"Continuous\\\",\\n\\n    dash = \\\"Dash\\\",\\n\\n    dashDot = \\\"DashDot\\\",\\n\\n    dashDotDot = \\\"DashDotDot\\\",\\n\\n    dot = \\\"Dot\\\",\\n\\n    double = \\\"Double\\\",\\n\\n    slantDashDot = \\\"SlantDashDot\\\",\\n}enum BorderWeight {\\nhairline = \\\"Hairline\\\",\\n\\n    thin = \\\"Thin\\\",\\n\\n    medium = \\\"Medium\\\",\\n\\n    thick = \\\"Thick\\\",\\n}enum CalculationMode {\\n/**\\n* The default recalculation behavior where Excel calculates new formula results every time the relevant data is changed.\\n*/\\nautomatic = \\\"Automatic\\\",\\n\\n    /**\\n* Calculates new formula results every time the relevant data is changed, unless the formula is in a data table.\\n*/\\nautomaticExceptTables = \\\"AutomaticExceptTables\\\",\\n\\n    /**\\n* Calculations only occur when the user or add-in requests them.\\n*/\\nmanual = \\\"Manual\\\",\\n}enum CalculationType {\\n/**\\n* Recalculates all cells that Excel has marked as dirty, that is, dependents of volatile or changed data, and cells programmatically marked as dirty.\\n*/\\nrecalculate = \\\"Recalculate\\\",\\n\\n    /**\\n* This will mark all cells as dirty and then recalculate them.\\n*/\\nfull = \\\"Full\\\",\\n\\n    /**\\n* This will rebuild the full dependency chain, mark all cells as dirty and then recalculate them.\\n*/\\nfullRebuild = \\\"FullRebuild\\\",\\n}enum ClearApplyTo {\\nall = \\\"All\\\",\\n\\n    /**\\n* Clears all formatting for the range.\\n*/\\nformats = \\\"Formats\\\",\\n\\n    /**\\n* Clears the contents of the range.\\n*/\\ncontents = \\\"Contents\\\",\\n\\n    /**\\n* Clears all hyperlinks, but leaves all content and formatting intact.\\n*/\\nhyperlinks = \\\"Hyperlinks\\\",\\n\\n    /**\\n* Removes hyperlinks and formatting for the cell but leaves content, conditional formats, and data validation intact.\\n*/\\nremoveHyperlinks = \\\"RemoveHyperlinks\\\",\\n}/**\\n* Represents the format options for a data bar axis.\\n*/\\nenum ConditionalDataBarAxisFormat {\\nautomatic = \\\"Automatic\\\",\\n\\n    none = \\\"None\\\",\\n\\n    cellMidPoint = \\\"CellMidPoint\\\",\\n}/**\\n* Represents the data bar direction within a cell.\\n*/\\nenum ConditionalDataBarDirection {\\ncontext = \\\"Context\\\",\\n\\n    leftToRight = \\\"LeftToRight\\\",\\n\\n    rightToLeft = \\\"RightToLeft\\\",\\n}/**\\n* Represents the direction for a selection.\\n*/\\nenum ConditionalFormatDirection {\\ntop = \\\"Top\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n}enum ConditionalFormatType {\\ncustom = \\\"Custom\\\",\\n\\n    dataBar = \\\"DataBar\\\",\\n\\n    colorScale = \\\"ColorScale\\\",\\n\\n    iconSet = \\\"IconSet\\\",\\n\\n    topBottom = \\\"TopBottom\\\",\\n\\n    presetCriteria = \\\"PresetCriteria\\\",\\n\\n    containsText = \\\"ContainsText\\\",\\n\\n    cellValue = \\\"CellValue\\\",\\n}/**\\n* Represents the types of conditional format values.\\n*/\\nenum ConditionalFormatRuleType {\\ninvalid = \\\"Invalid\\\",\\n\\n    automatic = \\\"Automatic\\\",\\n\\n    lowestValue = \\\"LowestValue\\\",\\n\\n    highestValue = \\\"HighestValue\\\",\\n\\n    number = \\\"Number\\\",\\n\\n    percent = \\\"Percent\\\",\\n\\n    formula = \\\"Formula\\\",\\n\\n    percentile = \\\"Percentile\\\",\\n}/**\\n* Represents the types of icon conditional format.\\n*/\\nenum ConditionalFormatIconRuleType {\\ninvalid = \\\"Invalid\\\",\\n\\n    number = \\\"Number\\\",\\n\\n    percent = \\\"Percent\\\",\\n\\n    formula = \\\"Formula\\\",\\n\\n    percentile = \\\"Percentile\\\",\\n}/**\\n* Represents the types of color criterion for conditional formatting.\\n*/\\nenum ConditionalFormatColorCriterionType {\\ninvalid = \\\"Invalid\\\",\\n\\n    lowestValue = \\\"LowestValue\\\",\\n\\n    highestValue = \\\"HighestValue\\\",\\n\\n    number = \\\"Number\\\",\\n\\n    percent = \\\"Percent\\\",\\n\\n    formula = \\\"Formula\\\",\\n\\n    percentile = \\\"Percentile\\\",\\n}/**\\n* Represents the criteria for the above/below average conditional format type.\\n*/\\nenum ConditionalTopBottomCriterionType {\\ninvalid = \\\"Invalid\\\",\\n\\n    topItems = \\\"TopItems\\\",\\n\\n    topPercent = \\\"TopPercent\\\",\\n\\n    bottomItems = \\\"BottomItems\\\",\\n\\n    bottomPercent = \\\"BottomPercent\\\",\\n}/**\\n* Represents the criteria of the preset criteria conditional format type.\\n*/\\nenum ConditionalFormatPresetCriterion {\\ninvalid = \\\"Invalid\\\",\\n\\n    blanks = \\\"Blanks\\\",\\n\\n    nonBlanks = \\\"NonBlanks\\\",\\n\\n    errors = \\\"Errors\\\",\\n\\n    nonErrors = \\\"NonErrors\\\",\\n\\n    yesterday = \\\"Yesterday\\\",\\n\\n    today = \\\"Today\\\",\\n\\n    tomorrow = \\\"Tomorrow\\\",\\n\\n    lastSevenDays = \\\"LastSevenDays\\\",\\n\\n    lastWeek = \\\"LastWeek\\\",\\n\\n    thisWeek = \\\"ThisWeek\\\",\\n\\n    nextWeek = \\\"NextWeek\\\",\\n\\n    lastMonth = \\\"LastMonth\\\",\\n\\n    thisMonth = \\\"ThisMonth\\\",\\n\\n    nextMonth = \\\"NextMonth\\\",\\n\\n    aboveAverage = \\\"AboveAverage\\\",\\n\\n    belowAverage = \\\"BelowAverage\\\",\\n\\n    equalOrAboveAverage = \\\"EqualOrAboveAverage\\\",\\n\\n    equalOrBelowAverage = \\\"EqualOrBelowAverage\\\",\\n\\n    oneStdDevAboveAverage = \\\"OneStdDevAboveAverage\\\",\\n\\n    oneStdDevBelowAverage = \\\"OneStdDevBelowAverage\\\",\\n\\n    twoStdDevAboveAverage = \\\"TwoStdDevAboveAverage\\\",\\n\\n    twoStdDevBelowAverage = \\\"TwoStdDevBelowAverage\\\",\\n\\n    threeStdDevAboveAverage = \\\"ThreeStdDevAboveAverage\\\",\\n\\n    threeStdDevBelowAverage = \\\"ThreeStdDevBelowAverage\\\",\\n\\n    uniqueValues = \\\"UniqueValues\\\",\\n\\n    duplicateValues = \\\"DuplicateValues\\\",\\n}/**\\n* Represents the operator of the text conditional format type.\\n*/\\nenum ConditionalTextOperator {\\ninvalid = \\\"Invalid\\\",\\n\\n    contains = \\\"Contains\\\",\\n\\n    notContains = \\\"NotContains\\\",\\n\\n    beginsWith = \\\"BeginsWith\\\",\\n\\n    endsWith = \\\"EndsWith\\\",\\n}/**\\n* Represents the operator of the text conditional format type.\\n*/\\nenum ConditionalCellValueOperator {\\ninvalid = \\\"Invalid\\\",\\n\\n    between = \\\"Between\\\",\\n\\n    notBetween = \\\"NotBetween\\\",\\n\\n    equalTo = \\\"EqualTo\\\",\\n\\n    notEqualTo = \\\"NotEqualTo\\\",\\n\\n    greaterThan = \\\"GreaterThan\\\",\\n\\n    lessThan = \\\"LessThan\\\",\\n\\n    greaterThanOrEqual = \\\"GreaterThanOrEqual\\\",\\n\\n    lessThanOrEqual = \\\"LessThanOrEqual\\\",\\n}/**\\n* Represents the operator for each icon criteria.\\n*/\\nenum ConditionalIconCriterionOperator {\\ninvalid = \\\"Invalid\\\",\\n\\n    greaterThan = \\\"GreaterThan\\\",\\n\\n    greaterThanOrEqual = \\\"GreaterThanOrEqual\\\",\\n}enum ConditionalRangeBorderIndex {\\nedgeTop = \\\"EdgeTop\\\",\\n\\n    edgeBottom = \\\"EdgeBottom\\\",\\n\\n    edgeLeft = \\\"EdgeLeft\\\",\\n\\n    edgeRight = \\\"EdgeRight\\\",\\n}enum ConditionalRangeBorderLineStyle {\\nnone = \\\"None\\\",\\n\\n    continuous = \\\"Continuous\\\",\\n\\n    dash = \\\"Dash\\\",\\n\\n    dashDot = \\\"DashDot\\\",\\n\\n    dashDotDot = \\\"DashDotDot\\\",\\n\\n    dot = \\\"Dot\\\",\\n}enum ConditionalRangeFontUnderlineStyle {\\nnone = \\\"None\\\",\\n\\n    single = \\\"Single\\\",\\n\\n    double = \\\"Double\\\",\\n}/**\\n* Represents the data validation type enum.\\n*/\\nenum DataValidationType {\\n/**\\n* None means allow any value, indicating that there is no data validation in the range.\\n*/\\nnone = \\\"None\\\",\\n\\n    /**\\n* The whole number data validation type.\\n*/\\nwholeNumber = \\\"WholeNumber\\\",\\n\\n    /**\\n* The decimal data validation type.\\n*/\\ndecimal = \\\"Decimal\\\",\\n\\n    /**\\n* The list data validation type.\\n*/\\nlist = \\\"List\\\",\\n\\n    /**\\n* The date data validation type.\\n*/\\ndate = \\\"Date\\\",\\n\\n    /**\\n* The time data validation type.\\n*/\\ntime = \\\"Time\\\",\\n\\n    /**\\n* The text length data validation type.\\n*/\\ntextLength = \\\"TextLength\\\",\\n\\n    /**\\n* The custom data validation type.\\n*/\\ncustom = \\\"Custom\\\",\\n\\n    /**\\n* Inconsistent means that the range has inconsistent data validation, indicating that there are different rules on different cells.\\n*/\\ninconsistent = \\\"Inconsistent\\\",\\n\\n    /**\\n* Mixed criteria means that the range has data validation present on some but not all cells.\\n*/\\nmixedCriteria = \\\"MixedCriteria\\\",\\n}/**\\n* Represents the data validation operator enum.\\n*/\\nenum DataValidationOperator {\\nbetween = \\\"Between\\\",\\n\\n    notBetween = \\\"NotBetween\\\",\\n\\n    equalTo = \\\"EqualTo\\\",\\n\\n    notEqualTo = \\\"NotEqualTo\\\",\\n\\n    greaterThan = \\\"GreaterThan\\\",\\n\\n    lessThan = \\\"LessThan\\\",\\n\\n    greaterThanOrEqualTo = \\\"GreaterThanOrEqualTo\\\",\\n\\n    lessThanOrEqualTo = \\\"LessThanOrEqualTo\\\",\\n}/**\\n* Represents the data validation error alert style. The default is `Stop`.\\n*/\\nenum DataValidationAlertStyle {\\nstop = \\\"Stop\\\",\\n\\n    warning = \\\"Warning\\\",\\n\\n    information = \\\"Information\\\",\\n}enum DeleteShiftDirection {\\nup = \\\"Up\\\",\\n\\n    left = \\\"Left\\\",\\n}enum DynamicFilterCriteria {\\nunknown = \\\"Unknown\\\",\\n\\n    aboveAverage = \\\"AboveAverage\\\",\\n\\n    allDatesInPeriodApril = \\\"AllDatesInPeriodApril\\\",\\n\\n    allDatesInPeriodAugust = \\\"AllDatesInPeriodAugust\\\",\\n\\n    allDatesInPeriodDecember = \\\"AllDatesInPeriodDecember\\\",\\n\\n    allDatesInPeriodFebruray = \\\"AllDatesInPeriodFebruray\\\",\\n\\n    allDatesInPeriodJanuary = \\\"AllDatesInPeriodJanuary\\\",\\n\\n    allDatesInPeriodJuly = \\\"AllDatesInPeriodJuly\\\",\\n\\n    allDatesInPeriodJune = \\\"AllDatesInPeriodJune\\\",\\n\\n    allDatesInPeriodMarch = \\\"AllDatesInPeriodMarch\\\",\\n\\n    allDatesInPeriodMay = \\\"AllDatesInPeriodMay\\\",\\n\\n    allDatesInPeriodNovember = \\\"AllDatesInPeriodNovember\\\",\\n\\n    allDatesInPeriodOctober = \\\"AllDatesInPeriodOctober\\\",\\n\\n    allDatesInPeriodQuarter1 = \\\"AllDatesInPeriodQuarter1\\\",\\n\\n    allDatesInPeriodQuarter2 = \\\"AllDatesInPeriodQuarter2\\\",\\n\\n    allDatesInPeriodQuarter3 = \\\"AllDatesInPeriodQuarter3\\\",\\n\\n    allDatesInPeriodQuarter4 = \\\"AllDatesInPeriodQuarter4\\\",\\n\\n    allDatesInPeriodSeptember = \\\"AllDatesInPeriodSeptember\\\",\\n\\n    belowAverage = \\\"BelowAverage\\\",\\n\\n    lastMonth = \\\"LastMonth\\\",\\n\\n    lastQuarter = \\\"LastQuarter\\\",\\n\\n    lastWeek = \\\"LastWeek\\\",\\n\\n    lastYear = \\\"LastYear\\\",\\n\\n    nextMonth = \\\"NextMonth\\\",\\n\\n    nextQuarter = \\\"NextQuarter\\\",\\n\\n    nextWeek = \\\"NextWeek\\\",\\n\\n    nextYear = \\\"NextYear\\\",\\n\\n    thisMonth = \\\"ThisMonth\\\",\\n\\n    thisQuarter = \\\"ThisQuarter\\\",\\n\\n    thisWeek = \\\"ThisWeek\\\",\\n\\n    thisYear = \\\"ThisYear\\\",\\n\\n    today = \\\"Today\\\",\\n\\n    tomorrow = \\\"Tomorrow\\\",\\n\\n    yearToDate = \\\"YearToDate\\\",\\n\\n    yesterday = \\\"Yesterday\\\",\\n}enum FilterDatetimeSpecificity {\\nyear = \\\"Year\\\",\\n\\n    month = \\\"Month\\\",\\n\\n    day = \\\"Day\\\",\\n\\n    hour = \\\"Hour\\\",\\n\\n    minute = \\\"Minute\\\",\\n\\n    second = \\\"Second\\\",\\n}enum FilterOn {\\nbottomItems = \\\"BottomItems\\\",\\n\\n    bottomPercent = \\\"BottomPercent\\\",\\n\\n    cellColor = \\\"CellColor\\\",\\n\\n    dynamic = \\\"Dynamic\\\",\\n\\n    fontColor = \\\"FontColor\\\",\\n\\n    values = \\\"Values\\\",\\n\\n    topItems = \\\"TopItems\\\",\\n\\n    topPercent = \\\"TopPercent\\\",\\n\\n    icon = \\\"Icon\\\",\\n\\n    custom = \\\"Custom\\\",\\n}enum FilterOperator {\\nand = \\\"And\\\",\\n\\n    or = \\\"Or\\\",\\n}enum HorizontalAlignment {\\ngeneral = \\\"General\\\",\\n\\n    left = \\\"Left\\\",\\n\\n    center = \\\"Center\\\",\\n\\n    right = \\\"Right\\\",\\n\\n    fill = \\\"Fill\\\",\\n\\n    justify = \\\"Justify\\\",\\n\\n    centerAcrossSelection = \\\"CenterAcrossSelection\\\",\\n\\n    distributed = \\\"Distributed\\\",\\n}enum IconSet {\\ninvalid = \\\"Invalid\\\",\\n\\n    threeArrows = \\\"ThreeArrows\\\",\\n\\n    threeArrowsGray = \\\"ThreeArrowsGray\\\",\\n\\n    threeFlags = \\\"ThreeFlags\\\",\\n\\n    threeTrafficLights1 = \\\"ThreeTrafficLights1\\\",\\n\\n    threeTrafficLights2 = \\\"ThreeTrafficLights2\\\",\\n\\n    threeSigns = \\\"ThreeSigns\\\",\\n\\n    threeSymbols = \\\"ThreeSymbols\\\",\\n\\n    threeSymbols2 = \\\"ThreeSymbols2\\\",\\n\\n    fourArrows = \\\"FourArrows\\\",\\n\\n    fourArrowsGray = \\\"FourArrowsGray\\\",\\n\\n    fourRedToBlack = \\\"FourRedToBlack\\\",\\n\\n    fourRating = \\\"FourRating\\\",\\n\\n    fourTrafficLights = \\\"FourTrafficLights\\\",\\n\\n    fiveArrows = \\\"FiveArrows\\\",\\n\\n    fiveArrowsGray = \\\"FiveArrowsGray\\\",\\n\\n    fiveRating = \\\"FiveRating\\\",\\n\\n    fiveQuarters = \\\"FiveQuarters\\\",\\n\\n    threeStars = \\\"ThreeStars\\\",\\n\\n    threeTriangles = \\\"ThreeTriangles\\\",\\n\\n    fiveBoxes = \\\"FiveBoxes\\\",\\n}enum ImageFittingMode {\\nfit = \\\"Fit\\\",\\n\\n    fitAndCenter = \\\"FitAndCenter\\\",\\n\\n    fill = \\\"Fill\\\",\\n}enum InsertShiftDirection {\\ndown = \\\"Down\\\",\\n\\n    right = \\\"Right\\\",\\n}enum NamedItemScope {\\nworksheet = \\\"Worksheet\\\",\\n\\n    workbook = \\\"Workbook\\\",\\n}enum NamedItemType {\\nstring = \\\"String\\\",\\n\\n    integer = \\\"Integer\\\",\\n\\n    double = \\\"Double\\\",\\n\\n    boolean = \\\"Boolean\\\",\\n\\n    range = \\\"Range\\\",\\n\\n    error = \\\"Error\\\",\\n\\n    array = \\\"Array\\\",\\n}enum RangeUnderlineStyle {\\nnone = \\\"None\\\",\\n\\n    single = \\\"Single\\\",\\n\\n    double = \\\"Double\\\",\\n\\n    singleAccountant = \\\"SingleAccountant\\\",\\n\\n    doubleAccountant = \\\"DoubleAccountant\\\",\\n}enum SheetVisibility {\\nvisible = \\\"Visible\\\",\\n\\n    hidden = \\\"Hidden\\\",\\n\\n    veryHidden = \\\"VeryHidden\\\",\\n}enum RangeValueType {\\nunknown = \\\"Unknown\\\",\\n\\n    empty = \\\"Empty\\\",\\n\\n    string = \\\"String\\\",\\n\\n    integer = \\\"Integer\\\",\\n\\n    double = \\\"Double\\\",\\n\\n    boolean = \\\"Boolean\\\",\\n\\n    error = \\\"Error\\\",\\n\\n    richValue = \\\"RichValue\\\",\\n}enum KeyboardDirection {\\nleft = \\\"Left\\\",\\n\\n    right = \\\"Right\\\",\\n\\n    up = \\\"Up\\\",\\n\\n    down = \\\"Down\\\",\\n}/**\\n* Specifies the search direction.\\n*/\\nenum SearchDirection {\\n/**\\n* Search in forward order.\\n*/\\nforward = \\\"Forward\\\",\\n\\n    /**\\n* Search in reverse order.\\n*/\\nbackwards = \\\"Backwards\\\",\\n}enum SortOrientation {\\nrows = \\\"Rows\\\",\\n\\n    columns = \\\"Columns\\\",\\n}enum SortOn {\\nvalue = \\\"Value\\\",\\n\\n    cellColor = \\\"CellColor\\\",\\n\\n    fontColor = \\\"FontColor\\\",\\n\\n    icon = \\\"Icon\\\",\\n}enum SortDataOption {\\nnormal = \\\"Normal\\\",\\n\\n    textAsNumber = \\\"TextAsNumber\\\",\\n}enum SortMethod {\\npinYin = \\\"PinYin\\\",\\n\\n    strokeCount = \\\"StrokeCount\\\",\\n}enum VerticalAlignment {\\ntop = \\\"Top\\\",\\n\\n    center = \\\"Center\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n\\n    justify = \\\"Justify\\\",\\n\\n    distributed = \\\"Distributed\\\",\\n}enum DocumentPropertyType {\\nnumber = \\\"Number\\\",\\n\\n    boolean = \\\"Boolean\\\",\\n\\n    date = \\\"Date\\\",\\n\\n    string = \\\"String\\\",\\n\\n    float = \\\"Float\\\",\\n}enum SubtotalLocationType {\\n/**\\n* Subtotals are at the top.\\n*/\\natTop = \\\"AtTop\\\",\\n\\n    /**\\n* Subtotals are at the bottom.\\n*/\\natBottom = \\\"AtBottom\\\",\\n\\n    /**\\n* Subtotals are off.\\n*/\\noff = \\\"Off\\\",\\n}enum PivotLayoutType {\\n/**\\n* A horizontally compressed form with labels from the next field in the same column.\\n*/\\ncompact = \\\"Compact\\\",\\n\\n    /**\\n* Inner fields' items are always on a new line relative to the outer fields' items.\\n*/\\ntabular = \\\"Tabular\\\",\\n\\n    /**\\n* Inner fields' items are on same row as outer fields' items and subtotals are always on the bottom.\\n*/\\noutline = \\\"Outline\\\",\\n}enum ProtectionSelectionMode {\\n/**\\n* Selection is allowed for all cells.\\n*/\\nnormal = \\\"Normal\\\",\\n\\n    /**\\n* Selection is allowed only for cells that are not locked.\\n*/\\nunlocked = \\\"Unlocked\\\",\\n\\n    /**\\n* Selection is not allowed for any cells.\\n*/\\nnone = \\\"None\\\",\\n}enum PageOrientation {\\nportrait = \\\"Portrait\\\",\\n\\n    landscape = \\\"Landscape\\\",\\n}enum PaperType {\\nletter = \\\"Letter\\\",\\n\\n    letterSmall = \\\"LetterSmall\\\",\\n\\n    tabloid = \\\"Tabloid\\\",\\n\\n    ledger = \\\"Ledger\\\",\\n\\n    legal = \\\"Legal\\\",\\n\\n    statement = \\\"Statement\\\",\\n\\n    executive = \\\"Executive\\\",\\n\\n    a3 = \\\"A3\\\",\\n\\n    a4 = \\\"A4\\\",\\n\\n    a4Small = \\\"A4Small\\\",\\n\\n    a5 = \\\"A5\\\",\\n\\n    b4 = \\\"B4\\\",\\n\\n    b5 = \\\"B5\\\",\\n\\n    folio = \\\"Folio\\\",\\n\\n    quatro = \\\"Quatro\\\",\\n\\n    paper10x14 = \\\"Paper10x14\\\",\\n\\n    paper11x17 = \\\"Paper11x17\\\",\\n\\n    note = \\\"Note\\\",\\n\\n    envelope9 = \\\"Envelope9\\\",\\n\\n    envelope10 = \\\"Envelope10\\\",\\n\\n    envelope11 = \\\"Envelope11\\\",\\n\\n    envelope12 = \\\"Envelope12\\\",\\n\\n    envelope14 = \\\"Envelope14\\\",\\n\\n    csheet = \\\"Csheet\\\",\\n\\n    dsheet = \\\"Dsheet\\\",\\n\\n    esheet = \\\"Esheet\\\",\\n\\n    envelopeDL = \\\"EnvelopeDL\\\",\\n\\n    envelopeC5 = \\\"EnvelopeC5\\\",\\n\\n    envelopeC3 = \\\"EnvelopeC3\\\",\\n\\n    envelopeC4 = \\\"EnvelopeC4\\\",\\n\\n    envelopeC6 = \\\"EnvelopeC6\\\",\\n\\n    envelopeC65 = \\\"EnvelopeC65\\\",\\n\\n    envelopeB4 = \\\"EnvelopeB4\\\",\\n\\n    envelopeB5 = \\\"EnvelopeB5\\\",\\n\\n    envelopeB6 = \\\"EnvelopeB6\\\",\\n\\n    envelopeItaly = \\\"EnvelopeItaly\\\",\\n\\n    envelopeMonarch = \\\"EnvelopeMonarch\\\",\\n\\n    envelopePersonal = \\\"EnvelopePersonal\\\",\\n\\n    fanfoldUS = \\\"FanfoldUS\\\",\\n\\n    fanfoldStdGerman = \\\"FanfoldStdGerman\\\",\\n\\n    fanfoldLegalGerman = \\\"FanfoldLegalGerman\\\",\\n}enum ReadingOrder {\\n/**\\n* Reading order is determined by the language of the first character entered.\\n* If a right-to-left language character is entered first, reading order is right to left.\\n* If a left-to-right language character is entered first, reading order is left to right.\\n*/\\ncontext = \\\"Context\\\",\\n\\n    /**\\n* Left to right reading order\\n*/\\nleftToRight = \\\"LeftToRight\\\",\\n\\n    /**\\n* Right to left reading order\\n*/\\nrightToLeft = \\\"RightToLeft\\\",\\n}enum BuiltInStyle {\\nnormal = \\\"Normal\\\",\\n\\n    comma = \\\"Comma\\\",\\n\\n    currency = \\\"Currency\\\",\\n\\n    percent = \\\"Percent\\\",\\n\\n    wholeComma = \\\"WholeComma\\\",\\n\\n    wholeDollar = \\\"WholeDollar\\\",\\n\\n    hlink = \\\"Hlink\\\",\\n\\n    hlinkTrav = \\\"HlinkTrav\\\",\\n\\n    note = \\\"Note\\\",\\n\\n    warningText = \\\"WarningText\\\",\\n\\n    emphasis1 = \\\"Emphasis1\\\",\\n\\n    emphasis2 = \\\"Emphasis2\\\",\\n\\n    emphasis3 = \\\"Emphasis3\\\",\\n\\n    sheetTitle = \\\"SheetTitle\\\",\\n\\n    heading1 = \\\"Heading1\\\",\\n\\n    heading2 = \\\"Heading2\\\",\\n\\n    heading3 = \\\"Heading3\\\",\\n\\n    heading4 = \\\"Heading4\\\",\\n\\n    input = \\\"Input\\\",\\n\\n    output = \\\"Output\\\",\\n\\n    calculation = \\\"Calculation\\\",\\n\\n    checkCell = \\\"CheckCell\\\",\\n\\n    linkedCell = \\\"LinkedCell\\\",\\n\\n    total = \\\"Total\\\",\\n\\n    good = \\\"Good\\\",\\n\\n    bad = \\\"Bad\\\",\\n\\n    neutral = \\\"Neutral\\\",\\n\\n    accent1 = \\\"Accent1\\\",\\n\\n    accent1_20 = \\\"Accent1_20\\\",\\n\\n    accent1_40 = \\\"Accent1_40\\\",\\n\\n    accent1_60 = \\\"Accent1_60\\\",\\n\\n    accent2 = \\\"Accent2\\\",\\n\\n    accent2_20 = \\\"Accent2_20\\\",\\n\\n    accent2_40 = \\\"Accent2_40\\\",\\n\\n    accent2_60 = \\\"Accent2_60\\\",\\n\\n    accent3 = \\\"Accent3\\\",\\n\\n    accent3_20 = \\\"Accent3_20\\\",\\n\\n    accent3_40 = \\\"Accent3_40\\\",\\n\\n    accent3_60 = \\\"Accent3_60\\\",\\n\\n    accent4 = \\\"Accent4\\\",\\n\\n    accent4_20 = \\\"Accent4_20\\\",\\n\\n    accent4_40 = \\\"Accent4_40\\\",\\n\\n    accent4_60 = \\\"Accent4_60\\\",\\n\\n    accent5 = \\\"Accent5\\\",\\n\\n    accent5_20 = \\\"Accent5_20\\\",\\n\\n    accent5_40 = \\\"Accent5_40\\\",\\n\\n    accent5_60 = \\\"Accent5_60\\\",\\n\\n    accent6 = \\\"Accent6\\\",\\n\\n    accent6_20 = \\\"Accent6_20\\\",\\n\\n    accent6_40 = \\\"Accent6_40\\\",\\n\\n    accent6_60 = \\\"Accent6_60\\\",\\n\\n    explanatoryText = \\\"ExplanatoryText\\\",\\n}enum PrintErrorType {\\nasDisplayed = \\\"AsDisplayed\\\",\\n\\n    blank = \\\"Blank\\\",\\n\\n    dash = \\\"Dash\\\",\\n\\n    notAvailable = \\\"NotAvailable\\\",\\n}enum WorksheetPositionType {\\nnone = \\\"None\\\",\\n\\n    before = \\\"Before\\\",\\n\\n    after = \\\"After\\\",\\n\\n    beginning = \\\"Beginning\\\",\\n\\n    end = \\\"End\\\",\\n}enum PrintComments {\\n/**\\n* Comments will not be printed.\\n*/\\nnoComments = \\\"NoComments\\\",\\n\\n    /**\\n* Comments will be printed as end notes at the end of the worksheet.\\n*/\\nendSheet = \\\"EndSheet\\\",\\n\\n    /**\\n* Comments will be printed where they were inserted in the worksheet.\\n*/\\ninPlace = \\\"InPlace\\\",\\n}enum PrintOrder {\\n/**\\n* Process down the rows before processing across pages or page fields to the right.\\n*/\\ndownThenOver = \\\"DownThenOver\\\",\\n\\n    /**\\n* Process across pages or page fields to the right before moving down the rows.\\n*/\\noverThenDown = \\\"OverThenDown\\\",\\n}enum PrintMarginUnit {\\n/**\\n* Assign the page margins in points. A point is 1/72 of an inch.\\n*/\\npoints = \\\"Points\\\",\\n\\n    /**\\n* Assign the page margins in inches.\\n*/\\ninches = \\\"Inches\\\",\\n\\n    /**\\n* Assign the page margins in centimeters.\\n*/\\ncentimeters = \\\"Centimeters\\\",\\n}enum HeaderFooterState {\\n/**\\n* Only one general header/footer is used for all pages printed.\\n*/\\ndefault = \\\"Default\\\",\\n\\n    /**\\n* There is a separate first page header/footer, and a general header/footer used for all other pages.\\n*/\\nfirstAndDefault = \\\"FirstAndDefault\\\",\\n\\n    /**\\n* There is a different header/footer for odd and even pages.\\n*/\\noddAndEven = \\\"OddAndEven\\\",\\n\\n    /**\\n* There is a separate first page header/footer, then there is a separate header/footer for odd and even pages.\\n*/\\nfirstOddAndEven = \\\"FirstOddAndEven\\\",\\n}/**\\n* The behavior types when AutoFill is used on a range in the workbook.\\n*/\\nenum AutoFillType {\\n/**\\n* Populates the adjacent cells based on the surrounding data (the standard AutoFill behavior).\\n*/\\nfillDefault = \\\"FillDefault\\\",\\n\\n    /**\\n* Populates the adjacent cells with data based on the selected data.\\n*/\\nfillCopy = \\\"FillCopy\\\",\\n\\n    /**\\n* Populates the adjacent cells with data that follows a pattern in the copied cells.\\n*/\\nfillSeries = \\\"FillSeries\\\",\\n\\n    /**\\n* Populates the adjacent cells with the selected formulas.\\n*/\\nfillFormats = \\\"FillFormats\\\",\\n\\n    /**\\n* Populates the adjacent cells with the selected values.\\n*/\\nfillValues = \\\"FillValues\\\",\\n\\n    /**\\n* A version of \\\"FillSeries\\\" for dates that bases the pattern on either the day of the month or the day of the week, depending on the context.\\n*/\\nfillDays = \\\"FillDays\\\",\\n\\n    /**\\n* A version of \\\"FillSeries\\\" for dates that bases the pattern on the day of the week and only includes weekdays.\\n*/\\nfillWeekdays = \\\"FillWeekdays\\\",\\n\\n    /**\\n* A version of \\\"FillSeries\\\" for dates that bases the pattern on the month.\\n*/\\nfillMonths = \\\"FillMonths\\\",\\n\\n    /**\\n* A version of \\\"FillSeries\\\" for dates that bases the pattern on the year.\\n*/\\nfillYears = \\\"FillYears\\\",\\n\\n    /**\\n* A version of \\\"FillSeries\\\" for numbers that fills out the values in the adjacent cells according to a linear trend model.\\n*/\\nlinearTrend = \\\"LinearTrend\\\",\\n\\n    /**\\n* A version of \\\"FillSeries\\\" for numbers that fills out the values in the adjacent cells according to a growth trend model.\\n*/\\ngrowthTrend = \\\"GrowthTrend\\\",\\n\\n    /**\\n* Populates the adjacent cells by using Excel's Flash Fill feature.\\n*/\\nflashFill = \\\"FlashFill\\\",\\n}enum GroupOption {\\n/**\\n* Group by rows.\\n*/\\nbyRows = \\\"ByRows\\\",\\n\\n    /**\\n* Group by columns.\\n*/\\nbyColumns = \\\"ByColumns\\\",\\n}enum RangeCopyType {\\nall = \\\"All\\\",\\n\\n    formulas = \\\"Formulas\\\",\\n\\n    values = \\\"Values\\\",\\n\\n    formats = \\\"Formats\\\",\\n\\n    link = \\\"Link\\\",\\n}enum LinkedDataTypeState {\\nnone = \\\"None\\\",\\n\\n    validLinkedData = \\\"ValidLinkedData\\\",\\n\\n    disambiguationNeeded = \\\"DisambiguationNeeded\\\",\\n\\n    brokenLinkedData = \\\"BrokenLinkedData\\\",\\n\\n    fetchingData = \\\"FetchingData\\\",\\n}/**\\n* Specifies the shape type for a `GeometricShape` object.\\n*/\\nenum GeometricShapeType {\\nlineInverse = \\\"LineInverse\\\",\\n\\n    triangle = \\\"Triangle\\\",\\n\\n    rightTriangle = \\\"RightTriangle\\\",\\n\\n    rectangle = \\\"Rectangle\\\",\\n\\n    diamond = \\\"Diamond\\\",\\n\\n    parallelogram = \\\"Parallelogram\\\",\\n\\n    trapezoid = \\\"Trapezoid\\\",\\n\\n    nonIsoscelesTrapezoid = \\\"NonIsoscelesTrapezoid\\\",\\n\\n    pentagon = \\\"Pentagon\\\",\\n\\n    hexagon = \\\"Hexagon\\\",\\n\\n    heptagon = \\\"Heptagon\\\",\\n\\n    octagon = \\\"Octagon\\\",\\n\\n    decagon = \\\"Decagon\\\",\\n\\n    dodecagon = \\\"Dodecagon\\\",\\n\\n    star4 = \\\"Star4\\\",\\n\\n    star5 = \\\"Star5\\\",\\n\\n    star6 = \\\"Star6\\\",\\n\\n    star7 = \\\"Star7\\\",\\n\\n    star8 = \\\"Star8\\\",\\n\\n    star10 = \\\"Star10\\\",\\n\\n    star12 = \\\"Star12\\\",\\n\\n    star16 = \\\"Star16\\\",\\n\\n    star24 = \\\"Star24\\\",\\n\\n    star32 = \\\"Star32\\\",\\n\\n    roundRectangle = \\\"RoundRectangle\\\",\\n\\n    round1Rectangle = \\\"Round1Rectangle\\\",\\n\\n    round2SameRectangle = \\\"Round2SameRectangle\\\",\\n\\n    round2DiagonalRectangle = \\\"Round2DiagonalRectangle\\\",\\n\\n    snipRoundRectangle = \\\"SnipRoundRectangle\\\",\\n\\n    snip1Rectangle = \\\"Snip1Rectangle\\\",\\n\\n    snip2SameRectangle = \\\"Snip2SameRectangle\\\",\\n\\n    snip2DiagonalRectangle = \\\"Snip2DiagonalRectangle\\\",\\n\\n    plaque = \\\"Plaque\\\",\\n\\n    ellipse = \\\"Ellipse\\\",\\n\\n    teardrop = \\\"Teardrop\\\",\\n\\n    homePlate = \\\"HomePlate\\\",\\n\\n    chevron = \\\"Chevron\\\",\\n\\n    pieWedge = \\\"PieWedge\\\",\\n\\n    pie = \\\"Pie\\\",\\n\\n    blockArc = \\\"BlockArc\\\",\\n\\n    donut = \\\"Donut\\\",\\n\\n    noSmoking = \\\"NoSmoking\\\",\\n\\n    rightArrow = \\\"RightArrow\\\",\\n\\n    leftArrow = \\\"LeftArrow\\\",\\n\\n    upArrow = \\\"UpArrow\\\",\\n\\n    downArrow = \\\"DownArrow\\\",\\n\\n    stripedRightArrow = \\\"StripedRightArrow\\\",\\n\\n    notchedRightArrow = \\\"NotchedRightArrow\\\",\\n\\n    bentUpArrow = \\\"BentUpArrow\\\",\\n\\n    leftRightArrow = \\\"LeftRightArrow\\\",\\n\\n    upDownArrow = \\\"UpDownArrow\\\",\\n\\n    leftUpArrow = \\\"LeftUpArrow\\\",\\n\\n    leftRightUpArrow = \\\"LeftRightUpArrow\\\",\\n\\n    quadArrow = \\\"QuadArrow\\\",\\n\\n    leftArrowCallout = \\\"LeftArrowCallout\\\",\\n\\n    rightArrowCallout = \\\"RightArrowCallout\\\",\\n\\n    upArrowCallout = \\\"UpArrowCallout\\\",\\n\\n    downArrowCallout = \\\"DownArrowCallout\\\",\\n\\n    leftRightArrowCallout = \\\"LeftRightArrowCallout\\\",\\n\\n    upDownArrowCallout = \\\"UpDownArrowCallout\\\",\\n\\n    quadArrowCallout = \\\"QuadArrowCallout\\\",\\n\\n    bentArrow = \\\"BentArrow\\\",\\n\\n    uturnArrow = \\\"UturnArrow\\\",\\n\\n    circularArrow = \\\"CircularArrow\\\",\\n\\n    leftCircularArrow = \\\"LeftCircularArrow\\\",\\n\\n    leftRightCircularArrow = \\\"LeftRightCircularArrow\\\",\\n\\n    curvedRightArrow = \\\"CurvedRightArrow\\\",\\n\\n    curvedLeftArrow = \\\"CurvedLeftArrow\\\",\\n\\n    curvedUpArrow = \\\"CurvedUpArrow\\\",\\n\\n    curvedDownArrow = \\\"CurvedDownArrow\\\",\\n\\n    swooshArrow = \\\"SwooshArrow\\\",\\n\\n    cube = \\\"Cube\\\",\\n\\n    can = \\\"Can\\\",\\n\\n    lightningBolt = \\\"LightningBolt\\\",\\n\\n    heart = \\\"Heart\\\",\\n\\n    sun = \\\"Sun\\\",\\n\\n    moon = \\\"Moon\\\",\\n\\n    smileyFace = \\\"SmileyFace\\\",\\n\\n    irregularSeal1 = \\\"IrregularSeal1\\\",\\n\\n    irregularSeal2 = \\\"IrregularSeal2\\\",\\n\\n    foldedCorner = \\\"FoldedCorner\\\",\\n\\n    bevel = \\\"Bevel\\\",\\n\\n    frame = \\\"Frame\\\",\\n\\n    halfFrame = \\\"HalfFrame\\\",\\n\\n    corner = \\\"Corner\\\",\\n\\n    diagonalStripe = \\\"DiagonalStripe\\\",\\n\\n    chord = \\\"Chord\\\",\\n\\n    arc = \\\"Arc\\\",\\n\\n    leftBracket = \\\"LeftBracket\\\",\\n\\n    rightBracket = \\\"RightBracket\\\",\\n\\n    leftBrace = \\\"LeftBrace\\\",\\n\\n    rightBrace = \\\"RightBrace\\\",\\n\\n    bracketPair = \\\"BracketPair\\\",\\n\\n    bracePair = \\\"BracePair\\\",\\n\\n    callout1 = \\\"Callout1\\\",\\n\\n    callout2 = \\\"Callout2\\\",\\n\\n    callout3 = \\\"Callout3\\\",\\n\\n    accentCallout1 = \\\"AccentCallout1\\\",\\n\\n    accentCallout2 = \\\"AccentCallout2\\\",\\n\\n    accentCallout3 = \\\"AccentCallout3\\\",\\n\\n    borderCallout1 = \\\"BorderCallout1\\\",\\n\\n    borderCallout2 = \\\"BorderCallout2\\\",\\n\\n    borderCallout3 = \\\"BorderCallout3\\\",\\n\\n    accentBorderCallout1 = \\\"AccentBorderCallout1\\\",\\n\\n    accentBorderCallout2 = \\\"AccentBorderCallout2\\\",\\n\\n    accentBorderCallout3 = \\\"AccentBorderCallout3\\\",\\n\\n    wedgeRectCallout = \\\"WedgeRectCallout\\\",\\n\\n    wedgeRRectCallout = \\\"WedgeRRectCallout\\\",\\n\\n    wedgeEllipseCallout = \\\"WedgeEllipseCallout\\\",\\n\\n    cloudCallout = \\\"CloudCallout\\\",\\n\\n    cloud = \\\"Cloud\\\",\\n\\n    ribbon = \\\"Ribbon\\\",\\n\\n    ribbon2 = \\\"Ribbon2\\\",\\n\\n    ellipseRibbon = \\\"EllipseRibbon\\\",\\n\\n    ellipseRibbon2 = \\\"EllipseRibbon2\\\",\\n\\n    leftRightRibbon = \\\"LeftRightRibbon\\\",\\n\\n    verticalScroll = \\\"VerticalScroll\\\",\\n\\n    horizontalScroll = \\\"HorizontalScroll\\\",\\n\\n    wave = \\\"Wave\\\",\\n\\n    doubleWave = \\\"DoubleWave\\\",\\n\\n    plus = \\\"Plus\\\",\\n\\n    flowChartProcess = \\\"FlowChartProcess\\\",\\n\\n    flowChartDecision = \\\"FlowChartDecision\\\",\\n\\n    flowChartInputOutput = \\\"FlowChartInputOutput\\\",\\n\\n    flowChartPredefinedProcess = \\\"FlowChartPredefinedProcess\\\",\\n\\n    flowChartInternalStorage = \\\"FlowChartInternalStorage\\\",\\n\\n    flowChartDocument = \\\"FlowChartDocument\\\",\\n\\n    flowChartMultidocument = \\\"FlowChartMultidocument\\\",\\n\\n    flowChartTerminator = \\\"FlowChartTerminator\\\",\\n\\n    flowChartPreparation = \\\"FlowChartPreparation\\\",\\n\\n    flowChartManualInput = \\\"FlowChartManualInput\\\",\\n\\n    flowChartManualOperation = \\\"FlowChartManualOperation\\\",\\n\\n    flowChartConnector = \\\"FlowChartConnector\\\",\\n\\n    flowChartPunchedCard = \\\"FlowChartPunchedCard\\\",\\n\\n    flowChartPunchedTape = \\\"FlowChartPunchedTape\\\",\\n\\n    flowChartSummingJunction = \\\"FlowChartSummingJunction\\\",\\n\\n    flowChartOr = \\\"FlowChartOr\\\",\\n\\n    flowChartCollate = \\\"FlowChartCollate\\\",\\n\\n    flowChartSort = \\\"FlowChartSort\\\",\\n\\n    flowChartExtract = \\\"FlowChartExtract\\\",\\n\\n    flowChartMerge = \\\"FlowChartMerge\\\",\\n\\n    flowChartOfflineStorage = \\\"FlowChartOfflineStorage\\\",\\n\\n    flowChartOnlineStorage = \\\"FlowChartOnlineStorage\\\",\\n\\n    flowChartMagneticTape = \\\"FlowChartMagneticTape\\\",\\n\\n    flowChartMagneticDisk = \\\"FlowChartMagneticDisk\\\",\\n\\n    flowChartMagneticDrum = \\\"FlowChartMagneticDrum\\\",\\n\\n    flowChartDisplay = \\\"FlowChartDisplay\\\",\\n\\n    flowChartDelay = \\\"FlowChartDelay\\\",\\n\\n    flowChartAlternateProcess = \\\"FlowChartAlternateProcess\\\",\\n\\n    flowChartOffpageConnector = \\\"FlowChartOffpageConnector\\\",\\n\\n    actionButtonBlank = \\\"ActionButtonBlank\\\",\\n\\n    actionButtonHome = \\\"ActionButtonHome\\\",\\n\\n    actionButtonHelp = \\\"ActionButtonHelp\\\",\\n\\n    actionButtonInformation = \\\"ActionButtonInformation\\\",\\n\\n    actionButtonForwardNext = \\\"ActionButtonForwardNext\\\",\\n\\n    actionButtonBackPrevious = \\\"ActionButtonBackPrevious\\\",\\n\\n    actionButtonEnd = \\\"ActionButtonEnd\\\",\\n\\n    actionButtonBeginning = \\\"ActionButtonBeginning\\\",\\n\\n    actionButtonReturn = \\\"ActionButtonReturn\\\",\\n\\n    actionButtonDocument = \\\"ActionButtonDocument\\\",\\n\\n    actionButtonSound = \\\"ActionButtonSound\\\",\\n\\n    actionButtonMovie = \\\"ActionButtonMovie\\\",\\n\\n    gear6 = \\\"Gear6\\\",\\n\\n    gear9 = \\\"Gear9\\\",\\n\\n    funnel = \\\"Funnel\\\",\\n\\n    mathPlus = \\\"MathPlus\\\",\\n\\n    mathMinus = \\\"MathMinus\\\",\\n\\n    mathMultiply = \\\"MathMultiply\\\",\\n\\n    mathDivide = \\\"MathDivide\\\",\\n\\n    mathEqual = \\\"MathEqual\\\",\\n\\n    mathNotEqual = \\\"MathNotEqual\\\",\\n\\n    cornerTabs = \\\"CornerTabs\\\",\\n\\n    squareTabs = \\\"SquareTabs\\\",\\n\\n    plaqueTabs = \\\"PlaqueTabs\\\",\\n\\n    chartX = \\\"ChartX\\\",\\n\\n    chartStar = \\\"ChartStar\\\",\\n\\n    chartPlus = \\\"ChartPlus\\\",\\n}enum ConnectorType {\\nstraight = \\\"Straight\\\",\\n\\n    elbow = \\\"Elbow\\\",\\n\\n    curve = \\\"Curve\\\",\\n}enum ContentType {\\n/**\\n* Indicates a plain format type for the comment content.\\n*/\\nplain = \\\"Plain\\\",\\n\\n    /**\\n* Comment content containing mentions.\\n*/\\nmention = \\\"Mention\\\",\\n}enum SpecialCellType {\\n/**\\n* All cells with conditional formats.\\n*/\\nconditionalFormats = \\\"ConditionalFormats\\\",\\n\\n    /**\\n* Cells with validation criteria.\\n*/\\ndataValidations = \\\"DataValidations\\\",\\n\\n    /**\\n* Cells with no content.\\n*/\\nblanks = \\\"Blanks\\\",\\n\\n    /**\\n* Cells containing constants.\\n*/\\nconstants = \\\"Constants\\\",\\n\\n    /**\\n* Cells containing formulas.\\n*/\\nformulas = \\\"Formulas\\\",\\n\\n    /**\\n* Cells with the same conditional format as the first cell in the range.\\n*/\\nsameConditionalFormat = \\\"SameConditionalFormat\\\",\\n\\n    /**\\n* Cells with the same data validation criteria as the first cell in the range.\\n*/\\nsameDataValidation = \\\"SameDataValidation\\\",\\n\\n    /**\\n* Cells that are visible.\\n*/\\nvisible = \\\"Visible\\\",\\n}enum SpecialCellValueType {\\n/**\\n* Cells that have errors, boolean, numeric, or string values.\\n*/\\nall = \\\"All\\\",\\n\\n    /**\\n* Cells that have errors.\\n*/\\nerrors = \\\"Errors\\\",\\n\\n    /**\\n* Cells that have errors or boolean values.\\n*/\\nerrorsLogical = \\\"ErrorsLogical\\\",\\n\\n    /**\\n* Cells that have errors or numeric values.\\n*/\\nerrorsNumbers = \\\"ErrorsNumbers\\\",\\n\\n    /**\\n* Cells that have errors or string values.\\n*/\\nerrorsText = \\\"ErrorsText\\\",\\n\\n    /**\\n* Cells that have errors, boolean, or numeric values.\\n*/\\nerrorsLogicalNumber = \\\"ErrorsLogicalNumber\\\",\\n\\n    /**\\n* Cells that have errors, boolean, or string values.\\n*/\\nerrorsLogicalText = \\\"ErrorsLogicalText\\\",\\n\\n    /**\\n* Cells that have errors, numeric, or string values.\\n*/\\nerrorsNumberText = \\\"ErrorsNumberText\\\",\\n\\n    /**\\n* Cells that have a boolean value.\\n*/\\nlogical = \\\"Logical\\\",\\n\\n    /**\\n* Cells that have a boolean or numeric value.\\n*/\\nlogicalNumbers = \\\"LogicalNumbers\\\",\\n\\n    /**\\n* Cells that have a boolean or string value.\\n*/\\nlogicalText = \\\"LogicalText\\\",\\n\\n    /**\\n* Cells that have a boolean, numeric, or string value.\\n*/\\nlogicalNumbersText = \\\"LogicalNumbersText\\\",\\n\\n    /**\\n* Cells that have a numeric value.\\n*/\\nnumbers = \\\"Numbers\\\",\\n\\n    /**\\n* Cells that have a numeric or string value.\\n*/\\nnumbersText = \\\"NumbersText\\\",\\n\\n    /**\\n* Cells that have a string value.\\n*/\\ntext = \\\"Text\\\",\\n}/**\\n* Specifies the way that an object is attached to its underlying cells.\\n*/\\nenum Placement {\\n/**\\n* The object is moved with the cells.\\n*/\\ntwoCell = \\\"TwoCell\\\",\\n\\n    /**\\n* The object is moved and sized with the cells.\\n*/\\noneCell = \\\"OneCell\\\",\\n\\n    /**\\n* The object is free floating.\\n*/\\nabsolute = \\\"Absolute\\\",\\n}enum FillPattern {\\nnone = \\\"None\\\",\\n\\n    solid = \\\"Solid\\\",\\n\\n    gray50 = \\\"Gray50\\\",\\n\\n    gray75 = \\\"Gray75\\\",\\n\\n    gray25 = \\\"Gray25\\\",\\n\\n    horizontal = \\\"Horizontal\\\",\\n\\n    vertical = \\\"Vertical\\\",\\n\\n    down = \\\"Down\\\",\\n\\n    up = \\\"Up\\\",\\n\\n    checker = \\\"Checker\\\",\\n\\n    semiGray75 = \\\"SemiGray75\\\",\\n\\n    lightHorizontal = \\\"LightHorizontal\\\",\\n\\n    lightVertical = \\\"LightVertical\\\",\\n\\n    lightDown = \\\"LightDown\\\",\\n\\n    lightUp = \\\"LightUp\\\",\\n\\n    grid = \\\"Grid\\\",\\n\\n    crissCross = \\\"CrissCross\\\",\\n\\n    gray16 = \\\"Gray16\\\",\\n\\n    gray8 = \\\"Gray8\\\",\\n\\n    linearGradient = \\\"LinearGradient\\\",\\n\\n    rectangularGradient = \\\"RectangularGradient\\\",\\n}/**\\n* Specifies the horizontal alignment for the text frame in a shape.\\n*/\\nenum ShapeTextHorizontalAlignment {\\nleft = \\\"Left\\\",\\n\\n    center = \\\"Center\\\",\\n\\n    right = \\\"Right\\\",\\n\\n    justify = \\\"Justify\\\",\\n\\n    justifyLow = \\\"JustifyLow\\\",\\n\\n    distributed = \\\"Distributed\\\",\\n\\n    thaiDistributed = \\\"ThaiDistributed\\\",\\n}/**\\n* Specifies the vertical alignment for the text frame in a shape.\\n*/\\nenum ShapeTextVerticalAlignment {\\ntop = \\\"Top\\\",\\n\\n    middle = \\\"Middle\\\",\\n\\n    bottom = \\\"Bottom\\\",\\n\\n    justified = \\\"Justified\\\",\\n\\n    distributed = \\\"Distributed\\\",\\n}/**\\n* Specifies the vertical overflow for the text frame in a shape.\\n*/\\nenum ShapeTextVerticalOverflow {\\n/**\\n* Allow text to overflow the text frame vertically (can be from the top, bottom, or both depending on the text alignment).\\n*/\\noverflow = \\\"Overflow\\\",\\n\\n    /**\\n* Hide text that does not fit vertically within the text frame, and add an ellipsis (...) at the end of the visible text.\\n*/\\nellipsis = \\\"Ellipsis\\\",\\n\\n    /**\\n* Hide text that does not fit vertically within the text frame.\\n*/\\nclip = \\\"Clip\\\",\\n}/**\\n* Specifies the horizontal overflow for the text frame in a shape.\\n*/\\nenum ShapeTextHorizontalOverflow {\\noverflow = \\\"Overflow\\\",\\n\\n    clip = \\\"Clip\\\",\\n}/**\\n* Specifies the reading order for the text frame in a shape.\\n*/\\nenum ShapeTextReadingOrder {\\nleftToRight = \\\"LeftToRight\\\",\\n\\n    rightToLeft = \\\"RightToLeft\\\",\\n}/**\\n* Specifies the orientation for the text frame in a shape.\\n*/\\nenum ShapeTextOrientation {\\nhorizontal = \\\"Horizontal\\\",\\n\\n    vertical = \\\"Vertical\\\",\\n\\n    vertical270 = \\\"Vertical270\\\",\\n\\n    wordArtVertical = \\\"WordArtVertical\\\",\\n\\n    eastAsianVertical = \\\"EastAsianVertical\\\",\\n\\n    mongolianVertical = \\\"MongolianVertical\\\",\\n\\n    wordArtVerticalRTL = \\\"WordArtVerticalRTL\\\",\\n}/**\\n* Determines the type of automatic sizing allowed.\\n*/\\nenum ShapeAutoSize {\\n/**\\n* No autosizing.\\n*/\\nautoSizeNone = \\\"AutoSizeNone\\\",\\n\\n    /**\\n* The text is adjusted to fit the shape.\\n*/\\nautoSizeTextToFitShape = \\\"AutoSizeTextToFitShape\\\",\\n\\n    /**\\n* The shape is adjusted to fit the text.\\n*/\\nautoSizeShapeToFitText = \\\"AutoSizeShapeToFitText\\\",\\n\\n    /**\\n* A combination of automatic sizing schemes are used.\\n*/\\nautoSizeMixed = \\\"AutoSizeMixed\\\",\\n}/**\\n* Specifies the slicer sort behavior for `Slicer.sortBy`.\\n*/\\nenum SlicerSortType {\\n/**\\n* Sort slicer items in the order provided by the data source.\\n*/\\ndataSourceOrder = \\\"DataSourceOrder\\\",\\n\\n    /**\\n* Sort slicer items in ascending order by item captions.\\n*/\\nascending = \\\"Ascending\\\",\\n\\n    /**\\n* Sort slicer items in descending order by item captions.\\n*/\\ndescending = \\\"Descending\\\",\\n}/**\\n* Represents a category of number formats.\\n*/\\nenum NumberFormatCategory {\\n/**\\n* General format cells have no specific number format.\\n*/\\ngeneral = \\\"General\\\",\\n\\n    /**\\n* Number is used for general display of numbers. Currency and Accounting offer specialized formatting for monetary value.\\n*/\\nnumber = \\\"Number\\\",\\n\\n    /**\\n* Currency formats are used for general monetary values. Use Accounting formats to align decimal points in a column.\\n*/\\ncurrency = \\\"Currency\\\",\\n\\n    /**\\n* Accounting formats line up the currency symbols and decimal points in a column.\\n*/\\naccounting = \\\"Accounting\\\",\\n\\n    /**\\n* Date formats display date and time serial numbers as date values. Date formats that begin with an asterisk (*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings.\\n*/\\ndate = \\\"Date\\\",\\n\\n    /**\\n* Time formats display date and time serial numbers as date values. Time formats that begin with an asterisk (*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings.\\n*/\\ntime = \\\"Time\\\",\\n\\n    /**\\n* Percentage formats multiply the cell value by 100 and displays the result with a percent symbol.\\n*/\\npercentage = \\\"Percentage\\\",\\n\\n    /**\\n* Fraction formats display the cell value as a whole number with the remainder rounded to the nearest fraction value.\\n*/\\nfraction = \\\"Fraction\\\",\\n\\n    /**\\n* Scientific formats display the cell value as a number between 1 and 10 multiplied by a power of 10.\\n*/\\nscientific = \\\"Scientific\\\",\\n\\n    /**\\n* Text format cells are treated as text even when a number is in the cell. The cell is displayed exactly as entered.\\n*/\\ntext = \\\"Text\\\",\\n\\n    /**\\n* Special formats are useful for tracking list and database values.\\n*/\\nspecial = \\\"Special\\\",\\n\\n    /**\\n* A custom format that is not a part of any category.\\n*/\\ncustom = \\\"Custom\\\",\\n}\\n}\\n    \"}")},67896:function(e){e.exports=JSON.parse('{"data":"\\"use strict\\";var ExcelScript,__extends=this&&this.__extends||function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),__awaiter=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(i,a){function o(t){try{c(n.next(t))}catch(t){a(t)}}function s(t){try{c(n.throw(t))}catch(t){a(t)}}function c(t){t.done?i(t.value):function(t){return t instanceof r?t:new r((function(e){e(t)}))}(t.value).then(o,s)}c((n=n.apply(t,e||[])).next())}))},__generator=this&&this.__generator||function(t,e){var r,n,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},\\"function\\"===typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(r)throw new TypeError(\\"Generator is already executing.\\");for(;o;)try{if(r=1,n&&(i=2&a[0]?n.return:a[0]?n.throw||((i=n.return)&&i.call(n),0):n.next)&&!(i=i.call(n,a[1])).done)return i;switch(n=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,n=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(i=(i=o.trys).length>0&&i[i.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=e.call(t,o)}catch(t){a=[6,t],n=0}finally{r=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}},__spreadArrays=this&&this.__spreadArrays||function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),i=0;for(e=0;e<r;e++)for(var a=arguments[e],o=0,s=a.length;o<s;o++,i++)n[i]=a[o];return n};!function(t){var e,r=function(){function t(){this.tracer=console.log,this.doTrace=!1,this.syncCount=0}return t.prototype.setTracer=function(t){this.tracer=t},t.prototype.traceOn=function(){this.doTrace=!0},t.prototype.traceOff=function(){this.doTrace=!1},t.prototype.trace=function(t){this.doTrace&&this.tracer(\\"trace - \\"+t)},t.prototype.incrementSyncCount=function(){this.syncCount+=1,this.trace(\\"SYNC \\"+this.syncCount)},Object.defineProperty(t.prototype,\\"totalSyncs\\",{get:function(){return this.syncCount},enumerable:!1,configurable:!0}),t.prototype.traceLine=function(t){this.trace(\\"line: \\"+t)},t.prototype.traceCall=function(t,e){this.trace(t+\\".\\"+e)},t.prototype.traceFinalize=function(){this.trace(\\"Done, Total Syncs: \\"+this.totalSyncs.toString())},t}();!function(t){t.Read=\\"read\\",t.Write=\\"write\\",t.None=\\"none\\"}(e=t.SyncMode||(t.SyncMode={}));var n=function(){function t(t,e,r){this.type=t,this.instance=e,this.engine=r}return t.unwrap=function(e){var r=this;return e instanceof t?e.instance:e instanceof Array?e.map((function(t){return r.unwrap(t)})):e},t.prototype.sync=function(t){return this.engine.sync(t)},t.prototype.traceCall=function(t){this.engine.traceCall(this.type,t)},t.prototype.trace=function(t){this.engine.trace(t)},t}();function i(t,e,r){for(var n=[],i=3;i<arguments.length;i++)n[i-3]=arguments[i];return __awaiter(this,void 0,Promise,(function(){var i,o,s,c,u;return __generator(this,(function(h){switch(h.label){case 0:return i=new a(e,{errorCallback:null===t||void 0===t?void 0:t.errorCallback}),o=new l(e.workbook,i),s=n,(null===t||void 0===t?void 0:t.specialArgumentOrder)?(c=t.specialArgumentOrder.map((function(t){switch(t){case\\"workbook\\":return o;case\\"engine\\":return i;default:return}})),s.unshift.apply(s,c)):s.unshift(o),[4,r.apply(void 0,s)];case 1:return u=h.sent(),[4,i.finalize()];case 2:return h.sent(),[2,u]}}))}))}t.Wrap=n,t.run=function(t,e){return __awaiter(this,void 0,Promise,(function(){var r,n,a=this;return __generator(this,(function(o){return r=e&&e.arguments?e.arguments:[],n=function(n){return __awaiter(a,void 0,void 0,(function(){return __generator(this,(function(a){return[2,i.apply(void 0,__spreadArrays([e,n,t],r))]}))}))},e&&e.context?[2,n(e.context)]:e&&e.runOptions?e.excel?[2,e.excel.run(e.runOptions,n)]:[2,Excel.run(e.runOptions,n)]:[2,Excel.run(n)]}))}))},t.runEngine=i,t.getWorkbook=function(t){return new l(t,new a(t.context))};var a=function(t){function e(e,r){return t.call(this,e,r)||this}return __extends(e,t),e.prototype.finalize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(t){switch(t.label){case 0:return[4,this.sync()];case 1:return t.sent(),this.traceFinalize(),[2]}}))}))},e}(function(t){function e(e,r){var n=t.call(this)||this;return n.context=e,n.options=r,n.pending=[],n.callSequence=[],n.lastLineEncountered=void 0,n}return __extends(e,t),e.prototype.clearCallSequence=function(){this.callSequence=[]},e.prototype.traceLine=function(e){t.prototype.traceLine.call(this,e),this.lastLineEncountered=e},Object.defineProperty(e.prototype,\\"lastLine\\",{get:function(){return this.lastLineEncountered},enumerable:!1,configurable:!0}),e.prototype.traceCall=function(e,r){t.prototype.traceCall.call(this,e,r),this.callSequence.push({type:e,method:r,line:this.lastLine}),this.context.trace(\\"\\")},e.prototype.enqueue=function(){var t,e=this.pending;if(0===e.length){var r=this.doSync.bind(this),n=this.callSequence,i=this.clearCallSequence.bind(this),a=null===(t=this.options)||void 0===t?void 0:t.errorCallback;setTimeout((function(){return __awaiter(this,void 0,void 0,(function(){var t,o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t=void 0,o=n.length,[4,r().catch((function(e){a&&a(e);var r=e.traceMessages,i=r.length>0?r.length-1:0;o=i;var s=n[i],c=null!==s&&void 0!==s?s:{},l=c.type,u=c.method,h=c.line;t={message:e.debugInfo.message,code:e.debugInfo.code,type:l,method:u,line:h};[\\"line\\",\\"type\\",\\"method\\"].forEach((function(e){void 0!==t&&void 0===t[e]&&delete t[e]}))}))];case 1:for(l.sent(),i(),s=e.shift();s;)c=s.promise,s.callSequenceIndex<o?c.resolve():c.reject(t),s=e.shift();return[2]}}))}))}),0)}var o=this.callSequence.length-1;return new Promise((function(t,r){e.push({promise:{resolve:t,reject:r},callSequenceIndex:o})}))},e.prototype.doSync=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(t){return this.incrementSyncCount(),[2,this.context.sync()]}))}))},e.prototype.sync=function(t){return this.enqueue()},e}(r)),o=function(t){function r(e,r){var n=t.call(this,\\"LinkedWorkbook\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.breakLinks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"breakLinks\\"),this.instance.breakLinks(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.refreshLinks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"refreshLinks\\"),this.instance.refresh(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.LinkedWorkbook=o;var s=function(t){function r(e,r){var n=t.call(this,\\"Application\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCalculationEngineVersion=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCalculationEngineVersion\\"),this.instance.load(\\"calculationEngineVersion\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.calculationEngineVersion]}}))}))},r.prototype.getCalculationMode=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCalculationMode\\"),this.instance.load(\\"calculationMode\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.calculationMode]}}))}))},r.prototype.setCalculationMode=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCalculationMode\\"),this.instance.calculationMode=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCalculationState=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCalculationState\\"),this.instance.load(\\"calculationState\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.calculationState]}}))}))},r.prototype.getCultureInfo=function(){t.prototype.traceCall.call(this,\\"getCultureInfo\\");var e=this.instance.cultureInfo;return new mt(e,this.engine)},r.prototype.getDecimalSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDecimalSeparator\\"),this.instance.load(\\"decimalSeparator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.decimalSeparator]}}))}))},r.prototype.getIterativeCalculation=function(){t.prototype.traceCall.call(this,\\"getIterativeCalculation\\");var e=this.instance.iterativeCalculation;return new c(e,this.engine)},r.prototype.getThousandsSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getThousandsSeparator\\"),this.instance.load(\\"thousandsSeparator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.thousandsSeparator]}}))}))},r.prototype.getUseSystemSeparators=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUseSystemSeparators\\"),this.instance.load(\\"useSystemSeparators\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.useSystemSeparators]}}))}))},r.prototype.calculate=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"calculate\\"),i=n.unwrap(r),this.instance.calculate(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.Application=s;var c=function(t){function r(e,r){var n=t.call(this,\\"IterativeCalculation\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getEnabled=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEnabled\\"),this.instance.load(\\"enabled\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.enabled]}}))}))},r.prototype.setEnabled=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEnabled\\"),this.instance.enabled=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMaxChange=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMaxChange\\"),this.instance.load(\\"maxChange\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.maxChange]}}))}))},r.prototype.setMaxChange=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMaxChange\\"),this.instance.maxChange=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMaxIteration=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMaxIteration\\"),this.instance.load(\\"maxIteration\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.maxIteration]}}))}))},r.prototype.setMaxIteration=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMaxIteration\\"),this.instance.maxIteration=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.IterativeCalculation=c;var l=function(t){function r(e,r){var n=t.call(this,\\"Workbook\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBindings=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getBindings\\"),this.instance.bindings.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.bindings.items.map((function(t){return new C(t,r.engine)}))]}}))}))},r.prototype.addBinding=function(e,r,i){t.prototype.traceCall.call(this,\\"addBinding\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.bindings.add(a,o,s);return new C(c,this.engine)},r.prototype.addBindingFromNamedItem=function(e,r,i){t.prototype.traceCall.call(this,\\"addBindingFromNamedItem\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.bindings.addFromNamedItem(a,o,s);return new C(c,this.engine)},r.prototype.addBindingFromSelection=function(e,r){t.prototype.traceCall.call(this,\\"addBindingFromSelection\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.bindings.addFromSelection(i,a);return new C(o,this.engine)},r.prototype.getBinding=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getBinding\\"),i=n.unwrap(r),a=this.instance.bindings.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new C(a,this.engine)]}}))}))},r.prototype.getComments=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getComments\\"),this.instance.comments.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.comments.items.map((function(t){return new ie(t,r.engine)}))]}}))}))},r.prototype.addComment=function(e,r,i){t.prototype.traceCall.call(this,\\"addComment\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.comments.add(a,o,s);return new ie(c,this.engine)},r.prototype.getComment=function(e){t.prototype.traceCall.call(this,\\"getComment\\");var r=n.unwrap(e),i=this.instance.comments.getItem(r);return new ie(i,this.engine)},r.prototype.getCommentByCell=function(e){t.prototype.traceCall.call(this,\\"getCommentByCell\\");var r=n.unwrap(e),i=this.instance.comments.getItemByCell(r);return new ie(i,this.engine)},r.prototype.getCommentByReplyId=function(e){t.prototype.traceCall.call(this,\\"getCommentByReplyId\\");var r=n.unwrap(e),i=this.instance.comments.getItemByReplyId(r);return new ie(i,this.engine)},r.prototype.getCustomXmlParts=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomXmlParts\\"),this.instance.customXmlParts.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.customXmlParts.items.map((function(t){return new vt(t,r.engine)}))]}}))}))},r.prototype.addCustomXmlPart=function(e){t.prototype.traceCall.call(this,\\"addCustomXmlPart\\");var r=n.unwrap(e),i=this.instance.customXmlParts.add(r);return new vt(i,this.engine)},r.prototype.getCustomXmlPartsByNamespace=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a,o=this;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomXmlPartsByNamespace\\"),i=n.unwrap(r),(a=this.instance.customXmlParts.getByNamespace(i)).load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),[2,a.items.map((function(t){return new vt(t,o.engine)}))]}}))}))},r.prototype.getCustomXmlPart=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomXmlPart\\"),i=n.unwrap(r),a=this.instance.customXmlParts.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new vt(a,this.engine)]}}))}))},r.prototype.getLinkedWorkbookRefreshMode=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkedWorkbookRefreshMode\\"),this.instance.linkedWorkbooks.load(\\"workbookLinksRefreshMode\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.linkedWorkbooks.workbookLinksRefreshMode]}}))}))},r.prototype.setLinkedWorkbookRefreshMode=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLinkedWorkbookRefreshMode\\"),this.instance.linkedWorkbooks.workbookLinksRefreshMode=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLinkedWorkbooks=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkedWorkbooks\\"),this.instance.linkedWorkbooks.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.linkedWorkbooks.items.map((function(t){return new o(t,r.engine)}))]}}))}))},r.prototype.breakAllLinksToLinkedWorkbooks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"breakAllLinksToLinkedWorkbooks\\"),this.instance.linkedWorkbooks.breakAllLinks(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getLinkedWorkbookByUrl=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkedWorkbookByUrl\\"),i=n.unwrap(r),a=this.instance.linkedWorkbooks.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),a.isNullObject?[2,void 0]:[2,new o(a,this.engine)]}}))}))},r.prototype.refreshAllLinksToLinkedWorkbooks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"refreshAllLinksToLinkedWorkbooks\\"),this.instance.linkedWorkbooks.refreshAll(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getNames=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getNames\\"),this.instance.names.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.names.items.map((function(t){return new m(t,r.engine)}))]}}))}))},r.prototype.addNamedItem=function(e,r,i){t.prototype.traceCall.call(this,\\"addNamedItem\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.names.add(a,o,s);return new m(c,this.engine)},r.prototype.addNamedItemFormulaLocal=function(e,r,i){t.prototype.traceCall.call(this,\\"addNamedItemFormulaLocal\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.names.addFormulaLocal(a,o,s);return new m(c,this.engine)},r.prototype.getNamedItem=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getNamedItem\\"),i=n.unwrap(r),a=this.instance.names.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new m(a,this.engine)]}}))}))},r.prototype.getPivotTableStyles=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTableStyles\\"),this.instance.pivotTableStyles.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.pivotTableStyles.items.map((function(t){return new Jt(t,r.engine)}))]}}))}))},r.prototype.addPivotTableStyle=function(e,r){t.prototype.traceCall.call(this,\\"addPivotTableStyle\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.pivotTableStyles.add(i,a);return new Jt(o,this.engine)},r.prototype.getDefaultPivotTableStyle=function(){t.prototype.traceCall.call(this,\\"getDefaultPivotTableStyle\\");var e=this.instance.pivotTableStyles.getDefault();return new Jt(e,this.engine)},r.prototype.getPivotTableStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTableStyle\\"),i=n.unwrap(r),a=this.instance.pivotTableStyles.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Jt(a,this.engine)]}}))}))},r.prototype.setDefaultPivotTableStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setDefaultPivotTableStyle\\"),i=n.unwrap(r),this.instance.pivotTableStyles.setDefault(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getPivotTables=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTables\\"),this.instance.pivotTables.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.pivotTables.items.map((function(t){return new bt(t,r.engine)}))]}}))}))},r.prototype.addPivotTable=function(e,r,i){t.prototype.traceCall.call(this,\\"addPivotTable\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.pivotTables.add(a,o,s);return new bt(c,this.engine)},r.prototype.getPivotTable=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTable\\"),i=n.unwrap(r),a=this.instance.pivotTables.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new bt(a,this.engine)]}}))}))},r.prototype.refreshAllPivotTables=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"refreshAllPivotTables\\"),this.instance.pivotTables.refreshAll(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getSlicerStyles=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicerStyles\\"),this.instance.slicerStyles.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.slicerStyles.items.map((function(t){return new Zt(t,r.engine)}))]}}))}))},r.prototype.addSlicerStyle=function(e,r){t.prototype.traceCall.call(this,\\"addSlicerStyle\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.slicerStyles.add(i,a);return new Zt(o,this.engine)},r.prototype.getDefaultSlicerStyle=function(){t.prototype.traceCall.call(this,\\"getDefaultSlicerStyle\\");var e=this.instance.slicerStyles.getDefault();return new Zt(e,this.engine)},r.prototype.getSlicerStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicerStyle\\"),i=n.unwrap(r),a=this.instance.slicerStyles.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Zt(a,this.engine)]}}))}))},r.prototype.setDefaultSlicerStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setDefaultSlicerStyle\\"),i=n.unwrap(r),this.instance.slicerStyles.setDefault(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getSlicers=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicers\\"),this.instance.slicers.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.slicers.items.map((function(t){return new _e(t,r.engine)}))]}}))}))},r.prototype.addSlicer=function(e,r,i){t.prototype.traceCall.call(this,\\"addSlicer\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.slicers.add(a,o,s);return new _e(c,this.engine)},r.prototype.getSlicer=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicer\\"),i=n.unwrap(r),a=this.instance.slicers.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new _e(a,this.engine)]}}))}))},r.prototype.getPredefinedCellStyles=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPredefinedCellStyles\\"),this.instance.styles.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.styles.items.map((function(t){return new Kt(t,r.engine)}))]}}))}))},r.prototype.addPredefinedCellStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"addPredefinedCellStyle\\"),i=n.unwrap(r),this.instance.styles.add(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getPredefinedCellStyle=function(e){t.prototype.traceCall.call(this,\\"getPredefinedCellStyle\\");var r=n.unwrap(e),i=this.instance.styles.getItem(r);return new Kt(i,this.engine)},r.prototype.getTableStyles=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTableStyles\\"),this.instance.tableStyles.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.tableStyles.items.map((function(t){return new Yt(t,r.engine)}))]}}))}))},r.prototype.addTableStyle=function(e,r){t.prototype.traceCall.call(this,\\"addTableStyle\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.tableStyles.add(i,a);return new Yt(o,this.engine)},r.prototype.getDefaultTableStyle=function(){t.prototype.traceCall.call(this,\\"getDefaultTableStyle\\");var e=this.instance.tableStyles.getDefault();return new Yt(e,this.engine)},r.prototype.getTableStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getTableStyle\\"),i=n.unwrap(r),a=this.instance.tableStyles.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Yt(a,this.engine)]}}))}))},r.prototype.setDefaultTableStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setDefaultTableStyle\\"),i=n.unwrap(r),this.instance.tableStyles.setDefault(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getTables=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTables\\"),this.instance.tables.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.tables.items.map((function(t){return new v(t,r.engine)}))]}}))}))},r.prototype.addTable=function(e,r){t.prototype.traceCall.call(this,\\"addTable\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.tables.add(i,a);return new v(o,this.engine)},r.prototype.getTable=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getTable\\"),i=n.unwrap(r),a=this.instance.tables.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new v(a,this.engine)]}}))}))},r.prototype.getTimelineStyles=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTimelineStyles\\"),this.instance.timelineStyles.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.timelineStyles.items.map((function(t){return new $t(t,r.engine)}))]}}))}))},r.prototype.addTimelineStyle=function(e,r){t.prototype.traceCall.call(this,\\"addTimelineStyle\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.timelineStyles.add(i,a);return new $t(o,this.engine)},r.prototype.getDefaultTimelineStyle=function(){t.prototype.traceCall.call(this,\\"getDefaultTimelineStyle\\");var e=this.instance.timelineStyles.getDefault();return new $t(e,this.engine)},r.prototype.getTimelineStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getTimelineStyle\\"),i=n.unwrap(r),a=this.instance.timelineStyles.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new $t(a,this.engine)]}}))}))},r.prototype.setDefaultTimelineStyle=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setDefaultTimelineStyle\\"),i=n.unwrap(r),this.instance.timelineStyles.setDefault(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getWorksheets=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getWorksheets\\"),this.instance.worksheets.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.worksheets.items.map((function(t){return new h(t,r.engine)}))]}}))}))},r.prototype.addWorksheet=function(e){t.prototype.traceCall.call(this,\\"addWorksheet\\");var r=n.unwrap(e),i=this.instance.worksheets.add(r);return new h(i,this.engine)},r.prototype.getActiveWorksheet=function(){t.prototype.traceCall.call(this,\\"getActiveWorksheet\\");var e=this.instance.worksheets.getActiveWorksheet();return new h(e,this.engine)},r.prototype.getFirstWorksheet=function(e){t.prototype.traceCall.call(this,\\"getFirstWorksheet\\");var r=n.unwrap(e),i=this.instance.worksheets.getFirst(r);return new h(i,this.engine)},r.prototype.getWorksheet=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getWorksheet\\"),i=n.unwrap(r),a=this.instance.worksheets.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new h(a,this.engine)]}}))}))},r.prototype.getLastWorksheet=function(e){t.prototype.traceCall.call(this,\\"getLastWorksheet\\");var r=n.unwrap(e),i=this.instance.worksheets.getLast(r);return new h(i,this.engine)},r.prototype.getApplication=function(){t.prototype.traceCall.call(this,\\"getApplication\\");var e=this.instance.application;return new s(e,this.engine)},r.prototype.getAutoSave=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoSave\\"),this.instance.load(\\"autoSave\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoSave]}}))}))},r.prototype.getCalculationEngineVersion=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCalculationEngineVersion\\"),this.instance.load(\\"calculationEngineVersion\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.calculationEngineVersion]}}))}))},r.prototype.getChartDataPointTrack=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getChartDataPointTrack\\"),this.instance.load(\\"chartDataPointTrack\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.chartDataPointTrack]}}))}))},r.prototype.setChartDataPointTrack=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setChartDataPointTrack\\"),this.instance.chartDataPointTrack=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIsDirty=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsDirty\\"),this.instance.load(\\"isDirty\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isDirty]}}))}))},r.prototype.setIsDirty=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIsDirty\\"),this.instance.isDirty=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.getPreviouslySaved=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPreviouslySaved\\"),this.instance.load(\\"previouslySaved\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.previouslySaved]}}))}))},r.prototype.getProperties=function(){t.prototype.traceCall.call(this,\\"getProperties\\");var e=this.instance.properties;return new Wt(e,this.engine)},r.prototype.getProtection=function(){t.prototype.traceCall.call(this,\\"getProtection\\");var e=this.instance.protection;return new u(e,this.engine)},r.prototype.getReadOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadOnly\\"),this.instance.load(\\"readOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readOnly]}}))}))},r.prototype.getUsePrecisionAsDisplayed=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUsePrecisionAsDisplayed\\"),this.instance.load(\\"usePrecisionAsDisplayed\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.usePrecisionAsDisplayed]}}))}))},r.prototype.setUsePrecisionAsDisplayed=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUsePrecisionAsDisplayed\\"),this.instance.usePrecisionAsDisplayed=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getActiveCell=function(){return t.prototype.traceCall.call(this,\\"getActiveCell\\"),new d(this.instance.getActiveCell(),this.engine)},r.prototype.getActiveChart=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getActiveChart\\"),r=this.instance.getActiveChartOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new A(r,this.engine)]}}))}))},r.prototype.getActiveSlicer=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getActiveSlicer\\"),r=this.instance.getActiveSlicerOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new _e(r,this.engine)]}}))}))},r.prototype.getSelectedRange=function(){return t.prototype.traceCall.call(this,\\"getSelectedRange\\"),new d(this.instance.getSelectedRange(),this.engine)},r.prototype.getSelectedRanges=function(){return t.prototype.traceCall.call(this,\\"getSelectedRanges\\"),new f(this.instance.getSelectedRanges(),this.engine)},r.prototype.refreshAllDataConnections=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"refreshAllDataConnections\\"),this.instance.dataConnections.refreshAll(),[4,this.sync(e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getCustomXmlPartByNamespace=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a,o=this;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomXmlPartByNamespace\\"),i=n.unwrap(r),(a=this.instance.customXmlParts.getByNamespace(i)).load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),[2,a.items.map((function(t){return new vt(t,o.engine)}))]}}))}))},r}(n);t.Workbook=l;var u=function(t){function r(e,r){var n=t.call(this,\\"WorkbookProtection\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getProtected=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getProtected\\"),this.instance.load(\\"protected\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.protected]}}))}))},r.prototype.protect=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"protect\\"),i=n.unwrap(r),this.instance.protect(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.unprotect=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"unprotect\\"),i=n.unwrap(r),this.instance.unprotect(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.WorkbookProtection=u;var h=function(t){function r(e,r){var n=t.call(this,\\"Worksheet\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCharts=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getCharts\\"),this.instance.charts.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.charts.items.map((function(t){return new A(t,r.engine)}))]}}))}))},r.prototype.addChart=function(e,r,i){t.prototype.traceCall.call(this,\\"addChart\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.charts.add(a,o,s);return new A(c,this.engine)},r.prototype.getChart=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getChart\\"),i=n.unwrap(r),a=this.instance.charts.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new A(a,this.engine)]}}))}))},r.prototype.getComments=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getComments\\"),this.instance.comments.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.comments.items.map((function(t){return new ie(t,r.engine)}))]}}))}))},r.prototype.addComment=function(e,r,i){t.prototype.traceCall.call(this,\\"addComment\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.comments.add(a,o,s);return new ie(c,this.engine)},r.prototype.getComment=function(e){t.prototype.traceCall.call(this,\\"getComment\\");var r=n.unwrap(e),i=this.instance.comments.getItem(r);return new ie(i,this.engine)},r.prototype.getCommentByCell=function(e){t.prototype.traceCall.call(this,\\"getCommentByCell\\");var r=n.unwrap(e),i=this.instance.comments.getItemByCell(r);return new ie(i,this.engine)},r.prototype.getCommentByReplyId=function(e){t.prototype.traceCall.call(this,\\"getCommentByReplyId\\");var r=n.unwrap(e),i=this.instance.comments.getItemByReplyId(r);return new ie(i,this.engine)},r.prototype.getCustomProperties=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomProperties\\"),this.instance.customProperties.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.customProperties.items.map((function(t){return new At(t,r.engine)}))]}}))}))},r.prototype.addWorksheetCustomProperty=function(e,r){t.prototype.traceCall.call(this,\\"addWorksheetCustomProperty\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.customProperties.add(i,a);return new At(o,this.engine)},r.prototype.getWorksheetCustomProperty=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getWorksheetCustomProperty\\"),i=n.unwrap(r),a=this.instance.customProperties.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new At(a,this.engine)]}}))}))},r.prototype.getHorizontalPageBreaks=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalPageBreaks\\"),this.instance.horizontalPageBreaks.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.horizontalPageBreaks.items.map((function(t){return new ne(t,r.engine)}))]}}))}))},r.prototype.addHorizontalPageBreak=function(e){t.prototype.traceCall.call(this,\\"addHorizontalPageBreak\\");var r=n.unwrap(e),i=this.instance.horizontalPageBreaks.add(r);return new ne(i,this.engine)},r.prototype.removeAllHorizontalPageBreaks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"removeAllHorizontalPageBreaks\\"),this.instance.horizontalPageBreaks.removePageBreaks(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getNamedSheetViews=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getNamedSheetViews\\"),this.instance.namedSheetViews.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.namedSheetViews.items.map((function(t){return new me(t,r.engine)}))]}}))}))},r.prototype.addNamedSheetView=function(e){t.prototype.traceCall.call(this,\\"addNamedSheetView\\");var r=n.unwrap(e),i=this.instance.namedSheetViews.add(r);return new me(i,this.engine)},r.prototype.enterTemporaryNamedSheetView=function(){t.prototype.traceCall.call(this,\\"enterTemporaryNamedSheetView\\");var e=this.instance.namedSheetViews.enterTemporary();return new me(e,this.engine)},r.prototype.exitActiveNamedSheetView=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"exitActiveNamedSheetView\\"),this.instance.namedSheetViews.exit(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getActiveNamedSheetView=function(){t.prototype.traceCall.call(this,\\"getActiveNamedSheetView\\");var e=this.instance.namedSheetViews.getActive();return new me(e,this.engine)},r.prototype.getNamedSheetView=function(e){t.prototype.traceCall.call(this,\\"getNamedSheetView\\");var r=n.unwrap(e),i=this.instance.namedSheetViews.getItem(r);return new me(i,this.engine)},r.prototype.getNames=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getNames\\"),this.instance.names.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.names.items.map((function(t){return new m(t,r.engine)}))]}}))}))},r.prototype.addNamedItem=function(e,r,i){t.prototype.traceCall.call(this,\\"addNamedItem\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.names.add(a,o,s);return new m(c,this.engine)},r.prototype.addNamedItemFormulaLocal=function(e,r,i){t.prototype.traceCall.call(this,\\"addNamedItemFormulaLocal\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.names.addFormulaLocal(a,o,s);return new m(c,this.engine)},r.prototype.getNamedItem=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getNamedItem\\"),i=n.unwrap(r),a=this.instance.names.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new m(a,this.engine)]}}))}))},r.prototype.getPivotTables=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTables\\"),this.instance.pivotTables.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.pivotTables.items.map((function(t){return new bt(t,r.engine)}))]}}))}))},r.prototype.addPivotTable=function(e,r,i){t.prototype.traceCall.call(this,\\"addPivotTable\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.pivotTables.add(a,o,s);return new bt(c,this.engine)},r.prototype.getPivotTable=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTable\\"),i=n.unwrap(r),a=this.instance.pivotTables.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new bt(a,this.engine)]}}))}))},r.prototype.refreshAllPivotTables=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"refreshAllPivotTables\\"),this.instance.pivotTables.refreshAll(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getShapes=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getShapes\\"),this.instance.shapes.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.shapes.items.map((function(t){return new oe(t,r.engine)}))]}}))}))},r.prototype.addGeometricShape=function(e){t.prototype.traceCall.call(this,\\"addGeometricShape\\");var r=n.unwrap(e),i=this.instance.shapes.addGeometricShape(r);return new oe(i,this.engine)},r.prototype.addGroup=function(e){t.prototype.traceCall.call(this,\\"addGroup\\");var r=n.unwrap(e),i=this.instance.shapes.addGroup(r);return new oe(i,this.engine)},r.prototype.addImage=function(e){t.prototype.traceCall.call(this,\\"addImage\\");var r=n.unwrap(e),i=this.instance.shapes.addImage(r);return new oe(i,this.engine)},r.prototype.addLine=function(e,r,i,a,o){t.prototype.traceCall.call(this,\\"addLine\\");var s=n.unwrap(e),c=n.unwrap(r),l=n.unwrap(i),u=n.unwrap(a),h=n.unwrap(o),p=this.instance.shapes.addLine(s,c,l,u,h);return new oe(p,this.engine)},r.prototype.addTextBox=function(e){t.prototype.traceCall.call(this,\\"addTextBox\\");var r=n.unwrap(e),i=this.instance.shapes.addTextBox(r);return new oe(i,this.engine)},r.prototype.getShape=function(e){t.prototype.traceCall.call(this,\\"getShape\\");var r=n.unwrap(e),i=this.instance.shapes.getItem(r);return new oe(i,this.engine)},r.prototype.getSlicers=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicers\\"),this.instance.slicers.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.slicers.items.map((function(t){return new _e(t,r.engine)}))]}}))}))},r.prototype.addSlicer=function(e,r,i){t.prototype.traceCall.call(this,\\"addSlicer\\");var a=n.unwrap(e),o=n.unwrap(r),s=n.unwrap(i),c=this.instance.slicers.add(a,o,s);return new _e(c,this.engine)},r.prototype.getSlicer=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicer\\"),i=n.unwrap(r),a=this.instance.slicers.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new _e(a,this.engine)]}}))}))},r.prototype.getTables=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTables\\"),this.instance.tables.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.tables.items.map((function(t){return new v(t,r.engine)}))]}}))}))},r.prototype.addTable=function(e,r){t.prototype.traceCall.call(this,\\"addTable\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.tables.add(i,a);return new v(o,this.engine)},r.prototype.getTable=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getTable\\"),i=n.unwrap(r),a=this.instance.tables.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new v(a,this.engine)]}}))}))},r.prototype.getVerticalPageBreaks=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalPageBreaks\\"),this.instance.verticalPageBreaks.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.verticalPageBreaks.items.map((function(t){return new ne(t,r.engine)}))]}}))}))},r.prototype.addVerticalPageBreak=function(e){t.prototype.traceCall.call(this,\\"addVerticalPageBreak\\");var r=n.unwrap(e),i=this.instance.verticalPageBreaks.add(r);return new ne(i,this.engine)},r.prototype.removeAllVerticalPageBreaks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"removeAllVerticalPageBreaks\\"),this.instance.verticalPageBreaks.removePageBreaks(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getAutoFilter=function(){t.prototype.traceCall.call(this,\\"getAutoFilter\\");var e=this.instance.autoFilter;return new gt(e,this.engine)},r.prototype.getEnableCalculation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEnableCalculation\\"),this.instance.load(\\"enableCalculation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.enableCalculation]}}))}))},r.prototype.setEnableCalculation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEnableCalculation\\"),this.instance.enableCalculation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFreezePanes=function(){t.prototype.traceCall.call(this,\\"getFreezePanes\\");var e=this.instance.freezePanes;return new y(e,this.engine)},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPageLayout=function(){t.prototype.traceCall.call(this,\\"getPageLayout\\");var e=this.instance.pageLayout;return new te(e,this.engine)},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getProtection=function(){t.prototype.traceCall.call(this,\\"getProtection\\");var e=this.instance.protection;return new p(e,this.engine)},r.prototype.getShowGridlines=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowGridlines\\"),this.instance.load(\\"showGridlines\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showGridlines]}}))}))},r.prototype.setShowGridlines=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowGridlines\\"),this.instance.showGridlines=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowHeadings=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowHeadings\\"),this.instance.load(\\"showHeadings\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showHeadings]}}))}))},r.prototype.setShowHeadings=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowHeadings\\"),this.instance.showHeadings=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStandardHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStandardHeight\\"),this.instance.load(\\"standardHeight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.standardHeight]}}))}))},r.prototype.getStandardWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStandardWidth\\"),this.instance.load(\\"standardWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.standardWidth]}}))}))},r.prototype.setStandardWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStandardWidth\\"),this.instance.standardWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTabColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTabColor\\"),this.instance.load(\\"tabColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tabColor]}}))}))},r.prototype.setTabColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTabColor\\"),this.instance.tabColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisibility=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisibility\\"),this.instance.load(\\"visibility\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visibility]}}))}))},r.prototype.setVisibility=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisibility\\"),this.instance.visibility=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.activate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"activate\\"),this.instance.activate(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.calculate=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"calculate\\"),i=n.unwrap(r),this.instance.calculate(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.copy=function(e,i){t.prototype.traceCall.call(this,\\"copy\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.copy(a,o),this.engine)},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.findAll=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o,s;return __generator(this,(function(c){switch(c.label){case 0:return t.prototype.traceCall.call(this,\\"findAll\\"),a=n.unwrap(r),o=n.unwrap(i),s=this.instance.findAllOrNullObject(a,o),[4,t.prototype.sync.call(this,e.Read)];case 1:return c.sent(),s.isNullObject?[2,void 0]:[2,new f(s,this.engine)]}}))}))},r.prototype.getCell=function(e,r){t.prototype.traceCall.call(this,\\"getCell\\");var i=n.unwrap(e),a=n.unwrap(r);return new d(this.instance.getCell(i,a),this.engine)},r.prototype.getNext=function(i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getNext\\"),a=n.unwrap(i),o=this.instance.getNextOrNullObject(a),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),o.isNullObject?[2,void 0]:[2,new r(o,this.engine)]}}))}))},r.prototype.getPrevious=function(i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getPrevious\\"),a=n.unwrap(i),o=this.instance.getPreviousOrNullObject(a),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),o.isNullObject?[2,void 0]:[2,new r(o,this.engine)]}}))}))},r.prototype.getRange=function(e){t.prototype.traceCall.call(this,\\"getRange\\");var r=n.unwrap(e);return new d(this.instance.getRange(r),this.engine)},r.prototype.getRangeByIndexes=function(e,r,i,a){t.prototype.traceCall.call(this,\\"getRangeByIndexes\\");var o=n.unwrap(e),s=n.unwrap(r),c=n.unwrap(i),l=n.unwrap(a);return new d(this.instance.getRangeByIndexes(o,s,c,l),this.engine)},r.prototype.getRanges=function(e){t.prototype.traceCall.call(this,\\"getRanges\\");var r=n.unwrap(e);return new f(this.instance.getRanges(r),this.engine)},r.prototype.getUsedRange=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getUsedRange\\"),i=n.unwrap(r),a=this.instance.getUsedRangeOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new d(a,this.engine)]}}))}))},r.prototype.replaceAll=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c,l;return __generator(this,(function(u){switch(u.label){case 0:return t.prototype.traceCall.call(this,\\"replaceAll\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),l=this.instance.replaceAll(o,s,c),[4,t.prototype.sync.call(this,e.Read)];case 1:return u.sent(),[2,l.value]}}))}))},r.prototype.showOutlineLevels=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"showOutlineLevels\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.showOutlineLevels(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r}(n);t.Worksheet=h;var p=function(t){function r(e,r){var n=t.call(this,\\"WorksheetProtection\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getOptions=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOptions\\"),this.instance.load(\\"options\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.options]}}))}))},r.prototype.getProtected=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getProtected\\"),this.instance.load(\\"protected\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.protected]}}))}))},r.prototype.protect=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"protect\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.protect(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r.prototype.unprotect=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"unprotect\\"),i=n.unwrap(r),this.instance.unprotect(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.WorksheetProtection=p;var y=function(t){function r(e,r){var n=t.call(this,\\"WorksheetFreezePanes\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.freezeAt=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"freezeAt\\"),i=n.unwrap(r),this.instance.freezeAt(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.freezeColumns=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"freezeColumns\\"),i=n.unwrap(r),this.instance.freezeColumns(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.freezeRows=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"freezeRows\\"),i=n.unwrap(r),this.instance.freezeRows(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getLocation=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getLocation\\"),r=this.instance.getLocationOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new d(r,this.engine)]}}))}))},r.prototype.unfreeze=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"unfreeze\\"),this.instance.unfreeze(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.WorksheetFreezePanes=y;var d=function(t){function r(e,r){var n=t.call(this,\\"Range\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getConditionalFormats=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getConditionalFormats\\"),this.instance.conditionalFormats.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.conditionalFormats.items.map((function(t){return new kt(t,r.engine)}))]}}))}))},r.prototype.addConditionalFormat=function(e){t.prototype.traceCall.call(this,\\"addConditionalFormat\\");var r=n.unwrap(e),i=this.instance.conditionalFormats.add(r);return new kt(i,this.engine)},r.prototype.clearAllConditionalFormats=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clearAllConditionalFormats\\"),this.instance.conditionalFormats.clearAll(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getConditionalFormat=function(e){t.prototype.traceCall.call(this,\\"getConditionalFormat\\");var r=n.unwrap(e),i=this.instance.conditionalFormats.getItem(r);return new kt(i,this.engine)},r.prototype.getAddress=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAddress\\"),this.instance.load(\\"address\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.address]}}))}))},r.prototype.getAddressLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAddressLocal\\"),this.instance.load(\\"addressLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.addressLocal]}}))}))},r.prototype.getCellCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCellCount\\"),this.instance.load(\\"cellCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.cellCount]}}))}))},r.prototype.getColumnCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnCount\\"),this.instance.load(\\"columnCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.columnCount]}}))}))},r.prototype.getColumnHidden=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnHidden\\"),this.instance.load(\\"columnHidden\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.columnHidden]}}))}))},r.prototype.setColumnHidden=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColumnHidden\\"),this.instance.columnHidden=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColumnIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnIndex\\"),this.instance.load(\\"columnIndex\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.columnIndex]}}))}))},r.prototype.getDataValidation=function(){t.prototype.traceCall.call(this,\\"getDataValidation\\");var e=this.instance.dataValidation;return new P(e,this.engine)},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new S(e,this.engine)},r.prototype.getFormulas=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulas\\"),this.instance.load(\\"formulas\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulas]}}))}))},r.prototype.setFormulas=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulas\\"),this.instance.formulas=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulasLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulasLocal\\"),this.instance.load(\\"formulasLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulasLocal]}}))}))},r.prototype.setFormulasLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulasLocal\\"),this.instance.formulasLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulasR1C1=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulasR1C1\\"),this.instance.load(\\"formulasR1C1\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulasR1C1]}}))}))},r.prototype.setFormulasR1C1=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulasR1C1\\"),this.instance.formulasR1C1=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHasSpill=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHasSpill\\"),this.instance.load(\\"hasSpill\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hasSpill]}}))}))},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.getHidden=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHidden\\"),this.instance.load(\\"hidden\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hidden]}}))}))},r.prototype.getHyperlink=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHyperlink\\"),this.instance.load(\\"hyperlink\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hyperlink]}}))}))},r.prototype.setHyperlink=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHyperlink\\"),this.instance.hyperlink=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIsEntireColumn=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsEntireColumn\\"),this.instance.load(\\"isEntireColumn\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isEntireColumn]}}))}))},r.prototype.getIsEntireRow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsEntireRow\\"),this.instance.load(\\"isEntireRow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isEntireRow]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.getLinkedDataTypeStates=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkedDataTypeStates\\"),this.instance.load(\\"linkedDataTypeState\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.linkedDataTypeState]}}))}))},r.prototype.getNumberFormats=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormats\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormats=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormats\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormatCategories=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormatCategories\\"),this.instance.load(\\"numberFormatCategories\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormatCategories]}}))}))},r.prototype.getNumberFormatsLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormatsLocal\\"),this.instance.load(\\"numberFormatLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormatLocal]}}))}))},r.prototype.setNumberFormatsLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormatsLocal\\"),this.instance.numberFormatLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRowCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRowCount\\"),this.instance.load(\\"rowCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rowCount]}}))}))},r.prototype.getRowHidden=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRowHidden\\"),this.instance.load(\\"rowHidden\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rowHidden]}}))}))},r.prototype.setRowHidden=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRowHidden\\"),this.instance.rowHidden=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRowIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRowIndex\\"),this.instance.load(\\"rowIndex\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rowIndex]}}))}))},r.prototype.getSavedAsArray=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSavedAsArray\\"),this.instance.load(\\"savedAsArray\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.savedAsArray]}}))}))},r.prototype.getSort=function(){t.prototype.traceCall.call(this,\\"getSort\\");var e=this.instance.sort;return new dt(e,this.engine)},r.prototype.getPredefinedCellStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPredefinedCellStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setPredefinedCellStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPredefinedCellStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTexts=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTexts\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.getValueTypes=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValueTypes\\"),this.instance.load(\\"valueTypes\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.valueTypes]}}))}))},r.prototype.getValues=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValues\\"),this.instance.load(\\"values\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.values]}}))}))},r.prototype.setValues=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setValues\\"),this.instance.values=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.getWorksheet=function(){t.prototype.traceCall.call(this,\\"getWorksheet\\");var e=this.instance.worksheet;return new h(e,this.engine)},r.prototype.autoFill=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"autoFill\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.autoFill(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r.prototype.calculate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"calculate\\"),this.instance.calculate(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.clear=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),i=n.unwrap(r),this.instance.clear(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.convertDataTypeToText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"convertDataTypeToText\\"),this.instance.convertDataTypeToText(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.copyFrom=function(r,i,a,o){return __awaiter(this,void 0,Promise,(function(){var s,c,l,u;return __generator(this,(function(h){switch(h.label){case 0:return t.prototype.traceCall.call(this,\\"copyFrom\\"),s=n.unwrap(r),c=n.unwrap(i),l=n.unwrap(a),u=n.unwrap(o),this.instance.copyFrom(s,c,l,u),[4,t.prototype.sync.call(this,e.Write)];case 1:return h.sent(),[2]}}))}))},r.prototype.delete=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),i=n.unwrap(r),this.instance.delete(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.find=function(i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"find\\"),o=n.unwrap(i),s=n.unwrap(a),c=this.instance.findOrNullObject(o,s),[4,t.prototype.sync.call(this,e.Read)];case 1:return l.sent(),c.isNullObject?[2,void 0]:[2,new r(c,this.engine)]}}))}))},r.prototype.flashFill=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"flashFill\\"),this.instance.flashFill(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getAbsoluteResizedRange=function(e,i){t.prototype.traceCall.call(this,\\"getAbsoluteResizedRange\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getAbsoluteResizedRange(a,o),this.engine)},r.prototype.getBoundingRect=function(e){t.prototype.traceCall.call(this,\\"getBoundingRect\\");var i=n.unwrap(e);return new r(this.instance.getBoundingRect(i),this.engine)},r.prototype.getCell=function(e,i){t.prototype.traceCall.call(this,\\"getCell\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getCell(a,o),this.engine)},r.prototype.getColumn=function(e){t.prototype.traceCall.call(this,\\"getColumn\\");var i=n.unwrap(e);return new r(this.instance.getColumn(i),this.engine)},r.prototype.getColumnsAfter=function(e){t.prototype.traceCall.call(this,\\"getColumnsAfter\\");var i=n.unwrap(e);return new r(this.instance.getColumnsAfter(i),this.engine)},r.prototype.getColumnsBefore=function(e){t.prototype.traceCall.call(this,\\"getColumnsBefore\\");var i=n.unwrap(e);return new r(this.instance.getColumnsBefore(i),this.engine)},r.prototype.getDirectPrecedents=function(){return t.prototype.traceCall.call(this,\\"getDirectPrecedents\\"),new _(this.instance.getDirectPrecedents(),this.engine)},r.prototype.getEntireColumn=function(){return t.prototype.traceCall.call(this,\\"getEntireColumn\\"),new r(this.instance.getEntireColumn(),this.engine)},r.prototype.getEntireRow=function(){return t.prototype.traceCall.call(this,\\"getEntireRow\\"),new r(this.instance.getEntireRow(),this.engine)},r.prototype.getExtendedRange=function(e,i){t.prototype.traceCall.call(this,\\"getExtendedRange\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getExtendedRange(a,o),this.engine)},r.prototype.getImage=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getImage\\"),r=this.instance.getImage(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.value]}}))}))},r.prototype.getIntersection=function(i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getIntersection\\"),a=n.unwrap(i),o=this.instance.getIntersectionOrNullObject(a),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),o.isNullObject?[2,void 0]:[2,new r(o,this.engine)]}}))}))},r.prototype.getLastCell=function(){return t.prototype.traceCall.call(this,\\"getLastCell\\"),new r(this.instance.getLastCell(),this.engine)},r.prototype.getLastColumn=function(){return t.prototype.traceCall.call(this,\\"getLastColumn\\"),new r(this.instance.getLastColumn(),this.engine)},r.prototype.getLastRow=function(){return t.prototype.traceCall.call(this,\\"getLastRow\\"),new r(this.instance.getLastRow(),this.engine)},r.prototype.getMergedAreas=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getMergedAreas\\"),r=this.instance.getMergedAreasOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new f(r,this.engine)]}}))}))},r.prototype.getOffsetRange=function(e,i){t.prototype.traceCall.call(this,\\"getOffsetRange\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getOffsetRange(a,o),this.engine)},r.prototype.getPivotTables=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a,o=this;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotTables\\"),i=n.unwrap(r),(a=this.instance.getPivotTables(i)).load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),[2,a.items.map((function(t){return new bt(t,o.engine)}))]}}))}))},r.prototype.getRangeEdge=function(e,i){t.prototype.traceCall.call(this,\\"getRangeEdge\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getRangeEdge(a,o),this.engine)},r.prototype.getResizedRange=function(e,i){t.prototype.traceCall.call(this,\\"getResizedRange\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getResizedRange(a,o),this.engine)},r.prototype.getRow=function(e){t.prototype.traceCall.call(this,\\"getRow\\");var i=n.unwrap(e);return new r(this.instance.getRow(i),this.engine)},r.prototype.getRowsAbove=function(e){t.prototype.traceCall.call(this,\\"getRowsAbove\\");var i=n.unwrap(e);return new r(this.instance.getRowsAbove(i),this.engine)},r.prototype.getRowsBelow=function(e){t.prototype.traceCall.call(this,\\"getRowsBelow\\");var i=n.unwrap(e);return new r(this.instance.getRowsBelow(i),this.engine)},r.prototype.getSpecialCells=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o,s;return __generator(this,(function(c){switch(c.label){case 0:return t.prototype.traceCall.call(this,\\"getSpecialCells\\"),a=n.unwrap(r),o=n.unwrap(i),s=this.instance.getSpecialCellsOrNullObject(a,o),[4,t.prototype.sync.call(this,e.Read)];case 1:return c.sent(),s.isNullObject?[2,void 0]:[2,new f(s,this.engine)]}}))}))},r.prototype.getSpillParent=function(){return __awaiter(this,void 0,Promise,(function(){var n;return __generator(this,(function(i){switch(i.label){case 0:return t.prototype.traceCall.call(this,\\"getSpillParent\\"),n=this.instance.getSpillParentOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return i.sent(),n.isNullObject?[2,void 0]:[2,new r(n,this.engine)]}}))}))},r.prototype.getSpillingToRange=function(){return __awaiter(this,void 0,Promise,(function(){var n;return __generator(this,(function(i){switch(i.label){case 0:return t.prototype.traceCall.call(this,\\"getSpillingToRange\\"),n=this.instance.getSpillingToRangeOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return i.sent(),n.isNullObject?[2,void 0]:[2,new r(n,this.engine)]}}))}))},r.prototype.getSurroundingRegion=function(){return t.prototype.traceCall.call(this,\\"getSurroundingRegion\\"),new r(this.instance.getSurroundingRegion(),this.engine)},r.prototype.getTables=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a,o=this;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getTables\\"),i=n.unwrap(r),(a=this.instance.getTables(i)).load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),[2,a.items.map((function(t){return new v(t,o.engine)}))]}}))}))},r.prototype.getUsedRange=function(i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getUsedRange\\"),a=n.unwrap(i),o=this.instance.getUsedRangeOrNullObject(a),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),o.isNullObject?[2,void 0]:[2,new r(o,this.engine)]}}))}))},r.prototype.getVisibleView=function(){return t.prototype.traceCall.call(this,\\"getVisibleView\\"),new g(this.instance.getVisibleView(),this.engine)},r.prototype.group=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"group\\"),i=n.unwrap(r),this.instance.group(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.hideGroupDetails=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"hideGroupDetails\\"),i=n.unwrap(r),this.instance.hideGroupDetails(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.insert=function(e){t.prototype.traceCall.call(this,\\"insert\\");var i=n.unwrap(e);return new r(this.instance.insert(i),this.engine)},r.prototype.merge=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"merge\\"),i=n.unwrap(r),this.instance.merge(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.moveTo=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"moveTo\\"),i=n.unwrap(r),this.instance.moveTo(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.removeDuplicates=function(e,r){t.prototype.traceCall.call(this,\\"removeDuplicates\\");var i=n.unwrap(e),a=n.unwrap(r);return new x(this.instance.removeDuplicates(i,a),this.engine)},r.prototype.replaceAll=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c,l;return __generator(this,(function(u){switch(u.label){case 0:return t.prototype.traceCall.call(this,\\"replaceAll\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),l=this.instance.replaceAll(o,s,c),[4,t.prototype.sync.call(this,e.Read)];case 1:return u.sent(),[2,l.value]}}))}))},r.prototype.select=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"select\\"),this.instance.select(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.setDirty=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"setDirty\\"),this.instance.setDirty(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.showCard=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"showCard\\"),this.instance.showCard(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.showGroupDetails=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"showGroupDetails\\"),i=n.unwrap(r),this.instance.showGroupDetails(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.ungroup=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"ungroup\\"),i=n.unwrap(r),this.instance.ungroup(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.unmerge=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"unmerge\\"),this.instance.unmerge(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getFormula=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFormula\\"),(r=this.instance.getCell(0,0)).load(\\"formulas\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.formulas[0][0]]}}))}))},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),this.instance.formulas=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulaLocal=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulaLocal\\"),(r=this.instance.getCell(0,0)).load(\\"formulasLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.formulasLocal[0][0]]}}))}))},r.prototype.setFormulaLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulaLocal\\"),this.instance.formulasLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulaR1C1=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulaR1C1\\"),(r=this.instance.getCell(0,0)).load(\\"formulasR1C1\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.formulasR1C1[0][0]]}}))}))},r.prototype.setFormulaR1C1=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulaR1C1\\"),this.instance.formulasR1C1=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLinkedDataTypeState=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkedDataTypeState\\"),(r=this.instance.getCell(0,0)).load(\\"linkedDataTypeState\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.linkedDataTypeState[0][0]]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),(r=this.instance.getCell(0,0)).load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.numberFormat[0][0]]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormatLocal=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormatLocal\\"),(r=this.instance.getCell(0,0)).load(\\"numberFormatLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.numberFormatLocal[0][0]]}}))}))},r.prototype.setNumberFormatLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormatLocal\\"),this.instance.numberFormatLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormatCategory=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormatCategory\\"),(r=this.instance.getCell(0,0)).load(\\"numberFormatCategories\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.numberFormatCategories[0][0]]}}))}))},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),(r=this.instance.getCell(0,0)).load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.text[0][0]]}}))}))},r.prototype.getValueType=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getValueType\\"),(r=this.instance.getCell(0,0)).load(\\"valueTypes\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.valueTypes[0][0]]}}))}))},r.prototype.getValue=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getValue\\"),(r=this.instance.getCell(0,0)).load(\\"values\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.values[0][0]]}}))}))},r.prototype.setValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setValue\\"),this.instance.values=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.Range=d;var f=function(t){function r(e,r){var n=t.call(this,\\"RangeAreas\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAreas=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getAreas\\"),this.instance.areas.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.areas.items.map((function(t){return new d(t,r.engine)}))]}}))}))},r.prototype.getConditionalFormats=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getConditionalFormats\\"),this.instance.conditionalFormats.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.conditionalFormats.items.map((function(t){return new kt(t,r.engine)}))]}}))}))},r.prototype.addConditionalFormat=function(e){t.prototype.traceCall.call(this,\\"addConditionalFormat\\");var r=n.unwrap(e),i=this.instance.conditionalFormats.add(r);return new kt(i,this.engine)},r.prototype.clearAllConditionalFormats=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clearAllConditionalFormats\\"),this.instance.conditionalFormats.clearAll(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getConditionalFormat=function(e){t.prototype.traceCall.call(this,\\"getConditionalFormat\\");var r=n.unwrap(e),i=this.instance.conditionalFormats.getItem(r);return new kt(i,this.engine)},r.prototype.getAddress=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAddress\\"),this.instance.load(\\"address\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.address]}}))}))},r.prototype.getAddressLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAddressLocal\\"),this.instance.load(\\"addressLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.addressLocal]}}))}))},r.prototype.getAreaCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAreaCount\\"),this.instance.load(\\"areaCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.areaCount]}}))}))},r.prototype.getCellCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCellCount\\"),this.instance.load(\\"cellCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.cellCount]}}))}))},r.prototype.getDataValidation=function(){t.prototype.traceCall.call(this,\\"getDataValidation\\");var e=this.instance.dataValidation;return new P(e,this.engine)},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new S(e,this.engine)},r.prototype.getIsEntireColumn=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsEntireColumn\\"),this.instance.load(\\"isEntireColumn\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isEntireColumn]}}))}))},r.prototype.getIsEntireRow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsEntireRow\\"),this.instance.load(\\"isEntireRow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isEntireRow]}}))}))},r.prototype.getPredefinedCellStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPredefinedCellStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setPredefinedCellStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPredefinedCellStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWorksheet=function(){t.prototype.traceCall.call(this,\\"getWorksheet\\");var e=this.instance.worksheet;return new h(e,this.engine)},r.prototype.calculate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"calculate\\"),this.instance.calculate(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.clear=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),i=n.unwrap(r),this.instance.clear(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.convertDataTypeToText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"convertDataTypeToText\\"),this.instance.convertDataTypeToText(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.copyFrom=function(r,i,a,o){return __awaiter(this,void 0,Promise,(function(){var s,c,l,u;return __generator(this,(function(h){switch(h.label){case 0:return t.prototype.traceCall.call(this,\\"copyFrom\\"),s=n.unwrap(r),c=n.unwrap(i),l=n.unwrap(a),u=n.unwrap(o),this.instance.copyFrom(s,c,l,u),[4,t.prototype.sync.call(this,e.Write)];case 1:return h.sent(),[2]}}))}))},r.prototype.getEntireColumn=function(){return t.prototype.traceCall.call(this,\\"getEntireColumn\\"),new r(this.instance.getEntireColumn(),this.engine)},r.prototype.getEntireRow=function(){return t.prototype.traceCall.call(this,\\"getEntireRow\\"),new r(this.instance.getEntireRow(),this.engine)},r.prototype.getIntersection=function(i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getIntersection\\"),a=n.unwrap(i),o=this.instance.getIntersectionOrNullObject(a),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),o.isNullObject?[2,void 0]:[2,new r(o,this.engine)]}}))}))},r.prototype.getOffsetRangeAreas=function(e,i){t.prototype.traceCall.call(this,\\"getOffsetRangeAreas\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getOffsetRangeAreas(a,o),this.engine)},r.prototype.getSpecialCells=function(i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"getSpecialCells\\"),o=n.unwrap(i),s=n.unwrap(a),c=this.instance.getSpecialCellsOrNullObject(o,s),[4,t.prototype.sync.call(this,e.Read)];case 1:return l.sent(),c.isNullObject?[2,void 0]:[2,new r(c,this.engine)]}}))}))},r.prototype.getTables=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a,o=this;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getTables\\"),i=n.unwrap(r),(a=this.instance.getTables(i)).load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),[2,a.items.map((function(t){return new v(t,o.engine)}))]}}))}))},r.prototype.getUsedRangeAreas=function(i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"getUsedRangeAreas\\"),a=n.unwrap(i),o=this.instance.getUsedRangeAreasOrNullObject(a),[4,t.prototype.sync.call(this,e.Read)];case 1:return s.sent(),o.isNullObject?[2,void 0]:[2,new r(o,this.engine)]}}))}))},r.prototype.setDirty=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"setDirty\\"),this.instance.setDirty(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.RangeAreas=f;var _=function(t){function r(e,r){var n=t.call(this,\\"WorkbookRangeAreas\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAreas=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getAreas\\"),this.instance.areas.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.areas.items.map((function(t){return new f(t,r.engine)}))]}}))}))},r.prototype.getRanges=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getRanges\\"),this.instance.ranges.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.ranges.items.map((function(t){return new d(t,r.engine)}))]}}))}))},r.prototype.getAddresses=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAddresses\\"),this.instance.load(\\"addresses\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.addresses]}}))}))},r.prototype.getRangeAreasBySheet=function(e){t.prototype.traceCall.call(this,\\"getRangeAreasBySheet\\");var r=n.unwrap(e);return new f(this.instance.getRangeAreasOrNullObjectBySheet(r),this.engine)},r}(n);t.WorkbookRangeAreas=_;var g=function(t){function r(e,r){var n=t.call(this,\\"RangeView\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getRows=function(){return __awaiter(this,void 0,Promise,(function(){var n=this;return __generator(this,(function(i){switch(i.label){case 0:return t.prototype.traceCall.call(this,\\"getRows\\"),this.instance.rows.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return i.sent(),[2,this.instance.rows.items.map((function(t){return new r(t,n.engine)}))]}}))}))},r.prototype.getCellAddresses=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCellAddresses\\"),this.instance.load(\\"cellAddresses\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.cellAddresses]}}))}))},r.prototype.getColumnCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnCount\\"),this.instance.load(\\"columnCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.columnCount]}}))}))},r.prototype.getFormulas=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulas\\"),this.instance.load(\\"formulas\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulas]}}))}))},r.prototype.setFormulas=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulas\\"),this.instance.formulas=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulasLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulasLocal\\"),this.instance.load(\\"formulasLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulasLocal]}}))}))},r.prototype.setFormulasLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulasLocal\\"),this.instance.formulasLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulasR1C1=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulasR1C1\\"),this.instance.load(\\"formulasR1C1\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulasR1C1]}}))}))},r.prototype.setFormulasR1C1=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulasR1C1\\"),this.instance.formulasR1C1=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIndex\\"),this.instance.load(\\"index\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.index]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRowCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRowCount\\"),this.instance.load(\\"rowCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rowCount]}}))}))},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.getValueTypes=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValueTypes\\"),this.instance.load(\\"valueTypes\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.valueTypes]}}))}))},r.prototype.getValues=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValues\\"),this.instance.load(\\"values\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.values]}}))}))},r.prototype.setValues=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setValues\\"),this.instance.values=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRange=function(){return t.prototype.traceCall.call(this,\\"getRange\\"),new d(this.instance.getRange(),this.engine)},r}(n);t.RangeView=g;var m=function(t){function r(e,r){var n=t.call(this,\\"NamedItem\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getArrayValues=function(){t.prototype.traceCall.call(this,\\"getArrayValues\\");var e=this.instance.arrayValues;return new w(e,this.engine)},r.prototype.getComment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getComment\\"),this.instance.load(\\"comment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.comment]}}))}))},r.prototype.setComment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setComment\\"),this.instance.comment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormula=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormula\\"),this.instance.load(\\"formula\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formula]}}))}))},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),this.instance.formula=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.getScope=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getScope\\"),this.instance.load(\\"scope\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.scope]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.getValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValue\\"),this.instance.load(\\"value\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.value]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWorksheet=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getWorksheet\\"),r=this.instance.worksheetOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new h(r,this.engine)]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getRange=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getRange\\"),r=this.instance.getRangeOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new d(r,this.engine)]}}))}))},r}(n);t.NamedItem=m;var w=function(t){function r(e,r){var n=t.call(this,\\"NamedItemArrayValues\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getTypes=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTypes\\"),this.instance.load(\\"types\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.types]}}))}))},r.prototype.getValues=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValues\\"),this.instance.load(\\"values\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.values]}}))}))},r}(n);t.NamedItemArrayValues=w;var C=function(t){function r(e,r){var n=t.call(this,\\"Binding\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getRange=function(){return t.prototype.traceCall.call(this,\\"getRange\\"),new d(this.instance.getRange(),this.engine)},r.prototype.getTable=function(){return t.prototype.traceCall.call(this,\\"getTable\\"),new v(this.instance.getTable(),this.engine)},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),r=this.instance.getText(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.value]}}))}))},r}(n);t.Binding=C;var v=function(t){function r(e,r){var n=t.call(this,\\"Table\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColumns=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getColumns\\"),this.instance.columns.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.columns.items.map((function(t){return new b(t,r.engine)}))]}}))}))},r.prototype.getColumn=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getColumn\\"),i=n.unwrap(r),a=this.instance.columns.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new b(a,this.engine)]}}))}))},r.prototype.getAutoFilter=function(){t.prototype.traceCall.call(this,\\"getAutoFilter\\");var e=this.instance.autoFilter;return new gt(e,this.engine)},r.prototype.getHighlightFirstColumn=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHighlightFirstColumn\\"),this.instance.load(\\"highlightFirstColumn\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.highlightFirstColumn]}}))}))},r.prototype.setHighlightFirstColumn=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHighlightFirstColumn\\"),this.instance.highlightFirstColumn=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHighlightLastColumn=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHighlightLastColumn\\"),this.instance.load(\\"highlightLastColumn\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.highlightLastColumn]}}))}))},r.prototype.setHighlightLastColumn=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHighlightLastColumn\\"),this.instance.highlightLastColumn=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getLegacyId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLegacyId\\"),this.instance.load(\\"legacyId\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.legacyId]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowBandedColumns=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowBandedColumns\\"),this.instance.load(\\"showBandedColumns\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showBandedColumns]}}))}))},r.prototype.setShowBandedColumns=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowBandedColumns\\"),this.instance.showBandedColumns=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowBandedRows=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowBandedRows\\"),this.instance.load(\\"showBandedRows\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showBandedRows]}}))}))},r.prototype.setShowBandedRows=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowBandedRows\\"),this.instance.showBandedRows=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowFilterButton=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowFilterButton\\"),this.instance.load(\\"showFilterButton\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showFilterButton]}}))}))},r.prototype.setShowFilterButton=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowFilterButton\\"),this.instance.showFilterButton=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowHeaders=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowHeaders\\"),this.instance.load(\\"showHeaders\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showHeaders]}}))}))},r.prototype.setShowHeaders=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowHeaders\\"),this.instance.showHeaders=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowTotals=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowTotals\\"),this.instance.load(\\"showTotals\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showTotals]}}))}))},r.prototype.setShowTotals=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowTotals\\"),this.instance.showTotals=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSort=function(){t.prototype.traceCall.call(this,\\"getSort\\");var e=this.instance.sort;return new ft(e,this.engine)},r.prototype.getPredefinedTableStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPredefinedTableStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setPredefinedTableStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPredefinedTableStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWorksheet=function(){t.prototype.traceCall.call(this,\\"getWorksheet\\");var e=this.instance.worksheet;return new h(e,this.engine)},r.prototype.clearFilters=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clearFilters\\"),this.instance.clearFilters(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.convertToRange=function(){return t.prototype.traceCall.call(this,\\"convertToRange\\"),new d(this.instance.convertToRange(),this.engine)},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getRangeBetweenHeaderAndTotal=function(){return t.prototype.traceCall.call(this,\\"getRangeBetweenHeaderAndTotal\\"),new d(this.instance.getDataBodyRange(),this.engine)},r.prototype.getHeaderRowRange=function(){return t.prototype.traceCall.call(this,\\"getHeaderRowRange\\"),new d(this.instance.getHeaderRowRange(),this.engine)},r.prototype.getRange=function(){return t.prototype.traceCall.call(this,\\"getRange\\"),new d(this.instance.getRange(),this.engine)},r.prototype.getTotalRowRange=function(){return t.prototype.traceCall.call(this,\\"getTotalRowRange\\"),new d(this.instance.getTotalRowRange(),this.engine)},r.prototype.reapplyFilters=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"reapplyFilters\\"),this.instance.reapplyFilters(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.resize=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"resize\\"),i=n.unwrap(r),this.instance.resize(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.addRow=function(r,n){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"addRow\\"),i=Array.isArray(n)?[n]:n,this.instance.rows.add(r,i),[4,this.sync(e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.addRows=function(r,n){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(i){switch(i.label){case 0:return t.prototype.traceCall.call(this,\\"addRows\\"),this.instance.rows.add(r,n),[4,this.sync(e.Write)];case 1:return i.sent(),[2]}}))}))},r.prototype.addColumn=function(e,r,n){t.prototype.traceCall.call(this,\\"addColumn\\");var i=Array.isArray(r)?r.map((function(t){return[t]})):r,a=this.instance.columns.add(e,i,n);return new b(a,this.engine)},r.prototype.deleteRowsAt=function(r,n){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(i){switch(i.label){case 0:if(t.prototype.traceCall.call(this,\\"deleteRowsAt\\"),n)for(;n>0;)this.instance.rows.getItemAt(r).delete(),n--;else this.instance.rows.getItemAt(r).delete();return[4,this.sync(e.Write)];case 1:return i.sent(),[2]}}))}))},r.prototype.getColumnById=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnById\\"),i=n.unwrap(r),a=this.instance.columns.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new b(a,this.engine)]}}))}))},r.prototype.getColumnByName=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnByName\\"),i=n.unwrap(r),a=this.instance.columns.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new b(a,this.engine)]}}))}))},r.prototype.getRowCount=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getRowCount\\"),r=this.instance.rows.getCount(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.value]}}))}))},r}(n);t.Table=v;var b=function(t){function r(e,r){var n=t.call(this,\\"TableColumn\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFilter=function(){t.prototype.traceCall.call(this,\\"getFilter\\");var e=this.instance.filter;return new _t(e,this.engine)},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIndex\\"),this.instance.load(\\"index\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.index]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getRangeBetweenHeaderAndTotal=function(){return t.prototype.traceCall.call(this,\\"getRangeBetweenHeaderAndTotal\\"),new d(this.instance.getDataBodyRange(),this.engine)},r.prototype.getHeaderRowRange=function(){return t.prototype.traceCall.call(this,\\"getHeaderRowRange\\"),new d(this.instance.getHeaderRowRange(),this.engine)},r.prototype.getRange=function(){return t.prototype.traceCall.call(this,\\"getRange\\"),new d(this.instance.getRange(),this.engine)},r.prototype.getTotalRowRange=function(){return t.prototype.traceCall.call(this,\\"getTotalRowRange\\"),new d(this.instance.getTotalRowRange(),this.engine)},r}(n);t.TableColumn=b;var P=function(t){function r(e,r){var n=t.call(this,\\"DataValidation\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getErrorAlert=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getErrorAlert\\"),this.instance.load(\\"errorAlert\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.errorAlert]}}))}))},r.prototype.setErrorAlert=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setErrorAlert\\"),this.instance.errorAlert=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIgnoreBlanks=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIgnoreBlanks\\"),this.instance.load(\\"ignoreBlanks\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.ignoreBlanks]}}))}))},r.prototype.setIgnoreBlanks=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIgnoreBlanks\\"),this.instance.ignoreBlanks=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrompt=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPrompt\\"),this.instance.load(\\"prompt\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.prompt]}}))}))},r.prototype.setPrompt=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPrompt\\"),this.instance.prompt=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRule\\"),this.instance.load(\\"rule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rule]}}))}))},r.prototype.setRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRule\\"),this.instance.rule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.getValid=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValid\\"),this.instance.load(\\"valid\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.valid]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getInvalidCells=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getInvalidCells\\"),r=this.instance.getInvalidCellsOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new f(r,this.engine)]}}))}))},r}(n);t.DataValidation=P;var x=function(t){function r(e,r){var n=t.call(this,\\"RemoveDuplicatesResult\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getRemoved=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRemoved\\"),this.instance.load(\\"removed\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.removed]}}))}))},r.prototype.getUniqueRemaining=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUniqueRemaining\\"),this.instance.load(\\"uniqueRemaining\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.uniqueRemaining]}}))}))},r}(n);t.RemoveDuplicatesResult=x;var S=function(t){function r(e,r){var n=t.call(this,\\"RangeFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getRangeBorderTintAndShade=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRangeBorderTintAndShade\\"),this.instance.borders.load(\\"tintAndShade\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.borders.tintAndShade]}}))}))},r.prototype.setRangeBorderTintAndShade=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRangeBorderTintAndShade\\"),this.instance.borders.tintAndShade=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBorders=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getBorders\\"),this.instance.borders.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.borders.items.map((function(t){return new E(t,r.engine)}))]}}))}))},r.prototype.getRangeBorder=function(e){t.prototype.traceCall.call(this,\\"getRangeBorder\\");var r=n.unwrap(e),i=this.instance.borders.getItem(r);return new E(i,this.engine)},r.prototype.getAutoIndent=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoIndent\\"),this.instance.load(\\"autoIndent\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoIndent]}}))}))},r.prototype.setAutoIndent=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoIndent\\"),this.instance.autoIndent=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColumnWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnWidth\\"),this.instance.load(\\"columnWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.columnWidth]}}))}))},r.prototype.setColumnWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColumnWidth\\"),this.instance.columnWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new R(e,this.engine)},r.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new F(e,this.engine)},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIndentLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIndentLevel\\"),this.instance.load(\\"indentLevel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.indentLevel]}}))}))},r.prototype.setIndentLevel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIndentLevel\\"),this.instance.indentLevel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getProtection=function(){t.prototype.traceCall.call(this,\\"getProtection\\");var e=this.instance.protection;return new T(e,this.engine)},r.prototype.getReadingOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadingOrder\\"),this.instance.load(\\"readingOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readingOrder]}}))}))},r.prototype.setReadingOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setReadingOrder\\"),this.instance.readingOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRowHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRowHeight\\"),this.instance.load(\\"rowHeight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rowHeight]}}))}))},r.prototype.setRowHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRowHeight\\"),this.instance.rowHeight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShrinkToFit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShrinkToFit\\"),this.instance.load(\\"shrinkToFit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.shrinkToFit]}}))}))},r.prototype.setShrinkToFit=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShrinkToFit\\"),this.instance.shrinkToFit=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUseStandardHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUseStandardHeight\\"),this.instance.load(\\"useStandardHeight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.useStandardHeight]}}))}))},r.prototype.setUseStandardHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUseStandardHeight\\"),this.instance.useStandardHeight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUseStandardWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUseStandardWidth\\"),this.instance.load(\\"useStandardWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.useStandardWidth]}}))}))},r.prototype.setUseStandardWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUseStandardWidth\\"),this.instance.useStandardWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWrapText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWrapText\\"),this.instance.load(\\"wrapText\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.wrapText]}}))}))},r.prototype.setWrapText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWrapText\\"),this.instance.wrapText=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.adjustIndent=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"adjustIndent\\"),i=n.unwrap(r),this.instance.adjustIndent(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.autofitColumns=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"autofitColumns\\"),this.instance.autofitColumns(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.autofitRows=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"autofitRows\\"),this.instance.autofitRows(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.RangeFormat=S;var T=function(t){function r(e,r){var n=t.call(this,\\"FormatProtection\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormulaHidden=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulaHidden\\"),this.instance.load(\\"formulaHidden\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulaHidden]}}))}))},r.prototype.setFormulaHidden=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulaHidden\\"),this.instance.formulaHidden=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLocked=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLocked\\"),this.instance.load(\\"locked\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.locked]}}))}))},r.prototype.setLocked=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLocked\\"),this.instance.locked=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.FormatProtection=T;var R=function(t){function r(e,r){var n=t.call(this,\\"RangeFill\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPattern=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPattern\\"),this.instance.load(\\"pattern\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.pattern]}}))}))},r.prototype.setPattern=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPattern\\"),this.instance.pattern=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPatternColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPatternColor\\"),this.instance.load(\\"patternColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.patternColor]}}))}))},r.prototype.setPatternColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPatternColor\\"),this.instance.patternColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPatternTintAndShade=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPatternTintAndShade\\"),this.instance.load(\\"patternTintAndShade\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.patternTintAndShade]}}))}))},r.prototype.setPatternTintAndShade=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPatternTintAndShade\\"),this.instance.patternTintAndShade=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTintAndShade=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTintAndShade\\"),this.instance.load(\\"tintAndShade\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tintAndShade]}}))}))},r.prototype.setTintAndShade=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTintAndShade\\"),this.instance.tintAndShade=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.RangeFill=R;var E=function(t){function r(e,r){var n=t.call(this,\\"RangeBorder\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSideIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSideIndex\\"),this.instance.load(\\"sideIndex\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.sideIndex]}}))}))},r.prototype.getStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTintAndShade=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTintAndShade\\"),this.instance.load(\\"tintAndShade\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tintAndShade]}}))}))},r.prototype.setTintAndShade=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTintAndShade\\"),this.instance.tintAndShade=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWeight\\"),this.instance.load(\\"weight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.weight]}}))}))},r.prototype.setWeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWeight\\"),this.instance.weight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.RangeBorder=E;var F=function(t){function r(e,r){var n=t.call(this,\\"RangeFont\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBold=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBold\\"),this.instance.load(\\"bold\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bold]}}))}))},r.prototype.setBold=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBold\\"),this.instance.bold=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getItalic=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getItalic\\"),this.instance.load(\\"italic\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.italic]}}))}))},r.prototype.setItalic=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setItalic\\"),this.instance.italic=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSize\\"),this.instance.load(\\"size\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.size]}}))}))},r.prototype.setSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSize\\"),this.instance.size=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStrikethrough=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStrikethrough\\"),this.instance.load(\\"strikethrough\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.strikethrough]}}))}))},r.prototype.setStrikethrough=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStrikethrough\\"),this.instance.strikethrough=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSubscript=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSubscript\\"),this.instance.load(\\"subscript\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.subscript]}}))}))},r.prototype.setSubscript=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSubscript\\"),this.instance.subscript=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSuperscript=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSuperscript\\"),this.instance.load(\\"superscript\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.superscript]}}))}))},r.prototype.setSuperscript=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSuperscript\\"),this.instance.superscript=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTintAndShade=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTintAndShade\\"),this.instance.load(\\"tintAndShade\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tintAndShade]}}))}))},r.prototype.setTintAndShade=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTintAndShade\\"),this.instance.tintAndShade=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUnderline=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUnderline\\"),this.instance.load(\\"underline\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.underline]}}))}))},r.prototype.setUnderline=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUnderline\\"),this.instance.underline=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.RangeFont=F;var A=function(t){function r(e,r){var n=t.call(this,\\"Chart\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getSeries=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getSeries\\"),this.instance.series.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.series.items.map((function(t){return new k(t,r.engine)}))]}}))}))},r.prototype.addChartSeries=function(e,r){t.prototype.traceCall.call(this,\\"addChartSeries\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.series.add(i,a);return new k(o,this.engine)},r.prototype.getAxes=function(){t.prototype.traceCall.call(this,\\"getAxes\\");var e=this.instance.axes;return new I(e,this.engine)},r.prototype.getCategoryLabelLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCategoryLabelLevel\\"),this.instance.load(\\"categoryLabelLevel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.categoryLabelLevel]}}))}))},r.prototype.setCategoryLabelLevel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCategoryLabelLevel\\"),this.instance.categoryLabelLevel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getChartType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getChartType\\"),this.instance.load(\\"chartType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.chartType]}}))}))},r.prototype.setChartType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setChartType\\"),this.instance.chartType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getDataLabels=function(){t.prototype.traceCall.call(this,\\"getDataLabels\\");var e=this.instance.dataLabels;return new H(e,this.engine)},r.prototype.getDisplayBlanksAs=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDisplayBlanksAs\\"),this.instance.load(\\"displayBlanksAs\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.displayBlanksAs]}}))}))},r.prototype.setDisplayBlanksAs=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setDisplayBlanksAs\\"),this.instance.displayBlanksAs=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new D(e,this.engine)},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.setHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHeight\\"),this.instance.height=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLegend=function(){t.prototype.traceCall.call(this,\\"getLegend\\");var e=this.instance.legend;return new K(e,this.engine)},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPivotOptions=function(){t.prototype.traceCall.call(this,\\"getPivotOptions\\");var e=this.instance.pivotOptions;return new W(e,this.engine)},r.prototype.getPlotArea=function(){t.prototype.traceCall.call(this,\\"getPlotArea\\");var e=this.instance.plotArea;return new pt(e,this.engine)},r.prototype.getPlotBy=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPlotBy\\"),this.instance.load(\\"plotBy\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.plotBy]}}))}))},r.prototype.setPlotBy=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPlotBy\\"),this.instance.plotBy=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPlotVisibleOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPlotVisibleOnly\\"),this.instance.load(\\"plotVisibleOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.plotVisibleOnly]}}))}))},r.prototype.setPlotVisibleOnly=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPlotVisibleOnly\\"),this.instance.plotVisibleOnly=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSeriesNameLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSeriesNameLevel\\"),this.instance.load(\\"seriesNameLevel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.seriesNameLevel]}}))}))},r.prototype.setSeriesNameLevel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSeriesNameLevel\\"),this.instance.seriesNameLevel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowAllFieldButtons=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowAllFieldButtons\\"),this.instance.load(\\"showAllFieldButtons\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showAllFieldButtons]}}))}))},r.prototype.setShowAllFieldButtons=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowAllFieldButtons\\"),this.instance.showAllFieldButtons=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowDataLabelsOverMaximum=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowDataLabelsOverMaximum\\"),this.instance.load(\\"showDataLabelsOverMaximum\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showDataLabelsOverMaximum]}}))}))},r.prototype.setShowDataLabelsOverMaximum=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowDataLabelsOverMaximum\\"),this.instance.showDataLabelsOverMaximum=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTitle=function(){t.prototype.traceCall.call(this,\\"getTitle\\");var e=this.instance.title;return new $(e,this.engine)},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWidth\\"),this.instance.width=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWorksheet=function(){t.prototype.traceCall.call(this,\\"getWorksheet\\");var e=this.instance.worksheet;return new h(e,this.engine)},r.prototype.activate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"activate\\"),this.instance.activate(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getImage=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c,l;return __generator(this,(function(u){switch(u.label){case 0:return t.prototype.traceCall.call(this,\\"getImage\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),l=this.instance.getImage(o,s,c),[4,t.prototype.sync.call(this,e.Read)];case 1:return u.sent(),[2,l.value]}}))}))},r.prototype.setData=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"setData\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.setData(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r.prototype.setPosition=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.setPosition(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r}(n);t.Chart=A;var W=function(t){function r(e,r){var n=t.call(this,\\"ChartPivotOptions\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getShowAxisFieldButtons=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowAxisFieldButtons\\"),this.instance.load(\\"showAxisFieldButtons\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showAxisFieldButtons]}}))}))},r.prototype.setShowAxisFieldButtons=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowAxisFieldButtons\\"),this.instance.showAxisFieldButtons=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowLegendFieldButtons=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowLegendFieldButtons\\"),this.instance.load(\\"showLegendFieldButtons\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showLegendFieldButtons]}}))}))},r.prototype.setShowLegendFieldButtons=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowLegendFieldButtons\\"),this.instance.showLegendFieldButtons=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowReportFilterFieldButtons=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowReportFilterFieldButtons\\"),this.instance.load(\\"showReportFilterFieldButtons\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showReportFilterFieldButtons]}}))}))},r.prototype.setShowReportFilterFieldButtons=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowReportFilterFieldButtons\\"),this.instance.showReportFilterFieldButtons=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowValueFieldButtons=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowValueFieldButtons\\"),this.instance.load(\\"showValueFieldButtons\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showValueFieldButtons]}}))}))},r.prototype.setShowValueFieldButtons=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowValueFieldButtons\\"),this.instance.showValueFieldButtons=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartPivotOptions=W;var D=function(t){function r(e,r){var n=t.call(this,\\"ChartAreaFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},r.prototype.getColorScheme=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColorScheme\\"),this.instance.load(\\"colorScheme\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.colorScheme]}}))}))},r.prototype.setColorScheme=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColorScheme\\"),this.instance.colorScheme=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},r.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},r.prototype.getRoundedCorners=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRoundedCorners\\"),this.instance.load(\\"roundedCorners\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.roundedCorners]}}))}))},r.prototype.setRoundedCorners=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRoundedCorners\\"),this.instance.roundedCorners=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartAreaFormat=D;var k=function(t){function r(e,r){var n=t.call(this,\\"ChartSeries\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getPoints=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPoints\\"),this.instance.points.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.points.items.map((function(t){return new B(t,r.engine)}))]}}))}))},r.prototype.getTrendlines=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTrendlines\\"),this.instance.trendlines.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.trendlines.items.map((function(t){return new ct(t,r.engine)}))]}}))}))},r.prototype.addChartTrendline=function(e){t.prototype.traceCall.call(this,\\"addChartTrendline\\");var r=n.unwrap(e),i=this.instance.trendlines.add(r);return new ct(i,this.engine)},r.prototype.getChartTrendline=function(e){t.prototype.traceCall.call(this,\\"getChartTrendline\\");var r=n.unwrap(e),i=this.instance.trendlines.getItem(r);return new ct(i,this.engine)},r.prototype.getAxisGroup=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAxisGroup\\"),this.instance.load(\\"axisGroup\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.axisGroup]}}))}))},r.prototype.setAxisGroup=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAxisGroup\\"),this.instance.axisGroup=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBinOptions=function(){t.prototype.traceCall.call(this,\\"getBinOptions\\");var e=this.instance.binOptions;return new it(e,this.engine)},r.prototype.getBoxwhiskerOptions=function(){t.prototype.traceCall.call(this,\\"getBoxwhiskerOptions\\");var e=this.instance.boxwhiskerOptions;return new at(e,this.engine)},r.prototype.getBubbleScale=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBubbleScale\\"),this.instance.load(\\"bubbleScale\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bubbleScale]}}))}))},r.prototype.setBubbleScale=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBubbleScale\\"),this.instance.bubbleScale=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getChartType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getChartType\\"),this.instance.load(\\"chartType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.chartType]}}))}))},r.prototype.setChartType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setChartType\\"),this.instance.chartType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getDataLabels=function(){t.prototype.traceCall.call(this,\\"getDataLabels\\");var e=this.instance.dataLabels;return new H(e,this.engine)},r.prototype.getDoughnutHoleSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDoughnutHoleSize\\"),this.instance.load(\\"doughnutHoleSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.doughnutHoleSize]}}))}))},r.prototype.setDoughnutHoleSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setDoughnutHoleSize\\"),this.instance.doughnutHoleSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getExplosion=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getExplosion\\"),this.instance.load(\\"explosion\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.explosion]}}))}))},r.prototype.setExplosion=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setExplosion\\"),this.instance.explosion=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFiltered=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFiltered\\"),this.instance.load(\\"filtered\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.filtered]}}))}))},r.prototype.setFiltered=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFiltered\\"),this.instance.filtered=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFirstSliceAngle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFirstSliceAngle\\"),this.instance.load(\\"firstSliceAngle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.firstSliceAngle]}}))}))},r.prototype.setFirstSliceAngle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFirstSliceAngle\\"),this.instance.firstSliceAngle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new O(e,this.engine)},r.prototype.getGapWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGapWidth\\"),this.instance.load(\\"gapWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gapWidth]}}))}))},r.prototype.setGapWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGapWidth\\"),this.instance.gapWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMaximumColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMaximumColor\\"),this.instance.load(\\"gradientMaximumColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMaximumColor]}}))}))},r.prototype.setGradientMaximumColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMaximumColor\\"),this.instance.gradientMaximumColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMaximumType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMaximumType\\"),this.instance.load(\\"gradientMaximumType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMaximumType]}}))}))},r.prototype.setGradientMaximumType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMaximumType\\"),this.instance.gradientMaximumType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMaximumValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMaximumValue\\"),this.instance.load(\\"gradientMaximumValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMaximumValue]}}))}))},r.prototype.setGradientMaximumValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMaximumValue\\"),this.instance.gradientMaximumValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMidpointColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMidpointColor\\"),this.instance.load(\\"gradientMidpointColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMidpointColor]}}))}))},r.prototype.setGradientMidpointColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMidpointColor\\"),this.instance.gradientMidpointColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMidpointType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMidpointType\\"),this.instance.load(\\"gradientMidpointType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMidpointType]}}))}))},r.prototype.setGradientMidpointType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMidpointType\\"),this.instance.gradientMidpointType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMidpointValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMidpointValue\\"),this.instance.load(\\"gradientMidpointValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMidpointValue]}}))}))},r.prototype.setGradientMidpointValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMidpointValue\\"),this.instance.gradientMidpointValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMinimumColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMinimumColor\\"),this.instance.load(\\"gradientMinimumColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMinimumColor]}}))}))},r.prototype.setGradientMinimumColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMinimumColor\\"),this.instance.gradientMinimumColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMinimumType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMinimumType\\"),this.instance.load(\\"gradientMinimumType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMinimumType]}}))}))},r.prototype.setGradientMinimumType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMinimumType\\"),this.instance.gradientMinimumType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientMinimumValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientMinimumValue\\"),this.instance.load(\\"gradientMinimumValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientMinimumValue]}}))}))},r.prototype.setGradientMinimumValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientMinimumValue\\"),this.instance.gradientMinimumValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientStyle\\"),this.instance.load(\\"gradientStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientStyle]}}))}))},r.prototype.setGradientStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientStyle\\"),this.instance.gradientStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHasDataLabels=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHasDataLabels\\"),this.instance.load(\\"hasDataLabels\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hasDataLabels]}}))}))},r.prototype.setHasDataLabels=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHasDataLabels\\"),this.instance.hasDataLabels=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getInvertColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInvertColor\\"),this.instance.load(\\"invertColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.invertColor]}}))}))},r.prototype.setInvertColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInvertColor\\"),this.instance.invertColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getInvertIfNegative=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInvertIfNegative\\"),this.instance.load(\\"invertIfNegative\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.invertIfNegative]}}))}))},r.prototype.setInvertIfNegative=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInvertIfNegative\\"),this.instance.invertIfNegative=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMapOptions=function(){t.prototype.traceCall.call(this,\\"getMapOptions\\");var e=this.instance.mapOptions;return new Z(e,this.engine)},r.prototype.getMarkerBackgroundColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerBackgroundColor\\"),this.instance.load(\\"markerBackgroundColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerBackgroundColor]}}))}))},r.prototype.setMarkerBackgroundColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerBackgroundColor\\"),this.instance.markerBackgroundColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerForegroundColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerForegroundColor\\"),this.instance.load(\\"markerForegroundColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerForegroundColor]}}))}))},r.prototype.setMarkerForegroundColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerForegroundColor\\"),this.instance.markerForegroundColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerSize\\"),this.instance.load(\\"markerSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerSize]}}))}))},r.prototype.setMarkerSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerSize\\"),this.instance.markerSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerStyle\\"),this.instance.load(\\"markerStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerStyle]}}))}))},r.prototype.setMarkerStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerStyle\\"),this.instance.markerStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOverlap=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOverlap\\"),this.instance.load(\\"overlap\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.overlap]}}))}))},r.prototype.setOverlap=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOverlap\\"),this.instance.overlap=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getParentLabelStrategy=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getParentLabelStrategy\\"),this.instance.load(\\"parentLabelStrategy\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.parentLabelStrategy]}}))}))},r.prototype.setParentLabelStrategy=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setParentLabelStrategy\\"),this.instance.parentLabelStrategy=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPlotOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPlotOrder\\"),this.instance.load(\\"plotOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.plotOrder]}}))}))},r.prototype.setPlotOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPlotOrder\\"),this.instance.plotOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSecondPlotSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSecondPlotSize\\"),this.instance.load(\\"secondPlotSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.secondPlotSize]}}))}))},r.prototype.setSecondPlotSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSecondPlotSize\\"),this.instance.secondPlotSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowConnectorLines=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowConnectorLines\\"),this.instance.load(\\"showConnectorLines\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showConnectorLines]}}))}))},r.prototype.setShowConnectorLines=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowConnectorLines\\"),this.instance.showConnectorLines=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowLeaderLines=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowLeaderLines\\"),this.instance.load(\\"showLeaderLines\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showLeaderLines]}}))}))},r.prototype.setShowLeaderLines=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowLeaderLines\\"),this.instance.showLeaderLines=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowShadow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowShadow\\"),this.instance.load(\\"showShadow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showShadow]}}))}))},r.prototype.setShowShadow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowShadow\\"),this.instance.showShadow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSmooth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSmooth\\"),this.instance.load(\\"smooth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.smooth]}}))}))},r.prototype.setSmooth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSmooth\\"),this.instance.smooth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSplitType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSplitType\\"),this.instance.load(\\"splitType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.splitType]}}))}))},r.prototype.setSplitType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSplitType\\"),this.instance.splitType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSplitValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSplitValue\\"),this.instance.load(\\"splitValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.splitValue]}}))}))},r.prototype.setSplitValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSplitValue\\"),this.instance.splitValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVaryByCategories=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVaryByCategories\\"),this.instance.load(\\"varyByCategories\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.varyByCategories]}}))}))},r.prototype.setVaryByCategories=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVaryByCategories\\"),this.instance.varyByCategories=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getXErrorBars=function(){t.prototype.traceCall.call(this,\\"getXErrorBars\\");var e=this.instance.xErrorBars;return new U(e,this.engine)},r.prototype.getYErrorBars=function(){t.prototype.traceCall.call(this,\\"getYErrorBars\\");var e=this.instance.yErrorBars;return new U(e,this.engine)},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getDimensionValues=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getDimensionValues\\"),i=n.unwrap(r),a=this.instance.getDimensionValues(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),[2,a.value]}}))}))},r.prototype.setBubbleSizes=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setBubbleSizes\\"),i=n.unwrap(r),this.instance.setBubbleSizes(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.setValues=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setValues\\"),i=n.unwrap(r),this.instance.setValues(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.setXAxisValues=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setXAxisValues\\"),i=n.unwrap(r),this.instance.setXAxisValues(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.ChartSeries=k;var O=function(t){function e(e,r){var n=t.call(this,\\"ChartSeriesFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getLine=function(){t.prototype.traceCall.call(this,\\"getLine\\");var e=this.instance.line;return new ot(e,this.engine)},e}(n);t.ChartSeriesFormat=O;var B=function(t){function r(e,r){var n=t.call(this,\\"ChartPoint\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getDataLabel=function(){t.prototype.traceCall.call(this,\\"getDataLabel\\");var e=this.instance.dataLabel;return new G(e,this.engine)},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new L(e,this.engine)},r.prototype.getHasDataLabel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHasDataLabel\\"),this.instance.load(\\"hasDataLabel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hasDataLabel]}}))}))},r.prototype.setHasDataLabel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHasDataLabel\\"),this.instance.hasDataLabel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerBackgroundColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerBackgroundColor\\"),this.instance.load(\\"markerBackgroundColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerBackgroundColor]}}))}))},r.prototype.setMarkerBackgroundColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerBackgroundColor\\"),this.instance.markerBackgroundColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerForegroundColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerForegroundColor\\"),this.instance.load(\\"markerForegroundColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerForegroundColor]}}))}))},r.prototype.setMarkerForegroundColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerForegroundColor\\"),this.instance.markerForegroundColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerSize\\"),this.instance.load(\\"markerSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerSize]}}))}))},r.prototype.setMarkerSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerSize\\"),this.instance.markerSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMarkerStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMarkerStyle\\"),this.instance.load(\\"markerStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.markerStyle]}}))}))},r.prototype.setMarkerStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMarkerStyle\\"),this.instance.markerStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValue\\"),this.instance.load(\\"value\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.value]}}))}))},r}(n);t.ChartPoint=B;var L=function(t){function e(e,r){var n=t.call(this,\\"ChartPointFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e}(n);t.ChartPointFormat=L;var I=function(t){function e(e,r){var n=t.call(this,\\"ChartAxes\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getCategoryAxis=function(){t.prototype.traceCall.call(this,\\"getCategoryAxis\\");var e=this.instance.categoryAxis;return new N(e,this.engine)},e.prototype.getSeriesAxis=function(){t.prototype.traceCall.call(this,\\"getSeriesAxis\\");var e=this.instance.seriesAxis;return new N(e,this.engine)},e.prototype.getValueAxis=function(){t.prototype.traceCall.call(this,\\"getValueAxis\\");var e=this.instance.valueAxis;return new N(e,this.engine)},e.prototype.getChartAxis=function(e,r){t.prototype.traceCall.call(this,\\"getChartAxis\\");var i=n.unwrap(e),a=n.unwrap(r);return new N(this.instance.getItem(i,a),this.engine)},e}(n);t.ChartAxes=I;var N=function(t){function r(e,r){var n=t.call(this,\\"ChartAxis\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAlignment\\"),this.instance.load(\\"alignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.alignment]}}))}))},r.prototype.setAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAlignment\\"),this.instance.alignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getAxisGroup=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAxisGroup\\"),this.instance.load(\\"axisGroup\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.axisGroup]}}))}))},r.prototype.getBaseTimeUnit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBaseTimeUnit\\"),this.instance.load(\\"baseTimeUnit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.baseTimeUnit]}}))}))},r.prototype.setBaseTimeUnit=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBaseTimeUnit\\"),this.instance.baseTimeUnit=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCategoryType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCategoryType\\"),this.instance.load(\\"categoryType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.categoryType]}}))}))},r.prototype.setCategoryType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCategoryType\\"),this.instance.categoryType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCustomDisplayUnit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomDisplayUnit\\"),this.instance.load(\\"customDisplayUnit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.customDisplayUnit]}}))}))},r.prototype.getDisplayUnit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDisplayUnit\\"),this.instance.load(\\"displayUnit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.displayUnit]}}))}))},r.prototype.setDisplayUnit=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setDisplayUnit\\"),this.instance.displayUnit=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new M(e,this.engine)},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.getIsBetweenCategories=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsBetweenCategories\\"),this.instance.load(\\"isBetweenCategories\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isBetweenCategories]}}))}))},r.prototype.setIsBetweenCategories=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIsBetweenCategories\\"),this.instance.isBetweenCategories=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.getLinkNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkNumberFormat\\"),this.instance.load(\\"linkNumberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.linkNumberFormat]}}))}))},r.prototype.setLinkNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLinkNumberFormat\\"),this.instance.linkNumberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLogBase=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLogBase\\"),this.instance.load(\\"logBase\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.logBase]}}))}))},r.prototype.setLogBase=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLogBase\\"),this.instance.logBase=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMajorGridlines=function(){t.prototype.traceCall.call(this,\\"getMajorGridlines\\");var e=this.instance.majorGridlines;return new Q(e,this.engine)},r.prototype.getMajorTickMark=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMajorTickMark\\"),this.instance.load(\\"majorTickMark\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.majorTickMark]}}))}))},r.prototype.setMajorTickMark=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMajorTickMark\\"),this.instance.majorTickMark=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMajorTimeUnitScale=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMajorTimeUnitScale\\"),this.instance.load(\\"majorTimeUnitScale\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.majorTimeUnitScale]}}))}))},r.prototype.setMajorTimeUnitScale=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMajorTimeUnitScale\\"),this.instance.majorTimeUnitScale=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMajorUnit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMajorUnit\\"),this.instance.load(\\"majorUnit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.majorUnit]}}))}))},r.prototype.setMajorUnit=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMajorUnit\\"),this.instance.majorUnit=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMaximum=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMaximum\\"),this.instance.load(\\"maximum\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.maximum]}}))}))},r.prototype.setMaximum=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMaximum\\"),this.instance.maximum=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMinimum=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMinimum\\"),this.instance.load(\\"minimum\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.minimum]}}))}))},r.prototype.setMinimum=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMinimum\\"),this.instance.minimum=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMinorGridlines=function(){t.prototype.traceCall.call(this,\\"getMinorGridlines\\");var e=this.instance.minorGridlines;return new Q(e,this.engine)},r.prototype.getMinorTickMark=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMinorTickMark\\"),this.instance.load(\\"minorTickMark\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.minorTickMark]}}))}))},r.prototype.setMinorTickMark=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMinorTickMark\\"),this.instance.minorTickMark=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMinorTimeUnitScale=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMinorTimeUnitScale\\"),this.instance.load(\\"minorTimeUnitScale\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.minorTimeUnitScale]}}))}))},r.prototype.setMinorTimeUnitScale=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMinorTimeUnitScale\\"),this.instance.minorTimeUnitScale=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMinorUnit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMinorUnit\\"),this.instance.load(\\"minorUnit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.minorUnit]}}))}))},r.prototype.setMinorUnit=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMinorUnit\\"),this.instance.minorUnit=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMultiLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMultiLevel\\"),this.instance.load(\\"multiLevel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.multiLevel]}}))}))},r.prototype.setMultiLevel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMultiLevel\\"),this.instance.multiLevel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOffset=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOffset\\"),this.instance.load(\\"offset\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.offset]}}))}))},r.prototype.setOffset=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOffset\\"),this.instance.offset=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPositionAt=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPositionAt\\"),this.instance.load(\\"positionAt\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.positionAt]}}))}))},r.prototype.getReversePlotOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReversePlotOrder\\"),this.instance.load(\\"reversePlotOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.reversePlotOrder]}}))}))},r.prototype.setReversePlotOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setReversePlotOrder\\"),this.instance.reversePlotOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getScaleType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getScaleType\\"),this.instance.load(\\"scaleType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.scaleType]}}))}))},r.prototype.setScaleType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setScaleType\\"),this.instance.scaleType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowDisplayUnitLabel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowDisplayUnitLabel\\"),this.instance.load(\\"showDisplayUnitLabel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showDisplayUnitLabel]}}))}))},r.prototype.setShowDisplayUnitLabel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowDisplayUnitLabel\\"),this.instance.showDisplayUnitLabel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTickLabelPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTickLabelPosition\\"),this.instance.load(\\"tickLabelPosition\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tickLabelPosition]}}))}))},r.prototype.setTickLabelPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTickLabelPosition\\"),this.instance.tickLabelPosition=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTickLabelSpacing=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTickLabelSpacing\\"),this.instance.load(\\"tickLabelSpacing\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tickLabelSpacing]}}))}))},r.prototype.setTickLabelSpacing=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTickLabelSpacing\\"),this.instance.tickLabelSpacing=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTickMarkSpacing=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTickMarkSpacing\\"),this.instance.load(\\"tickMarkSpacing\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.tickMarkSpacing]}}))}))},r.prototype.setTickMarkSpacing=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTickMarkSpacing\\"),this.instance.tickMarkSpacing=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTitle=function(){t.prototype.traceCall.call(this,\\"getTitle\\");var e=this.instance.title;return new V(e,this.engine)},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setCategoryNames=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setCategoryNames\\"),i=n.unwrap(r),this.instance.setCategoryNames(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.setCustomDisplayUnit=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setCustomDisplayUnit\\"),i=n.unwrap(r),this.instance.setCustomDisplayUnit(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.setPositionAt=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setPositionAt\\"),i=n.unwrap(r),this.instance.setPositionAt(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.ChartAxis=N;var M=function(t){function e(e,r){var n=t.call(this,\\"ChartAxisFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e.prototype.getLine=function(){t.prototype.traceCall.call(this,\\"getLine\\");var e=this.instance.line;return new ot(e,this.engine)},e}(n);t.ChartAxisFormat=M;var V=function(t){function r(e,r){var n=t.call(this,\\"ChartAxisTitle\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new z(e,this.engine)},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.setText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setText\\"),this.instance.text=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),i=n.unwrap(r),this.instance.setFormula(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.ChartAxisTitle=V;var z=function(t){function e(e,r){var n=t.call(this,\\"ChartAxisTitleFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e}(n);t.ChartAxisTitleFormat=z;var H=function(t){function r(e,r){var n=t.call(this,\\"ChartDataLabels\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAutoText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoText\\"),this.instance.load(\\"autoText\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoText]}}))}))},r.prototype.setAutoText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoText\\"),this.instance.autoText=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new j(e,this.engine)},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLinkNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkNumberFormat\\"),this.instance.load(\\"linkNumberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.linkNumberFormat]}}))}))},r.prototype.setLinkNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLinkNumberFormat\\"),this.instance.linkNumberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSeparator\\"),this.instance.load(\\"separator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.separator]}}))}))},r.prototype.setSeparator=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSeparator\\"),this.instance.separator=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowBubbleSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowBubbleSize\\"),this.instance.load(\\"showBubbleSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showBubbleSize]}}))}))},r.prototype.setShowBubbleSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowBubbleSize\\"),this.instance.showBubbleSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowCategoryName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowCategoryName\\"),this.instance.load(\\"showCategoryName\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showCategoryName]}}))}))},r.prototype.setShowCategoryName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowCategoryName\\"),this.instance.showCategoryName=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowLegendKey=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowLegendKey\\"),this.instance.load(\\"showLegendKey\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showLegendKey]}}))}))},r.prototype.setShowLegendKey=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowLegendKey\\"),this.instance.showLegendKey=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowPercentage=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowPercentage\\"),this.instance.load(\\"showPercentage\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showPercentage]}}))}))},r.prototype.setShowPercentage=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowPercentage\\"),this.instance.showPercentage=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowSeriesName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowSeriesName\\"),this.instance.load(\\"showSeriesName\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showSeriesName]}}))}))},r.prototype.setShowSeriesName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowSeriesName\\"),this.instance.showSeriesName=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowValue\\"),this.instance.load(\\"showValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showValue]}}))}))},r.prototype.setShowValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowValue\\"),this.instance.showValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartDataLabels=H;var G=function(t){function r(e,r){var n=t.call(this,\\"ChartDataLabel\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAutoText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoText\\"),this.instance.load(\\"autoText\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoText]}}))}))},r.prototype.setAutoText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoText\\"),this.instance.autoText=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new j(e,this.engine)},r.prototype.getFormula=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormula\\"),this.instance.load(\\"formula\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formula]}}))}))},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),this.instance.formula=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLinkNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkNumberFormat\\"),this.instance.load(\\"linkNumberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.linkNumberFormat]}}))}))},r.prototype.setLinkNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLinkNumberFormat\\"),this.instance.linkNumberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSeparator\\"),this.instance.load(\\"separator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.separator]}}))}))},r.prototype.setSeparator=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSeparator\\"),this.instance.separator=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowBubbleSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowBubbleSize\\"),this.instance.load(\\"showBubbleSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showBubbleSize]}}))}))},r.prototype.setShowBubbleSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowBubbleSize\\"),this.instance.showBubbleSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowCategoryName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowCategoryName\\"),this.instance.load(\\"showCategoryName\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showCategoryName]}}))}))},r.prototype.setShowCategoryName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowCategoryName\\"),this.instance.showCategoryName=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowLegendKey=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowLegendKey\\"),this.instance.load(\\"showLegendKey\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showLegendKey]}}))}))},r.prototype.setShowLegendKey=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowLegendKey\\"),this.instance.showLegendKey=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowPercentage=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowPercentage\\"),this.instance.load(\\"showPercentage\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showPercentage]}}))}))},r.prototype.setShowPercentage=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowPercentage\\"),this.instance.showPercentage=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowSeriesName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowSeriesName\\"),this.instance.load(\\"showSeriesName\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showSeriesName]}}))}))},r.prototype.setShowSeriesName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowSeriesName\\"),this.instance.showSeriesName=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowValue\\"),this.instance.load(\\"showValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showValue]}}))}))},r.prototype.setShowValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowValue\\"),this.instance.showValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.setText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setText\\"),this.instance.text=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r}(n);t.ChartDataLabel=G;var j=function(t){function e(e,r){var n=t.call(this,\\"ChartDataLabelFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e}(n);t.ChartDataLabelFormat=j;var U=function(t){function r(e,r){var n=t.call(this,\\"ChartErrorBars\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getEndStyleCap=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEndStyleCap\\"),this.instance.load(\\"endStyleCap\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.endStyleCap]}}))}))},r.prototype.setEndStyleCap=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEndStyleCap\\"),this.instance.endStyleCap=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new q(e,this.engine)},r.prototype.getInclude=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInclude\\"),this.instance.load(\\"include\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.include]}}))}))},r.prototype.setInclude=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInclude\\"),this.instance.include=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.setType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setType\\"),this.instance.type=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartErrorBars=U;var q=function(t){function e(e,r){var n=t.call(this,\\"ChartErrorBarsFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getLine=function(){t.prototype.traceCall.call(this,\\"getLine\\");var e=this.instance.line;return new ot(e,this.engine)},e}(n);t.ChartErrorBarsFormat=q;var Q=function(t){function r(e,r){var n=t.call(this,\\"ChartGridlines\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new X(e,this.engine)},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartGridlines=Q;var X=function(t){function e(e,r){var n=t.call(this,\\"ChartGridlinesFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getLine=function(){t.prototype.traceCall.call(this,\\"getLine\\");var e=this.instance.line;return new ot(e,this.engine)},e}(n);t.ChartGridlinesFormat=X;var K=function(t){function r(e,r){var n=t.call(this,\\"ChartLegend\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getLegendEntries=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getLegendEntries\\"),this.instance.legendEntries.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.legendEntries.items.map((function(t){return new Y(t,r.engine)}))]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new J(e,this.engine)},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.setHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHeight\\"),this.instance.height=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOverlay=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOverlay\\"),this.instance.load(\\"overlay\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.overlay]}}))}))},r.prototype.setOverlay=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOverlay\\"),this.instance.overlay=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowShadow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowShadow\\"),this.instance.load(\\"showShadow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showShadow]}}))}))},r.prototype.setShowShadow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowShadow\\"),this.instance.showShadow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWidth\\"),this.instance.width=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartLegend=K;var Y=function(t){function r(e,r){var n=t.call(this,\\"ChartLegendEntry\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.getIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIndex\\"),this.instance.load(\\"index\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.index]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r}(n);t.ChartLegendEntry=Y;var J=function(t){function e(e,r){var n=t.call(this,\\"ChartLegendFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e}(n);t.ChartLegendFormat=J;var Z=function(t){function r(e,r){var n=t.call(this,\\"ChartMapOptions\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getLabelStrategy=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLabelStrategy\\"),this.instance.load(\\"labelStrategy\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.labelStrategy]}}))}))},r.prototype.setLabelStrategy=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLabelStrategy\\"),this.instance.labelStrategy=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLevel\\"),this.instance.load(\\"level\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.level]}}))}))},r.prototype.setLevel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLevel\\"),this.instance.level=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getProjectionType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getProjectionType\\"),this.instance.load(\\"projectionType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.projectionType]}}))}))},r.prototype.setProjectionType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setProjectionType\\"),this.instance.projectionType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartMapOptions=Z;var $=function(t){function r(e,r){var n=t.call(this,\\"ChartTitle\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new et(e,this.engine)},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOverlay=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOverlay\\"),this.instance.load(\\"overlay\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.overlay]}}))}))},r.prototype.setOverlay=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOverlay\\"),this.instance.overlay=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowShadow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowShadow\\"),this.instance.load(\\"showShadow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showShadow]}}))}))},r.prototype.setShowShadow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowShadow\\"),this.instance.showShadow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.setText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setText\\"),this.instance.text=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.getSubstring=function(e,r){t.prototype.traceCall.call(this,\\"getSubstring\\");var i=n.unwrap(e),a=n.unwrap(r);return new tt(this.instance.getSubstring(i,a),this.engine)},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),i=n.unwrap(r),this.instance.setFormula(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.ChartTitle=$;var tt=function(t){function e(e,r){var n=t.call(this,\\"ChartFormatString\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e}(n);t.ChartFormatString=tt;var et=function(t){function e(e,r){var n=t.call(this,\\"ChartTitleFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e}(n);t.ChartTitleFormat=et;var rt=function(t){function r(e,r){var n=t.call(this,\\"ChartFill\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.setSolidColor=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setSolidColor\\"),i=n.unwrap(r),this.instance.setSolidColor(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.ChartFill=rt;var nt=function(t){function r(e,r){var n=t.call(this,\\"ChartBorder\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLineStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLineStyle\\"),this.instance.load(\\"lineStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.lineStyle]}}))}))},r.prototype.setLineStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLineStyle\\"),this.instance.lineStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWeight\\"),this.instance.load(\\"weight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.weight]}}))}))},r.prototype.setWeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWeight\\"),this.instance.weight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.ChartBorder=nt;var it=function(t){function r(e,r){var n=t.call(this,\\"ChartBinOptions\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAllowOverflow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAllowOverflow\\"),this.instance.load(\\"allowOverflow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.allowOverflow]}}))}))},r.prototype.setAllowOverflow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAllowOverflow\\"),this.instance.allowOverflow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getAllowUnderflow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAllowUnderflow\\"),this.instance.load(\\"allowUnderflow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.allowUnderflow]}}))}))},r.prototype.setAllowUnderflow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAllowUnderflow\\"),this.instance.allowUnderflow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCount\\"),this.instance.load(\\"count\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.count]}}))}))},r.prototype.setCount=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCount\\"),this.instance.count=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOverflowValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOverflowValue\\"),this.instance.load(\\"overflowValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.overflowValue]}}))}))},r.prototype.setOverflowValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOverflowValue\\"),this.instance.overflowValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.setType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setType\\"),this.instance.type=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUnderflowValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUnderflowValue\\"),this.instance.load(\\"underflowValue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.underflowValue]}}))}))},r.prototype.setUnderflowValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUnderflowValue\\"),this.instance.underflowValue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWidth\\"),this.instance.width=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartBinOptions=it;var at=function(t){function r(e,r){var n=t.call(this,\\"ChartBoxwhiskerOptions\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getQuartileCalculation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getQuartileCalculation\\"),this.instance.load(\\"quartileCalculation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.quartileCalculation]}}))}))},r.prototype.setQuartileCalculation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setQuartileCalculation\\"),this.instance.quartileCalculation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowInnerPoints=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowInnerPoints\\"),this.instance.load(\\"showInnerPoints\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showInnerPoints]}}))}))},r.prototype.setShowInnerPoints=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowInnerPoints\\"),this.instance.showInnerPoints=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowMeanLine=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowMeanLine\\"),this.instance.load(\\"showMeanLine\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showMeanLine]}}))}))},r.prototype.setShowMeanLine=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowMeanLine\\"),this.instance.showMeanLine=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowMeanMarker=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowMeanMarker\\"),this.instance.load(\\"showMeanMarker\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showMeanMarker]}}))}))},r.prototype.setShowMeanMarker=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowMeanMarker\\"),this.instance.showMeanMarker=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowOutlierPoints=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowOutlierPoints\\"),this.instance.load(\\"showOutlierPoints\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showOutlierPoints]}}))}))},r.prototype.setShowOutlierPoints=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowOutlierPoints\\"),this.instance.showOutlierPoints=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartBoxwhiskerOptions=at;var ot=function(t){function r(e,r){var n=t.call(this,\\"ChartLineFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLineStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLineStyle\\"),this.instance.load(\\"lineStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.lineStyle]}}))}))},r.prototype.setLineStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLineStyle\\"),this.instance.lineStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWeight\\"),this.instance.load(\\"weight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.weight]}}))}))},r.prototype.setWeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWeight\\"),this.instance.weight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.ChartLineFormat=ot;var st=function(t){function r(e,r){var n=t.call(this,\\"ChartFont\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBold=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBold\\"),this.instance.load(\\"bold\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bold]}}))}))},r.prototype.setBold=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBold\\"),this.instance.bold=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getItalic=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getItalic\\"),this.instance.load(\\"italic\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.italic]}}))}))},r.prototype.setItalic=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setItalic\\"),this.instance.italic=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSize\\"),this.instance.load(\\"size\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.size]}}))}))},r.prototype.setSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSize\\"),this.instance.size=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUnderline=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUnderline\\"),this.instance.load(\\"underline\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.underline]}}))}))},r.prototype.setUnderline=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUnderline\\"),this.instance.underline=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartFont=st;var ct=function(t){function r(e,r){var n=t.call(this,\\"ChartTrendline\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBackwardPeriod=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBackwardPeriod\\"),this.instance.load(\\"backwardPeriod\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.backwardPeriod]}}))}))},r.prototype.setBackwardPeriod=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBackwardPeriod\\"),this.instance.backwardPeriod=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new lt(e,this.engine)},r.prototype.getForwardPeriod=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getForwardPeriod\\"),this.instance.load(\\"forwardPeriod\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.forwardPeriod]}}))}))},r.prototype.setForwardPeriod=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setForwardPeriod\\"),this.instance.forwardPeriod=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIntercept=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIntercept\\"),this.instance.load(\\"intercept\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.intercept]}}))}))},r.prototype.setIntercept=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIntercept\\"),this.instance.intercept=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLabel=function(){t.prototype.traceCall.call(this,\\"getLabel\\");var e=this.instance.label;return new ut(e,this.engine)},r.prototype.getMovingAveragePeriod=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMovingAveragePeriod\\"),this.instance.load(\\"movingAveragePeriod\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.movingAveragePeriod]}}))}))},r.prototype.setMovingAveragePeriod=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMovingAveragePeriod\\"),this.instance.movingAveragePeriod=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPolynomialOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPolynomialOrder\\"),this.instance.load(\\"polynomialOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.polynomialOrder]}}))}))},r.prototype.setPolynomialOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPolynomialOrder\\"),this.instance.polynomialOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowEquation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowEquation\\"),this.instance.load(\\"showEquation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showEquation]}}))}))},r.prototype.setShowEquation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowEquation\\"),this.instance.showEquation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowRSquared=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowRSquared\\"),this.instance.load(\\"showRSquared\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showRSquared]}}))}))},r.prototype.setShowRSquared=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowRSquared\\"),this.instance.showRSquared=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.setType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setType\\"),this.instance.type=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.ChartTrendline=ct;var lt=function(t){function e(e,r){var n=t.call(this,\\"ChartTrendlineFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getLine=function(){t.prototype.traceCall.call(this,\\"getLine\\");var e=this.instance.line;return new ot(e,this.engine)},e}(n);t.ChartTrendlineFormat=lt;var ut=function(t){function r(e,r){var n=t.call(this,\\"ChartTrendlineLabel\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAutoText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoText\\"),this.instance.load(\\"autoText\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoText]}}))}))},r.prototype.setAutoText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoText\\"),this.instance.autoText=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new ht(e,this.engine)},r.prototype.getFormula=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormula\\"),this.instance.load(\\"formula\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formula]}}))}))},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),this.instance.formula=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLinkNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLinkNumberFormat\\"),this.instance.load(\\"linkNumberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.linkNumberFormat]}}))}))},r.prototype.setLinkNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLinkNumberFormat\\"),this.instance.linkNumberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.setText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setText\\"),this.instance.text=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r}(n);t.ChartTrendlineLabel=ut;var ht=function(t){function e(e,r){var n=t.call(this,\\"ChartTrendlineLabelFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new st(e,this.engine)},e}(n);t.ChartTrendlineLabelFormat=ht;var pt=function(t){function r(e,r){var n=t.call(this,\\"ChartPlotArea\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new yt(e,this.engine)},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.setHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHeight\\"),this.instance.height=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getInsideHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInsideHeight\\"),this.instance.load(\\"insideHeight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.insideHeight]}}))}))},r.prototype.setInsideHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInsideHeight\\"),this.instance.insideHeight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getInsideLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInsideLeft\\"),this.instance.load(\\"insideLeft\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.insideLeft]}}))}))},r.prototype.setInsideLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInsideLeft\\"),this.instance.insideLeft=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getInsideTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInsideTop\\"),this.instance.load(\\"insideTop\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.insideTop]}}))}))},r.prototype.setInsideTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInsideTop\\"),this.instance.insideTop=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getInsideWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getInsideWidth\\"),this.instance.load(\\"insideWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.insideWidth]}}))}))},r.prototype.setInsideWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setInsideWidth\\"),this.instance.insideWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWidth\\"),this.instance.width=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ChartPlotArea=pt;var yt=function(t){function e(e,r){var n=t.call(this,\\"ChartPlotAreaFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getBorder=function(){t.prototype.traceCall.call(this,\\"getBorder\\");var e=this.instance.border;return new nt(e,this.engine)},e.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new rt(e,this.engine)},e}(n);t.ChartPlotAreaFormat=yt;var dt=function(t){function r(e,r){var n=t.call(this,\\"RangeSort\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.apply=function(r,i,a,o,s){return __awaiter(this,void 0,Promise,(function(){var c,l,u,h,p;return __generator(this,(function(y){switch(y.label){case 0:return t.prototype.traceCall.call(this,\\"apply\\"),c=n.unwrap(r),l=n.unwrap(i),u=n.unwrap(a),h=n.unwrap(o),p=n.unwrap(s),this.instance.apply(c,l,u,h,p),[4,t.prototype.sync.call(this,e.Write)];case 1:return y.sent(),[2]}}))}))},r}(n);t.RangeSort=dt;var ft=function(t){function r(e,r){var n=t.call(this,\\"TableSort\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFields=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFields\\"),this.instance.load(\\"fields\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.fields]}}))}))},r.prototype.getMatchCase=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMatchCase\\"),this.instance.load(\\"matchCase\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.matchCase]}}))}))},r.prototype.getMethod=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMethod\\"),this.instance.load(\\"method\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.method]}}))}))},r.prototype.apply=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"apply\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),this.instance.apply(o,s,c),[4,t.prototype.sync.call(this,e.Write)];case 1:return l.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.reapply=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"reapply\\"),this.instance.reapply(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.TableSort=ft;var _t=function(t){function r(e,r){var n=t.call(this,\\"Filter\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCriteria=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCriteria\\"),this.instance.load(\\"criteria\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.criteria]}}))}))},r.prototype.apply=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"apply\\"),i=n.unwrap(r),this.instance.apply(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyBottomItemsFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyBottomItemsFilter\\"),i=n.unwrap(r),this.instance.applyBottomItemsFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyBottomPercentFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyBottomPercentFilter\\"),i=n.unwrap(r),this.instance.applyBottomPercentFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyCellColorFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyCellColorFilter\\"),i=n.unwrap(r),this.instance.applyCellColorFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyCustomFilter=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"applyCustomFilter\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),this.instance.applyCustomFilter(o,s,c),[4,t.prototype.sync.call(this,e.Write)];case 1:return l.sent(),[2]}}))}))},r.prototype.applyDynamicFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyDynamicFilter\\"),i=n.unwrap(r),this.instance.applyDynamicFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyFontColorFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyFontColorFilter\\"),i=n.unwrap(r),this.instance.applyFontColorFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyIconFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyIconFilter\\"),i=n.unwrap(r),this.instance.applyIconFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyTopItemsFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyTopItemsFilter\\"),i=n.unwrap(r),this.instance.applyTopItemsFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyTopPercentFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyTopPercentFilter\\"),i=n.unwrap(r),this.instance.applyTopPercentFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.applyValuesFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyValuesFilter\\"),i=n.unwrap(r),this.instance.applyValuesFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.Filter=_t;var gt=function(t){function r(e,r){var n=t.call(this,\\"AutoFilter\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCriteria=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCriteria\\"),this.instance.load(\\"criteria\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.criteria]}}))}))},r.prototype.getEnabled=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEnabled\\"),this.instance.load(\\"enabled\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.enabled]}}))}))},r.prototype.getIsDataFiltered=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsDataFiltered\\"),this.instance.load(\\"isDataFiltered\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isDataFiltered]}}))}))},r.prototype.apply=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"apply\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),this.instance.apply(o,s,c),[4,t.prototype.sync.call(this,e.Write)];case 1:return l.sent(),[2]}}))}))},r.prototype.clearCriteria=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clearCriteria\\"),this.instance.clearCriteria(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getRange=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getRange\\"),r=this.instance.getRangeOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new d(r,this.engine)]}}))}))},r.prototype.reapply=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"reapply\\"),this.instance.reapply(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.remove=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"remove\\"),this.instance.remove(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.AutoFilter=gt;var mt=function(t){function r(e,r){var n=t.call(this,\\"CultureInfo\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getDatetimeFormat=function(){t.prototype.traceCall.call(this,\\"getDatetimeFormat\\");var e=this.instance.datetimeFormat;return new Ct(e,this.engine)},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.getNumberFormat=function(){t.prototype.traceCall.call(this,\\"getNumberFormat\\");var e=this.instance.numberFormat;return new wt(e,this.engine)},r}(n);t.CultureInfo=mt;var wt=function(t){function r(e,r){var n=t.call(this,\\"NumberFormatInfo\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getNumberDecimalSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberDecimalSeparator\\"),this.instance.load(\\"numberDecimalSeparator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberDecimalSeparator]}}))}))},r.prototype.getNumberGroupSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberGroupSeparator\\"),this.instance.load(\\"numberGroupSeparator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberGroupSeparator]}}))}))},r}(n);t.NumberFormatInfo=wt;var Ct=function(t){function r(e,r){var n=t.call(this,\\"DatetimeFormatInfo\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getDateSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDateSeparator\\"),this.instance.load(\\"dateSeparator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.dateSeparator]}}))}))},r.prototype.getLongDatePattern=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLongDatePattern\\"),this.instance.load(\\"longDatePattern\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.longDatePattern]}}))}))},r.prototype.getLongTimePattern=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLongTimePattern\\"),this.instance.load(\\"longTimePattern\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.longTimePattern]}}))}))},r.prototype.getShortDatePattern=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShortDatePattern\\"),this.instance.load(\\"shortDatePattern\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.shortDatePattern]}}))}))},r.prototype.getTimeSeparator=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTimeSeparator\\"),this.instance.load(\\"timeSeparator\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.timeSeparator]}}))}))},r}(n);t.DatetimeFormatInfo=Ct;var vt=function(t){function r(e,r){var n=t.call(this,\\"CustomXmlPart\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getNamespaceUri=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNamespaceUri\\"),this.instance.load(\\"namespaceUri\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.namespaceUri]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getXml=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getXml\\"),r=this.instance.getXml(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.value]}}))}))},r.prototype.setXml=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setXml\\"),i=n.unwrap(r),this.instance.setXml(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.CustomXmlPart=vt;var bt=function(t){function r(e,r){var n=t.call(this,\\"PivotTable\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColumnHierarchies=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnHierarchies\\"),this.instance.columnHierarchies.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.columnHierarchies.items.map((function(t){return new St(t,r.engine)}))]}}))}))},r.prototype.addColumnHierarchy=function(e){t.prototype.traceCall.call(this,\\"addColumnHierarchy\\");var r=n.unwrap(e),i=this.instance.columnHierarchies.add(r);return new St(i,this.engine)},r.prototype.getColumnHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnHierarchy\\"),i=n.unwrap(r),a=this.instance.columnHierarchies.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new St(a,this.engine)]}}))}))},r.prototype.removeColumnHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"removeColumnHierarchy\\"),i=n.unwrap(r),this.instance.columnHierarchies.remove(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getDataHierarchies=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getDataHierarchies\\"),this.instance.dataHierarchies.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.dataHierarchies.items.map((function(t){return new Rt(t,r.engine)}))]}}))}))},r.prototype.addDataHierarchy=function(e){t.prototype.traceCall.call(this,\\"addDataHierarchy\\");var r=n.unwrap(e),i=this.instance.dataHierarchies.add(r);return new Rt(i,this.engine)},r.prototype.getDataHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getDataHierarchy\\"),i=n.unwrap(r),a=this.instance.dataHierarchies.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Rt(a,this.engine)]}}))}))},r.prototype.removeDataHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"removeDataHierarchy\\"),i=n.unwrap(r),this.instance.dataHierarchies.remove(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getFilterHierarchies=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFilterHierarchies\\"),this.instance.filterHierarchies.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.filterHierarchies.items.map((function(t){return new Tt(t,r.engine)}))]}}))}))},r.prototype.addFilterHierarchy=function(e){t.prototype.traceCall.call(this,\\"addFilterHierarchy\\");var r=n.unwrap(e),i=this.instance.filterHierarchies.add(r);return new Tt(i,this.engine)},r.prototype.getFilterHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getFilterHierarchy\\"),i=n.unwrap(r),a=this.instance.filterHierarchies.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Tt(a,this.engine)]}}))}))},r.prototype.removeFilterHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"removeFilterHierarchy\\"),i=n.unwrap(r),this.instance.filterHierarchies.remove(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getHierarchies=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getHierarchies\\"),this.instance.hierarchies.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.hierarchies.items.map((function(t){return new xt(t,r.engine)}))]}}))}))},r.prototype.getHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getHierarchy\\"),i=n.unwrap(r),a=this.instance.hierarchies.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new xt(a,this.engine)]}}))}))},r.prototype.getRowHierarchies=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getRowHierarchies\\"),this.instance.rowHierarchies.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.rowHierarchies.items.map((function(t){return new St(t,r.engine)}))]}}))}))},r.prototype.addRowHierarchy=function(e){t.prototype.traceCall.call(this,\\"addRowHierarchy\\");var r=n.unwrap(e),i=this.instance.rowHierarchies.add(r);return new St(i,this.engine)},r.prototype.getRowHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getRowHierarchy\\"),i=n.unwrap(r),a=this.instance.rowHierarchies.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new St(a,this.engine)]}}))}))},r.prototype.removeRowHierarchy=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"removeRowHierarchy\\"),i=n.unwrap(r),this.instance.rowHierarchies.remove(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getAllowMultipleFiltersPerField=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAllowMultipleFiltersPerField\\"),this.instance.load(\\"allowMultipleFiltersPerField\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.allowMultipleFiltersPerField]}}))}))},r.prototype.setAllowMultipleFiltersPerField=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAllowMultipleFiltersPerField\\"),this.instance.allowMultipleFiltersPerField=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getEnableDataValueEditing=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEnableDataValueEditing\\"),this.instance.load(\\"enableDataValueEditing\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.enableDataValueEditing]}}))}))},r.prototype.setEnableDataValueEditing=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEnableDataValueEditing\\"),this.instance.enableDataValueEditing=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getLayout=function(){t.prototype.traceCall.call(this,\\"getLayout\\");var e=this.instance.layout;return new Pt(e,this.engine)},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUseCustomSortLists=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUseCustomSortLists\\"),this.instance.load(\\"useCustomSortLists\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.useCustomSortLists]}}))}))},r.prototype.setUseCustomSortLists=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUseCustomSortLists\\"),this.instance.useCustomSortLists=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWorksheet=function(){t.prototype.traceCall.call(this,\\"getWorksheet\\");var e=this.instance.worksheet;return new h(e,this.engine)},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.refresh=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"refresh\\"),this.instance.refresh(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.PivotTable=bt;var Pt=function(t){function r(e,r){var n=t.call(this,\\"PivotLayout\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAutoFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoFormat\\"),this.instance.load(\\"autoFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoFormat]}}))}))},r.prototype.setAutoFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoFormat\\"),this.instance.autoFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getEnableFieldList=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEnableFieldList\\"),this.instance.load(\\"enableFieldList\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.enableFieldList]}}))}))},r.prototype.setEnableFieldList=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEnableFieldList\\"),this.instance.enableFieldList=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLayoutType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLayoutType\\"),this.instance.load(\\"layoutType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.layoutType]}}))}))},r.prototype.setLayoutType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLayoutType\\"),this.instance.layoutType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPreserveFormatting=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPreserveFormatting\\"),this.instance.load(\\"preserveFormatting\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.preserveFormatting]}}))}))},r.prototype.setPreserveFormatting=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPreserveFormatting\\"),this.instance.preserveFormatting=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowColumnGrandTotals=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowColumnGrandTotals\\"),this.instance.load(\\"showColumnGrandTotals\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showColumnGrandTotals]}}))}))},r.prototype.setShowColumnGrandTotals=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowColumnGrandTotals\\"),this.instance.showColumnGrandTotals=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowRowGrandTotals=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowRowGrandTotals\\"),this.instance.load(\\"showRowGrandTotals\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showRowGrandTotals]}}))}))},r.prototype.setShowRowGrandTotals=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowRowGrandTotals\\"),this.instance.showRowGrandTotals=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSubtotalLocation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSubtotalLocation\\"),this.instance.load(\\"subtotalLocation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.subtotalLocation]}}))}))},r.prototype.setSubtotalLocation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSubtotalLocation\\"),this.instance.subtotalLocation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColumnLabelRange=function(){return t.prototype.traceCall.call(this,\\"getColumnLabelRange\\"),new d(this.instance.getColumnLabelRange(),this.engine)},r.prototype.getBodyAndTotalRange=function(){return t.prototype.traceCall.call(this,\\"getBodyAndTotalRange\\"),new d(this.instance.getDataBodyRange(),this.engine)},r.prototype.getDataHierarchy=function(e){t.prototype.traceCall.call(this,\\"getDataHierarchy\\");var r=n.unwrap(e);return new Rt(this.instance.getDataHierarchy(r),this.engine)},r.prototype.getFilterAxisRange=function(){return t.prototype.traceCall.call(this,\\"getFilterAxisRange\\"),new d(this.instance.getFilterAxisRange(),this.engine)},r.prototype.getRange=function(){return t.prototype.traceCall.call(this,\\"getRange\\"),new d(this.instance.getRange(),this.engine)},r.prototype.getRowLabelRange=function(){return t.prototype.traceCall.call(this,\\"getRowLabelRange\\"),new d(this.instance.getRowLabelRange(),this.engine)},r.prototype.setAutoSortOnCell=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoSortOnCell\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.setAutoSortOnCell(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r}(n);t.PivotLayout=Pt;var xt=function(t){function r(e,r){var n=t.call(this,\\"PivotHierarchy\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFields=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFields\\"),this.instance.fields.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.fields.items.map((function(t){return new Et(t,r.engine)}))]}}))}))},r.prototype.getPivotField=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotField\\"),i=n.unwrap(r),a=this.instance.fields.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Et(a,this.engine)]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.PivotHierarchy=xt;var St=function(t){function r(e,r){var n=t.call(this,\\"RowColumnPivotHierarchy\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFields=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFields\\"),this.instance.fields.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.fields.items.map((function(t){return new Et(t,r.engine)}))]}}))}))},r.prototype.getPivotField=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotField\\"),i=n.unwrap(r),a=this.instance.fields.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Et(a,this.engine)]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.setToDefault=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"setToDefault\\"),this.instance.setToDefault(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.RowColumnPivotHierarchy=St;var Tt=function(t){function r(e,r){var n=t.call(this,\\"FilterPivotHierarchy\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFields=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFields\\"),this.instance.fields.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.fields.items.map((function(t){return new Et(t,r.engine)}))]}}))}))},r.prototype.getPivotField=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotField\\"),i=n.unwrap(r),a=this.instance.fields.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Et(a,this.engine)]}}))}))},r.prototype.getEnableMultipleFilterItems=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEnableMultipleFilterItems\\"),this.instance.load(\\"enableMultipleFilterItems\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.enableMultipleFilterItems]}}))}))},r.prototype.setEnableMultipleFilterItems=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEnableMultipleFilterItems\\"),this.instance.enableMultipleFilterItems=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.setToDefault=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"setToDefault\\"),this.instance.setToDefault(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.FilterPivotHierarchy=Tt;var Rt=function(t){function r(e,r){var n=t.call(this,\\"DataPivotHierarchy\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getField=function(){t.prototype.traceCall.call(this,\\"getField\\");var e=this.instance.field;return new Et(e,this.engine)},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPosition\\"),this.instance.load(\\"position\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.position]}}))}))},r.prototype.setPosition=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPosition\\"),this.instance.position=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowAs=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowAs\\"),this.instance.load(\\"showAs\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showAs]}}))}))},r.prototype.setShowAs=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowAs\\"),this.instance.showAs=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSummarizeBy=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSummarizeBy\\"),this.instance.load(\\"summarizeBy\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.summarizeBy]}}))}))},r.prototype.setSummarizeBy=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSummarizeBy\\"),this.instance.summarizeBy=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.setToDefault=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"setToDefault\\"),this.instance.setToDefault(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.DataPivotHierarchy=Rt;var Et=function(t){function r(e,r){var n=t.call(this,\\"PivotField\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getItems=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getItems\\"),this.instance.items.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.items.items.map((function(t){return new Ft(t,r.engine)}))]}}))}))},r.prototype.getPivotItem=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getPivotItem\\"),i=n.unwrap(r),a=this.instance.items.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Ft(a,this.engine)]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowAllItems=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowAllItems\\"),this.instance.load(\\"showAllItems\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showAllItems]}}))}))},r.prototype.setShowAllItems=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowAllItems\\"),this.instance.showAllItems=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSubtotals=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSubtotals\\"),this.instance.load(\\"subtotals\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.subtotals]}}))}))},r.prototype.setSubtotals=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSubtotals\\"),this.instance.subtotals=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.applyFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"applyFilter\\"),i=n.unwrap(r),this.instance.applyFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.clearAllFilters=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clearAllFilters\\"),this.instance.clearAllFilters(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.clearFilter=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"clearFilter\\"),i=n.unwrap(r),this.instance.clearFilter(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getFilters=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getFilters\\"),r=this.instance.getFilters(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.value]}}))}))},r.prototype.isFiltered=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"isFiltered\\"),i=n.unwrap(r),a=this.instance.isFiltered(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),[2,a.value]}}))}))},r.prototype.sortByLabels=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"sortByLabels\\"),i=n.unwrap(r),this.instance.sortByLabels(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.sortByValues=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"sortByValues\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),this.instance.sortByValues(o,s,c),[4,t.prototype.sync.call(this,e.Write)];case 1:return l.sent(),[2]}}))}))},r}(n);t.PivotField=Et;var Ft=function(t){function r(e,r){var n=t.call(this,\\"PivotItem\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getIsExpanded=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsExpanded\\"),this.instance.load(\\"isExpanded\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isExpanded]}}))}))},r.prototype.setIsExpanded=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIsExpanded\\"),this.instance.isExpanded=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.PivotItem=Ft;var At=function(t){function r(e,r){var n=t.call(this,\\"WorksheetCustomProperty\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getKey=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getKey\\"),this.instance.load(\\"key\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.key]}}))}))},r.prototype.getValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValue\\"),this.instance.load(\\"value\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.value]}}))}))},r.prototype.setValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setValue\\"),this.instance.value=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.WorksheetCustomProperty=At;var Wt=function(t){function r(e,r){var n=t.call(this,\\"DocumentProperties\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCustom=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getCustom\\"),this.instance.custom.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.custom.items.map((function(t){return new Dt(t,r.engine)}))]}}))}))},r.prototype.addCustomProperty=function(e,r){t.prototype.traceCall.call(this,\\"addCustomProperty\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.custom.add(i,a);return new Dt(o,this.engine)},r.prototype.deleteAllCustomProperties=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"deleteAllCustomProperties\\"),this.instance.custom.deleteAll(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getCustomProperty=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getCustomProperty\\"),i=n.unwrap(r),a=this.instance.custom.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new Dt(a,this.engine)]}}))}))},r.prototype.getAuthor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAuthor\\"),this.instance.load(\\"author\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.author]}}))}))},r.prototype.setAuthor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAuthor\\"),this.instance.author=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCategory=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCategory\\"),this.instance.load(\\"category\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.category]}}))}))},r.prototype.setCategory=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCategory\\"),this.instance.category=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getComments=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getComments\\"),this.instance.load(\\"comments\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.comments]}}))}))},r.prototype.setComments=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setComments\\"),this.instance.comments=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCompany=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCompany\\"),this.instance.load(\\"company\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.company]}}))}))},r.prototype.setCompany=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCompany\\"),this.instance.company=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCreationDate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCreationDate\\"),this.instance.load(\\"creationDate\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.creationDate]}}))}))},r.prototype.getKeywords=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getKeywords\\"),this.instance.load(\\"keywords\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.keywords]}}))}))},r.prototype.setKeywords=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setKeywords\\"),this.instance.keywords=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLastAuthor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLastAuthor\\"),this.instance.load(\\"lastAuthor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.lastAuthor]}}))}))},r.prototype.getManager=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getManager\\"),this.instance.load(\\"manager\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.manager]}}))}))},r.prototype.setManager=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setManager\\"),this.instance.manager=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRevisionNumber=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRevisionNumber\\"),this.instance.load(\\"revisionNumber\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.revisionNumber]}}))}))},r.prototype.setRevisionNumber=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRevisionNumber\\"),this.instance.revisionNumber=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSubject=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSubject\\"),this.instance.load(\\"subject\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.subject]}}))}))},r.prototype.setSubject=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSubject\\"),this.instance.subject=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTitle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTitle\\"),this.instance.load(\\"title\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.title]}}))}))},r.prototype.setTitle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTitle\\"),this.instance.title=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.DocumentProperties=Wt;var Dt=function(t){function r(e,r){var n=t.call(this,\\"CustomProperty\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getKey=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getKey\\"),this.instance.load(\\"key\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.key]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.getValue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getValue\\"),this.instance.load(\\"value\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.value]}}))}))},r.prototype.setValue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setValue\\"),this.instance.value=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.CustomProperty=Dt;var kt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCellValue=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getCellValue\\"),r=this.instance.cellValueOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new jt(r,this.engine)]}}))}))},r.prototype.getColorScale=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getColorScale\\"),r=this.instance.colorScaleOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new Vt(r,this.engine)]}}))}))},r.prototype.getCustom=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getCustom\\"),r=this.instance.customOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new It(r,this.engine)]}}))}))},r.prototype.getDataBar=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getDataBar\\"),r=this.instance.dataBarOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new Ot(r,this.engine)]}}))}))},r.prototype.getIconSet=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getIconSet\\"),r=this.instance.iconSetOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new Mt(r,this.engine)]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getPreset=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPreset\\"),r=this.instance.presetOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new Ht(r,this.engine)]}}))}))},r.prototype.getPriority=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPriority\\"),this.instance.load(\\"priority\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.priority]}}))}))},r.prototype.setPriority=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPriority\\"),this.instance.priority=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStopIfTrue=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStopIfTrue\\"),this.instance.load(\\"stopIfTrue\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.stopIfTrue]}}))}))},r.prototype.setStopIfTrue=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStopIfTrue\\"),this.instance.stopIfTrue=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextComparison=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTextComparison\\"),r=this.instance.textComparisonOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new Gt(r,this.engine)]}}))}))},r.prototype.getTopBottom=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getTopBottom\\"),r=this.instance.topBottomOrNullObject,[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new zt(r,this.engine)]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getRange=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getRange\\"),r=this.instance.getRangeOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new d(r,this.engine)]}}))}))},r.prototype.getRanges=function(){return t.prototype.traceCall.call(this,\\"getRanges\\"),new f(this.instance.getRanges(),this.engine)},r}(n);t.ConditionalFormat=kt;var Ot=function(t){function r(e,r){var n=t.call(this,\\"DataBarConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAxisColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAxisColor\\"),this.instance.load(\\"axisColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.axisColor]}}))}))},r.prototype.setAxisColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAxisColor\\"),this.instance.axisColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getAxisFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAxisFormat\\"),this.instance.load(\\"axisFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.axisFormat]}}))}))},r.prototype.setAxisFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAxisFormat\\"),this.instance.axisFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBarDirection=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBarDirection\\"),this.instance.load(\\"barDirection\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.barDirection]}}))}))},r.prototype.setBarDirection=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBarDirection\\"),this.instance.barDirection=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLowerBoundRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLowerBoundRule\\"),this.instance.load(\\"lowerBoundRule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.lowerBoundRule]}}))}))},r.prototype.setLowerBoundRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLowerBoundRule\\"),this.instance.lowerBoundRule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNegativeFormat=function(){t.prototype.traceCall.call(this,\\"getNegativeFormat\\");var e=this.instance.negativeFormat;return new Lt(e,this.engine)},r.prototype.getPositiveFormat=function(){t.prototype.traceCall.call(this,\\"getPositiveFormat\\");var e=this.instance.positiveFormat;return new Bt(e,this.engine)},r.prototype.getShowDataBarOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowDataBarOnly\\"),this.instance.load(\\"showDataBarOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showDataBarOnly]}}))}))},r.prototype.setShowDataBarOnly=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowDataBarOnly\\"),this.instance.showDataBarOnly=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUpperBoundRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUpperBoundRule\\"),this.instance.load(\\"upperBoundRule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.upperBoundRule]}}))}))},r.prototype.setUpperBoundRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUpperBoundRule\\"),this.instance.upperBoundRule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.DataBarConditionalFormat=Ot;var Bt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalDataBarPositiveFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBorderColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBorderColor\\"),this.instance.load(\\"borderColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.borderColor]}}))}))},r.prototype.setBorderColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBorderColor\\"),this.instance.borderColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFillColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFillColor\\"),this.instance.load(\\"fillColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.fillColor]}}))}))},r.prototype.setFillColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFillColor\\"),this.instance.fillColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGradientFill=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGradientFill\\"),this.instance.load(\\"gradientFill\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.gradientFill]}}))}))},r.prototype.setGradientFill=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGradientFill\\"),this.instance.gradientFill=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ConditionalDataBarPositiveFormat=Bt;var Lt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalDataBarNegativeFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBorderColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBorderColor\\"),this.instance.load(\\"borderColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.borderColor]}}))}))},r.prototype.setBorderColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBorderColor\\"),this.instance.borderColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFillColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFillColor\\"),this.instance.load(\\"fillColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.fillColor]}}))}))},r.prototype.setFillColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFillColor\\"),this.instance.fillColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMatchPositiveBorderColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMatchPositiveBorderColor\\"),this.instance.load(\\"matchPositiveBorderColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.matchPositiveBorderColor]}}))}))},r.prototype.setMatchPositiveBorderColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMatchPositiveBorderColor\\"),this.instance.matchPositiveBorderColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getMatchPositiveFillColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMatchPositiveFillColor\\"),this.instance.load(\\"matchPositiveFillColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.matchPositiveFillColor]}}))}))},r.prototype.setMatchPositiveFillColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setMatchPositiveFillColor\\"),this.instance.matchPositiveFillColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ConditionalDataBarNegativeFormat=Lt;var It=function(t){function e(e,r){var n=t.call(this,\\"CustomConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(e,t),e.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new Ut(e,this.engine)},e.prototype.getRule=function(){t.prototype.traceCall.call(this,\\"getRule\\");var e=this.instance.rule;return new Nt(e,this.engine)},e}(n);t.CustomConditionalFormat=It;var Nt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalFormatRule\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormula=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormula\\"),this.instance.load(\\"formula\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formula]}}))}))},r.prototype.setFormula=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormula\\"),this.instance.formula=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFormulaLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulaLocal\\"),this.instance.load(\\"formulaLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulaLocal]}}))}))},r.prototype.setFormulaLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulaLocal\\"),this.instance.formulaLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ConditionalFormatRule=Nt;var Mt=function(t){function r(e,r){var n=t.call(this,\\"IconSetConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCriteria=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCriteria\\"),this.instance.load(\\"criteria\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.criteria]}}))}))},r.prototype.setCriteria=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCriteria\\"),this.instance.criteria=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReverseIconOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReverseIconOrder\\"),this.instance.load(\\"reverseIconOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.reverseIconOrder]}}))}))},r.prototype.setReverseIconOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setReverseIconOrder\\"),this.instance.reverseIconOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShowIconOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShowIconOnly\\"),this.instance.load(\\"showIconOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.showIconOnly]}}))}))},r.prototype.setShowIconOnly=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShowIconOnly\\"),this.instance.showIconOnly=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.IconSetConditionalFormat=Mt;var Vt=function(t){function r(e,r){var n=t.call(this,\\"ColorScaleConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCriteria=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCriteria\\"),this.instance.load(\\"criteria\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.criteria]}}))}))},r.prototype.setCriteria=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCriteria\\"),this.instance.criteria=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getThreeColorScale=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getThreeColorScale\\"),this.instance.load(\\"threeColorScale\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.threeColorScale]}}))}))},r}(n);t.ColorScaleConditionalFormat=Vt;var zt=function(t){function r(e,r){var n=t.call(this,\\"TopBottomConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new Ut(e,this.engine)},r.prototype.getRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRule\\"),this.instance.load(\\"rule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rule]}}))}))},r.prototype.setRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRule\\"),this.instance.rule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.TopBottomConditionalFormat=zt;var Ht=function(t){function r(e,r){var n=t.call(this,\\"PresetCriteriaConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new Ut(e,this.engine)},r.prototype.getRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRule\\"),this.instance.load(\\"rule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rule]}}))}))},r.prototype.setRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRule\\"),this.instance.rule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.PresetCriteriaConditionalFormat=Ht;var Gt=function(t){function r(e,r){var n=t.call(this,\\"TextConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new Ut(e,this.engine)},r.prototype.getRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRule\\"),this.instance.load(\\"rule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rule]}}))}))},r.prototype.setRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRule\\"),this.instance.rule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.TextConditionalFormat=Gt;var jt=function(t){function r(e,r){var n=t.call(this,\\"CellValueConditionalFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFormat=function(){t.prototype.traceCall.call(this,\\"getFormat\\");var e=this.instance.format;return new Ut(e,this.engine)},r.prototype.getRule=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRule\\"),this.instance.load(\\"rule\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rule]}}))}))},r.prototype.setRule=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRule\\"),this.instance.rule=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.CellValueConditionalFormat=jt;var Ut=function(t){function r(e,r){var n=t.call(this,\\"ConditionalRangeFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getConditionalRangeBorderBottom=function(){t.prototype.traceCall.call(this,\\"getConditionalRangeBorderBottom\\");var e=this.instance.borders.bottom;return new Xt(e,this.engine)},r.prototype.getConditionalRangeBorderLeft=function(){t.prototype.traceCall.call(this,\\"getConditionalRangeBorderLeft\\");var e=this.instance.borders.left;return new Xt(e,this.engine)},r.prototype.getConditionalRangeBorderRight=function(){t.prototype.traceCall.call(this,\\"getConditionalRangeBorderRight\\");var e=this.instance.borders.right;return new Xt(e,this.engine)},r.prototype.getConditionalRangeBorderTop=function(){t.prototype.traceCall.call(this,\\"getConditionalRangeBorderTop\\");var e=this.instance.borders.top;return new Xt(e,this.engine)},r.prototype.getBorders=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getBorders\\"),this.instance.borders.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.borders.items.map((function(t){return new Xt(t,r.engine)}))]}}))}))},r.prototype.getConditionalRangeBorder=function(e){t.prototype.traceCall.call(this,\\"getConditionalRangeBorder\\");var r=n.unwrap(e),i=this.instance.borders.getItem(r);return new Xt(i,this.engine)},r.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new Qt(e,this.engine)},r.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new qt(e,this.engine)},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ConditionalRangeFormat=Ut;var qt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalRangeFont\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBold=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBold\\"),this.instance.load(\\"bold\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bold]}}))}))},r.prototype.setBold=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBold\\"),this.instance.bold=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getItalic=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getItalic\\"),this.instance.load(\\"italic\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.italic]}}))}))},r.prototype.setItalic=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setItalic\\"),this.instance.italic=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStrikethrough=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStrikethrough\\"),this.instance.load(\\"strikethrough\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.strikethrough]}}))}))},r.prototype.setStrikethrough=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStrikethrough\\"),this.instance.strikethrough=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUnderline=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUnderline\\"),this.instance.load(\\"underline\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.underline]}}))}))},r.prototype.setUnderline=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUnderline\\"),this.instance.underline=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.ConditionalRangeFont=qt;var Qt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalRangeFill\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.ConditionalRangeFill=Qt;var Xt=function(t){function r(e,r){var n=t.call(this,\\"ConditionalRangeBorder\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSideIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSideIndex\\"),this.instance.load(\\"sideIndex\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.sideIndex]}}))}))},r.prototype.getStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ConditionalRangeBorder=Xt;var Kt=function(t){function r(e,r){var n=t.call(this,\\"Style\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getRangeBorderTintAndShade=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRangeBorderTintAndShade\\"),this.instance.borders.load(\\"tintAndShade\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.borders.tintAndShade]}}))}))},r.prototype.setRangeBorderTintAndShade=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRangeBorderTintAndShade\\"),this.instance.borders.tintAndShade=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBorders=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getBorders\\"),this.instance.borders.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.borders.items.map((function(t){return new E(t,r.engine)}))]}}))}))},r.prototype.getRangeBorder=function(e){t.prototype.traceCall.call(this,\\"getRangeBorder\\");var r=n.unwrap(e),i=this.instance.borders.getItem(r);return new E(i,this.engine)},r.prototype.getAutoIndent=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoIndent\\"),this.instance.load(\\"autoIndent\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoIndent]}}))}))},r.prototype.setAutoIndent=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoIndent\\"),this.instance.autoIndent=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBuiltIn=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBuiltIn\\"),this.instance.load(\\"builtIn\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.builtIn]}}))}))},r.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new R(e,this.engine)},r.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new F(e,this.engine)},r.prototype.getFormulaHidden=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormulaHidden\\"),this.instance.load(\\"formulaHidden\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.formulaHidden]}}))}))},r.prototype.setFormulaHidden=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFormulaHidden\\"),this.instance.formulaHidden=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIncludeAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIncludeAlignment\\"),this.instance.load(\\"includeAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.includeAlignment]}}))}))},r.prototype.setIncludeAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIncludeAlignment\\"),this.instance.includeAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIncludeBorder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIncludeBorder\\"),this.instance.load(\\"includeBorder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.includeBorder]}}))}))},r.prototype.setIncludeBorder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIncludeBorder\\"),this.instance.includeBorder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIncludeFont=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIncludeFont\\"),this.instance.load(\\"includeFont\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.includeFont]}}))}))},r.prototype.setIncludeFont=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIncludeFont\\"),this.instance.includeFont=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIncludeNumber=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIncludeNumber\\"),this.instance.load(\\"includeNumber\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.includeNumber]}}))}))},r.prototype.setIncludeNumber=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIncludeNumber\\"),this.instance.includeNumber=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIncludePatterns=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIncludePatterns\\"),this.instance.load(\\"includePatterns\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.includePatterns]}}))}))},r.prototype.setIncludePatterns=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIncludePatterns\\"),this.instance.includePatterns=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIncludeProtection=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIncludeProtection\\"),this.instance.load(\\"includeProtection\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.includeProtection]}}))}))},r.prototype.setIncludeProtection=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIncludeProtection\\"),this.instance.includeProtection=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getIndentLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIndentLevel\\"),this.instance.load(\\"indentLevel\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.indentLevel]}}))}))},r.prototype.setIndentLevel=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIndentLevel\\"),this.instance.indentLevel=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLocked=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLocked\\"),this.instance.load(\\"locked\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.locked]}}))}))},r.prototype.setLocked=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLocked\\"),this.instance.locked=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.getNumberFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormat\\"),this.instance.load(\\"numberFormat\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormat]}}))}))},r.prototype.setNumberFormat=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormat\\"),this.instance.numberFormat=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getNumberFormatLocal=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getNumberFormatLocal\\"),this.instance.load(\\"numberFormatLocal\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.numberFormatLocal]}}))}))},r.prototype.setNumberFormatLocal=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setNumberFormatLocal\\"),this.instance.numberFormatLocal=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReadingOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadingOrder\\"),this.instance.load(\\"readingOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readingOrder]}}))}))},r.prototype.setReadingOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setReadingOrder\\"),this.instance.readingOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getShrinkToFit=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getShrinkToFit\\"),this.instance.load(\\"shrinkToFit\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.shrinkToFit]}}))}))},r.prototype.setShrinkToFit=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setShrinkToFit\\"),this.instance.shrinkToFit=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTextOrientation\\"),this.instance.load(\\"textOrientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.textOrientation]}}))}))},r.prototype.setTextOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTextOrientation\\"),this.instance.textOrientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWrapText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWrapText\\"),this.instance.load(\\"wrapText\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.wrapText]}}))}))},r.prototype.setWrapText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWrapText\\"),this.instance.wrapText=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.PredefinedCellStyle=Kt;var Yt=function(t){function r(e,r){var n=t.call(this,\\"TableStyle\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReadOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadOnly\\"),this.instance.load(\\"readOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readOnly]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.duplicate=function(){return t.prototype.traceCall.call(this,\\"duplicate\\"),new r(this.instance.duplicate(),this.engine)},r}(n);t.TableStyle=Yt;var Jt=function(t){function r(e,r){var n=t.call(this,\\"PivotTableStyle\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReadOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadOnly\\"),this.instance.load(\\"readOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readOnly]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.duplicate=function(){return t.prototype.traceCall.call(this,\\"duplicate\\"),new r(this.instance.duplicate(),this.engine)},r}(n);t.PivotTableStyle=Jt;var Zt=function(t){function r(e,r){var n=t.call(this,\\"SlicerStyle\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReadOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadOnly\\"),this.instance.load(\\"readOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readOnly]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.duplicate=function(){return t.prototype.traceCall.call(this,\\"duplicate\\"),new r(this.instance.duplicate(),this.engine)},r}(n);t.SlicerStyle=Zt;var $t=function(t){function r(e,r){var n=t.call(this,\\"TimelineStyle\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReadOnly=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadOnly\\"),this.instance.load(\\"readOnly\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readOnly]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.duplicate=function(){return t.prototype.traceCall.call(this,\\"duplicate\\"),new r(this.instance.duplicate(),this.engine)},r}(n);t.TimelineStyle=$t;var te=function(t){function r(e,r){var n=t.call(this,\\"PageLayout\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBlackAndWhite=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBlackAndWhite\\"),this.instance.load(\\"blackAndWhite\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.blackAndWhite]}}))}))},r.prototype.setBlackAndWhite=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBlackAndWhite\\"),this.instance.blackAndWhite=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBottomMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBottomMargin\\"),this.instance.load(\\"bottomMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bottomMargin]}}))}))},r.prototype.setBottomMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBottomMargin\\"),this.instance.bottomMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCenterHorizontally=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCenterHorizontally\\"),this.instance.load(\\"centerHorizontally\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.centerHorizontally]}}))}))},r.prototype.setCenterHorizontally=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCenterHorizontally\\"),this.instance.centerHorizontally=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCenterVertically=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCenterVertically\\"),this.instance.load(\\"centerVertically\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.centerVertically]}}))}))},r.prototype.setCenterVertically=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCenterVertically\\"),this.instance.centerVertically=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getDraftMode=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDraftMode\\"),this.instance.load(\\"draftMode\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.draftMode]}}))}))},r.prototype.setDraftMode=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setDraftMode\\"),this.instance.draftMode=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFirstPageNumber=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFirstPageNumber\\"),this.instance.load(\\"firstPageNumber\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.firstPageNumber]}}))}))},r.prototype.setFirstPageNumber=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFirstPageNumber\\"),this.instance.firstPageNumber=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getFooterMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFooterMargin\\"),this.instance.load(\\"footerMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.footerMargin]}}))}))},r.prototype.setFooterMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setFooterMargin\\"),this.instance.footerMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHeaderMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeaderMargin\\"),this.instance.load(\\"headerMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.headerMargin]}}))}))},r.prototype.setHeaderMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHeaderMargin\\"),this.instance.headerMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHeadersFooters=function(){t.prototype.traceCall.call(this,\\"getHeadersFooters\\");var e=this.instance.headersFooters;return new re(e,this.engine)},r.prototype.getLeftMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeftMargin\\"),this.instance.load(\\"leftMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.leftMargin]}}))}))},r.prototype.setLeftMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeftMargin\\"),this.instance.leftMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOrientation\\"),this.instance.load(\\"orientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.orientation]}}))}))},r.prototype.setOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOrientation\\"),this.instance.orientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPaperSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPaperSize\\"),this.instance.load(\\"paperSize\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.paperSize]}}))}))},r.prototype.setPaperSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPaperSize\\"),this.instance.paperSize=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrintComments=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintComments\\"),this.instance.load(\\"printComments\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.printComments]}}))}))},r.prototype.setPrintComments=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintComments\\"),this.instance.printComments=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrintErrors=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintErrors\\"),this.instance.load(\\"printErrors\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.printErrors]}}))}))},r.prototype.setPrintErrors=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintErrors\\"),this.instance.printErrors=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrintGridlines=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintGridlines\\"),this.instance.load(\\"printGridlines\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.printGridlines]}}))}))},r.prototype.setPrintGridlines=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintGridlines\\"),this.instance.printGridlines=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrintHeadings=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintHeadings\\"),this.instance.load(\\"printHeadings\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.printHeadings]}}))}))},r.prototype.setPrintHeadings=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintHeadings\\"),this.instance.printHeadings=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrintOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintOrder\\"),this.instance.load(\\"printOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.printOrder]}}))}))},r.prototype.setPrintOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintOrder\\"),this.instance.printOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRightMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRightMargin\\"),this.instance.load(\\"rightMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rightMargin]}}))}))},r.prototype.setRightMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRightMargin\\"),this.instance.rightMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTopMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTopMargin\\"),this.instance.load(\\"topMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.topMargin]}}))}))},r.prototype.setTopMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTopMargin\\"),this.instance.topMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getZoom=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getZoom\\"),this.instance.load(\\"zoom\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.zoom]}}))}))},r.prototype.setZoom=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setZoom\\"),this.instance.zoom=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getPrintArea=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintArea\\"),r=this.instance.getPrintAreaOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new f(r,this.engine)]}}))}))},r.prototype.getPrintTitleColumns=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintTitleColumns\\"),r=this.instance.getPrintTitleColumnsOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new d(r,this.engine)]}}))}))},r.prototype.getPrintTitleRows=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getPrintTitleRows\\"),r=this.instance.getPrintTitleRowsOrNullObject(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),r.isNullObject?[2,void 0]:[2,new d(r,this.engine)]}}))}))},r.prototype.setPrintArea=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintArea\\"),i=n.unwrap(r),this.instance.setPrintArea(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.setPrintMargins=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintMargins\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.setPrintMargins(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r.prototype.setPrintTitleColumns=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintTitleColumns\\"),i=n.unwrap(r),this.instance.setPrintTitleColumns(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.setPrintTitleRows=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setPrintTitleRows\\"),i=n.unwrap(r),this.instance.setPrintTitleRows(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.PageLayout=te;var ee=function(t){function r(e,r){var n=t.call(this,\\"HeaderFooter\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getCenterFooter=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCenterFooter\\"),this.instance.load(\\"centerFooter\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.centerFooter]}}))}))},r.prototype.setCenterFooter=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCenterFooter\\"),this.instance.centerFooter=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getCenterHeader=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCenterHeader\\"),this.instance.load(\\"centerHeader\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.centerHeader]}}))}))},r.prototype.setCenterHeader=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCenterHeader\\"),this.instance.centerHeader=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeftFooter=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeftFooter\\"),this.instance.load(\\"leftFooter\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.leftFooter]}}))}))},r.prototype.setLeftFooter=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeftFooter\\"),this.instance.leftFooter=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeftHeader=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeftHeader\\"),this.instance.load(\\"leftHeader\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.leftHeader]}}))}))},r.prototype.setLeftHeader=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeftHeader\\"),this.instance.leftHeader=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRightFooter=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRightFooter\\"),this.instance.load(\\"rightFooter\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rightFooter]}}))}))},r.prototype.setRightFooter=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRightFooter\\"),this.instance.rightFooter=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRightHeader=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRightHeader\\"),this.instance.load(\\"rightHeader\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rightHeader]}}))}))},r.prototype.setRightHeader=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRightHeader\\"),this.instance.rightHeader=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.HeaderFooter=ee;var re=function(t){function r(e,r){var n=t.call(this,\\"HeaderFooterGroup\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getDefaultForAllPages=function(){t.prototype.traceCall.call(this,\\"getDefaultForAllPages\\");var e=this.instance.defaultForAllPages;return new ee(e,this.engine)},r.prototype.getEvenPages=function(){t.prototype.traceCall.call(this,\\"getEvenPages\\");var e=this.instance.evenPages;return new ee(e,this.engine)},r.prototype.getFirstPage=function(){t.prototype.traceCall.call(this,\\"getFirstPage\\");var e=this.instance.firstPage;return new ee(e,this.engine)},r.prototype.getOddPages=function(){t.prototype.traceCall.call(this,\\"getOddPages\\");var e=this.instance.oddPages;return new ee(e,this.engine)},r.prototype.getState=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getState\\"),this.instance.load(\\"state\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.state]}}))}))},r.prototype.setState=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setState\\"),this.instance.state=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUseSheetMargins=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUseSheetMargins\\"),this.instance.load(\\"useSheetMargins\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.useSheetMargins]}}))}))},r.prototype.setUseSheetMargins=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUseSheetMargins\\"),this.instance.useSheetMargins=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUseSheetScale=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUseSheetScale\\"),this.instance.load(\\"useSheetScale\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.useSheetScale]}}))}))},r.prototype.setUseSheetScale=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUseSheetScale\\"),this.instance.useSheetScale=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.HeaderFooterGroup=re;var ne=function(t){function r(e,r){var n=t.call(this,\\"PageBreak\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColumnIndex=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColumnIndex\\"),this.instance.load(\\"columnIndex\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.columnIndex]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getCellAfterBreak=function(){return t.prototype.traceCall.call(this,\\"getCellAfterBreak\\"),new d(this.instance.getCellAfterBreak(),this.engine)},r}(n);t.PageBreak=ne;var ie=function(t){function r(e,r){var n=t.call(this,\\"Comment\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getReplies=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getReplies\\"),this.instance.replies.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.replies.items.map((function(t){return new ae(t,r.engine)}))]}}))}))},r.prototype.addCommentReply=function(e,r){t.prototype.traceCall.call(this,\\"addCommentReply\\");var i=n.unwrap(e),a=n.unwrap(r),o=this.instance.replies.add(i,a);return new ae(o,this.engine)},r.prototype.getCommentReply=function(e){t.prototype.traceCall.call(this,\\"getCommentReply\\");var r=n.unwrap(e),i=this.instance.replies.getItem(r);return new ae(i,this.engine)},r.prototype.getAuthorEmail=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAuthorEmail\\"),this.instance.load(\\"authorEmail\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.authorEmail]}}))}))},r.prototype.getAuthorName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAuthorName\\"),this.instance.load(\\"authorName\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.authorName]}}))}))},r.prototype.getContent=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getContent\\"),this.instance.load(\\"content\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.content]}}))}))},r.prototype.setContent=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setContent\\"),this.instance.content=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getContentType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getContentType\\"),this.instance.load(\\"contentType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.contentType]}}))}))},r.prototype.getCreationDate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCreationDate\\"),this.instance.load(\\"creationDate\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.creationDate]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getMentions=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMentions\\"),this.instance.load(\\"mentions\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.mentions]}}))}))},r.prototype.getResolved=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getResolved\\"),this.instance.load(\\"resolved\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.resolved]}}))}))},r.prototype.setResolved=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setResolved\\"),this.instance.resolved=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRichContent=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRichContent\\"),this.instance.load(\\"richContent\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.richContent]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getLocation=function(){return t.prototype.traceCall.call(this,\\"getLocation\\"),new d(this.instance.getLocation(),this.engine)},r.prototype.updateMentions=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"updateMentions\\"),i=n.unwrap(r),this.instance.updateMentions(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.Comment=ie;var ae=function(t){function r(e,r){var n=t.call(this,\\"CommentReply\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAuthorEmail=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAuthorEmail\\"),this.instance.load(\\"authorEmail\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.authorEmail]}}))}))},r.prototype.getAuthorName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAuthorName\\"),this.instance.load(\\"authorName\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.authorName]}}))}))},r.prototype.getContent=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getContent\\"),this.instance.load(\\"content\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.content]}}))}))},r.prototype.setContent=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setContent\\"),this.instance.content=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getContentType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getContentType\\"),this.instance.load(\\"contentType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.contentType]}}))}))},r.prototype.getCreationDate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCreationDate\\"),this.instance.load(\\"creationDate\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.creationDate]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getMentions=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getMentions\\"),this.instance.load(\\"mentions\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.mentions]}}))}))},r.prototype.getResolved=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getResolved\\"),this.instance.load(\\"resolved\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.resolved]}}))}))},r.prototype.getRichContent=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRichContent\\"),this.instance.load(\\"richContent\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.richContent]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getLocation=function(){return t.prototype.traceCall.call(this,\\"getLocation\\"),new d(this.instance.getLocation(),this.engine)},r.prototype.getParentComment=function(){return t.prototype.traceCall.call(this,\\"getParentComment\\"),new ie(this.instance.getParentComment(),this.engine)},r.prototype.updateMentions=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"updateMentions\\"),i=n.unwrap(r),this.instance.updateMentions(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.CommentReply=ae;var oe=function(t){function r(e,r){var n=t.call(this,\\"Shape\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAltTextDescription=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAltTextDescription\\"),this.instance.load(\\"altTextDescription\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.altTextDescription]}}))}))},r.prototype.setAltTextDescription=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAltTextDescription\\"),this.instance.altTextDescription=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getAltTextTitle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAltTextTitle\\"),this.instance.load(\\"altTextTitle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.altTextTitle]}}))}))},r.prototype.setAltTextTitle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAltTextTitle\\"),this.instance.altTextTitle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getConnectionSiteCount=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getConnectionSiteCount\\"),this.instance.load(\\"connectionSiteCount\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.connectionSiteCount]}}))}))},r.prototype.getFill=function(){t.prototype.traceCall.call(this,\\"getFill\\");var e=this.instance.fill;return new he(e,this.engine)},r.prototype.getGeometricShape=function(){t.prototype.traceCall.call(this,\\"getGeometricShape\\");var e=this.instance.geometricShape;return new se(e,this.engine)},r.prototype.getGeometricShapeType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getGeometricShapeType\\"),this.instance.load(\\"geometricShapeType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.geometricShapeType]}}))}))},r.prototype.setGeometricShapeType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setGeometricShapeType\\"),this.instance.geometricShapeType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getGroup=function(){t.prototype.traceCall.call(this,\\"getGroup\\");var e=this.instance.group;return new le(e,this.engine)},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.setHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHeight\\"),this.instance.height=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getImage=function(){t.prototype.traceCall.call(this,\\"getImage\\");var e=this.instance.image;return new ce(e,this.engine)},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLevel=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLevel\\"),this.instance.load(\\"level\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.level]}}))}))},r.prototype.getLine=function(){t.prototype.traceCall.call(this,\\"getLine\\");var e=this.instance.line;return new ue(e,this.engine)},r.prototype.getLineFormat=function(){t.prototype.traceCall.call(this,\\"getLineFormat\\");var e=this.instance.lineFormat;return new pe(e,this.engine)},r.prototype.getLockAspectRatio=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLockAspectRatio\\"),this.instance.load(\\"lockAspectRatio\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.lockAspectRatio]}}))}))},r.prototype.setLockAspectRatio=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLockAspectRatio\\"),this.instance.lockAspectRatio=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getParentGroup=function(){return t.prototype.traceCall.call(this,\\"getParentGroup\\"),new r(this.instance.parentGroup,this.engine)},r.prototype.getPlacement=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getPlacement\\"),this.instance.load(\\"placement\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.placement]}}))}))},r.prototype.setPlacement=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setPlacement\\"),this.instance.placement=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRotation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRotation\\"),this.instance.load(\\"rotation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rotation]}}))}))},r.prototype.setRotation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRotation\\"),this.instance.rotation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextFrame=function(){t.prototype.traceCall.call(this,\\"getTextFrame\\");var e=this.instance.textFrame;return new ye(e,this.engine)},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWidth\\"),this.instance.width=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getZOrderPosition=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getZOrderPosition\\"),this.instance.load(\\"zOrderPosition\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.zOrderPosition]}}))}))},r.prototype.copyTo=function(e){t.prototype.traceCall.call(this,\\"copyTo\\");var i=n.unwrap(e);return new r(this.instance.copyTo(i),this.engine)},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getImageAsBase64=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getImageAsBase64\\"),i=n.unwrap(r),a=this.instance.getAsImage(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),[2,a.value]}}))}))},r.prototype.incrementLeft=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"incrementLeft\\"),i=n.unwrap(r),this.instance.incrementLeft(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.incrementRotation=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"incrementRotation\\"),i=n.unwrap(r),this.instance.incrementRotation(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.incrementTop=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"incrementTop\\"),i=n.unwrap(r),this.instance.incrementTop(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.scaleHeight=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"scaleHeight\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),this.instance.scaleHeight(o,s,c),[4,t.prototype.sync.call(this,e.Write)];case 1:return l.sent(),[2]}}))}))},r.prototype.scaleWidth=function(r,i,a){return __awaiter(this,void 0,Promise,(function(){var o,s,c;return __generator(this,(function(l){switch(l.label){case 0:return t.prototype.traceCall.call(this,\\"scaleWidth\\"),o=n.unwrap(r),s=n.unwrap(i),c=n.unwrap(a),this.instance.scaleWidth(o,s,c),[4,t.prototype.sync.call(this,e.Write)];case 1:return l.sent(),[2]}}))}))},r.prototype.setZOrder=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setZOrder\\"),i=n.unwrap(r),this.instance.setZOrder(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r.prototype.getAsImage=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getAsImage\\"),i=n.unwrap(r),a=this.instance.getAsImage(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),[2,a.value]}}))}))},r}(n);t.Shape=oe;var se=function(t){function r(e,r){var n=t.call(this,\\"GeometricShape\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r}(n);t.GeometricShape=se;var ce=function(t){function r(e,r){var n=t.call(this,\\"Image\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getShape=function(){t.prototype.traceCall.call(this,\\"getShape\\");var e=this.instance.shape;return new oe(e,this.engine)},r.prototype.getFormat=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getFormat\\"),this.instance.load(\\"format\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.format]}}))}))},r}(n);t.Image=ce;var le=function(t){function r(e,r){var n=t.call(this,\\"ShapeGroup\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getShapes=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getShapes\\"),this.instance.shapes.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.shapes.items.map((function(t){return new oe(t,r.engine)}))]}}))}))},r.prototype.getShape=function(e){t.prototype.traceCall.call(this,\\"getShape\\");var r=n.unwrap(e),i=this.instance.shapes.getItem(r);return new oe(i,this.engine)},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getGroupShape=function(){t.prototype.traceCall.call(this,\\"getGroupShape\\");var e=this.instance.shape;return new oe(e,this.engine)},r.prototype.ungroup=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"ungroup\\"),this.instance.ungroup(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.ShapeGroup=le;var ue=function(t){function r(e,r){var n=t.call(this,\\"Line\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBeginArrowheadLength=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBeginArrowheadLength\\"),this.instance.load(\\"beginArrowheadLength\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.beginArrowheadLength]}}))}))},r.prototype.setBeginArrowheadLength=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBeginArrowheadLength\\"),this.instance.beginArrowheadLength=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBeginArrowheadStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBeginArrowheadStyle\\"),this.instance.load(\\"beginArrowheadStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.beginArrowheadStyle]}}))}))},r.prototype.setBeginArrowheadStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBeginArrowheadStyle\\"),this.instance.beginArrowheadStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBeginArrowheadWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBeginArrowheadWidth\\"),this.instance.load(\\"beginArrowheadWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.beginArrowheadWidth]}}))}))},r.prototype.setBeginArrowheadWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBeginArrowheadWidth\\"),this.instance.beginArrowheadWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBeginConnectedShape=function(){t.prototype.traceCall.call(this,\\"getBeginConnectedShape\\");var e=this.instance.beginConnectedShape;return new oe(e,this.engine)},r.prototype.getBeginConnectedSite=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBeginConnectedSite\\"),this.instance.load(\\"beginConnectedSite\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.beginConnectedSite]}}))}))},r.prototype.getEndArrowheadLength=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEndArrowheadLength\\"),this.instance.load(\\"endArrowheadLength\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.endArrowheadLength]}}))}))},r.prototype.setEndArrowheadLength=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEndArrowheadLength\\"),this.instance.endArrowheadLength=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getEndArrowheadStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEndArrowheadStyle\\"),this.instance.load(\\"endArrowheadStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.endArrowheadStyle]}}))}))},r.prototype.setEndArrowheadStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEndArrowheadStyle\\"),this.instance.endArrowheadStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getEndArrowheadWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEndArrowheadWidth\\"),this.instance.load(\\"endArrowheadWidth\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.endArrowheadWidth]}}))}))},r.prototype.setEndArrowheadWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setEndArrowheadWidth\\"),this.instance.endArrowheadWidth=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getEndConnectedShape=function(){t.prototype.traceCall.call(this,\\"getEndConnectedShape\\");var e=this.instance.endConnectedShape;return new oe(e,this.engine)},r.prototype.getEndConnectedSite=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getEndConnectedSite\\"),this.instance.load(\\"endConnectedSite\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.endConnectedSite]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getIsBeginConnected=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsBeginConnected\\"),this.instance.load(\\"isBeginConnected\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isBeginConnected]}}))}))},r.prototype.getIsEndConnected=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsEndConnected\\"),this.instance.load(\\"isEndConnected\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isEndConnected]}}))}))},r.prototype.getShape=function(){t.prototype.traceCall.call(this,\\"getShape\\");var e=this.instance.shape;return new oe(e,this.engine)},r.prototype.getConnectorType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getConnectorType\\"),this.instance.load(\\"connectorType\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.connectorType]}}))}))},r.prototype.setConnectorType=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setConnectorType\\"),this.instance.connectorType=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.connectBeginShape=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"connectBeginShape\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.connectBeginShape(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r.prototype.connectEndShape=function(r,i){return __awaiter(this,void 0,Promise,(function(){var a,o;return __generator(this,(function(s){switch(s.label){case 0:return t.prototype.traceCall.call(this,\\"connectEndShape\\"),a=n.unwrap(r),o=n.unwrap(i),this.instance.connectEndShape(a,o),[4,t.prototype.sync.call(this,e.Write)];case 1:return s.sent(),[2]}}))}))},r.prototype.disconnectBeginShape=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"disconnectBeginShape\\"),this.instance.disconnectBeginShape(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.disconnectEndShape=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"disconnectEndShape\\"),this.instance.disconnectEndShape(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.Line=ue;var he=function(t){function r(e,r){var n=t.call(this,\\"ShapeFill\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getForegroundColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getForegroundColor\\"),this.instance.load(\\"foregroundColor\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.foregroundColor]}}))}))},r.prototype.setForegroundColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setForegroundColor\\"),this.instance.foregroundColor=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTransparency=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTransparency\\"),this.instance.load(\\"transparency\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.transparency]}}))}))},r.prototype.setTransparency=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTransparency\\"),this.instance.transparency=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getType=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getType\\"),this.instance.load(\\"type\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.type]}}))}))},r.prototype.clear=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clear\\"),this.instance.clear(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.setSolidColor=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"setSolidColor\\"),i=n.unwrap(r),this.instance.setSolidColor(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.ShapeFill=he;var pe=function(t){function r(e,r){var n=t.call(this,\\"ShapeLineFormat\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getDashStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getDashStyle\\"),this.instance.load(\\"dashStyle\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.dashStyle]}}))}))},r.prototype.setDashStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setDashStyle\\"),this.instance.dashStyle=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTransparency=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTransparency\\"),this.instance.load(\\"transparency\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.transparency]}}))}))},r.prototype.setTransparency=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTransparency\\"),this.instance.transparency=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVisible=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVisible\\"),this.instance.load(\\"visible\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.visible]}}))}))},r.prototype.setVisible=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVisible\\"),this.instance.visible=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWeight\\"),this.instance.load(\\"weight\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.weight]}}))}))},r.prototype.setWeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWeight\\"),this.instance.weight=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ShapeLineFormat=pe;var ye=function(t){function r(e,r){var n=t.call(this,\\"TextFrame\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getAutoSizeSetting=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getAutoSizeSetting\\"),this.instance.load(\\"autoSizeSetting\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.autoSizeSetting]}}))}))},r.prototype.setAutoSizeSetting=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setAutoSizeSetting\\"),this.instance.autoSizeSetting=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getBottomMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBottomMargin\\"),this.instance.load(\\"bottomMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bottomMargin]}}))}))},r.prototype.setBottomMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBottomMargin\\"),this.instance.bottomMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHasText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHasText\\"),this.instance.load(\\"hasText\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hasText]}}))}))},r.prototype.getHorizontalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalAlignment\\"),this.instance.load(\\"horizontalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalAlignment]}}))}))},r.prototype.setHorizontalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalAlignment\\"),this.instance.horizontalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHorizontalOverflow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHorizontalOverflow\\"),this.instance.load(\\"horizontalOverflow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.horizontalOverflow]}}))}))},r.prototype.setHorizontalOverflow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHorizontalOverflow\\"),this.instance.horizontalOverflow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getLeftMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeftMargin\\"),this.instance.load(\\"leftMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.leftMargin]}}))}))},r.prototype.setLeftMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeftMargin\\"),this.instance.leftMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getOrientation=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getOrientation\\"),this.instance.load(\\"orientation\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.orientation]}}))}))},r.prototype.setOrientation=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setOrientation\\"),this.instance.orientation=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getReadingOrder=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getReadingOrder\\"),this.instance.load(\\"readingOrder\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.readingOrder]}}))}))},r.prototype.setReadingOrder=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setReadingOrder\\"),this.instance.readingOrder=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getRightMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getRightMargin\\"),this.instance.load(\\"rightMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.rightMargin]}}))}))},r.prototype.setRightMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setRightMargin\\"),this.instance.rightMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTextRange=function(){t.prototype.traceCall.call(this,\\"getTextRange\\");var e=this.instance.textRange;return new de(e,this.engine)},r.prototype.getTopMargin=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTopMargin\\"),this.instance.load(\\"topMargin\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.topMargin]}}))}))},r.prototype.setTopMargin=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTopMargin\\"),this.instance.topMargin=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalAlignment=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalAlignment\\"),this.instance.load(\\"verticalAlignment\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalAlignment]}}))}))},r.prototype.setVerticalAlignment=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalAlignment\\"),this.instance.verticalAlignment=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getVerticalOverflow=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getVerticalOverflow\\"),this.instance.load(\\"verticalOverflow\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.verticalOverflow]}}))}))},r.prototype.setVerticalOverflow=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setVerticalOverflow\\"),this.instance.verticalOverflow=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.deleteText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"deleteText\\"),this.instance.deleteText(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r}(n);t.TextFrame=ye;var de=function(t){function r(e,r){var n=t.call(this,\\"TextRange\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getFont=function(){t.prototype.traceCall.call(this,\\"getFont\\");var e=this.instance.font;return new fe(e,this.engine)},r.prototype.getText=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getText\\"),this.instance.load(\\"text\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.text]}}))}))},r.prototype.setText=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setText\\"),this.instance.text=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSubstring=function(e,i){t.prototype.traceCall.call(this,\\"getSubstring\\");var a=n.unwrap(e),o=n.unwrap(i);return new r(this.instance.getSubstring(a,o),this.engine)},r}(n);t.TextRange=de;var fe=function(t){function r(e,r){var n=t.call(this,\\"ShapeFont\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getBold=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getBold\\"),this.instance.load(\\"bold\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.bold]}}))}))},r.prototype.setBold=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setBold\\"),this.instance.bold=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getColor=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getColor\\"),this.instance.load(\\"color\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.color]}}))}))},r.prototype.setColor=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setColor\\"),this.instance.color=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getItalic=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getItalic\\"),this.instance.load(\\"italic\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.italic]}}))}))},r.prototype.setItalic=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setItalic\\"),this.instance.italic=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSize=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSize\\"),this.instance.load(\\"size\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.size]}}))}))},r.prototype.setSize=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSize\\"),this.instance.size=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getUnderline=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getUnderline\\"),this.instance.load(\\"underline\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.underline]}}))}))},r.prototype.setUnderline=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setUnderline\\"),this.instance.underline=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r}(n);t.ShapeFont=fe;var _e=function(t){function r(e,r){var n=t.call(this,\\"Slicer\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getSlicerItems=function(){return __awaiter(this,void 0,Promise,(function(){var r=this;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicerItems\\"),this.instance.slicerItems.load(\\"items\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,this.instance.slicerItems.items.map((function(t){return new ge(t,r.engine)}))]}}))}))},r.prototype.getSlicerItem=function(r){return __awaiter(this,void 0,Promise,(function(){var i,a;return __generator(this,(function(o){switch(o.label){case 0:return t.prototype.traceCall.call(this,\\"getSlicerItem\\"),i=n.unwrap(r),a=this.instance.slicerItems.getItemOrNullObject(i),[4,t.prototype.sync.call(this,e.Read)];case 1:return o.sent(),a.isNullObject?[2,void 0]:[2,new ge(a,this.engine)]}}))}))},r.prototype.getCaption=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getCaption\\"),this.instance.load(\\"caption\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.caption]}}))}))},r.prototype.setCaption=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setCaption\\"),this.instance.caption=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getHeight=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHeight\\"),this.instance.load(\\"height\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.height]}}))}))},r.prototype.setHeight=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setHeight\\"),this.instance.height=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getId=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getId\\"),this.instance.load(\\"id\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.id]}}))}))},r.prototype.getIsFilterCleared=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsFilterCleared\\"),this.instance.load(\\"isFilterCleared\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isFilterCleared]}}))}))},r.prototype.getLeft=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getLeft\\"),this.instance.load(\\"left\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.left]}}))}))},r.prototype.setLeft=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setLeft\\"),this.instance.left=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getSortBy=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getSortBy\\"),this.instance.load(\\"sortBy\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.sortBy]}}))}))},r.prototype.setSortBy=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setSortBy\\"),this.instance.sortBy=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getStyle=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getStyle\\"),this.instance.load(\\"style\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.style]}}))}))},r.prototype.setStyle=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setStyle\\"),this.instance.style=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getTop=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getTop\\"),this.instance.load(\\"top\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.top]}}))}))},r.prototype.setTop=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setTop\\"),this.instance.top=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWidth=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getWidth\\"),this.instance.load(\\"width\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.width]}}))}))},r.prototype.setWidth=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setWidth\\"),this.instance.width=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getWorksheet=function(){t.prototype.traceCall.call(this,\\"getWorksheet\\");var e=this.instance.worksheet;return new h(e,this.engine)},r.prototype.clearFilters=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"clearFilters\\"),this.instance.clearFilters(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.getSelectedItems=function(){return __awaiter(this,void 0,Promise,(function(){var r;return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"getSelectedItems\\"),r=this.instance.getSelectedItems(),[4,t.prototype.sync.call(this,e.Read)];case 1:return n.sent(),[2,r.value]}}))}))},r.prototype.selectItems=function(r){return __awaiter(this,void 0,Promise,(function(){var i;return __generator(this,(function(a){switch(a.label){case 0:return t.prototype.traceCall.call(this,\\"selectItems\\"),i=n.unwrap(r),this.instance.selectItems(i),[4,t.prototype.sync.call(this,e.Write)];case 1:return a.sent(),[2]}}))}))},r}(n);t.Slicer=_e;var ge=function(t){function r(e,r){var n=t.call(this,\\"SlicerItem\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getHasData=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getHasData\\"),this.instance.load(\\"hasData\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.hasData]}}))}))},r.prototype.getIsSelected=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getIsSelected\\"),this.instance.load(\\"isSelected\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.isSelected]}}))}))},r.prototype.setIsSelected=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setIsSelected\\"),this.instance.isSelected=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.getKey=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getKey\\"),this.instance.load(\\"key\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.key]}}))}))},r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r}(n);t.SlicerItem=ge;var me=function(t){function r(e,r){var n=t.call(this,\\"NamedSheetView\\",e,r)||this;return Object.freeze(n),n}return __extends(r,t),r.prototype.getName=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"getName\\"),this.instance.load(\\"name\\"),[4,t.prototype.sync.call(this,e.Read)];case 1:return r.sent(),[2,this.instance.name]}}))}))},r.prototype.setName=function(r){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(n){switch(n.label){case 0:return t.prototype.traceCall.call(this,\\"setName\\"),this.instance.name=r,[4,t.prototype.sync.call(this,e.Write)];case 1:return n.sent(),[2]}}))}))},r.prototype.activate=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"activate\\"),this.instance.activate(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.delete=function(){return __awaiter(this,void 0,Promise,(function(){return __generator(this,(function(r){switch(r.label){case 0:return t.prototype.traceCall.call(this,\\"delete\\"),this.instance.delete(),[4,t.prototype.sync.call(this,e.Write)];case 1:return r.sent(),[2]}}))}))},r.prototype.duplicate=function(e){t.prototype.traceCall.call(this,\\"duplicate\\");var i=n.unwrap(e);return new r(this.instance.duplicate(i),this.engine)},r}(n);t.NamedSheetView=me,function(t){t[t.manual=Excel.WorkbookLinksRefreshMode.manual]=\\"manual\\",t[t.automatic=Excel.WorkbookLinksRefreshMode.automatic]=\\"automatic\\"}(t.WorkbookLinksRefreshMode||(t.WorkbookLinksRefreshMode={})),function(t){t[t.unknown=Excel.DateFilterCondition.unknown]=\\"unknown\\",t[t.equals=Excel.DateFilterCondition.equals]=\\"equals\\",t[t.before=Excel.DateFilterCondition.before]=\\"before\\",t[t.beforeOrEqualTo=Excel.DateFilterCondition.beforeOrEqualTo]=\\"beforeOrEqualTo\\",t[t.after=Excel.DateFilterCondition.after]=\\"after\\",t[t.afterOrEqualTo=Excel.DateFilterCondition.afterOrEqualTo]=\\"afterOrEqualTo\\",t[t.between=Excel.DateFilterCondition.between]=\\"between\\",t[t.tomorrow=Excel.DateFilterCondition.tomorrow]=\\"tomorrow\\",t[t.today=Excel.DateFilterCondition.today]=\\"today\\",t[t.yesterday=Excel.DateFilterCondition.yesterday]=\\"yesterday\\",t[t.nextWeek=Excel.DateFilterCondition.nextWeek]=\\"nextWeek\\",t[t.thisWeek=Excel.DateFilterCondition.thisWeek]=\\"thisWeek\\",t[t.lastWeek=Excel.DateFilterCondition.lastWeek]=\\"lastWeek\\",t[t.nextMonth=Excel.DateFilterCondition.nextMonth]=\\"nextMonth\\",t[t.thisMonth=Excel.DateFilterCondition.thisMonth]=\\"thisMonth\\",t[t.lastMonth=Excel.DateFilterCondition.lastMonth]=\\"lastMonth\\",t[t.nextQuarter=Excel.DateFilterCondition.nextQuarter]=\\"nextQuarter\\",t[t.thisQuarter=Excel.DateFilterCondition.thisQuarter]=\\"thisQuarter\\",t[t.lastQuarter=Excel.DateFilterCondition.lastQuarter]=\\"lastQuarter\\",t[t.nextYear=Excel.DateFilterCondition.nextYear]=\\"nextYear\\",t[t.thisYear=Excel.DateFilterCondition.thisYear]=\\"thisYear\\",t[t.lastYear=Excel.DateFilterCondition.lastYear]=\\"lastYear\\",t[t.yearToDate=Excel.DateFilterCondition.yearToDate]=\\"yearToDate\\",t[t.allDatesInPeriodQuarter1=Excel.DateFilterCondition.allDatesInPeriodQuarter1]=\\"allDatesInPeriodQuarter1\\",t[t.allDatesInPeriodQuarter2=Excel.DateFilterCondition.allDatesInPeriodQuarter2]=\\"allDatesInPeriodQuarter2\\",t[t.allDatesInPeriodQuarter3=Excel.DateFilterCondition.allDatesInPeriodQuarter3]=\\"allDatesInPeriodQuarter3\\",t[t.allDatesInPeriodQuarter4=Excel.DateFilterCondition.allDatesInPeriodQuarter4]=\\"allDatesInPeriodQuarter4\\",t[t.allDatesInPeriodJanuary=Excel.DateFilterCondition.allDatesInPeriodJanuary]=\\"allDatesInPeriodJanuary\\",t[t.allDatesInPeriodFebruary=Excel.DateFilterCondition.allDatesInPeriodFebruary]=\\"allDatesInPeriodFebruary\\",t[t.allDatesInPeriodMarch=Excel.DateFilterCondition.allDatesInPeriodMarch]=\\"allDatesInPeriodMarch\\",t[t.allDatesInPeriodApril=Excel.DateFilterCondition.allDatesInPeriodApril]=\\"allDatesInPeriodApril\\",t[t.allDatesInPeriodMay=Excel.DateFilterCondition.allDatesInPeriodMay]=\\"allDatesInPeriodMay\\",t[t.allDatesInPeriodJune=Excel.DateFilterCondition.allDatesInPeriodJune]=\\"allDatesInPeriodJune\\",t[t.allDatesInPeriodJuly=Excel.DateFilterCondition.allDatesInPeriodJuly]=\\"allDatesInPeriodJuly\\",t[t.allDatesInPeriodAugust=Excel.DateFilterCondition.allDatesInPeriodAugust]=\\"allDatesInPeriodAugust\\",t[t.allDatesInPeriodSeptember=Excel.DateFilterCondition.allDatesInPeriodSeptember]=\\"allDatesInPeriodSeptember\\",t[t.allDatesInPeriodOctober=Excel.DateFilterCondition.allDatesInPeriodOctober]=\\"allDatesInPeriodOctober\\",t[t.allDatesInPeriodNovember=Excel.DateFilterCondition.allDatesInPeriodNovember]=\\"allDatesInPeriodNovember\\",t[t.allDatesInPeriodDecember=Excel.DateFilterCondition.allDatesInPeriodDecember]=\\"allDatesInPeriodDecember\\"}(t.DateFilterCondition||(t.DateFilterCondition={})),function(t){t[t.unknown=Excel.LabelFilterCondition.unknown]=\\"unknown\\",t[t.equals=Excel.LabelFilterCondition.equals]=\\"equals\\",t[t.beginsWith=Excel.LabelFilterCondition.beginsWith]=\\"beginsWith\\",t[t.endsWith=Excel.LabelFilterCondition.endsWith]=\\"endsWith\\",t[t.contains=Excel.LabelFilterCondition.contains]=\\"contains\\",t[t.greaterThan=Excel.LabelFilterCondition.greaterThan]=\\"greaterThan\\",t[t.greaterThanOrEqualTo=Excel.LabelFilterCondition.greaterThanOrEqualTo]=\\"greaterThanOrEqualTo\\",t[t.lessThan=Excel.LabelFilterCondition.lessThan]=\\"lessThan\\",t[t.lessThanOrEqualTo=Excel.LabelFilterCondition.lessThanOrEqualTo]=\\"lessThanOrEqualTo\\",t[t.between=Excel.LabelFilterCondition.between]=\\"between\\"}(t.LabelFilterCondition||(t.LabelFilterCondition={})),function(t){t[t.unknown=Excel.PivotFilterType.unknown]=\\"unknown\\",t[t.value=Excel.PivotFilterType.value]=\\"value\\",t[t.manual=Excel.PivotFilterType.manual]=\\"manual\\",t[t.label=Excel.PivotFilterType.label]=\\"label\\",t[t.date=Excel.PivotFilterType.date]=\\"date\\"}(t.PivotFilterType||(t.PivotFilterType={})),function(t){t[t.items=Excel.TopBottomSelectionType.items]=\\"items\\",t[t.percent=Excel.TopBottomSelectionType.percent]=\\"percent\\",t[t.sum=Excel.TopBottomSelectionType.sum]=\\"sum\\"}(t.TopBottomSelectionType||(t.TopBottomSelectionType={})),function(t){t[t.unknown=Excel.ValueFilterCondition.unknown]=\\"unknown\\",t[t.equals=Excel.ValueFilterCondition.equals]=\\"equals\\",t[t.greaterThan=Excel.ValueFilterCondition.greaterThan]=\\"greaterThan\\",t[t.greaterThanOrEqualTo=Excel.ValueFilterCondition.greaterThanOrEqualTo]=\\"greaterThanOrEqualTo\\",t[t.lessThan=Excel.ValueFilterCondition.lessThan]=\\"lessThan\\",t[t.lessThanOrEqualTo=Excel.ValueFilterCondition.lessThanOrEqualTo]=\\"lessThanOrEqualTo\\",t[t.between=Excel.ValueFilterCondition.between]=\\"between\\",t[t.topN=Excel.ValueFilterCondition.topN]=\\"topN\\",t[t.bottomN=Excel.ValueFilterCondition.bottomN]=\\"bottomN\\"}(t.ValueFilterCondition||(t.ValueFilterCondition={})),function(t){t[t.categories=Excel.ChartSeriesDimension.categories]=\\"categories\\",t[t.values=Excel.ChartSeriesDimension.values]=\\"values\\",t[t.xvalues=Excel.ChartSeriesDimension.xvalues]=\\"xvalues\\",t[t.yvalues=Excel.ChartSeriesDimension.yvalues]=\\"yvalues\\",t[t.bubbleSizes=Excel.ChartSeriesDimension.bubbleSizes]=\\"bubbleSizes\\"}(t.ChartSeriesDimension||(t.ChartSeriesDimension={})),function(t){t[t.invalid=Excel.PivotFilterTopBottomCriterion.invalid]=\\"invalid\\",t[t.topItems=Excel.PivotFilterTopBottomCriterion.topItems]=\\"topItems\\",t[t.topPercent=Excel.PivotFilterTopBottomCriterion.topPercent]=\\"topPercent\\",t[t.topSum=Excel.PivotFilterTopBottomCriterion.topSum]=\\"topSum\\",t[t.bottomItems=Excel.PivotFilterTopBottomCriterion.bottomItems]=\\"bottomItems\\",t[t.bottomPercent=Excel.PivotFilterTopBottomCriterion.bottomPercent]=\\"bottomPercent\\",t[t.bottomSum=Excel.PivotFilterTopBottomCriterion.bottomSum]=\\"bottomSum\\"}(t.PivotFilterTopBottomCriterion||(t.PivotFilterTopBottomCriterion={})),function(t){t[t.ascending=Excel.SortBy.ascending]=\\"ascending\\",t[t.descending=Excel.SortBy.descending]=\\"descending\\"}(t.SortBy||(t.SortBy={})),function(t){t[t.unknown=Excel.AggregationFunction.unknown]=\\"unknown\\",t[t.automatic=Excel.AggregationFunction.automatic]=\\"automatic\\",t[t.sum=Excel.AggregationFunction.sum]=\\"sum\\",t[t.count=Excel.AggregationFunction.count]=\\"count\\",t[t.average=Excel.AggregationFunction.average]=\\"average\\",t[t.max=Excel.AggregationFunction.max]=\\"max\\",t[t.min=Excel.AggregationFunction.min]=\\"min\\",t[t.product=Excel.AggregationFunction.product]=\\"product\\",t[t.countNumbers=Excel.AggregationFunction.countNumbers]=\\"countNumbers\\",t[t.standardDeviation=Excel.AggregationFunction.standardDeviation]=\\"standardDeviation\\",t[t.standardDeviationP=Excel.AggregationFunction.standardDeviationP]=\\"standardDeviationP\\",t[t.variance=Excel.AggregationFunction.variance]=\\"variance\\",t[t.varianceP=Excel.AggregationFunction.varianceP]=\\"varianceP\\"}(t.AggregationFunction||(t.AggregationFunction={})),function(t){t[t.unknown=Excel.ShowAsCalculation.unknown]=\\"unknown\\",t[t.none=Excel.ShowAsCalculation.none]=\\"none\\",t[t.percentOfGrandTotal=Excel.ShowAsCalculation.percentOfGrandTotal]=\\"percentOfGrandTotal\\",t[t.percentOfRowTotal=Excel.ShowAsCalculation.percentOfRowTotal]=\\"percentOfRowTotal\\",t[t.percentOfColumnTotal=Excel.ShowAsCalculation.percentOfColumnTotal]=\\"percentOfColumnTotal\\",t[t.percentOfParentRowTotal=Excel.ShowAsCalculation.percentOfParentRowTotal]=\\"percentOfParentRowTotal\\",t[t.percentOfParentColumnTotal=Excel.ShowAsCalculation.percentOfParentColumnTotal]=\\"percentOfParentColumnTotal\\",t[t.percentOfParentTotal=Excel.ShowAsCalculation.percentOfParentTotal]=\\"percentOfParentTotal\\",t[t.percentOf=Excel.ShowAsCalculation.percentOf]=\\"percentOf\\",t[t.runningTotal=Excel.ShowAsCalculation.runningTotal]=\\"runningTotal\\",t[t.percentRunningTotal=Excel.ShowAsCalculation.percentRunningTotal]=\\"percentRunningTotal\\",t[t.differenceFrom=Excel.ShowAsCalculation.differenceFrom]=\\"differenceFrom\\",t[t.percentDifferenceFrom=Excel.ShowAsCalculation.percentDifferenceFrom]=\\"percentDifferenceFrom\\",t[t.rankAscending=Excel.ShowAsCalculation.rankAscending]=\\"rankAscending\\",t[t.rankDecending=Excel.ShowAsCalculation.rankDecending]=\\"rankDecending\\",t[t.index=Excel.ShowAsCalculation.index]=\\"index\\"}(t.ShowAsCalculation||(t.ShowAsCalculation={})),function(t){t[t.unknown=Excel.PivotAxis.unknown]=\\"unknown\\",t[t.row=Excel.PivotAxis.row]=\\"row\\",t[t.column=Excel.PivotAxis.column]=\\"column\\",t[t.data=Excel.PivotAxis.data]=\\"data\\",t[t.filter=Excel.PivotAxis.filter]=\\"filter\\"}(t.PivotAxis||(t.PivotAxis={})),function(t){t[t.invalid=Excel.ChartAxisType.invalid]=\\"invalid\\",t[t.category=Excel.ChartAxisType.category]=\\"category\\",t[t.value=Excel.ChartAxisType.value]=\\"value\\",t[t.series=Excel.ChartAxisType.series]=\\"series\\"}(t.ChartAxisType||(t.ChartAxisType={})),function(t){t[t.primary=Excel.ChartAxisGroup.primary]=\\"primary\\",t[t.secondary=Excel.ChartAxisGroup.secondary]=\\"secondary\\"}(t.ChartAxisGroup||(t.ChartAxisGroup={})),function(t){t[t.linear=Excel.ChartAxisScaleType.linear]=\\"linear\\",t[t.logarithmic=Excel.ChartAxisScaleType.logarithmic]=\\"logarithmic\\"}(t.ChartAxisScaleType||(t.ChartAxisScaleType={})),function(t){t[t.automatic=Excel.ChartAxisPosition.automatic]=\\"automatic\\",t[t.maximum=Excel.ChartAxisPosition.maximum]=\\"maximum\\",t[t.minimum=Excel.ChartAxisPosition.minimum]=\\"minimum\\",t[t.custom=Excel.ChartAxisPosition.custom]=\\"custom\\"}(t.ChartAxisPosition||(t.ChartAxisPosition={})),function(t){t[t.none=Excel.ChartAxisTickMark.none]=\\"none\\",t[t.cross=Excel.ChartAxisTickMark.cross]=\\"cross\\",t[t.inside=Excel.ChartAxisTickMark.inside]=\\"inside\\",t[t.outside=Excel.ChartAxisTickMark.outside]=\\"outside\\"}(t.ChartAxisTickMark||(t.ChartAxisTickMark={})),function(t){t[t.done=Excel.CalculationState.done]=\\"done\\",t[t.calculating=Excel.CalculationState.calculating]=\\"calculating\\",t[t.pending=Excel.CalculationState.pending]=\\"pending\\"}(t.CalculationState||(t.CalculationState={})),function(t){t[t.nextToAxis=Excel.ChartAxisTickLabelPosition.nextToAxis]=\\"nextToAxis\\",t[t.high=Excel.ChartAxisTickLabelPosition.high]=\\"high\\",t[t.low=Excel.ChartAxisTickLabelPosition.low]=\\"low\\",t[t.none=Excel.ChartAxisTickLabelPosition.none]=\\"none\\"}(t.ChartAxisTickLabelPosition||(t.ChartAxisTickLabelPosition={})),function(t){t[t.none=Excel.ChartAxisDisplayUnit.none]=\\"none\\",t[t.hundreds=Excel.ChartAxisDisplayUnit.hundreds]=\\"hundreds\\",t[t.thousands=Excel.ChartAxisDisplayUnit.thousands]=\\"thousands\\",t[t.tenThousands=Excel.ChartAxisDisplayUnit.tenThousands]=\\"tenThousands\\",t[t.hundredThousands=Excel.ChartAxisDisplayUnit.hundredThousands]=\\"hundredThousands\\",t[t.millions=Excel.ChartAxisDisplayUnit.millions]=\\"millions\\",t[t.tenMillions=Excel.ChartAxisDisplayUnit.tenMillions]=\\"tenMillions\\",t[t.hundredMillions=Excel.ChartAxisDisplayUnit.hundredMillions]=\\"hundredMillions\\",t[t.billions=Excel.ChartAxisDisplayUnit.billions]=\\"billions\\",t[t.trillions=Excel.ChartAxisDisplayUnit.trillions]=\\"trillions\\",t[t.custom=Excel.ChartAxisDisplayUnit.custom]=\\"custom\\"}(t.ChartAxisDisplayUnit||(t.ChartAxisDisplayUnit={})),function(t){t[t.days=Excel.ChartAxisTimeUnit.days]=\\"days\\",t[t.months=Excel.ChartAxisTimeUnit.months]=\\"months\\",t[t.years=Excel.ChartAxisTimeUnit.years]=\\"years\\"}(t.ChartAxisTimeUnit||(t.ChartAxisTimeUnit={})),function(t){t[t.inclusive=Excel.ChartBoxQuartileCalculation.inclusive]=\\"inclusive\\",t[t.exclusive=Excel.ChartBoxQuartileCalculation.exclusive]=\\"exclusive\\"}(t.ChartBoxQuartileCalculation||(t.ChartBoxQuartileCalculation={})),function(t){t[t.automatic=Excel.ChartAxisCategoryType.automatic]=\\"automatic\\",t[t.textAxis=Excel.ChartAxisCategoryType.textAxis]=\\"textAxis\\",t[t.dateAxis=Excel.ChartAxisCategoryType.dateAxis]=\\"dateAxis\\"}(t.ChartAxisCategoryType||(t.ChartAxisCategoryType={})),function(t){t[t.category=Excel.ChartBinType.category]=\\"category\\",t[t.auto=Excel.ChartBinType.auto]=\\"auto\\",t[t.binWidth=Excel.ChartBinType.binWidth]=\\"binWidth\\",t[t.binCount=Excel.ChartBinType.binCount]=\\"binCount\\"}(t.ChartBinType||(t.ChartBinType={})),function(t){t[t.none=Excel.ChartLineStyle.none]=\\"none\\",t[t.continuous=Excel.ChartLineStyle.continuous]=\\"continuous\\",t[t.dash=Excel.ChartLineStyle.dash]=\\"dash\\",t[t.dashDot=Excel.ChartLineStyle.dashDot]=\\"dashDot\\",t[t.dashDotDot=Excel.ChartLineStyle.dashDotDot]=\\"dashDotDot\\",t[t.dot=Excel.ChartLineStyle.dot]=\\"dot\\",t[t.grey25=Excel.ChartLineStyle.grey25]=\\"grey25\\",t[t.grey50=Excel.ChartLineStyle.grey50]=\\"grey50\\",t[t.grey75=Excel.ChartLineStyle.grey75]=\\"grey75\\",t[t.automatic=Excel.ChartLineStyle.automatic]=\\"automatic\\",t[t.roundDot=Excel.ChartLineStyle.roundDot]=\\"roundDot\\"}(t.ChartLineStyle||(t.ChartLineStyle={})),function(t){t[t.invalid=Excel.ChartDataLabelPosition.invalid]=\\"invalid\\",t[t.none=Excel.ChartDataLabelPosition.none]=\\"none\\",t[t.center=Excel.ChartDataLabelPosition.center]=\\"center\\",t[t.insideEnd=Excel.ChartDataLabelPosition.insideEnd]=\\"insideEnd\\",t[t.insideBase=Excel.ChartDataLabelPosition.insideBase]=\\"insideBase\\",t[t.outsideEnd=Excel.ChartDataLabelPosition.outsideEnd]=\\"outsideEnd\\",t[t.left=Excel.ChartDataLabelPosition.left]=\\"left\\",t[t.right=Excel.ChartDataLabelPosition.right]=\\"right\\",t[t.top=Excel.ChartDataLabelPosition.top]=\\"top\\",t[t.bottom=Excel.ChartDataLabelPosition.bottom]=\\"bottom\\",t[t.bestFit=Excel.ChartDataLabelPosition.bestFit]=\\"bestFit\\",t[t.callout=Excel.ChartDataLabelPosition.callout]=\\"callout\\"}(t.ChartDataLabelPosition||(t.ChartDataLabelPosition={})),function(t){t[t.both=Excel.ChartErrorBarsInclude.both]=\\"both\\",t[t.minusValues=Excel.ChartErrorBarsInclude.minusValues]=\\"minusValues\\",t[t.plusValues=Excel.ChartErrorBarsInclude.plusValues]=\\"plusValues\\"}(t.ChartErrorBarsInclude||(t.ChartErrorBarsInclude={})),function(t){t[t.fixedValue=Excel.ChartErrorBarsType.fixedValue]=\\"fixedValue\\",t[t.percent=Excel.ChartErrorBarsType.percent]=\\"percent\\",t[t.stDev=Excel.ChartErrorBarsType.stDev]=\\"stDev\\",t[t.stError=Excel.ChartErrorBarsType.stError]=\\"stError\\",t[t.custom=Excel.ChartErrorBarsType.custom]=\\"custom\\"}(t.ChartErrorBarsType||(t.ChartErrorBarsType={})),function(t){t[t.automatic=Excel.ChartMapAreaLevel.automatic]=\\"automatic\\",t[t.dataOnly=Excel.ChartMapAreaLevel.dataOnly]=\\"dataOnly\\",t[t.city=Excel.ChartMapAreaLevel.city]=\\"city\\",t[t.county=Excel.ChartMapAreaLevel.county]=\\"county\\",t[t.state=Excel.ChartMapAreaLevel.state]=\\"state\\",t[t.country=Excel.ChartMapAreaLevel.country]=\\"country\\",t[t.continent=Excel.ChartMapAreaLevel.continent]=\\"continent\\",t[t.world=Excel.ChartMapAreaLevel.world]=\\"world\\"}(t.ChartMapAreaLevel||(t.ChartMapAreaLevel={})),function(t){t[t.twoPhaseColor=Excel.ChartGradientStyle.twoPhaseColor]=\\"twoPhaseColor\\",t[t.threePhaseColor=Excel.ChartGradientStyle.threePhaseColor]=\\"threePhaseColor\\"}(t.ChartGradientStyle||(t.ChartGradientStyle={})),function(t){t[t.extremeValue=Excel.ChartGradientStyleType.extremeValue]=\\"extremeValue\\",t[t.number=Excel.ChartGradientStyleType.number]=\\"number\\",t[t.percent=Excel.ChartGradientStyleType.percent]=\\"percent\\"}(t.ChartGradientStyleType||(t.ChartGradientStyleType={})),function(t){t[t.automatic=Excel.ChartTitlePosition.automatic]=\\"automatic\\",t[t.top=Excel.ChartTitlePosition.top]=\\"top\\",t[t.bottom=Excel.ChartTitlePosition.bottom]=\\"bottom\\",t[t.left=Excel.ChartTitlePosition.left]=\\"left\\",t[t.right=Excel.ChartTitlePosition.right]=\\"right\\"}(t.ChartTitlePosition||(t.ChartTitlePosition={})),function(t){t[t.invalid=Excel.ChartLegendPosition.invalid]=\\"invalid\\",t[t.top=Excel.ChartLegendPosition.top]=\\"top\\",t[t.bottom=Excel.ChartLegendPosition.bottom]=\\"bottom\\",t[t.left=Excel.ChartLegendPosition.left]=\\"left\\",t[t.right=Excel.ChartLegendPosition.right]=\\"right\\",t[t.corner=Excel.ChartLegendPosition.corner]=\\"corner\\",t[t.custom=Excel.ChartLegendPosition.custom]=\\"custom\\"}(t.ChartLegendPosition||(t.ChartLegendPosition={})),function(t){t[t.invalid=Excel.ChartMarkerStyle.invalid]=\\"invalid\\",t[t.automatic=Excel.ChartMarkerStyle.automatic]=\\"automatic\\",t[t.none=Excel.ChartMarkerStyle.none]=\\"none\\",t[t.square=Excel.ChartMarkerStyle.square]=\\"square\\",t[t.diamond=Excel.ChartMarkerStyle.diamond]=\\"diamond\\",t[t.triangle=Excel.ChartMarkerStyle.triangle]=\\"triangle\\",t[t.x=Excel.ChartMarkerStyle.x]=\\"x\\",t[t.star=Excel.ChartMarkerStyle.star]=\\"star\\",t[t.dot=Excel.ChartMarkerStyle.dot]=\\"dot\\",t[t.dash=Excel.ChartMarkerStyle.dash]=\\"dash\\",t[t.circle=Excel.ChartMarkerStyle.circle]=\\"circle\\",t[t.plus=Excel.ChartMarkerStyle.plus]=\\"plus\\",t[t.picture=Excel.ChartMarkerStyle.picture]=\\"picture\\"}(t.ChartMarkerStyle||(t.ChartMarkerStyle={})),function(t){t[t.automatic=Excel.ChartPlotAreaPosition.automatic]=\\"automatic\\",t[t.custom=Excel.ChartPlotAreaPosition.custom]=\\"custom\\"}(t.ChartPlotAreaPosition||(t.ChartPlotAreaPosition={})),function(t){t[t.none=Excel.ChartMapLabelStrategy.none]=\\"none\\",t[t.bestFit=Excel.ChartMapLabelStrategy.bestFit]=\\"bestFit\\",t[t.showAll=Excel.ChartMapLabelStrategy.showAll]=\\"showAll\\"}(t.ChartMapLabelStrategy||(t.ChartMapLabelStrategy={})),function(t){t[t.automatic=Excel.ChartMapProjectionType.automatic]=\\"automatic\\",t[t.mercator=Excel.ChartMapProjectionType.mercator]=\\"mercator\\",t[t.miller=Excel.ChartMapProjectionType.miller]=\\"miller\\",t[t.robinson=Excel.ChartMapProjectionType.robinson]=\\"robinson\\",t[t.albers=Excel.ChartMapProjectionType.albers]=\\"albers\\"}(t.ChartMapProjectionType||(t.ChartMapProjectionType={})),function(t){t[t.none=Excel.ChartParentLabelStrategy.none]=\\"none\\",t[t.banner=Excel.ChartParentLabelStrategy.banner]=\\"banner\\",t[t.overlapping=Excel.ChartParentLabelStrategy.overlapping]=\\"overlapping\\"}(t.ChartParentLabelStrategy||(t.ChartParentLabelStrategy={})),function(t){t[t.auto=Excel.ChartSeriesBy.auto]=\\"auto\\",t[t.columns=Excel.ChartSeriesBy.columns]=\\"columns\\",t[t.rows=Excel.ChartSeriesBy.rows]=\\"rows\\"}(t.ChartSeriesBy||(t.ChartSeriesBy={})),function(t){t[t.center=Excel.ChartTextHorizontalAlignment.center]=\\"center\\",t[t.left=Excel.ChartTextHorizontalAlignment.left]=\\"left\\",t[t.right=Excel.ChartTextHorizontalAlignment.right]=\\"right\\",t[t.justify=Excel.ChartTextHorizontalAlignment.justify]=\\"justify\\",t[t.distributed=Excel.ChartTextHorizontalAlignment.distributed]=\\"distributed\\"}(t.ChartTextHorizontalAlignment||(t.ChartTextHorizontalAlignment={})),function(t){t[t.center=Excel.ChartTextVerticalAlignment.center]=\\"center\\",t[t.bottom=Excel.ChartTextVerticalAlignment.bottom]=\\"bottom\\",t[t.top=Excel.ChartTextVerticalAlignment.top]=\\"top\\",t[t.justify=Excel.ChartTextVerticalAlignment.justify]=\\"justify\\",t[t.distributed=Excel.ChartTextVerticalAlignment.distributed]=\\"distributed\\"}(t.ChartTextVerticalAlignment||(t.ChartTextVerticalAlignment={})),function(t){t[t.center=Excel.ChartTickLabelAlignment.center]=\\"center\\",t[t.left=Excel.ChartTickLabelAlignment.left]=\\"left\\",t[t.right=Excel.ChartTickLabelAlignment.right]=\\"right\\"}(t.ChartTickLabelAlignment||(t.ChartTickLabelAlignment={})),function(t){t[t.invalid=Excel.ChartType.invalid]=\\"invalid\\",t[t.columnClustered=Excel.ChartType.columnClustered]=\\"columnClustered\\",t[t.columnStacked=Excel.ChartType.columnStacked]=\\"columnStacked\\",t[t.columnStacked100=Excel.ChartType.columnStacked100]=\\"columnStacked100\\",t[t.barClustered=Excel.ChartType.barClustered]=\\"barClustered\\",t[t.barStacked=Excel.ChartType.barStacked]=\\"barStacked\\",t[t.barStacked100=Excel.ChartType.barStacked100]=\\"barStacked100\\",t[t.lineStacked=Excel.ChartType.lineStacked]=\\"lineStacked\\",t[t.lineStacked100=Excel.ChartType.lineStacked100]=\\"lineStacked100\\",t[t.lineMarkers=Excel.ChartType.lineMarkers]=\\"lineMarkers\\",t[t.lineMarkersStacked=Excel.ChartType.lineMarkersStacked]=\\"lineMarkersStacked\\",t[t.lineMarkersStacked100=Excel.ChartType.lineMarkersStacked100]=\\"lineMarkersStacked100\\",t[t.pieOfPie=Excel.ChartType.pieOfPie]=\\"pieOfPie\\",t[t.pieExploded=Excel.ChartType.pieExploded]=\\"pieExploded\\",t[t.barOfPie=Excel.ChartType.barOfPie]=\\"barOfPie\\",t[t.xyscatterSmooth=Excel.ChartType.xyscatterSmooth]=\\"xyscatterSmooth\\",t[t.xyscatterSmoothNoMarkers=Excel.ChartType.xyscatterSmoothNoMarkers]=\\"xyscatterSmoothNoMarkers\\",t[t.xyscatterLines=Excel.ChartType.xyscatterLines]=\\"xyscatterLines\\",t[t.xyscatterLinesNoMarkers=Excel.ChartType.xyscatterLinesNoMarkers]=\\"xyscatterLinesNoMarkers\\",t[t.areaStacked=Excel.ChartType.areaStacked]=\\"areaStacked\\",t[t.areaStacked100=Excel.ChartType.areaStacked100]=\\"areaStacked100\\",t[t.doughnutExploded=Excel.ChartType.doughnutExploded]=\\"doughnutExploded\\",t[t.radarMarkers=Excel.ChartType.radarMarkers]=\\"radarMarkers\\",t[t.radarFilled=Excel.ChartType.radarFilled]=\\"radarFilled\\",t[t.surface=Excel.ChartType.surface]=\\"surface\\",t[t.surfaceWireframe=Excel.ChartType.surfaceWireframe]=\\"surfaceWireframe\\",t[t.surfaceTopView=Excel.ChartType.surfaceTopView]=\\"surfaceTopView\\",t[t.surfaceTopViewWireframe=Excel.ChartType.surfaceTopViewWireframe]=\\"surfaceTopViewWireframe\\",t[t.bubble=Excel.ChartType.bubble]=\\"bubble\\",t[t.bubble3DEffect=Excel.ChartType.bubble3DEffect]=\\"bubble3DEffect\\",t[t.stockHLC=Excel.ChartType.stockHLC]=\\"stockHLC\\",t[t.stockOHLC=Excel.ChartType.stockOHLC]=\\"stockOHLC\\",t[t.stockVHLC=Excel.ChartType.stockVHLC]=\\"stockVHLC\\",t[t.stockVOHLC=Excel.ChartType.stockVOHLC]=\\"stockVOHLC\\",t[t.cylinderColClustered=Excel.ChartType.cylinderColClustered]=\\"cylinderColClustered\\",t[t.cylinderColStacked=Excel.ChartType.cylinderColStacked]=\\"cylinderColStacked\\",t[t.cylinderColStacked100=Excel.ChartType.cylinderColStacked100]=\\"cylinderColStacked100\\",t[t.cylinderBarClustered=Excel.ChartType.cylinderBarClustered]=\\"cylinderBarClustered\\",t[t.cylinderBarStacked=Excel.ChartType.cylinderBarStacked]=\\"cylinderBarStacked\\",t[t.cylinderBarStacked100=Excel.ChartType.cylinderBarStacked100]=\\"cylinderBarStacked100\\",t[t.cylinderCol=Excel.ChartType.cylinderCol]=\\"cylinderCol\\",t[t.coneColClustered=Excel.ChartType.coneColClustered]=\\"coneColClustered\\",t[t.coneColStacked=Excel.ChartType.coneColStacked]=\\"coneColStacked\\",t[t.coneColStacked100=Excel.ChartType.coneColStacked100]=\\"coneColStacked100\\",t[t.coneBarClustered=Excel.ChartType.coneBarClustered]=\\"coneBarClustered\\",t[t.coneBarStacked=Excel.ChartType.coneBarStacked]=\\"coneBarStacked\\",t[t.coneBarStacked100=Excel.ChartType.coneBarStacked100]=\\"coneBarStacked100\\",t[t.coneCol=Excel.ChartType.coneCol]=\\"coneCol\\",t[t.pyramidColClustered=Excel.ChartType.pyramidColClustered]=\\"pyramidColClustered\\",t[t.pyramidColStacked=Excel.ChartType.pyramidColStacked]=\\"pyramidColStacked\\",t[t.pyramidColStacked100=Excel.ChartType.pyramidColStacked100]=\\"pyramidColStacked100\\",t[t.pyramidBarClustered=Excel.ChartType.pyramidBarClustered]=\\"pyramidBarClustered\\",t[t.pyramidBarStacked=Excel.ChartType.pyramidBarStacked]=\\"pyramidBarStacked\\",t[t.pyramidBarStacked100=Excel.ChartType.pyramidBarStacked100]=\\"pyramidBarStacked100\\",t[t.pyramidCol=Excel.ChartType.pyramidCol]=\\"pyramidCol\\",t[t.line=Excel.ChartType.line]=\\"line\\",t[t.pie=Excel.ChartType.pie]=\\"pie\\",t[t.xyscatter=Excel.ChartType.xyscatter]=\\"xyscatter\\",t[t.area=Excel.ChartType.area]=\\"area\\",t[t.doughnut=Excel.ChartType.doughnut]=\\"doughnut\\",t[t.radar=Excel.ChartType.radar]=\\"radar\\",t[t.histogram=Excel.ChartType.histogram]=\\"histogram\\",t[t.boxwhisker=Excel.ChartType.boxwhisker]=\\"boxwhisker\\",t[t.pareto=Excel.ChartType.pareto]=\\"pareto\\",t[t.regionMap=Excel.ChartType.regionMap]=\\"regionMap\\",t[t.treemap=Excel.ChartType.treemap]=\\"treemap\\",t[t.waterfall=Excel.ChartType.waterfall]=\\"waterfall\\",t[t.sunburst=Excel.ChartType.sunburst]=\\"sunburst\\",t[t.funnel=Excel.ChartType.funnel]=\\"funnel\\"}(t.ChartType||(t.ChartType={})),function(t){t[t.none=Excel.ChartUnderlineStyle.none]=\\"none\\",t[t.single=Excel.ChartUnderlineStyle.single]=\\"single\\"}(t.ChartUnderlineStyle||(t.ChartUnderlineStyle={})),function(t){t[t.notPlotted=Excel.ChartDisplayBlanksAs.notPlotted]=\\"notPlotted\\",t[t.zero=Excel.ChartDisplayBlanksAs.zero]=\\"zero\\",t[t.interplotted=Excel.ChartDisplayBlanksAs.interplotted]=\\"interplotted\\"}(t.ChartDisplayBlanksAs||(t.ChartDisplayBlanksAs={})),function(t){t[t.rows=Excel.ChartPlotBy.rows]=\\"rows\\",t[t.columns=Excel.ChartPlotBy.columns]=\\"columns\\"}(t.ChartPlotBy||(t.ChartPlotBy={})),function(t){t[t.splitByPosition=Excel.ChartSplitType.splitByPosition]=\\"splitByPosition\\",t[t.splitByValue=Excel.ChartSplitType.splitByValue]=\\"splitByValue\\",t[t.splitByPercentValue=Excel.ChartSplitType.splitByPercentValue]=\\"splitByPercentValue\\",t[t.splitByCustomSplit=Excel.ChartSplitType.splitByCustomSplit]=\\"splitByCustomSplit\\"}(t.ChartSplitType||(t.ChartSplitType={})),function(t){t[t.colorfulPalette1=Excel.ChartColorScheme.colorfulPalette1]=\\"colorfulPalette1\\",t[t.colorfulPalette2=Excel.ChartColorScheme.colorfulPalette2]=\\"colorfulPalette2\\",t[t.colorfulPalette3=Excel.ChartColorScheme.colorfulPalette3]=\\"colorfulPalette3\\",t[t.colorfulPalette4=Excel.ChartColorScheme.colorfulPalette4]=\\"colorfulPalette4\\",t[t.monochromaticPalette1=Excel.ChartColorScheme.monochromaticPalette1]=\\"monochromaticPalette1\\",t[t.monochromaticPalette2=Excel.ChartColorScheme.monochromaticPalette2]=\\"monochromaticPalette2\\",t[t.monochromaticPalette3=Excel.ChartColorScheme.monochromaticPalette3]=\\"monochromaticPalette3\\",t[t.monochromaticPalette4=Excel.ChartColorScheme.monochromaticPalette4]=\\"monochromaticPalette4\\",t[t.monochromaticPalette5=Excel.ChartColorScheme.monochromaticPalette5]=\\"monochromaticPalette5\\",t[t.monochromaticPalette6=Excel.ChartColorScheme.monochromaticPalette6]=\\"monochromaticPalette6\\",t[t.monochromaticPalette7=Excel.ChartColorScheme.monochromaticPalette7]=\\"monochromaticPalette7\\",t[t.monochromaticPalette8=Excel.ChartColorScheme.monochromaticPalette8]=\\"monochromaticPalette8\\",t[t.monochromaticPalette9=Excel.ChartColorScheme.monochromaticPalette9]=\\"monochromaticPalette9\\",t[t.monochromaticPalette10=Excel.ChartColorScheme.monochromaticPalette10]=\\"monochromaticPalette10\\",t[t.monochromaticPalette11=Excel.ChartColorScheme.monochromaticPalette11]=\\"monochromaticPalette11\\",t[t.monochromaticPalette12=Excel.ChartColorScheme.monochromaticPalette12]=\\"monochromaticPalette12\\",t[t.monochromaticPalette13=Excel.ChartColorScheme.monochromaticPalette13]=\\"monochromaticPalette13\\"}(t.ChartColorScheme||(t.ChartColorScheme={})),function(t){t[t.linear=Excel.ChartTrendlineType.linear]=\\"linear\\",t[t.exponential=Excel.ChartTrendlineType.exponential]=\\"exponential\\",t[t.logarithmic=Excel.ChartTrendlineType.logarithmic]=\\"logarithmic\\",t[t.movingAverage=Excel.ChartTrendlineType.movingAverage]=\\"movingAverage\\",t[t.polynomial=Excel.ChartTrendlineType.polynomial]=\\"polynomial\\",t[t.power=Excel.ChartTrendlineType.power]=\\"power\\"}(t.ChartTrendlineType||(t.ChartTrendlineType={})),function(t){t[t.bringToFront=Excel.ShapeZOrder.bringToFront]=\\"bringToFront\\",t[t.bringForward=Excel.ShapeZOrder.bringForward]=\\"bringForward\\",t[t.sendToBack=Excel.ShapeZOrder.sendToBack]=\\"sendToBack\\",t[t.sendBackward=Excel.ShapeZOrder.sendBackward]=\\"sendBackward\\"}(t.ShapeZOrder||(t.ShapeZOrder={})),function(t){t[t.unsupported=Excel.ShapeType.unsupported]=\\"unsupported\\",t[t.image=Excel.ShapeType.image]=\\"image\\",t[t.geometricShape=Excel.ShapeType.geometricShape]=\\"geometricShape\\",t[t.group=Excel.ShapeType.group]=\\"group\\",t[t.line=Excel.ShapeType.line]=\\"line\\"}(t.ShapeType||(t.ShapeType={})),function(t){t[t.currentSize=Excel.ShapeScaleType.currentSize]=\\"currentSize\\",t[t.originalSize=Excel.ShapeScaleType.originalSize]=\\"originalSize\\"}(t.ShapeScaleType||(t.ShapeScaleType={})),function(t){t[t.scaleFromTopLeft=Excel.ShapeScaleFrom.scaleFromTopLeft]=\\"scaleFromTopLeft\\",t[t.scaleFromMiddle=Excel.ShapeScaleFrom.scaleFromMiddle]=\\"scaleFromMiddle\\",t[t.scaleFromBottomRight=Excel.ShapeScaleFrom.scaleFromBottomRight]=\\"scaleFromBottomRight\\"}(t.ShapeScaleFrom||(t.ShapeScaleFrom={})),function(t){t[t.noFill=Excel.ShapeFillType.noFill]=\\"noFill\\",t[t.solid=Excel.ShapeFillType.solid]=\\"solid\\",t[t.gradient=Excel.ShapeFillType.gradient]=\\"gradient\\",t[t.pattern=Excel.ShapeFillType.pattern]=\\"pattern\\",t[t.pictureAndTexture=Excel.ShapeFillType.pictureAndTexture]=\\"pictureAndTexture\\",t[t.mixed=Excel.ShapeFillType.mixed]=\\"mixed\\"}(t.ShapeFillType||(t.ShapeFillType={})),function(t){t[t.none=Excel.ShapeFontUnderlineStyle.none]=\\"none\\",t[t.single=Excel.ShapeFontUnderlineStyle.single]=\\"single\\",t[t.double=Excel.ShapeFontUnderlineStyle.double]=\\"double\\",t[t.heavy=Excel.ShapeFontUnderlineStyle.heavy]=\\"heavy\\",t[t.dotted=Excel.ShapeFontUnderlineStyle.dotted]=\\"dotted\\",t[t.dottedHeavy=Excel.ShapeFontUnderlineStyle.dottedHeavy]=\\"dottedHeavy\\",t[t.dash=Excel.ShapeFontUnderlineStyle.dash]=\\"dash\\",t[t.dashHeavy=Excel.ShapeFontUnderlineStyle.dashHeavy]=\\"dashHeavy\\",t[t.dashLong=Excel.ShapeFontUnderlineStyle.dashLong]=\\"dashLong\\",t[t.dashLongHeavy=Excel.ShapeFontUnderlineStyle.dashLongHeavy]=\\"dashLongHeavy\\",t[t.dotDash=Excel.ShapeFontUnderlineStyle.dotDash]=\\"dotDash\\",t[t.dotDashHeavy=Excel.ShapeFontUnderlineStyle.dotDashHeavy]=\\"dotDashHeavy\\",t[t.dotDotDash=Excel.ShapeFontUnderlineStyle.dotDotDash]=\\"dotDotDash\\",t[t.dotDotDashHeavy=Excel.ShapeFontUnderlineStyle.dotDotDashHeavy]=\\"dotDotDashHeavy\\",t[t.wavy=Excel.ShapeFontUnderlineStyle.wavy]=\\"wavy\\",t[t.wavyHeavy=Excel.ShapeFontUnderlineStyle.wavyHeavy]=\\"wavyHeavy\\",t[t.wavyDouble=Excel.ShapeFontUnderlineStyle.wavyDouble]=\\"wavyDouble\\"}(t.ShapeFontUnderlineStyle||(t.ShapeFontUnderlineStyle={})),function(t){t[t.unknown=Excel.PictureFormat.unknown]=\\"unknown\\",t[t.bmp=Excel.PictureFormat.bmp]=\\"bmp\\",t[t.jpeg=Excel.PictureFormat.jpeg]=\\"jpeg\\",t[t.gif=Excel.PictureFormat.gif]=\\"gif\\",t[t.png=Excel.PictureFormat.png]=\\"png\\",t[t.svg=Excel.PictureFormat.svg]=\\"svg\\"}(t.PictureFormat||(t.PictureFormat={})),function(t){t[t.single=Excel.ShapeLineStyle.single]=\\"single\\",t[t.thickBetweenThin=Excel.ShapeLineStyle.thickBetweenThin]=\\"thickBetweenThin\\",t[t.thickThin=Excel.ShapeLineStyle.thickThin]=\\"thickThin\\",t[t.thinThick=Excel.ShapeLineStyle.thinThick]=\\"thinThick\\",t[t.thinThin=Excel.ShapeLineStyle.thinThin]=\\"thinThin\\"}(t.ShapeLineStyle||(t.ShapeLineStyle={})),function(t){t[t.dash=Excel.ShapeLineDashStyle.dash]=\\"dash\\",t[t.dashDot=Excel.ShapeLineDashStyle.dashDot]=\\"dashDot\\",t[t.dashDotDot=Excel.ShapeLineDashStyle.dashDotDot]=\\"dashDotDot\\",t[t.longDash=Excel.ShapeLineDashStyle.longDash]=\\"longDash\\",t[t.longDashDot=Excel.ShapeLineDashStyle.longDashDot]=\\"longDashDot\\",t[t.roundDot=Excel.ShapeLineDashStyle.roundDot]=\\"roundDot\\",t[t.solid=Excel.ShapeLineDashStyle.solid]=\\"solid\\",t[t.squareDot=Excel.ShapeLineDashStyle.squareDot]=\\"squareDot\\",t[t.longDashDotDot=Excel.ShapeLineDashStyle.longDashDotDot]=\\"longDashDotDot\\",t[t.systemDash=Excel.ShapeLineDashStyle.systemDash]=\\"systemDash\\",t[t.systemDot=Excel.ShapeLineDashStyle.systemDot]=\\"systemDot\\",t[t.systemDashDot=Excel.ShapeLineDashStyle.systemDashDot]=\\"systemDashDot\\"}(t.ShapeLineDashStyle||(t.ShapeLineDashStyle={})),function(t){t[t.short=Excel.ArrowheadLength.short]=\\"short\\",t[t.medium=Excel.ArrowheadLength.medium]=\\"medium\\",t[t.long=Excel.ArrowheadLength.long]=\\"long\\"}(t.ArrowheadLength||(t.ArrowheadLength={})),function(t){t[t.none=Excel.ArrowheadStyle.none]=\\"none\\",t[t.triangle=Excel.ArrowheadStyle.triangle]=\\"triangle\\",t[t.stealth=Excel.ArrowheadStyle.stealth]=\\"stealth\\",t[t.diamond=Excel.ArrowheadStyle.diamond]=\\"diamond\\",t[t.oval=Excel.ArrowheadStyle.oval]=\\"oval\\",t[t.open=Excel.ArrowheadStyle.open]=\\"open\\"}(t.ArrowheadStyle||(t.ArrowheadStyle={})),function(t){t[t.narrow=Excel.ArrowheadWidth.narrow]=\\"narrow\\",t[t.medium=Excel.ArrowheadWidth.medium]=\\"medium\\",t[t.wide=Excel.ArrowheadWidth.wide]=\\"wide\\"}(t.ArrowheadWidth||(t.ArrowheadWidth={})),function(t){t[t.range=Excel.BindingType.range]=\\"range\\",t[t.table=Excel.BindingType.table]=\\"table\\",t[t.text=Excel.BindingType.text]=\\"text\\"}(t.BindingType||(t.BindingType={})),function(t){t[t.edgeTop=Excel.BorderIndex.edgeTop]=\\"edgeTop\\",t[t.edgeBottom=Excel.BorderIndex.edgeBottom]=\\"edgeBottom\\",t[t.edgeLeft=Excel.BorderIndex.edgeLeft]=\\"edgeLeft\\",t[t.edgeRight=Excel.BorderIndex.edgeRight]=\\"edgeRight\\",t[t.insideVertical=Excel.BorderIndex.insideVertical]=\\"insideVertical\\",t[t.insideHorizontal=Excel.BorderIndex.insideHorizontal]=\\"insideHorizontal\\",t[t.diagonalDown=Excel.BorderIndex.diagonalDown]=\\"diagonalDown\\",t[t.diagonalUp=Excel.BorderIndex.diagonalUp]=\\"diagonalUp\\"}(t.BorderIndex||(t.BorderIndex={})),function(t){t[t.none=Excel.BorderLineStyle.none]=\\"none\\",t[t.continuous=Excel.BorderLineStyle.continuous]=\\"continuous\\",t[t.dash=Excel.BorderLineStyle.dash]=\\"dash\\",t[t.dashDot=Excel.BorderLineStyle.dashDot]=\\"dashDot\\",t[t.dashDotDot=Excel.BorderLineStyle.dashDotDot]=\\"dashDotDot\\",t[t.dot=Excel.BorderLineStyle.dot]=\\"dot\\",t[t.double=Excel.BorderLineStyle.double]=\\"double\\",t[t.slantDashDot=Excel.BorderLineStyle.slantDashDot]=\\"slantDashDot\\"}(t.BorderLineStyle||(t.BorderLineStyle={})),function(t){t[t.hairline=Excel.BorderWeight.hairline]=\\"hairline\\",t[t.thin=Excel.BorderWeight.thin]=\\"thin\\",t[t.medium=Excel.BorderWeight.medium]=\\"medium\\",t[t.thick=Excel.BorderWeight.thick]=\\"thick\\"}(t.BorderWeight||(t.BorderWeight={})),function(t){t[t.automatic=Excel.CalculationMode.automatic]=\\"automatic\\",t[t.automaticExceptTables=Excel.CalculationMode.automaticExceptTables]=\\"automaticExceptTables\\",t[t.manual=Excel.CalculationMode.manual]=\\"manual\\"}(t.CalculationMode||(t.CalculationMode={})),function(t){t[t.recalculate=Excel.CalculationType.recalculate]=\\"recalculate\\",t[t.full=Excel.CalculationType.full]=\\"full\\",t[t.fullRebuild=Excel.CalculationType.fullRebuild]=\\"fullRebuild\\"}(t.CalculationType||(t.CalculationType={})),function(t){t[t.all=Excel.ClearApplyTo.all]=\\"all\\",t[t.formats=Excel.ClearApplyTo.formats]=\\"formats\\",t[t.contents=Excel.ClearApplyTo.contents]=\\"contents\\",t[t.hyperlinks=Excel.ClearApplyTo.hyperlinks]=\\"hyperlinks\\",t[t.removeHyperlinks=Excel.ClearApplyTo.removeHyperlinks]=\\"removeHyperlinks\\"}(t.ClearApplyTo||(t.ClearApplyTo={})),function(t){t[t.automatic=Excel.ConditionalDataBarAxisFormat.automatic]=\\"automatic\\",t[t.none=Excel.ConditionalDataBarAxisFormat.none]=\\"none\\",t[t.cellMidPoint=Excel.ConditionalDataBarAxisFormat.cellMidPoint]=\\"cellMidPoint\\"}(t.ConditionalDataBarAxisFormat||(t.ConditionalDataBarAxisFormat={})),function(t){t[t.context=Excel.ConditionalDataBarDirection.context]=\\"context\\",t[t.leftToRight=Excel.ConditionalDataBarDirection.leftToRight]=\\"leftToRight\\",t[t.rightToLeft=Excel.ConditionalDataBarDirection.rightToLeft]=\\"rightToLeft\\"}(t.ConditionalDataBarDirection||(t.ConditionalDataBarDirection={})),function(t){t[t.top=Excel.ConditionalFormatDirection.top]=\\"top\\",t[t.bottom=Excel.ConditionalFormatDirection.bottom]=\\"bottom\\"}(t.ConditionalFormatDirection||(t.ConditionalFormatDirection={})),function(t){t[t.custom=Excel.ConditionalFormatType.custom]=\\"custom\\",t[t.dataBar=Excel.ConditionalFormatType.dataBar]=\\"dataBar\\",t[t.colorScale=Excel.ConditionalFormatType.colorScale]=\\"colorScale\\",t[t.iconSet=Excel.ConditionalFormatType.iconSet]=\\"iconSet\\",t[t.topBottom=Excel.ConditionalFormatType.topBottom]=\\"topBottom\\",t[t.presetCriteria=Excel.ConditionalFormatType.presetCriteria]=\\"presetCriteria\\",t[t.containsText=Excel.ConditionalFormatType.containsText]=\\"containsText\\",t[t.cellValue=Excel.ConditionalFormatType.cellValue]=\\"cellValue\\"}(t.ConditionalFormatType||(t.ConditionalFormatType={})),function(t){t[t.invalid=Excel.ConditionalFormatRuleType.invalid]=\\"invalid\\",t[t.automatic=Excel.ConditionalFormatRuleType.automatic]=\\"automatic\\",t[t.lowestValue=Excel.ConditionalFormatRuleType.lowestValue]=\\"lowestValue\\",t[t.highestValue=Excel.ConditionalFormatRuleType.highestValue]=\\"highestValue\\",t[t.number=Excel.ConditionalFormatRuleType.number]=\\"number\\",t[t.percent=Excel.ConditionalFormatRuleType.percent]=\\"percent\\",t[t.formula=Excel.ConditionalFormatRuleType.formula]=\\"formula\\",t[t.percentile=Excel.ConditionalFormatRuleType.percentile]=\\"percentile\\"}(t.ConditionalFormatRuleType||(t.ConditionalFormatRuleType={})),function(t){t[t.invalid=Excel.ConditionalFormatIconRuleType.invalid]=\\"invalid\\",t[t.number=Excel.ConditionalFormatIconRuleType.number]=\\"number\\",t[t.percent=Excel.ConditionalFormatIconRuleType.percent]=\\"percent\\",t[t.formula=Excel.ConditionalFormatIconRuleType.formula]=\\"formula\\",t[t.percentile=Excel.ConditionalFormatIconRuleType.percentile]=\\"percentile\\"}(t.ConditionalFormatIconRuleType||(t.ConditionalFormatIconRuleType={})),function(t){t[t.invalid=Excel.ConditionalFormatColorCriterionType.invalid]=\\"invalid\\",t[t.lowestValue=Excel.ConditionalFormatColorCriterionType.lowestValue]=\\"lowestValue\\",t[t.highestValue=Excel.ConditionalFormatColorCriterionType.highestValue]=\\"highestValue\\",t[t.number=Excel.ConditionalFormatColorCriterionType.number]=\\"number\\",t[t.percent=Excel.ConditionalFormatColorCriterionType.percent]=\\"percent\\",t[t.formula=Excel.ConditionalFormatColorCriterionType.formula]=\\"formula\\",t[t.percentile=Excel.ConditionalFormatColorCriterionType.percentile]=\\"percentile\\"}(t.ConditionalFormatColorCriterionType||(t.ConditionalFormatColorCriterionType={})),function(t){t[t.invalid=Excel.ConditionalTopBottomCriterionType.invalid]=\\"invalid\\",t[t.topItems=Excel.ConditionalTopBottomCriterionType.topItems]=\\"topItems\\",t[t.topPercent=Excel.ConditionalTopBottomCriterionType.topPercent]=\\"topPercent\\",t[t.bottomItems=Excel.ConditionalTopBottomCriterionType.bottomItems]=\\"bottomItems\\",t[t.bottomPercent=Excel.ConditionalTopBottomCriterionType.bottomPercent]=\\"bottomPercent\\"}(t.ConditionalTopBottomCriterionType||(t.ConditionalTopBottomCriterionType={})),function(t){t[t.invalid=Excel.ConditionalFormatPresetCriterion.invalid]=\\"invalid\\",t[t.blanks=Excel.ConditionalFormatPresetCriterion.blanks]=\\"blanks\\",t[t.nonBlanks=Excel.ConditionalFormatPresetCriterion.nonBlanks]=\\"nonBlanks\\",t[t.errors=Excel.ConditionalFormatPresetCriterion.errors]=\\"errors\\",t[t.nonErrors=Excel.ConditionalFormatPresetCriterion.nonErrors]=\\"nonErrors\\",t[t.yesterday=Excel.ConditionalFormatPresetCriterion.yesterday]=\\"yesterday\\",t[t.today=Excel.ConditionalFormatPresetCriterion.today]=\\"today\\",t[t.tomorrow=Excel.ConditionalFormatPresetCriterion.tomorrow]=\\"tomorrow\\",t[t.lastSevenDays=Excel.ConditionalFormatPresetCriterion.lastSevenDays]=\\"lastSevenDays\\",t[t.lastWeek=Excel.ConditionalFormatPresetCriterion.lastWeek]=\\"lastWeek\\",t[t.thisWeek=Excel.ConditionalFormatPresetCriterion.thisWeek]=\\"thisWeek\\",t[t.nextWeek=Excel.ConditionalFormatPresetCriterion.nextWeek]=\\"nextWeek\\",t[t.lastMonth=Excel.ConditionalFormatPresetCriterion.lastMonth]=\\"lastMonth\\",t[t.thisMonth=Excel.ConditionalFormatPresetCriterion.thisMonth]=\\"thisMonth\\",t[t.nextMonth=Excel.ConditionalFormatPresetCriterion.nextMonth]=\\"nextMonth\\",t[t.aboveAverage=Excel.ConditionalFormatPresetCriterion.aboveAverage]=\\"aboveAverage\\",t[t.belowAverage=Excel.ConditionalFormatPresetCriterion.belowAverage]=\\"belowAverage\\",t[t.equalOrAboveAverage=Excel.ConditionalFormatPresetCriterion.equalOrAboveAverage]=\\"equalOrAboveAverage\\",t[t.equalOrBelowAverage=Excel.ConditionalFormatPresetCriterion.equalOrBelowAverage]=\\"equalOrBelowAverage\\",t[t.oneStdDevAboveAverage=Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage]=\\"oneStdDevAboveAverage\\",t[t.oneStdDevBelowAverage=Excel.ConditionalFormatPresetCriterion.oneStdDevBelowAverage]=\\"oneStdDevBelowAverage\\",t[t.twoStdDevAboveAverage=Excel.ConditionalFormatPresetCriterion.twoStdDevAboveAverage]=\\"twoStdDevAboveAverage\\",t[t.twoStdDevBelowAverage=Excel.ConditionalFormatPresetCriterion.twoStdDevBelowAverage]=\\"twoStdDevBelowAverage\\",t[t.threeStdDevAboveAverage=Excel.ConditionalFormatPresetCriterion.threeStdDevAboveAverage]=\\"threeStdDevAboveAverage\\",t[t.threeStdDevBelowAverage=Excel.ConditionalFormatPresetCriterion.threeStdDevBelowAverage]=\\"threeStdDevBelowAverage\\",t[t.uniqueValues=Excel.ConditionalFormatPresetCriterion.uniqueValues]=\\"uniqueValues\\",t[t.duplicateValues=Excel.ConditionalFormatPresetCriterion.duplicateValues]=\\"duplicateValues\\"}(t.ConditionalFormatPresetCriterion||(t.ConditionalFormatPresetCriterion={})),function(t){t[t.invalid=Excel.ConditionalTextOperator.invalid]=\\"invalid\\",t[t.contains=Excel.ConditionalTextOperator.contains]=\\"contains\\",t[t.notContains=Excel.ConditionalTextOperator.notContains]=\\"notContains\\",t[t.beginsWith=Excel.ConditionalTextOperator.beginsWith]=\\"beginsWith\\",t[t.endsWith=Excel.ConditionalTextOperator.endsWith]=\\"endsWith\\"}(t.ConditionalTextOperator||(t.ConditionalTextOperator={})),function(t){t[t.invalid=Excel.ConditionalCellValueOperator.invalid]=\\"invalid\\",t[t.between=Excel.ConditionalCellValueOperator.between]=\\"between\\",t[t.notBetween=Excel.ConditionalCellValueOperator.notBetween]=\\"notBetween\\",t[t.equalTo=Excel.ConditionalCellValueOperator.equalTo]=\\"equalTo\\",t[t.notEqualTo=Excel.ConditionalCellValueOperator.notEqualTo]=\\"notEqualTo\\",t[t.greaterThan=Excel.ConditionalCellValueOperator.greaterThan]=\\"greaterThan\\",t[t.lessThan=Excel.ConditionalCellValueOperator.lessThan]=\\"lessThan\\",t[t.greaterThanOrEqual=Excel.ConditionalCellValueOperator.greaterThanOrEqual]=\\"greaterThanOrEqual\\",t[t.lessThanOrEqual=Excel.ConditionalCellValueOperator.lessThanOrEqual]=\\"lessThanOrEqual\\"}(t.ConditionalCellValueOperator||(t.ConditionalCellValueOperator={})),function(t){t[t.invalid=Excel.ConditionalIconCriterionOperator.invalid]=\\"invalid\\",t[t.greaterThan=Excel.ConditionalIconCriterionOperator.greaterThan]=\\"greaterThan\\",t[t.greaterThanOrEqual=Excel.ConditionalIconCriterionOperator.greaterThanOrEqual]=\\"greaterThanOrEqual\\"}(t.ConditionalIconCriterionOperator||(t.ConditionalIconCriterionOperator={})),function(t){t[t.edgeTop=Excel.ConditionalRangeBorderIndex.edgeTop]=\\"edgeTop\\",t[t.edgeBottom=Excel.ConditionalRangeBorderIndex.edgeBottom]=\\"edgeBottom\\",t[t.edgeLeft=Excel.ConditionalRangeBorderIndex.edgeLeft]=\\"edgeLeft\\",t[t.edgeRight=Excel.ConditionalRangeBorderIndex.edgeRight]=\\"edgeRight\\"}(t.ConditionalRangeBorderIndex||(t.ConditionalRangeBorderIndex={})),function(t){t[t.none=Excel.ConditionalRangeBorderLineStyle.none]=\\"none\\",t[t.continuous=Excel.ConditionalRangeBorderLineStyle.continuous]=\\"continuous\\",t[t.dash=Excel.ConditionalRangeBorderLineStyle.dash]=\\"dash\\",t[t.dashDot=Excel.ConditionalRangeBorderLineStyle.dashDot]=\\"dashDot\\",t[t.dashDotDot=Excel.ConditionalRangeBorderLineStyle.dashDotDot]=\\"dashDotDot\\",t[t.dot=Excel.ConditionalRangeBorderLineStyle.dot]=\\"dot\\"}(t.ConditionalRangeBorderLineStyle||(t.ConditionalRangeBorderLineStyle={})),function(t){t[t.none=Excel.ConditionalRangeFontUnderlineStyle.none]=\\"none\\",t[t.single=Excel.ConditionalRangeFontUnderlineStyle.single]=\\"single\\",t[t.double=Excel.ConditionalRangeFontUnderlineStyle.double]=\\"double\\"}(t.ConditionalRangeFontUnderlineStyle||(t.ConditionalRangeFontUnderlineStyle={})),function(t){t[t.none=Excel.DataValidationType.none]=\\"none\\",t[t.wholeNumber=Excel.DataValidationType.wholeNumber]=\\"wholeNumber\\",t[t.decimal=Excel.DataValidationType.decimal]=\\"decimal\\",t[t.list=Excel.DataValidationType.list]=\\"list\\",t[t.date=Excel.DataValidationType.date]=\\"date\\",t[t.time=Excel.DataValidationType.time]=\\"time\\",t[t.textLength=Excel.DataValidationType.textLength]=\\"textLength\\",t[t.custom=Excel.DataValidationType.custom]=\\"custom\\",t[t.inconsistent=Excel.DataValidationType.inconsistent]=\\"inconsistent\\",t[t.mixedCriteria=Excel.DataValidationType.mixedCriteria]=\\"mixedCriteria\\"}(t.DataValidationType||(t.DataValidationType={})),function(t){t[t.between=Excel.DataValidationOperator.between]=\\"between\\",t[t.notBetween=Excel.DataValidationOperator.notBetween]=\\"notBetween\\",t[t.equalTo=Excel.DataValidationOperator.equalTo]=\\"equalTo\\",t[t.notEqualTo=Excel.DataValidationOperator.notEqualTo]=\\"notEqualTo\\",t[t.greaterThan=Excel.DataValidationOperator.greaterThan]=\\"greaterThan\\",t[t.lessThan=Excel.DataValidationOperator.lessThan]=\\"lessThan\\",t[t.greaterThanOrEqualTo=Excel.DataValidationOperator.greaterThanOrEqualTo]=\\"greaterThanOrEqualTo\\",t[t.lessThanOrEqualTo=Excel.DataValidationOperator.lessThanOrEqualTo]=\\"lessThanOrEqualTo\\"}(t.DataValidationOperator||(t.DataValidationOperator={})),function(t){t[t.stop=Excel.DataValidationAlertStyle.stop]=\\"stop\\",t[t.warning=Excel.DataValidationAlertStyle.warning]=\\"warning\\",t[t.information=Excel.DataValidationAlertStyle.information]=\\"information\\"}(t.DataValidationAlertStyle||(t.DataValidationAlertStyle={})),function(t){t[t.up=Excel.DeleteShiftDirection.up]=\\"up\\",t[t.left=Excel.DeleteShiftDirection.left]=\\"left\\"}(t.DeleteShiftDirection||(t.DeleteShiftDirection={})),function(t){t[t.unknown=Excel.DynamicFilterCriteria.unknown]=\\"unknown\\",t[t.aboveAverage=Excel.DynamicFilterCriteria.aboveAverage]=\\"aboveAverage\\",t[t.allDatesInPeriodApril=Excel.DynamicFilterCriteria.allDatesInPeriodApril]=\\"allDatesInPeriodApril\\",t[t.allDatesInPeriodAugust=Excel.DynamicFilterCriteria.allDatesInPeriodAugust]=\\"allDatesInPeriodAugust\\",t[t.allDatesInPeriodDecember=Excel.DynamicFilterCriteria.allDatesInPeriodDecember]=\\"allDatesInPeriodDecember\\",t[t.allDatesInPeriodFebruary=Excel.DynamicFilterCriteria.allDatesInPeriodFebruray]=\\"allDatesInPeriodFebruary\\",t[t.allDatesInPeriodJanuary=Excel.DynamicFilterCriteria.allDatesInPeriodJanuary]=\\"allDatesInPeriodJanuary\\",t[t.allDatesInPeriodJuly=Excel.DynamicFilterCriteria.allDatesInPeriodJuly]=\\"allDatesInPeriodJuly\\",t[t.allDatesInPeriodJune=Excel.DynamicFilterCriteria.allDatesInPeriodJune]=\\"allDatesInPeriodJune\\",t[t.allDatesInPeriodMarch=Excel.DynamicFilterCriteria.allDatesInPeriodMarch]=\\"allDatesInPeriodMarch\\",t[t.allDatesInPeriodMay=Excel.DynamicFilterCriteria.allDatesInPeriodMay]=\\"allDatesInPeriodMay\\",t[t.allDatesInPeriodNovember=Excel.DynamicFilterCriteria.allDatesInPeriodNovember]=\\"allDatesInPeriodNovember\\",t[t.allDatesInPeriodOctober=Excel.DynamicFilterCriteria.allDatesInPeriodOctober]=\\"allDatesInPeriodOctober\\",t[t.allDatesInPeriodQuarter1=Excel.DynamicFilterCriteria.allDatesInPeriodQuarter1]=\\"allDatesInPeriodQuarter1\\",t[t.allDatesInPeriodQuarter2=Excel.DynamicFilterCriteria.allDatesInPeriodQuarter2]=\\"allDatesInPeriodQuarter2\\",t[t.allDatesInPeriodQuarter3=Excel.DynamicFilterCriteria.allDatesInPeriodQuarter3]=\\"allDatesInPeriodQuarter3\\",t[t.allDatesInPeriodQuarter4=Excel.DynamicFilterCriteria.allDatesInPeriodQuarter4]=\\"allDatesInPeriodQuarter4\\",t[t.allDatesInPeriodSeptember=Excel.DynamicFilterCriteria.allDatesInPeriodSeptember]=\\"allDatesInPeriodSeptember\\",t[t.belowAverage=Excel.DynamicFilterCriteria.belowAverage]=\\"belowAverage\\",t[t.lastMonth=Excel.DynamicFilterCriteria.lastMonth]=\\"lastMonth\\",t[t.lastQuarter=Excel.DynamicFilterCriteria.lastQuarter]=\\"lastQuarter\\",t[t.lastWeek=Excel.DynamicFilterCriteria.lastWeek]=\\"lastWeek\\",t[t.lastYear=Excel.DynamicFilterCriteria.lastYear]=\\"lastYear\\",t[t.nextMonth=Excel.DynamicFilterCriteria.nextMonth]=\\"nextMonth\\",t[t.nextQuarter=Excel.DynamicFilterCriteria.nextQuarter]=\\"nextQuarter\\",t[t.nextWeek=Excel.DynamicFilterCriteria.nextWeek]=\\"nextWeek\\",t[t.nextYear=Excel.DynamicFilterCriteria.nextYear]=\\"nextYear\\",t[t.thisMonth=Excel.DynamicFilterCriteria.thisMonth]=\\"thisMonth\\",t[t.thisQuarter=Excel.DynamicFilterCriteria.thisQuarter]=\\"thisQuarter\\",t[t.thisWeek=Excel.DynamicFilterCriteria.thisWeek]=\\"thisWeek\\",t[t.thisYear=Excel.DynamicFilterCriteria.thisYear]=\\"thisYear\\",t[t.today=Excel.DynamicFilterCriteria.today]=\\"today\\",t[t.tomorrow=Excel.DynamicFilterCriteria.tomorrow]=\\"tomorrow\\",t[t.yearToDate=Excel.DynamicFilterCriteria.yearToDate]=\\"yearToDate\\",t[t.yesterday=Excel.DynamicFilterCriteria.yesterday]=\\"yesterday\\"}(t.DynamicFilterCriteria||(t.DynamicFilterCriteria={})),function(t){t[t.year=Excel.FilterDatetimeSpecificity.year]=\\"year\\",t[t.month=Excel.FilterDatetimeSpecificity.month]=\\"month\\",t[t.day=Excel.FilterDatetimeSpecificity.day]=\\"day\\",t[t.hour=Excel.FilterDatetimeSpecificity.hour]=\\"hour\\",t[t.minute=Excel.FilterDatetimeSpecificity.minute]=\\"minute\\",t[t.second=Excel.FilterDatetimeSpecificity.second]=\\"second\\"}(t.FilterDatetimeSpecificity||(t.FilterDatetimeSpecificity={})),function(t){t[t.bottomItems=Excel.FilterOn.bottomItems]=\\"bottomItems\\",t[t.bottomPercent=Excel.FilterOn.bottomPercent]=\\"bottomPercent\\",t[t.cellColor=Excel.FilterOn.cellColor]=\\"cellColor\\",t[t.dynamic=Excel.FilterOn.dynamic]=\\"dynamic\\",t[t.fontColor=Excel.FilterOn.fontColor]=\\"fontColor\\",t[t.values=Excel.FilterOn.values]=\\"values\\",t[t.topItems=Excel.FilterOn.topItems]=\\"topItems\\",t[t.topPercent=Excel.FilterOn.topPercent]=\\"topPercent\\",t[t.icon=Excel.FilterOn.icon]=\\"icon\\",t[t.custom=Excel.FilterOn.custom]=\\"custom\\"}(t.FilterOn||(t.FilterOn={})),function(t){t[t.and=Excel.FilterOperator.and]=\\"and\\",t[t.or=Excel.FilterOperator.or]=\\"or\\"}(t.FilterOperator||(t.FilterOperator={})),function(t){t[t.general=Excel.HorizontalAlignment.general]=\\"general\\",t[t.left=Excel.HorizontalAlignment.left]=\\"left\\",t[t.center=Excel.HorizontalAlignment.center]=\\"center\\",t[t.right=Excel.HorizontalAlignment.right]=\\"right\\",t[t.fill=Excel.HorizontalAlignment.fill]=\\"fill\\",t[t.justify=Excel.HorizontalAlignment.justify]=\\"justify\\",t[t.centerAcrossSelection=Excel.HorizontalAlignment.centerAcrossSelection]=\\"centerAcrossSelection\\",t[t.distributed=Excel.HorizontalAlignment.distributed]=\\"distributed\\"}(t.HorizontalAlignment||(t.HorizontalAlignment={})),function(t){t[t.invalid=Excel.IconSet.invalid]=\\"invalid\\",t[t.threeArrows=Excel.IconSet.threeArrows]=\\"threeArrows\\",t[t.threeArrowsGray=Excel.IconSet.threeArrowsGray]=\\"threeArrowsGray\\",t[t.threeFlags=Excel.IconSet.threeFlags]=\\"threeFlags\\",t[t.threeTrafficLights1=Excel.IconSet.threeTrafficLights1]=\\"threeTrafficLights1\\",t[t.threeTrafficLights2=Excel.IconSet.threeTrafficLights2]=\\"threeTrafficLights2\\",t[t.threeSigns=Excel.IconSet.threeSigns]=\\"threeSigns\\",t[t.threeSymbols=Excel.IconSet.threeSymbols]=\\"threeSymbols\\",t[t.threeSymbols2=Excel.IconSet.threeSymbols2]=\\"threeSymbols2\\",t[t.fourArrows=Excel.IconSet.fourArrows]=\\"fourArrows\\",t[t.fourArrowsGray=Excel.IconSet.fourArrowsGray]=\\"fourArrowsGray\\",t[t.fourRedToBlack=Excel.IconSet.fourRedToBlack]=\\"fourRedToBlack\\",t[t.fourRating=Excel.IconSet.fourRating]=\\"fourRating\\",t[t.fourTrafficLights=Excel.IconSet.fourTrafficLights]=\\"fourTrafficLights\\",t[t.fiveArrows=Excel.IconSet.fiveArrows]=\\"fiveArrows\\",t[t.fiveArrowsGray=Excel.IconSet.fiveArrowsGray]=\\"fiveArrowsGray\\",t[t.fiveRating=Excel.IconSet.fiveRating]=\\"fiveRating\\",t[t.fiveQuarters=Excel.IconSet.fiveQuarters]=\\"fiveQuarters\\",t[t.threeStars=Excel.IconSet.threeStars]=\\"threeStars\\",t[t.threeTriangles=Excel.IconSet.threeTriangles]=\\"threeTriangles\\",t[t.fiveBoxes=Excel.IconSet.fiveBoxes]=\\"fiveBoxes\\"}(t.IconSet||(t.IconSet={})),function(t){t[t.fit=Excel.ImageFittingMode.fit]=\\"fit\\",t[t.fitAndCenter=Excel.ImageFittingMode.fitAndCenter]=\\"fitAndCenter\\",t[t.fill=Excel.ImageFittingMode.fill]=\\"fill\\"}(t.ImageFittingMode||(t.ImageFittingMode={})),function(t){t[t.down=Excel.InsertShiftDirection.down]=\\"down\\",t[t.right=Excel.InsertShiftDirection.right]=\\"right\\"}(t.InsertShiftDirection||(t.InsertShiftDirection={})),function(t){t[t.worksheet=Excel.NamedItemScope.worksheet]=\\"worksheet\\",t[t.workbook=Excel.NamedItemScope.workbook]=\\"workbook\\"}(t.NamedItemScope||(t.NamedItemScope={})),function(t){t[t.string=Excel.NamedItemType.string]=\\"string\\",t[t.integer=Excel.NamedItemType.integer]=\\"integer\\",t[t.double=Excel.NamedItemType.double]=\\"double\\",t[t.boolean=Excel.NamedItemType.boolean]=\\"boolean\\",t[t.range=Excel.NamedItemType.range]=\\"range\\",t[t.error=Excel.NamedItemType.error]=\\"error\\",t[t.array=Excel.NamedItemType.array]=\\"array\\"}(t.NamedItemType||(t.NamedItemType={})),function(t){t[t.none=Excel.RangeUnderlineStyle.none]=\\"none\\",t[t.single=Excel.RangeUnderlineStyle.single]=\\"single\\",t[t.double=Excel.RangeUnderlineStyle.double]=\\"double\\",t[t.singleAccountant=Excel.RangeUnderlineStyle.singleAccountant]=\\"singleAccountant\\",t[t.doubleAccountant=Excel.RangeUnderlineStyle.doubleAccountant]=\\"doubleAccountant\\"}(t.RangeUnderlineStyle||(t.RangeUnderlineStyle={})),function(t){t[t.visible=Excel.SheetVisibility.visible]=\\"visible\\",t[t.hidden=Excel.SheetVisibility.hidden]=\\"hidden\\",t[t.veryHidden=Excel.SheetVisibility.veryHidden]=\\"veryHidden\\"}(t.SheetVisibility||(t.SheetVisibility={})),function(t){t[t.unknown=Excel.RangeValueType.unknown]=\\"unknown\\",t[t.empty=Excel.RangeValueType.empty]=\\"empty\\",t[t.string=Excel.RangeValueType.string]=\\"string\\",t[t.integer=Excel.RangeValueType.integer]=\\"integer\\",t[t.double=Excel.RangeValueType.double]=\\"double\\",t[t.boolean=Excel.RangeValueType.boolean]=\\"boolean\\",t[t.error=Excel.RangeValueType.error]=\\"error\\",t[t.richValue=Excel.RangeValueType.richValue]=\\"richValue\\"}(t.RangeValueType||(t.RangeValueType={})),function(t){t[t.left=Excel.KeyboardDirection.left]=\\"left\\",t[t.right=Excel.KeyboardDirection.right]=\\"right\\",t[t.up=Excel.KeyboardDirection.up]=\\"up\\",t[t.down=Excel.KeyboardDirection.down]=\\"down\\"}(t.KeyboardDirection||(t.KeyboardDirection={})),function(t){t[t.forward=Excel.SearchDirection.forward]=\\"forward\\",t[t.backwards=Excel.SearchDirection.backwards]=\\"backwards\\"}(t.SearchDirection||(t.SearchDirection={})),function(t){t[t.rows=Excel.SortOrientation.rows]=\\"rows\\",t[t.columns=Excel.SortOrientation.columns]=\\"columns\\"}(t.SortOrientation||(t.SortOrientation={})),function(t){t[t.value=Excel.SortOn.value]=\\"value\\",t[t.cellColor=Excel.SortOn.cellColor]=\\"cellColor\\",t[t.fontColor=Excel.SortOn.fontColor]=\\"fontColor\\",t[t.icon=Excel.SortOn.icon]=\\"icon\\"}(t.SortOn||(t.SortOn={})),function(t){t[t.normal=Excel.SortDataOption.normal]=\\"normal\\",t[t.textAsNumber=Excel.SortDataOption.textAsNumber]=\\"textAsNumber\\"}(t.SortDataOption||(t.SortDataOption={})),function(t){t[t.pinYin=Excel.SortMethod.pinYin]=\\"pinYin\\",t[t.strokeCount=Excel.SortMethod.strokeCount]=\\"strokeCount\\"}(t.SortMethod||(t.SortMethod={})),function(t){t[t.top=Excel.VerticalAlignment.top]=\\"top\\",t[t.center=Excel.VerticalAlignment.center]=\\"center\\",t[t.bottom=Excel.VerticalAlignment.bottom]=\\"bottom\\",t[t.justify=Excel.VerticalAlignment.justify]=\\"justify\\",t[t.distributed=Excel.VerticalAlignment.distributed]=\\"distributed\\"}(t.VerticalAlignment||(t.VerticalAlignment={})),function(t){t[t.number=Excel.DocumentPropertyType.number]=\\"number\\",t[t.boolean=Excel.DocumentPropertyType.boolean]=\\"boolean\\",t[t.date=Excel.DocumentPropertyType.date]=\\"date\\",t[t.string=Excel.DocumentPropertyType.string]=\\"string\\",t[t.float=Excel.DocumentPropertyType.float]=\\"float\\"}(t.DocumentPropertyType||(t.DocumentPropertyType={})),function(t){t[t.atTop=Excel.SubtotalLocationType.atTop]=\\"atTop\\",t[t.atBottom=Excel.SubtotalLocationType.atBottom]=\\"atBottom\\",t[t.off=Excel.SubtotalLocationType.off]=\\"off\\"}(t.SubtotalLocationType||(t.SubtotalLocationType={})),function(t){t[t.compact=Excel.PivotLayoutType.compact]=\\"compact\\",t[t.tabular=Excel.PivotLayoutType.tabular]=\\"tabular\\",t[t.outline=Excel.PivotLayoutType.outline]=\\"outline\\"}(t.PivotLayoutType||(t.PivotLayoutType={})),function(t){t[t.normal=Excel.ProtectionSelectionMode.normal]=\\"normal\\",t[t.unlocked=Excel.ProtectionSelectionMode.unlocked]=\\"unlocked\\",t[t.none=Excel.ProtectionSelectionMode.none]=\\"none\\"}(t.ProtectionSelectionMode||(t.ProtectionSelectionMode={})),function(t){t[t.portrait=Excel.PageOrientation.portrait]=\\"portrait\\",t[t.landscape=Excel.PageOrientation.landscape]=\\"landscape\\"}(t.PageOrientation||(t.PageOrientation={})),function(t){t[t.letter=Excel.PaperType.letter]=\\"letter\\",t[t.letterSmall=Excel.PaperType.letterSmall]=\\"letterSmall\\",t[t.tabloid=Excel.PaperType.tabloid]=\\"tabloid\\",t[t.ledger=Excel.PaperType.ledger]=\\"ledger\\",t[t.legal=Excel.PaperType.legal]=\\"legal\\",t[t.statement=Excel.PaperType.statement]=\\"statement\\",t[t.executive=Excel.PaperType.executive]=\\"executive\\",t[t.a3=Excel.PaperType.a3]=\\"a3\\",t[t.a4=Excel.PaperType.a4]=\\"a4\\",t[t.a4Small=Excel.PaperType.a4Small]=\\"a4Small\\",t[t.a5=Excel.PaperType.a5]=\\"a5\\",t[t.b4=Excel.PaperType.b4]=\\"b4\\",t[t.b5=Excel.PaperType.b5]=\\"b5\\",t[t.folio=Excel.PaperType.folio]=\\"folio\\",t[t.quatro=Excel.PaperType.quatro]=\\"quatro\\",t[t.paper10x14=Excel.PaperType.paper10x14]=\\"paper10x14\\",t[t.paper11x17=Excel.PaperType.paper11x17]=\\"paper11x17\\",t[t.note=Excel.PaperType.note]=\\"note\\",t[t.envelope9=Excel.PaperType.envelope9]=\\"envelope9\\",t[t.envelope10=Excel.PaperType.envelope10]=\\"envelope10\\",t[t.envelope11=Excel.PaperType.envelope11]=\\"envelope11\\",t[t.envelope12=Excel.PaperType.envelope12]=\\"envelope12\\",t[t.envelope14=Excel.PaperType.envelope14]=\\"envelope14\\",t[t.csheet=Excel.PaperType.csheet]=\\"csheet\\",t[t.dsheet=Excel.PaperType.dsheet]=\\"dsheet\\",t[t.esheet=Excel.PaperType.esheet]=\\"esheet\\",t[t.envelopeDL=Excel.PaperType.envelopeDL]=\\"envelopeDL\\",t[t.envelopeC5=Excel.PaperType.envelopeC5]=\\"envelopeC5\\",t[t.envelopeC3=Excel.PaperType.envelopeC3]=\\"envelopeC3\\",t[t.envelopeC4=Excel.PaperType.envelopeC4]=\\"envelopeC4\\",t[t.envelopeC6=Excel.PaperType.envelopeC6]=\\"envelopeC6\\",t[t.envelopeC65=Excel.PaperType.envelopeC65]=\\"envelopeC65\\",t[t.envelopeB4=Excel.PaperType.envelopeB4]=\\"envelopeB4\\",t[t.envelopeB5=Excel.PaperType.envelopeB5]=\\"envelopeB5\\",t[t.envelopeB6=Excel.PaperType.envelopeB6]=\\"envelopeB6\\",t[t.envelopeItaly=Excel.PaperType.envelopeItaly]=\\"envelopeItaly\\",t[t.envelopeMonarch=Excel.PaperType.envelopeMonarch]=\\"envelopeMonarch\\",t[t.envelopePersonal=Excel.PaperType.envelopePersonal]=\\"envelopePersonal\\",t[t.fanfoldUS=Excel.PaperType.fanfoldUS]=\\"fanfoldUS\\",t[t.fanfoldStdGerman=Excel.PaperType.fanfoldStdGerman]=\\"fanfoldStdGerman\\",t[t.fanfoldLegalGerman=Excel.PaperType.fanfoldLegalGerman]=\\"fanfoldLegalGerman\\"}(t.PaperType||(t.PaperType={})),function(t){t[t.context=Excel.ReadingOrder.context]=\\"context\\",t[t.leftToRight=Excel.ReadingOrder.leftToRight]=\\"leftToRight\\",t[t.rightToLeft=Excel.ReadingOrder.rightToLeft]=\\"rightToLeft\\"}(t.ReadingOrder||(t.ReadingOrder={})),function(t){t[t.normal=Excel.BuiltInStyle.normal]=\\"normal\\",t[t.comma=Excel.BuiltInStyle.comma]=\\"comma\\",t[t.currency=Excel.BuiltInStyle.currency]=\\"currency\\",t[t.percent=Excel.BuiltInStyle.percent]=\\"percent\\",t[t.wholeComma=Excel.BuiltInStyle.wholeComma]=\\"wholeComma\\",t[t.wholeDollar=Excel.BuiltInStyle.wholeDollar]=\\"wholeDollar\\",t[t.hlink=Excel.BuiltInStyle.hlink]=\\"hlink\\",t[t.hlinkTrav=Excel.BuiltInStyle.hlinkTrav]=\\"hlinkTrav\\",t[t.note=Excel.BuiltInStyle.note]=\\"note\\",t[t.warningText=Excel.BuiltInStyle.warningText]=\\"warningText\\",t[t.emphasis1=Excel.BuiltInStyle.emphasis1]=\\"emphasis1\\",t[t.emphasis2=Excel.BuiltInStyle.emphasis2]=\\"emphasis2\\",t[t.emphasis3=Excel.BuiltInStyle.emphasis3]=\\"emphasis3\\",t[t.sheetTitle=Excel.BuiltInStyle.sheetTitle]=\\"sheetTitle\\",t[t.heading1=Excel.BuiltInStyle.heading1]=\\"heading1\\",t[t.heading2=Excel.BuiltInStyle.heading2]=\\"heading2\\",t[t.heading3=Excel.BuiltInStyle.heading3]=\\"heading3\\",t[t.heading4=Excel.BuiltInStyle.heading4]=\\"heading4\\",t[t.input=Excel.BuiltInStyle.input]=\\"input\\",t[t.output=Excel.BuiltInStyle.output]=\\"output\\",t[t.calculation=Excel.BuiltInStyle.calculation]=\\"calculation\\",t[t.checkCell=Excel.BuiltInStyle.checkCell]=\\"checkCell\\",t[t.linkedCell=Excel.BuiltInStyle.linkedCell]=\\"linkedCell\\",t[t.total=Excel.BuiltInStyle.total]=\\"total\\",t[t.good=Excel.BuiltInStyle.good]=\\"good\\",t[t.bad=Excel.BuiltInStyle.bad]=\\"bad\\",t[t.neutral=Excel.BuiltInStyle.neutral]=\\"neutral\\",t[t.accent1=Excel.BuiltInStyle.accent1]=\\"accent1\\",t[t.accent1_20=Excel.BuiltInStyle.accent1_20]=\\"accent1_20\\",t[t.accent1_40=Excel.BuiltInStyle.accent1_40]=\\"accent1_40\\",t[t.accent1_60=Excel.BuiltInStyle.accent1_60]=\\"accent1_60\\",t[t.accent2=Excel.BuiltInStyle.accent2]=\\"accent2\\",t[t.accent2_20=Excel.BuiltInStyle.accent2_20]=\\"accent2_20\\",t[t.accent2_40=Excel.BuiltInStyle.accent2_40]=\\"accent2_40\\",t[t.accent2_60=Excel.BuiltInStyle.accent2_60]=\\"accent2_60\\",t[t.accent3=Excel.BuiltInStyle.accent3]=\\"accent3\\",t[t.accent3_20=Excel.BuiltInStyle.accent3_20]=\\"accent3_20\\",t[t.accent3_40=Excel.BuiltInStyle.accent3_40]=\\"accent3_40\\",t[t.accent3_60=Excel.BuiltInStyle.accent3_60]=\\"accent3_60\\",t[t.accent4=Excel.BuiltInStyle.accent4]=\\"accent4\\",t[t.accent4_20=Excel.BuiltInStyle.accent4_20]=\\"accent4_20\\",t[t.accent4_40=Excel.BuiltInStyle.accent4_40]=\\"accent4_40\\",t[t.accent4_60=Excel.BuiltInStyle.accent4_60]=\\"accent4_60\\",t[t.accent5=Excel.BuiltInStyle.accent5]=\\"accent5\\",t[t.accent5_20=Excel.BuiltInStyle.accent5_20]=\\"accent5_20\\",t[t.accent5_40=Excel.BuiltInStyle.accent5_40]=\\"accent5_40\\",t[t.accent5_60=Excel.BuiltInStyle.accent5_60]=\\"accent5_60\\",t[t.accent6=Excel.BuiltInStyle.accent6]=\\"accent6\\",t[t.accent6_20=Excel.BuiltInStyle.accent6_20]=\\"accent6_20\\",t[t.accent6_40=Excel.BuiltInStyle.accent6_40]=\\"accent6_40\\",t[t.accent6_60=Excel.BuiltInStyle.accent6_60]=\\"accent6_60\\",t[t.explanatoryText=Excel.BuiltInStyle.explanatoryText]=\\"explanatoryText\\"}(t.BuiltInStyle||(t.BuiltInStyle={})),function(t){t[t.asDisplayed=Excel.PrintErrorType.asDisplayed]=\\"asDisplayed\\",t[t.blank=Excel.PrintErrorType.blank]=\\"blank\\",t[t.dash=Excel.PrintErrorType.dash]=\\"dash\\",t[t.notAvailable=Excel.PrintErrorType.notAvailable]=\\"notAvailable\\"}(t.PrintErrorType||(t.PrintErrorType={})),function(t){t[t.none=Excel.WorksheetPositionType.none]=\\"none\\",t[t.before=Excel.WorksheetPositionType.before]=\\"before\\",t[t.after=Excel.WorksheetPositionType.after]=\\"after\\",t[t.beginning=Excel.WorksheetPositionType.beginning]=\\"beginning\\",t[t.end=Excel.WorksheetPositionType.end]=\\"end\\"}(t.WorksheetPositionType||(t.WorksheetPositionType={})),function(t){t[t.noComments=Excel.PrintComments.noComments]=\\"noComments\\",t[t.endSheet=Excel.PrintComments.endSheet]=\\"endSheet\\",t[t.inPlace=Excel.PrintComments.inPlace]=\\"inPlace\\"}(t.PrintComments||(t.PrintComments={})),function(t){t[t.downThenOver=Excel.PrintOrder.downThenOver]=\\"downThenOver\\",t[t.overThenDown=Excel.PrintOrder.overThenDown]=\\"overThenDown\\"}(t.PrintOrder||(t.PrintOrder={})),function(t){t[t.points=Excel.PrintMarginUnit.points]=\\"points\\",t[t.inches=Excel.PrintMarginUnit.inches]=\\"inches\\",t[t.centimeters=Excel.PrintMarginUnit.centimeters]=\\"centimeters\\"}(t.PrintMarginUnit||(t.PrintMarginUnit={})),function(t){t[t.default=Excel.HeaderFooterState.default]=\\"default\\",t[t.firstAndDefault=Excel.HeaderFooterState.firstAndDefault]=\\"firstAndDefault\\",t[t.oddAndEven=Excel.HeaderFooterState.oddAndEven]=\\"oddAndEven\\",t[t.firstOddAndEven=Excel.HeaderFooterState.firstOddAndEven]=\\"firstOddAndEven\\"}(t.HeaderFooterState||(t.HeaderFooterState={})),function(t){t[t.fillDefault=Excel.AutoFillType.fillDefault]=\\"fillDefault\\",t[t.fillCopy=Excel.AutoFillType.fillCopy]=\\"fillCopy\\",t[t.fillSeries=Excel.AutoFillType.fillSeries]=\\"fillSeries\\",t[t.fillFormats=Excel.AutoFillType.fillFormats]=\\"fillFormats\\",t[t.fillValues=Excel.AutoFillType.fillValues]=\\"fillValues\\",t[t.fillDays=Excel.AutoFillType.fillDays]=\\"fillDays\\",t[t.fillWeekdays=Excel.AutoFillType.fillWeekdays]=\\"fillWeekdays\\",t[t.fillMonths=Excel.AutoFillType.fillMonths]=\\"fillMonths\\",t[t.fillYears=Excel.AutoFillType.fillYears]=\\"fillYears\\",t[t.linearTrend=Excel.AutoFillType.linearTrend]=\\"linearTrend\\",t[t.growthTrend=Excel.AutoFillType.growthTrend]=\\"growthTrend\\",t[t.flashFill=Excel.AutoFillType.flashFill]=\\"flashFill\\"}(t.AutoFillType||(t.AutoFillType={})),function(t){t[t.byRows=Excel.GroupOption.byRows]=\\"byRows\\",t[t.byColumns=Excel.GroupOption.byColumns]=\\"byColumns\\"}(t.GroupOption||(t.GroupOption={})),function(t){t[t.all=Excel.RangeCopyType.all]=\\"all\\",t[t.formulas=Excel.RangeCopyType.formulas]=\\"formulas\\",t[t.values=Excel.RangeCopyType.values]=\\"values\\",t[t.formats=Excel.RangeCopyType.formats]=\\"formats\\",t[t.link=Excel.RangeCopyType.link]=\\"link\\"}(t.RangeCopyType||(t.RangeCopyType={})),function(t){t[t.none=Excel.LinkedDataTypeState.none]=\\"none\\",t[t.validLinkedData=Excel.LinkedDataTypeState.validLinkedData]=\\"validLinkedData\\",t[t.disambiguationNeeded=Excel.LinkedDataTypeState.disambiguationNeeded]=\\"disambiguationNeeded\\",t[t.brokenLinkedData=Excel.LinkedDataTypeState.brokenLinkedData]=\\"brokenLinkedData\\",t[t.fetchingData=Excel.LinkedDataTypeState.fetchingData]=\\"fetchingData\\"}(t.LinkedDataTypeState||(t.LinkedDataTypeState={})),function(t){t[t.lineInverse=Excel.GeometricShapeType.lineInverse]=\\"lineInverse\\",t[t.triangle=Excel.GeometricShapeType.triangle]=\\"triangle\\",t[t.rightTriangle=Excel.GeometricShapeType.rightTriangle]=\\"rightTriangle\\",t[t.rectangle=Excel.GeometricShapeType.rectangle]=\\"rectangle\\",t[t.diamond=Excel.GeometricShapeType.diamond]=\\"diamond\\",t[t.parallelogram=Excel.GeometricShapeType.parallelogram]=\\"parallelogram\\",t[t.trapezoid=Excel.GeometricShapeType.trapezoid]=\\"trapezoid\\",t[t.nonIsoscelesTrapezoid=Excel.GeometricShapeType.nonIsoscelesTrapezoid]=\\"nonIsoscelesTrapezoid\\",t[t.pentagon=Excel.GeometricShapeType.pentagon]=\\"pentagon\\",t[t.hexagon=Excel.GeometricShapeType.hexagon]=\\"hexagon\\",t[t.heptagon=Excel.GeometricShapeType.heptagon]=\\"heptagon\\",t[t.octagon=Excel.GeometricShapeType.octagon]=\\"octagon\\",t[t.decagon=Excel.GeometricShapeType.decagon]=\\"decagon\\",t[t.dodecagon=Excel.GeometricShapeType.dodecagon]=\\"dodecagon\\",t[t.star4=Excel.GeometricShapeType.star4]=\\"star4\\",t[t.star5=Excel.GeometricShapeType.star5]=\\"star5\\",t[t.star6=Excel.GeometricShapeType.star6]=\\"star6\\",t[t.star7=Excel.GeometricShapeType.star7]=\\"star7\\",t[t.star8=Excel.GeometricShapeType.star8]=\\"star8\\",t[t.star10=Excel.GeometricShapeType.star10]=\\"star10\\",t[t.star12=Excel.GeometricShapeType.star12]=\\"star12\\",t[t.star16=Excel.GeometricShapeType.star16]=\\"star16\\",t[t.star24=Excel.GeometricShapeType.star24]=\\"star24\\",t[t.star32=Excel.GeometricShapeType.star32]=\\"star32\\",t[t.roundRectangle=Excel.GeometricShapeType.roundRectangle]=\\"roundRectangle\\",t[t.round1Rectangle=Excel.GeometricShapeType.round1Rectangle]=\\"round1Rectangle\\",t[t.round2SameRectangle=Excel.GeometricShapeType.round2SameRectangle]=\\"round2SameRectangle\\",t[t.round2DiagonalRectangle=Excel.GeometricShapeType.round2DiagonalRectangle]=\\"round2DiagonalRectangle\\",t[t.snipRoundRectangle=Excel.GeometricShapeType.snipRoundRectangle]=\\"snipRoundRectangle\\",t[t.snip1Rectangle=Excel.GeometricShapeType.snip1Rectangle]=\\"snip1Rectangle\\",t[t.snip2SameRectangle=Excel.GeometricShapeType.snip2SameRectangle]=\\"snip2SameRectangle\\",t[t.snip2DiagonalRectangle=Excel.GeometricShapeType.snip2DiagonalRectangle]=\\"snip2DiagonalRectangle\\",t[t.plaque=Excel.GeometricShapeType.plaque]=\\"plaque\\",t[t.ellipse=Excel.GeometricShapeType.ellipse]=\\"ellipse\\",t[t.teardrop=Excel.GeometricShapeType.teardrop]=\\"teardrop\\",t[t.homePlate=Excel.GeometricShapeType.homePlate]=\\"homePlate\\",t[t.chevron=Excel.GeometricShapeType.chevron]=\\"chevron\\",t[t.pieWedge=Excel.GeometricShapeType.pieWedge]=\\"pieWedge\\",t[t.pie=Excel.GeometricShapeType.pie]=\\"pie\\",t[t.blockArc=Excel.GeometricShapeType.blockArc]=\\"blockArc\\",t[t.donut=Excel.GeometricShapeType.donut]=\\"donut\\",t[t.noSmoking=Excel.GeometricShapeType.noSmoking]=\\"noSmoking\\",t[t.rightArrow=Excel.GeometricShapeType.rightArrow]=\\"rightArrow\\",t[t.leftArrow=Excel.GeometricShapeType.leftArrow]=\\"leftArrow\\",t[t.upArrow=Excel.GeometricShapeType.upArrow]=\\"upArrow\\",t[t.downArrow=Excel.GeometricShapeType.downArrow]=\\"downArrow\\",t[t.stripedRightArrow=Excel.GeometricShapeType.stripedRightArrow]=\\"stripedRightArrow\\",t[t.notchedRightArrow=Excel.GeometricShapeType.notchedRightArrow]=\\"notchedRightArrow\\",t[t.bentUpArrow=Excel.GeometricShapeType.bentUpArrow]=\\"bentUpArrow\\",t[t.leftRightArrow=Excel.GeometricShapeType.leftRightArrow]=\\"leftRightArrow\\",t[t.upDownArrow=Excel.GeometricShapeType.upDownArrow]=\\"upDownArrow\\",t[t.leftUpArrow=Excel.GeometricShapeType.leftUpArrow]=\\"leftUpArrow\\",t[t.leftRightUpArrow=Excel.GeometricShapeType.leftRightUpArrow]=\\"leftRightUpArrow\\",t[t.quadArrow=Excel.GeometricShapeType.quadArrow]=\\"quadArrow\\",t[t.leftArrowCallout=Excel.GeometricShapeType.leftArrowCallout]=\\"leftArrowCallout\\",t[t.rightArrowCallout=Excel.GeometricShapeType.rightArrowCallout]=\\"rightArrowCallout\\",t[t.upArrowCallout=Excel.GeometricShapeType.upArrowCallout]=\\"upArrowCallout\\",t[t.downArrowCallout=Excel.GeometricShapeType.downArrowCallout]=\\"downArrowCallout\\",t[t.leftRightArrowCallout=Excel.GeometricShapeType.leftRightArrowCallout]=\\"leftRightArrowCallout\\",t[t.upDownArrowCallout=Excel.GeometricShapeType.upDownArrowCallout]=\\"upDownArrowCallout\\",t[t.quadArrowCallout=Excel.GeometricShapeType.quadArrowCallout]=\\"quadArrowCallout\\",t[t.bentArrow=Excel.GeometricShapeType.bentArrow]=\\"bentArrow\\",t[t.uturnArrow=Excel.GeometricShapeType.uturnArrow]=\\"uturnArrow\\",t[t.circularArrow=Excel.GeometricShapeType.circularArrow]=\\"circularArrow\\",t[t.leftCircularArrow=Excel.GeometricShapeType.leftCircularArrow]=\\"leftCircularArrow\\",t[t.leftRightCircularArrow=Excel.GeometricShapeType.leftRightCircularArrow]=\\"leftRightCircularArrow\\",t[t.curvedRightArrow=Excel.GeometricShapeType.curvedRightArrow]=\\"curvedRightArrow\\",t[t.curvedLeftArrow=Excel.GeometricShapeType.curvedLeftArrow]=\\"curvedLeftArrow\\",t[t.curvedUpArrow=Excel.GeometricShapeType.curvedUpArrow]=\\"curvedUpArrow\\",t[t.curvedDownArrow=Excel.GeometricShapeType.curvedDownArrow]=\\"curvedDownArrow\\",t[t.swooshArrow=Excel.GeometricShapeType.swooshArrow]=\\"swooshArrow\\",t[t.cube=Excel.GeometricShapeType.cube]=\\"cube\\",t[t.can=Excel.GeometricShapeType.can]=\\"can\\",t[t.lightningBolt=Excel.GeometricShapeType.lightningBolt]=\\"lightningBolt\\",t[t.heart=Excel.GeometricShapeType.heart]=\\"heart\\",t[t.sun=Excel.GeometricShapeType.sun]=\\"sun\\",t[t.moon=Excel.GeometricShapeType.moon]=\\"moon\\",t[t.smileyFace=Excel.GeometricShapeType.smileyFace]=\\"smileyFace\\",t[t.irregularSeal1=Excel.GeometricShapeType.irregularSeal1]=\\"irregularSeal1\\",t[t.irregularSeal2=Excel.GeometricShapeType.irregularSeal2]=\\"irregularSeal2\\",t[t.foldedCorner=Excel.GeometricShapeType.foldedCorner]=\\"foldedCorner\\",t[t.bevel=Excel.GeometricShapeType.bevel]=\\"bevel\\",t[t.frame=Excel.GeometricShapeType.frame]=\\"frame\\",t[t.halfFrame=Excel.GeometricShapeType.halfFrame]=\\"halfFrame\\",t[t.corner=Excel.GeometricShapeType.corner]=\\"corner\\",t[t.diagonalStripe=Excel.GeometricShapeType.diagonalStripe]=\\"diagonalStripe\\",t[t.chord=Excel.GeometricShapeType.chord]=\\"chord\\",t[t.arc=Excel.GeometricShapeType.arc]=\\"arc\\",t[t.leftBracket=Excel.GeometricShapeType.leftBracket]=\\"leftBracket\\",t[t.rightBracket=Excel.GeometricShapeType.rightBracket]=\\"rightBracket\\",t[t.leftBrace=Excel.GeometricShapeType.leftBrace]=\\"leftBrace\\",t[t.rightBrace=Excel.GeometricShapeType.rightBrace]=\\"rightBrace\\",t[t.bracketPair=Excel.GeometricShapeType.bracketPair]=\\"bracketPair\\",t[t.bracePair=Excel.GeometricShapeType.bracePair]=\\"bracePair\\",t[t.callout1=Excel.GeometricShapeType.callout1]=\\"callout1\\",t[t.callout2=Excel.GeometricShapeType.callout2]=\\"callout2\\",t[t.callout3=Excel.GeometricShapeType.callout3]=\\"callout3\\",t[t.accentCallout1=Excel.GeometricShapeType.accentCallout1]=\\"accentCallout1\\",t[t.accentCallout2=Excel.GeometricShapeType.accentCallout2]=\\"accentCallout2\\",t[t.accentCallout3=Excel.GeometricShapeType.accentCallout3]=\\"accentCallout3\\",t[t.borderCallout1=Excel.GeometricShapeType.borderCallout1]=\\"borderCallout1\\",t[t.borderCallout2=Excel.GeometricShapeType.borderCallout2]=\\"borderCallout2\\",t[t.borderCallout3=Excel.GeometricShapeType.borderCallout3]=\\"borderCallout3\\",t[t.accentBorderCallout1=Excel.GeometricShapeType.accentBorderCallout1]=\\"accentBorderCallout1\\",t[t.accentBorderCallout2=Excel.GeometricShapeType.accentBorderCallout2]=\\"accentBorderCallout2\\",t[t.accentBorderCallout3=Excel.GeometricShapeType.accentBorderCallout3]=\\"accentBorderCallout3\\",t[t.wedgeRectCallout=Excel.GeometricShapeType.wedgeRectCallout]=\\"wedgeRectCallout\\",t[t.wedgeRRectCallout=Excel.GeometricShapeType.wedgeRRectCallout]=\\"wedgeRRectCallout\\",t[t.wedgeEllipseCallout=Excel.GeometricShapeType.wedgeEllipseCallout]=\\"wedgeEllipseCallout\\",t[t.cloudCallout=Excel.GeometricShapeType.cloudCallout]=\\"cloudCallout\\",t[t.cloud=Excel.GeometricShapeType.cloud]=\\"cloud\\",t[t.ribbon=Excel.GeometricShapeType.ribbon]=\\"ribbon\\",t[t.ribbon2=Excel.GeometricShapeType.ribbon2]=\\"ribbon2\\",t[t.ellipseRibbon=Excel.GeometricShapeType.ellipseRibbon]=\\"ellipseRibbon\\",t[t.ellipseRibbon2=Excel.GeometricShapeType.ellipseRibbon2]=\\"ellipseRibbon2\\",t[t.leftRightRibbon=Excel.GeometricShapeType.leftRightRibbon]=\\"leftRightRibbon\\",t[t.verticalScroll=Excel.GeometricShapeType.verticalScroll]=\\"verticalScroll\\",t[t.horizontalScroll=Excel.GeometricShapeType.horizontalScroll]=\\"horizontalScroll\\",t[t.wave=Excel.GeometricShapeType.wave]=\\"wave\\",t[t.doubleWave=Excel.GeometricShapeType.doubleWave]=\\"doubleWave\\",t[t.plus=Excel.GeometricShapeType.plus]=\\"plus\\",t[t.flowChartProcess=Excel.GeometricShapeType.flowChartProcess]=\\"flowChartProcess\\",t[t.flowChartDecision=Excel.GeometricShapeType.flowChartDecision]=\\"flowChartDecision\\",t[t.flowChartInputOutput=Excel.GeometricShapeType.flowChartInputOutput]=\\"flowChartInputOutput\\",t[t.flowChartPredefinedProcess=Excel.GeometricShapeType.flowChartPredefinedProcess]=\\"flowChartPredefinedProcess\\",t[t.flowChartInternalStorage=Excel.GeometricShapeType.flowChartInternalStorage]=\\"flowChartInternalStorage\\",t[t.flowChartDocument=Excel.GeometricShapeType.flowChartDocument]=\\"flowChartDocument\\",t[t.flowChartMultidocument=Excel.GeometricShapeType.flowChartMultidocument]=\\"flowChartMultidocument\\",t[t.flowChartTerminator=Excel.GeometricShapeType.flowChartTerminator]=\\"flowChartTerminator\\",t[t.flowChartPreparation=Excel.GeometricShapeType.flowChartPreparation]=\\"flowChartPreparation\\",t[t.flowChartManualInput=Excel.GeometricShapeType.flowChartManualInput]=\\"flowChartManualInput\\",t[t.flowChartManualOperation=Excel.GeometricShapeType.flowChartManualOperation]=\\"flowChartManualOperation\\",t[t.flowChartConnector=Excel.GeometricShapeType.flowChartConnector]=\\"flowChartConnector\\",t[t.flowChartPunchedCard=Excel.GeometricShapeType.flowChartPunchedCard]=\\"flowChartPunchedCard\\",t[t.flowChartPunchedTape=Excel.GeometricShapeType.flowChartPunchedTape]=\\"flowChartPunchedTape\\",t[t.flowChartSummingJunction=Excel.GeometricShapeType.flowChartSummingJunction]=\\"flowChartSummingJunction\\",t[t.flowChartOr=Excel.GeometricShapeType.flowChartOr]=\\"flowChartOr\\",t[t.flowChartCollate=Excel.GeometricShapeType.flowChartCollate]=\\"flowChartCollate\\",t[t.flowChartSort=Excel.GeometricShapeType.flowChartSort]=\\"flowChartSort\\",t[t.flowChartExtract=Excel.GeometricShapeType.flowChartExtract]=\\"flowChartExtract\\",t[t.flowChartMerge=Excel.GeometricShapeType.flowChartMerge]=\\"flowChartMerge\\",t[t.flowChartOfflineStorage=Excel.GeometricShapeType.flowChartOfflineStorage]=\\"flowChartOfflineStorage\\",t[t.flowChartOnlineStorage=Excel.GeometricShapeType.flowChartOnlineStorage]=\\"flowChartOnlineStorage\\",t[t.flowChartMagneticTape=Excel.GeometricShapeType.flowChartMagneticTape]=\\"flowChartMagneticTape\\",t[t.flowChartMagneticDisk=Excel.GeometricShapeType.flowChartMagneticDisk]=\\"flowChartMagneticDisk\\",t[t.flowChartMagneticDrum=Excel.GeometricShapeType.flowChartMagneticDrum]=\\"flowChartMagneticDrum\\",t[t.flowChartDisplay=Excel.GeometricShapeType.flowChartDisplay]=\\"flowChartDisplay\\",t[t.flowChartDelay=Excel.GeometricShapeType.flowChartDelay]=\\"flowChartDelay\\",t[t.flowChartAlternateProcess=Excel.GeometricShapeType.flowChartAlternateProcess]=\\"flowChartAlternateProcess\\",t[t.flowChartOffpageConnector=Excel.GeometricShapeType.flowChartOffpageConnector]=\\"flowChartOffpageConnector\\",t[t.actionButtonBlank=Excel.GeometricShapeType.actionButtonBlank]=\\"actionButtonBlank\\",t[t.actionButtonHome=Excel.GeometricShapeType.actionButtonHome]=\\"actionButtonHome\\",t[t.actionButtonHelp=Excel.GeometricShapeType.actionButtonHelp]=\\"actionButtonHelp\\",t[t.actionButtonInformation=Excel.GeometricShapeType.actionButtonInformation]=\\"actionButtonInformation\\",t[t.actionButtonForwardNext=Excel.GeometricShapeType.actionButtonForwardNext]=\\"actionButtonForwardNext\\",t[t.actionButtonBackPrevious=Excel.GeometricShapeType.actionButtonBackPrevious]=\\"actionButtonBackPrevious\\",t[t.actionButtonEnd=Excel.GeometricShapeType.actionButtonEnd]=\\"actionButtonEnd\\",t[t.actionButtonBeginning=Excel.GeometricShapeType.actionButtonBeginning]=\\"actionButtonBeginning\\",t[t.actionButtonReturn=Excel.GeometricShapeType.actionButtonReturn]=\\"actionButtonReturn\\",t[t.actionButtonDocument=Excel.GeometricShapeType.actionButtonDocument]=\\"actionButtonDocument\\",t[t.actionButtonSound=Excel.GeometricShapeType.actionButtonSound]=\\"actionButtonSound\\",t[t.actionButtonMovie=Excel.GeometricShapeType.actionButtonMovie]=\\"actionButtonMovie\\",t[t.gear6=Excel.GeometricShapeType.gear6]=\\"gear6\\",t[t.gear9=Excel.GeometricShapeType.gear9]=\\"gear9\\",t[t.funnel=Excel.GeometricShapeType.funnel]=\\"funnel\\",t[t.mathPlus=Excel.GeometricShapeType.mathPlus]=\\"mathPlus\\",t[t.mathMinus=Excel.GeometricShapeType.mathMinus]=\\"mathMinus\\",t[t.mathMultiply=Excel.GeometricShapeType.mathMultiply]=\\"mathMultiply\\",t[t.mathDivide=Excel.GeometricShapeType.mathDivide]=\\"mathDivide\\",t[t.mathEqual=Excel.GeometricShapeType.mathEqual]=\\"mathEqual\\",t[t.mathNotEqual=Excel.GeometricShapeType.mathNotEqual]=\\"mathNotEqual\\",t[t.cornerTabs=Excel.GeometricShapeType.cornerTabs]=\\"cornerTabs\\",t[t.squareTabs=Excel.GeometricShapeType.squareTabs]=\\"squareTabs\\",t[t.plaqueTabs=Excel.GeometricShapeType.plaqueTabs]=\\"plaqueTabs\\",t[t.chartX=Excel.GeometricShapeType.chartX]=\\"chartX\\",t[t.chartStar=Excel.GeometricShapeType.chartStar]=\\"chartStar\\",t[t.chartPlus=Excel.GeometricShapeType.chartPlus]=\\"chartPlus\\"}(t.GeometricShapeType||(t.GeometricShapeType={})),function(t){t[t.straight=Excel.ConnectorType.straight]=\\"straight\\",t[t.elbow=Excel.ConnectorType.elbow]=\\"elbow\\",t[t.curve=Excel.ConnectorType.curve]=\\"curve\\"}(t.ConnectorType||(t.ConnectorType={})),function(t){t[t.plain=Excel.ContentType.plain]=\\"plain\\",t[t.mention=Excel.ContentType.mention]=\\"mention\\"}(t.ContentType||(t.ContentType={})),function(t){t[t.conditionalFormats=Excel.SpecialCellType.conditionalFormats]=\\"conditionalFormats\\",t[t.dataValidations=Excel.SpecialCellType.dataValidations]=\\"dataValidations\\",t[t.blanks=Excel.SpecialCellType.blanks]=\\"blanks\\",t[t.constants=Excel.SpecialCellType.constants]=\\"constants\\",t[t.formulas=Excel.SpecialCellType.formulas]=\\"formulas\\",t[t.sameConditionalFormat=Excel.SpecialCellType.sameConditionalFormat]=\\"sameConditionalFormat\\",t[t.sameDataValidation=Excel.SpecialCellType.sameDataValidation]=\\"sameDataValidation\\",t[t.visible=Excel.SpecialCellType.visible]=\\"visible\\"}(t.SpecialCellType||(t.SpecialCellType={})),function(t){t[t.all=Excel.SpecialCellValueType.all]=\\"all\\",t[t.errors=Excel.SpecialCellValueType.errors]=\\"errors\\",t[t.errorsLogical=Excel.SpecialCellValueType.errorsLogical]=\\"errorsLogical\\",t[t.errorsNumbers=Excel.SpecialCellValueType.errorsNumbers]=\\"errorsNumbers\\",t[t.errorsText=Excel.SpecialCellValueType.errorsText]=\\"errorsText\\",t[t.errorsLogicalNumber=Excel.SpecialCellValueType.errorsLogicalNumber]=\\"errorsLogicalNumber\\",t[t.errorsLogicalText=Excel.SpecialCellValueType.errorsLogicalText]=\\"errorsLogicalText\\",t[t.errorsNumberText=Excel.SpecialCellValueType.errorsNumberText]=\\"errorsNumberText\\",t[t.logical=Excel.SpecialCellValueType.logical]=\\"logical\\",t[t.logicalNumbers=Excel.SpecialCellValueType.logicalNumbers]=\\"logicalNumbers\\",t[t.logicalText=Excel.SpecialCellValueType.logicalText]=\\"logicalText\\",t[t.logicalNumbersText=Excel.SpecialCellValueType.logicalNumbersText]=\\"logicalNumbersText\\",t[t.numbers=Excel.SpecialCellValueType.numbers]=\\"numbers\\",t[t.numbersText=Excel.SpecialCellValueType.numbersText]=\\"numbersText\\",t[t.text=Excel.SpecialCellValueType.text]=\\"text\\"}(t.SpecialCellValueType||(t.SpecialCellValueType={})),function(t){t[t.twoCell=Excel.Placement.twoCell]=\\"twoCell\\",t[t.oneCell=Excel.Placement.oneCell]=\\"oneCell\\",t[t.absolute=Excel.Placement.absolute]=\\"absolute\\"}(t.Placement||(t.Placement={})),function(t){t[t.none=Excel.FillPattern.none]=\\"none\\",t[t.solid=Excel.FillPattern.solid]=\\"solid\\",t[t.gray50=Excel.FillPattern.gray50]=\\"gray50\\",t[t.gray75=Excel.FillPattern.gray75]=\\"gray75\\",t[t.gray25=Excel.FillPattern.gray25]=\\"gray25\\",t[t.horizontal=Excel.FillPattern.horizontal]=\\"horizontal\\",t[t.vertical=Excel.FillPattern.vertical]=\\"vertical\\",t[t.down=Excel.FillPattern.down]=\\"down\\",t[t.up=Excel.FillPattern.up]=\\"up\\",t[t.checker=Excel.FillPattern.checker]=\\"checker\\",t[t.semiGray75=Excel.FillPattern.semiGray75]=\\"semiGray75\\",t[t.lightHorizontal=Excel.FillPattern.lightHorizontal]=\\"lightHorizontal\\",t[t.lightVertical=Excel.FillPattern.lightVertical]=\\"lightVertical\\",t[t.lightDown=Excel.FillPattern.lightDown]=\\"lightDown\\",t[t.lightUp=Excel.FillPattern.lightUp]=\\"lightUp\\",t[t.grid=Excel.FillPattern.grid]=\\"grid\\",t[t.crissCross=Excel.FillPattern.crissCross]=\\"crissCross\\",t[t.gray16=Excel.FillPattern.gray16]=\\"gray16\\",t[t.gray8=Excel.FillPattern.gray8]=\\"gray8\\",t[t.linearGradient=Excel.FillPattern.linearGradient]=\\"linearGradient\\",t[t.rectangularGradient=Excel.FillPattern.rectangularGradient]=\\"rectangularGradient\\"}(t.FillPattern||(t.FillPattern={})),function(t){t[t.left=Excel.ShapeTextHorizontalAlignment.left]=\\"left\\",t[t.center=Excel.ShapeTextHorizontalAlignment.center]=\\"center\\",t[t.right=Excel.ShapeTextHorizontalAlignment.right]=\\"right\\",t[t.justify=Excel.ShapeTextHorizontalAlignment.justify]=\\"justify\\",t[t.justifyLow=Excel.ShapeTextHorizontalAlignment.justifyLow]=\\"justifyLow\\",t[t.distributed=Excel.ShapeTextHorizontalAlignment.distributed]=\\"distributed\\",t[t.thaiDistributed=Excel.ShapeTextHorizontalAlignment.thaiDistributed]=\\"thaiDistributed\\"}(t.ShapeTextHorizontalAlignment||(t.ShapeTextHorizontalAlignment={})),function(t){t[t.top=Excel.ShapeTextVerticalAlignment.top]=\\"top\\",t[t.middle=Excel.ShapeTextVerticalAlignment.middle]=\\"middle\\",t[t.bottom=Excel.ShapeTextVerticalAlignment.bottom]=\\"bottom\\",t[t.justified=Excel.ShapeTextVerticalAlignment.justified]=\\"justified\\",t[t.distributed=Excel.ShapeTextVerticalAlignment.distributed]=\\"distributed\\"}(t.ShapeTextVerticalAlignment||(t.ShapeTextVerticalAlignment={})),function(t){t[t.overflow=Excel.ShapeTextVerticalOverflow.overflow]=\\"overflow\\",t[t.ellipsis=Excel.ShapeTextVerticalOverflow.ellipsis]=\\"ellipsis\\",t[t.clip=Excel.ShapeTextVerticalOverflow.clip]=\\"clip\\"}(t.ShapeTextVerticalOverflow||(t.ShapeTextVerticalOverflow={})),function(t){t[t.overflow=Excel.ShapeTextHorizontalOverflow.overflow]=\\"overflow\\",t[t.clip=Excel.ShapeTextHorizontalOverflow.clip]=\\"clip\\"}(t.ShapeTextHorizontalOverflow||(t.ShapeTextHorizontalOverflow={})),function(t){t[t.leftToRight=Excel.ShapeTextReadingOrder.leftToRight]=\\"leftToRight\\",t[t.rightToLeft=Excel.ShapeTextReadingOrder.rightToLeft]=\\"rightToLeft\\"}(t.ShapeTextReadingOrder||(t.ShapeTextReadingOrder={})),function(t){t[t.horizontal=Excel.ShapeTextOrientation.horizontal]=\\"horizontal\\",t[t.vertical=Excel.ShapeTextOrientation.vertical]=\\"vertical\\",t[t.vertical270=Excel.ShapeTextOrientation.vertical270]=\\"vertical270\\",t[t.wordArtVertical=Excel.ShapeTextOrientation.wordArtVertical]=\\"wordArtVertical\\",t[t.eastAsianVertical=Excel.ShapeTextOrientation.eastAsianVertical]=\\"eastAsianVertical\\",t[t.mongolianVertical=Excel.ShapeTextOrientation.mongolianVertical]=\\"mongolianVertical\\",t[t.wordArtVerticalRTL=Excel.ShapeTextOrientation.wordArtVerticalRTL]=\\"wordArtVerticalRTL\\"}(t.ShapeTextOrientation||(t.ShapeTextOrientation={})),function(t){t[t.autoSizeNone=Excel.ShapeAutoSize.autoSizeNone]=\\"autoSizeNone\\",t[t.autoSizeTextToFitShape=Excel.ShapeAutoSize.autoSizeTextToFitShape]=\\"autoSizeTextToFitShape\\",t[t.autoSizeShapeToFitText=Excel.ShapeAutoSize.autoSizeShapeToFitText]=\\"autoSizeShapeToFitText\\",t[t.autoSizeMixed=Excel.ShapeAutoSize.autoSizeMixed]=\\"autoSizeMixed\\"}(t.ShapeAutoSize||(t.ShapeAutoSize={})),function(t){t[t.dataSourceOrder=Excel.SlicerSortType.dataSourceOrder]=\\"dataSourceOrder\\",t[t.ascending=Excel.SlicerSortType.ascending]=\\"ascending\\",t[t.descending=Excel.SlicerSortType.descending]=\\"descending\\"}(t.SlicerSortType||(t.SlicerSortType={})),function(t){t[t.general=Excel.NumberFormatCategory.general]=\\"general\\",t[t.number=Excel.NumberFormatCategory.number]=\\"number\\",t[t.currency=Excel.NumberFormatCategory.currency]=\\"currency\\",t[t.accounting=Excel.NumberFormatCategory.accounting]=\\"accounting\\",t[t.date=Excel.NumberFormatCategory.date]=\\"date\\",t[t.time=Excel.NumberFormatCategory.time]=\\"time\\",t[t.percentage=Excel.NumberFormatCategory.percentage]=\\"percentage\\",t[t.fraction=Excel.NumberFormatCategory.fraction]=\\"fraction\\",t[t.scientific=Excel.NumberFormatCategory.scientific]=\\"scientific\\",t[t.text=Excel.NumberFormatCategory.text]=\\"text\\",t[t.special=Excel.NumberFormatCategory.special]=\\"special\\",t[t.custom=Excel.NumberFormatCategory.custom]=\\"custom\\"}(t.NumberFormatCategory||(t.NumberFormatCategory={}))}(ExcelScript={});"}')},50726:function(e){e.exports=JSON.parse('{"data":"declare namespace ExcelScript {\\n    /*\\n     * Special Run Function\\n     */\\n    function run(\\n        callback: (workbook: Workbook) => Promise<void>\\n    ): Promise<void>;\\n\\n    //\\n    // Class\\n    //\\n\\n    /**\\n     * Contains information about a linked workbook.\\n     * If a workbook has links pointing to data in another workbook, the second workbook is linked to the first workbook.\\n     * In this scenario, the second workbook is called the \\"linked workbook\\".\\n     */\\n    interface LinkedWorkbook {\\n        /**\\n         * Makes a request to break the links pointing to the linked workbook.\\n         * Links in formulas are replaced with the latest fetched data.\\n         * The current `LinkedWorkbook` object is invalidated and removed from `LinkedWorkbookCollection`.\\n         */\\n        breakLinks(): void;\\n\\n        /**\\n         * Makes a request to refresh the data retrieved from the linked workbook.\\n         */\\n        refreshLinks(): void;\\n    }\\n\\n    /**\\n     * Represents the Excel application that manages the workbook.\\n     */\\n    interface Application {\\n        /**\\n         * Returns the Excel calculation engine version used for the last full recalculation.\\n         */\\n        getCalculationEngineVersion(): number;\\n\\n        /**\\n         * Returns the calculation mode used in the workbook, as defined by the constants in `ExcelScript.CalculationMode`. Possible values are: `Automatic`, where Excel controls recalculation; `AutomaticExceptTables`, where Excel controls recalculation but ignores changes in tables; `Manual`, where calculation is done when the user requests it.\\n         */\\n        getCalculationMode(): CalculationMode;\\n\\n        /**\\n         * Returns the calculation mode used in the workbook, as defined by the constants in `ExcelScript.CalculationMode`. Possible values are: `Automatic`, where Excel controls recalculation; `AutomaticExceptTables`, where Excel controls recalculation but ignores changes in tables; `Manual`, where calculation is done when the user requests it.\\n         */\\n        setCalculationMode(calculationMode: CalculationMode): void;\\n\\n        /**\\n         * Returns the calculation state of the application. See `ExcelScript.CalculationState` for details.\\n         */\\n        getCalculationState(): CalculationState;\\n\\n        /**\\n         * Provides information based on current system culture settings. This includes the culture names, number formatting, and other culturally dependent settings.\\n         */\\n        getCultureInfo(): CultureInfo;\\n\\n        /**\\n         * Gets the string used as the decimal separator for numeric values. This is based on the local Excel settings.\\n         */\\n        getDecimalSeparator(): string;\\n\\n        /**\\n         * Returns the iterative calculation settings.\\n         * In Excel on Windows and Mac, the settings will apply to the Excel Application.\\n         * In Excel on the web and other platforms, the settings will apply to the active workbook.\\n         */\\n        getIterativeCalculation(): IterativeCalculation;\\n\\n        /**\\n         * Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on the local Excel settings.\\n         */\\n        getThousandsSeparator(): string;\\n\\n        /**\\n         * Specifies if the system separators of Excel are enabled.\\n         * System separators include the decimal separator and thousands separator.\\n         */\\n        getUseSystemSeparators(): boolean;\\n\\n        /**\\n         * Recalculate all currently opened workbooks in Excel.\\n         * @param calculationType Specifies the calculation type to use. See `ExcelScript.CalculationType` for details.\\n         */\\n        calculate(calculationType: CalculationType): void;\\n    }\\n\\n    /**\\n     * Represents the iterative calculation settings.\\n     */\\n    interface IterativeCalculation {\\n        /**\\n         * True if Excel will use iteration to resolve circular references.\\n         */\\n        getEnabled(): boolean;\\n\\n        /**\\n         * True if Excel will use iteration to resolve circular references.\\n         */\\n        setEnabled(enabled: boolean): void;\\n\\n        /**\\n         * Specifies the maximum amount of change between each iteration as Excel resolves circular references.\\n         */\\n        getMaxChange(): number;\\n\\n        /**\\n         * Specifies the maximum amount of change between each iteration as Excel resolves circular references.\\n         */\\n        setMaxChange(maxChange: number): void;\\n\\n        /**\\n         * Specifies the maximum number of iterations that Excel can use to resolve a circular reference.\\n         */\\n        getMaxIteration(): number;\\n\\n        /**\\n         * Specifies the maximum number of iterations that Excel can use to resolve a circular reference.\\n         */\\n        setMaxIteration(maxIteration: number): void;\\n    }\\n\\n    /**\\n     * Workbook is the top level object which contains related workbook objects such as worksheets, tables, and ranges.\\n     */\\n    interface Workbook {\\n        /**\\n         * Represents the Excel application instance that contains this workbook.\\n         */\\n        getApplication(): Application;\\n\\n        /**\\n         * Specifies if the workbook is in AutoSave mode.\\n         */\\n        getAutoSave(): boolean;\\n\\n        /**\\n         * Returns a number about the version of Excel Calculation Engine.\\n         */\\n        getCalculationEngineVersion(): number;\\n\\n        /**\\n         * True if all charts in the workbook are tracking the actual data points to which they are attached.\\n         * False if the charts track the index of the data points.\\n         */\\n        getChartDataPointTrack(): boolean;\\n\\n        /**\\n         * True if all charts in the workbook are tracking the actual data points to which they are attached.\\n         * False if the charts track the index of the data points.\\n         */\\n        setChartDataPointTrack(chartDataPointTrack: boolean): void;\\n\\n        /**\\n         * Specifies if changes have been made since the workbook was last saved.\\n         * You can set this property to `true` if you want to close a modified workbook without either saving it or being prompted to save it.\\n         */\\n        getIsDirty(): boolean;\\n\\n        /**\\n         * Specifies if changes have been made since the workbook was last saved.\\n         * You can set this property to `true` if you want to close a modified workbook without either saving it or being prompted to save it.\\n         */\\n        setIsDirty(isDirty: boolean): void;\\n\\n        /**\\n         * Gets the workbook name.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Specifies if the workbook has ever been saved locally or online.\\n         */\\n        getPreviouslySaved(): boolean;\\n\\n        /**\\n         * Gets the workbook properties.\\n         */\\n        getProperties(): DocumentProperties;\\n\\n        /**\\n         * Returns the protection object for a workbook.\\n         */\\n        getProtection(): WorkbookProtection;\\n\\n        /**\\n         * Returns `true` if the workbook is open in read-only mode.\\n         */\\n        getReadOnly(): boolean;\\n\\n        /**\\n         * True if calculations in this workbook will be done using only the precision of the numbers as they\'re displayed.\\n         * Data will permanently lose accuracy when switching this property from `false` to `true`.\\n         */\\n        getUsePrecisionAsDisplayed(): boolean;\\n\\n        /**\\n         * True if calculations in this workbook will be done using only the precision of the numbers as they\'re displayed.\\n         * Data will permanently lose accuracy when switching this property from `false` to `true`.\\n         */\\n        setUsePrecisionAsDisplayed(usePrecisionAsDisplayed: boolean): void;\\n\\n        /**\\n         * Gets the currently active cell from the workbook.\\n         */\\n        getActiveCell(): Range;\\n\\n        /**\\n         * Gets the currently active chart in the workbook. If there is no active chart, then this method returns `undefined`.\\n         */\\n        getActiveChart(): Chart;\\n\\n        /**\\n         * Gets the currently active slicer in the workbook. If there is no active slicer, then this method returns `undefined`.\\n         */\\n        getActiveSlicer(): Slicer;\\n\\n        /**\\n         * Gets the currently selected single range from the workbook. If there are multiple ranges selected, this method will throw an error.\\n         */\\n        getSelectedRange(): Range;\\n\\n        /**\\n         * Gets the currently selected one or more ranges from the workbook. Unlike `getSelectedRange()`, this method returns a `RangeAreas` object that represents all the selected ranges.\\n         */\\n        getSelectedRanges(): RangeAreas;\\n\\n        /**\\n         * Represents a collection of bindings that are part of the workbook.\\n         */\\n        getBindings(): Binding[];\\n\\n        /**\\n         * Add a new binding to a particular Range.\\n         * @param range Range to bind the binding to. May be a `Range` object or a string. If string, must contain the full address, including the sheet name\\n         * @param bindingType Type of binding. See `ExcelScript.BindingType`.\\n         * @param id Name of the binding.\\n         */\\n        addBinding(\\n            range: Range | string,\\n            bindingType: BindingType,\\n            id: string\\n        ): Binding;\\n\\n        /**\\n         * Add a new binding based on a named item in the workbook.\\n         * If the named item references to multiple areas, the `InvalidReference` error will be returned.\\n         * @param name Name from which to create binding.\\n         * @param bindingType Type of binding. See `ExcelScript.BindingType`.\\n         * @param id Name of the binding.\\n         */\\n        addBindingFromNamedItem(\\n            name: string,\\n            bindingType: BindingType,\\n            id: string\\n        ): Binding;\\n\\n        /**\\n         * Add a new binding based on the current selection.\\n         * If the selection has multiple areas, the `InvalidReference` error will be returned.\\n         * @param bindingType Type of binding. See `ExcelScript.BindingType`.\\n         * @param id Name of the binding.\\n         */\\n        addBindingFromSelection(bindingType: BindingType, id: string): Binding;\\n\\n        /**\\n         * Gets a binding object by ID. If the binding object does not exist, then this method returns `undefined`.\\n         * @param id ID of the binding object to be retrieved.\\n         */\\n        getBinding(id: string): Binding | undefined;\\n\\n        /**\\n         * Represents a collection of comments associated with the workbook.\\n         */\\n        getComments(): Comment[];\\n\\n        /**\\n         * Creates a new comment with the given content on the given cell. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n         * @param cellAddress The cell to which the comment is added. This can be a `Range` object or a string. If it\'s a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n         * @param content The comment\'s content. This can be either a string or `CommentRichContent` object. Strings are used for plain text. `CommentRichContent` objects allow for other comment features, such as mentions.\\n         * @param contentType Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\\n         */\\n        addComment(\\n            cellAddress: Range | string,\\n            content: CommentRichContent | string,\\n            contentType?: ContentType\\n        ): Comment;\\n\\n        /**\\n         * Gets a comment from the collection based on its ID.\\n         * @param commentId The identifier for the comment.\\n         */\\n        getComment(commentId: string): Comment;\\n\\n        /**\\n         * Gets the comment from the specified cell.\\n         * @param cellAddress The cell which the comment is on. This can be a `Range` object or a string. If it\'s a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n         */\\n        getCommentByCell(cellAddress: Range | string): Comment;\\n\\n        /**\\n         * Gets the comment to which the given reply is connected.\\n         * @param replyId The identifier of comment reply.\\n         */\\n        getCommentByReplyId(replyId: string): Comment;\\n\\n        /**\\n         * Represents the collection of custom XML parts contained by this workbook.\\n         */\\n        getCustomXmlParts(): CustomXmlPart[];\\n\\n        /**\\n         * Adds a new custom XML part to the workbook.\\n         * @param xml XML content. Must be a valid XML fragment.\\n         */\\n        addCustomXmlPart(xml: string): CustomXmlPart;\\n\\n        /**\\n         * Gets a new collection of custom XML parts whose namespaces match the given namespace.\\n         * @param namespaceUri This must be a fully qualified schema URI; for example, \\"http://schemas.contoso.com/review/1.0\\".\\n         */\\n        getCustomXmlPartsByNamespace(namespaceUri: string): CustomXmlPart[];\\n\\n        /**\\n         * Gets a custom XML part based on its ID.\\n         * If the `CustomXmlPart` does not exist, then this method returns `undefined`.\\n         * @param id ID of the object to be retrieved.\\n         */\\n        getCustomXmlPart(id: string): CustomXmlPart | undefined;\\n\\n        /**\\n         * Returns a collection of linked workbooks. In formulas, the workbook links can be used to reference data (cell values and names) outside of the current workbook.\\n         */\\n        getLinkedWorkbooks(): LinkedWorkbook[];\\n\\n        /**\\n         * Represents the update mode of the workbook links. The mode is same for all of the workbook links present in the workbook.\\n         */\\n        getLinkedWorkbookRefreshMode(): WorkbookLinksRefreshMode;\\n\\n        /**\\n         * Represents the update mode of the workbook links. The mode is same for all of the workbook links present in the workbook.\\n         */\\n        setLinkedWorkbookRefreshMode(\\n            linkedWorkbookRefreshMode: WorkbookLinksRefreshMode\\n        ): void;\\n\\n        /**\\n         * Breaks all the links to the linked workbooks. Once the links are broken, any formulas referencing workbook links are removed entirely and replaced with the most recently retrieved values.\\n         */\\n        breakAllLinksToLinkedWorkbooks(): void;\\n\\n        /**\\n         * Gets information about a linked workbook by its URL. If the workbook does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n         * @param key The URL of the linked workbook.\\n         */\\n        getLinkedWorkbookByUrl(key: string): LinkedWorkbook | undefined;\\n\\n        /**\\n         * Makes a request to refresh all the workbook links.\\n         */\\n        refreshAllLinksToLinkedWorkbooks(): void;\\n\\n        /**\\n         * Represents a collection of workbook-scoped named items (named ranges and constants).\\n         */\\n        getNames(): NamedItem[];\\n\\n        /**\\n         * Adds a new name to the collection of the given scope.\\n         * @param name The name of the named item.\\n         * @param reference The formula or the range that the name will refer to.\\n         * @param comment Optional. The comment associated with the named item.\\n         */\\n        addNamedItem(\\n            name: string,\\n            reference: Range | string,\\n            comment?: string\\n        ): NamedItem;\\n\\n        /**\\n         * Adds a new name to the collection of the given scope using the user\'s locale for the formula.\\n         * @param name The name of the named item.\\n         * @param formula The formula in the user\'s locale that the name will refer to.\\n         * @param comment Optional. The comment associated with the named item.\\n         */\\n        addNamedItemFormulaLocal(\\n            name: string,\\n            formula: string,\\n            comment?: string\\n        ): NamedItem;\\n\\n        /**\\n         * Gets a `NamedItem` object using its name. If the object does not exist, then this method returns `undefined`.\\n         * @param name Nameditem name.\\n         */\\n        getNamedItem(name: string): NamedItem | undefined;\\n\\n        /**\\n         * Represents a collection of PivotTableStyles associated with the workbook.\\n         */\\n        getPivotTableStyles(): PivotTableStyle[];\\n\\n        /**\\n         * Creates a blank `PivotTableStyle` with the specified name.\\n         * @param name The unique name for the new PivotTable style. Will throw an `InvalidArgument` error if the name is already in use.\\n         * @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n         */\\n        addPivotTableStyle(\\n            name: string,\\n            makeUniqueName?: boolean\\n        ): PivotTableStyle;\\n\\n        /**\\n         * Gets the default PivotTable style for the parent object\'s scope.\\n         */\\n        getDefaultPivotTableStyle(): PivotTableStyle;\\n\\n        /**\\n         * Gets a `PivotTableStyle` by name. If the `PivotTableStyle` does not exist, then this method returns `undefined`.\\n         * @param name Name of the PivotTable style to be retrieved.\\n         */\\n        getPivotTableStyle(name: string): PivotTableStyle | undefined;\\n\\n        /**\\n         * Sets the default PivotTable style for use in the parent object\'s scope.\\n         * @param newDefaultStyle The `PivotTableStyle` object, or name of the `PivotTableStyle` object, that should be the new default.\\n         */\\n        setDefaultPivotTableStyle(\\n            newDefaultStyle: PivotTableStyle | string\\n        ): void;\\n\\n        /**\\n         * Represents a collection of PivotTables associated with the workbook.\\n         */\\n        getPivotTables(): PivotTable[];\\n\\n        /**\\n         * Add a PivotTable based on the specified source data and insert it at the top-left cell of the destination range.\\n         * @param name The name of the new PivotTable.\\n         * @param source The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.\\n         * @param destination The cell in the upper-left corner of the PivotTable report\'s destination range (the range on the worksheet where the resulting report will be placed).\\n         */\\n        addPivotTable(\\n            name: string,\\n            source: Range | string | Table,\\n            destination: Range | string\\n        ): PivotTable;\\n\\n        /**\\n         * Gets a PivotTable by name. If the PivotTable does not exist, then this method returns `undefined`.\\n         * @param name Name of the PivotTable to be retrieved.\\n         */\\n        getPivotTable(name: string): PivotTable | undefined;\\n\\n        /**\\n         * Refreshes all the pivot tables in the collection.\\n         */\\n        refreshAllPivotTables(): void;\\n\\n        /**\\n         * Represents a collection of SlicerStyles associated with the workbook.\\n         */\\n        getSlicerStyles(): SlicerStyle[];\\n\\n        /**\\n         * Creates a blank slicer style with the specified name.\\n         * @param name The unique name for the new slicer style. Will throw an `InvalidArgument` exception if the name is already in use.\\n         * @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n         */\\n        addSlicerStyle(name: string, makeUniqueName?: boolean): SlicerStyle;\\n\\n        /**\\n         * Gets the default `SlicerStyle` for the parent object\'s scope.\\n         */\\n        getDefaultSlicerStyle(): SlicerStyle;\\n\\n        /**\\n         * Gets a `SlicerStyle` by name. If the slicer style doesn\'t exist, then this method returns `undefined`.\\n         * @param name Name of the slicer style to be retrieved.\\n         */\\n        getSlicerStyle(name: string): SlicerStyle | undefined;\\n\\n        /**\\n         * Sets the default slicer style for use in the parent object\'s scope.\\n         * @param newDefaultStyle The `SlicerStyle` object, or name of the `SlicerStyle` object, that should be the new default.\\n         */\\n        setDefaultSlicerStyle(newDefaultStyle: SlicerStyle | string): void;\\n\\n        /**\\n         * Represents a collection of slicers associated with the workbook.\\n         */\\n        getSlicers(): Slicer[];\\n\\n        /**\\n         * Adds a new slicer to the workbook.\\n         * @param slicerSource The data source that the new slicer will be based on. It can be a `PivotTable` object, a `Table` object, or a string. When a PivotTable object is passed, the data source is the source of the `PivotTable` object. When a `Table` object is passed, the data source is the `Table` object. When a string is passed, it is interpreted as the name or ID of a PivotTable or table.\\n         * @param sourceField The field in the data source to filter by. It can be a `PivotField` object, a `TableColumn` object, the ID of a `PivotField` or the name or ID of a `TableColumn`.\\n         * @param slicerDestination Optional. The worksheet in which the new slicer will be created. It can be a `Worksheet` object or the name or ID of a worksheet. This parameter can be omitted if the slicer collection is retrieved from a worksheet.\\n         */\\n        addSlicer(\\n            slicerSource: string | PivotTable | Table,\\n            sourceField: string | PivotField | number | TableColumn,\\n            slicerDestination?: string | Worksheet\\n        ): Slicer;\\n\\n        /**\\n         * Gets a slicer using its name or ID. If the slicer doesn\'t exist, then this method returns `undefined`.\\n         * @param key Name or ID of the slicer to be retrieved.\\n         */\\n        getSlicer(key: string): Slicer | undefined;\\n\\n        /**\\n         * Represents a collection of styles associated with the workbook.\\n         */\\n        getPredefinedCellStyles(): PredefinedCellStyle[];\\n\\n        /**\\n         * Adds a new style to the collection.\\n         * @param name Name of the style to be added.\\n         */\\n        addPredefinedCellStyle(name: string): void;\\n\\n        /**\\n         * Gets a `Style` by name.\\n         * @param name Name of the style to be retrieved.\\n         */\\n        getPredefinedCellStyle(name: string): PredefinedCellStyle;\\n\\n        /**\\n         * Represents a collection of TableStyles associated with the workbook.\\n         */\\n        getTableStyles(): TableStyle[];\\n\\n        /**\\n         * Creates a blank `TableStyle` with the specified name.\\n         * @param name The unique name for the new table style. Will throw an `InvalidArgument` error if the name is already in use.\\n         * @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n         */\\n        addTableStyle(name: string, makeUniqueName?: boolean): TableStyle;\\n\\n        /**\\n         * Gets the default table style for the parent object\'s scope.\\n         */\\n        getDefaultTableStyle(): TableStyle;\\n\\n        /**\\n         * Gets a `TableStyle` by name. If the table style does not exist, then this method returns `undefined`.\\n         * @param name Name of the table style to be retrieved.\\n         */\\n        getTableStyle(name: string): TableStyle | undefined;\\n\\n        /**\\n         * Sets the default table style for use in the parent object\'s scope.\\n         * @param newDefaultStyle The `TableStyle` object, or name of the `TableStyle` object, that should be the new default.\\n         */\\n        setDefaultTableStyle(newDefaultStyle: TableStyle | string): void;\\n\\n        /**\\n         * Represents a collection of tables associated with the workbook.\\n         */\\n        getTables(): Table[];\\n\\n        /**\\n         * Creates a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.\\n         * @param address A `Range` object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used.\\n         * @param hasHeaders A boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e., when this property set to `false`), Excel will automatically generate a header and shift the data down by one row.\\n         */\\n        addTable(address: Range | string, hasHeaders: boolean): Table;\\n\\n        /**\\n         * Gets a table by name or ID. If the table doesn\'t exist, then this method returns `undefined`.\\n         * @param key Name or ID of the table to be retrieved.\\n         */\\n        getTable(key: string): Table | undefined;\\n\\n        /**\\n         * Represents a collection of TimelineStyles associated with the workbook.\\n         */\\n        getTimelineStyles(): TimelineStyle[];\\n\\n        /**\\n         * Creates a blank `TimelineStyle` with the specified name.\\n         * @param name The unique name for the new timeline style. Will throw an `InvalidArgument` error if the name is already in use.\\n         * @param makeUniqueName Optional. Defaults to `false`. If `true`, will append numbers to the name in order to make it unique, if needed.\\n         */\\n        addTimelineStyle(name: string, makeUniqueName?: boolean): TimelineStyle;\\n\\n        /**\\n         * Gets the default timeline style for the parent object\'s scope.\\n         */\\n        getDefaultTimelineStyle(): TimelineStyle;\\n\\n        /**\\n         * Gets a `TimelineStyle` by name. If the timeline style doesn\'t exist, then this method returns `undefined`.\\n         * @param name Name of the timeline style to be retrieved.\\n         */\\n        getTimelineStyle(name: string): TimelineStyle | undefined;\\n\\n        /**\\n         * Sets the default timeline style for use in the parent object\'s scope.\\n         * @param newDefaultStyle The `TimelineStyle` object, or name of the `TimelineStyle` object, that should be the new default.\\n         */\\n        setDefaultTimelineStyle(newDefaultStyle: TimelineStyle | string): void;\\n\\n        /**\\n         * Represents a collection of worksheets associated with the workbook.\\n         */\\n        getWorksheets(): Worksheet[];\\n\\n        /**\\n         * Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call `.activate()` on it.\\n         * @param name Optional. The name of the worksheet to be added. If specified, the name should be unique. If not specified, Excel determines the name of the new worksheet.\\n         */\\n        addWorksheet(name?: string): Worksheet;\\n\\n        /**\\n         * Gets the currently active worksheet in the workbook.\\n         */\\n        getActiveWorksheet(): Worksheet;\\n\\n        /**\\n         * Gets the first worksheet in the collection.\\n         * @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n         */\\n        getFirstWorksheet(visibleOnly?: boolean): Worksheet;\\n\\n        /**\\n         * Gets a worksheet object using its name or ID. If the worksheet does not exist, then this method returns `undefined`.\\n         * @param key The name or ID of the worksheet.\\n         */\\n        getWorksheet(key: string): Worksheet | undefined;\\n\\n        /**\\n         * Gets the last worksheet in the collection.\\n         * @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n         */\\n        getLastWorksheet(visibleOnly?: boolean): Worksheet;\\n\\n        /**\\n         * Refreshes all the Data Connections.\\n         */\\n        refreshAllDataConnections(): void;\\n\\n        /**\\n         * Gets a new collection of custom XML parts whose namespaces match the given namespace.\\n         * @param namespaceUri This must be a fully qualified schema URI; for example, \\"http://schemas.contoso.com/review/1.0\\".\\n         * @deprecated Use `getCustomXmlPartsByNamespace` instead.\\n         */\\n        getCustomXmlPartByNamespace(namespaceUri: string): CustomXmlPart[];\\n    }\\n\\n    /**\\n     * Represents the protection of a workbook object.\\n     */\\n    interface WorkbookProtection {\\n        /**\\n         * Specifies if the workbook is protected.\\n         */\\n        getProtected(): boolean;\\n\\n        /**\\n         * Protects a workbook. Fails if the workbook has been protected.\\n         * @param password Workbook protection password.\\n         */\\n        protect(password?: string): void;\\n\\n        /**\\n         * Unprotects a workbook.\\n         * @param password Workbook protection password.\\n         */\\n        unprotect(password?: string): void;\\n    }\\n\\n    /**\\n     * An Excel worksheet is a grid of cells. It can contain data, tables, charts, etc.\\n     */\\n    interface Worksheet {\\n        /**\\n         * Represents the `AutoFilter` object of the worksheet.\\n         */\\n        getAutoFilter(): AutoFilter;\\n\\n        /**\\n         * Determines if Excel should recalculate the worksheet when necessary.\\n         * True if Excel recalculates the worksheet when necessary. False if Excel doesn\'t recalculate the sheet.\\n         */\\n        getEnableCalculation(): boolean;\\n\\n        /**\\n         * Determines if Excel should recalculate the worksheet when necessary.\\n         * True if Excel recalculates the worksheet when necessary. False if Excel doesn\'t recalculate the sheet.\\n         */\\n        setEnableCalculation(enableCalculation: boolean): void;\\n\\n        /**\\n         * Gets an object that can be used to manipulate frozen panes on the worksheet.\\n         */\\n        getFreezePanes(): WorksheetFreezePanes;\\n\\n        /**\\n         * Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * The display name of the worksheet.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * The display name of the worksheet.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Gets the `PageLayout` object of the worksheet.\\n         */\\n        getPageLayout(): PageLayout;\\n\\n        /**\\n         * The zero-based position of the worksheet within the workbook.\\n         */\\n        getPosition(): number;\\n\\n        /**\\n         * The zero-based position of the worksheet within the workbook.\\n         */\\n        setPosition(position: number): void;\\n\\n        /**\\n         * Returns the sheet protection object for a worksheet.\\n         */\\n        getProtection(): WorksheetProtection;\\n\\n        /**\\n         * Specifies if gridlines are visible to the user.\\n         */\\n        getShowGridlines(): boolean;\\n\\n        /**\\n         * Specifies if gridlines are visible to the user.\\n         */\\n        setShowGridlines(showGridlines: boolean): void;\\n\\n        /**\\n         * Specifies if headings are visible to the user.\\n         */\\n        getShowHeadings(): boolean;\\n\\n        /**\\n         * Specifies if headings are visible to the user.\\n         */\\n        setShowHeadings(showHeadings: boolean): void;\\n\\n        /**\\n         * Returns the standard (default) height of all the rows in the worksheet, in points.\\n         */\\n        getStandardHeight(): number;\\n\\n        /**\\n         * Specifies the standard (default) width of all the columns in the worksheet.\\n         * One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.\\n         */\\n        getStandardWidth(): number;\\n\\n        /**\\n         * Specifies the standard (default) width of all the columns in the worksheet.\\n         * One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.\\n         */\\n        setStandardWidth(standardWidth: number): void;\\n\\n        /**\\n         * The tab color of the worksheet.\\n         * When retrieving the tab color, if the worksheet is invisible, the value will be `null`. If the worksheet is visible but the tab color is set to auto, an empty string will be returned. Otherwise, the property will be set to a color, in the form #RRGGBB (e.g., \\"FFA500\\").\\n         * When setting the color, use an empty-string to set an \\"auto\\" color, or a real color otherwise.\\n         */\\n        getTabColor(): string;\\n\\n        /**\\n         * The tab color of the worksheet.\\n         * When retrieving the tab color, if the worksheet is invisible, the value will be `null`. If the worksheet is visible but the tab color is set to auto, an empty string will be returned. Otherwise, the property will be set to a color, in the form #RRGGBB (e.g., \\"FFA500\\").\\n         * When setting the color, use an empty-string to set an \\"auto\\" color, or a real color otherwise.\\n         */\\n        setTabColor(tabColor: string): void;\\n\\n        /**\\n         * The visibility of the worksheet.\\n         */\\n        getVisibility(): SheetVisibility;\\n\\n        /**\\n         * The visibility of the worksheet.\\n         */\\n        setVisibility(visibility: SheetVisibility): void;\\n\\n        /**\\n         * Activate the worksheet in the Excel UI.\\n         */\\n        activate(): void;\\n\\n        /**\\n         * Calculates all cells on a worksheet.\\n         * @param markAllDirty True, to mark all as dirty.\\n         */\\n        calculate(markAllDirty: boolean): void;\\n\\n        /**\\n         * Copies a worksheet and places it at the specified position.\\n         * @param positionType The location in the workbook to place the newly created worksheet. The default value is \\"None\\", which inserts the worksheet at the beginning of the worksheet.\\n         * @param relativeTo The existing worksheet which determines the newly created worksheet\'s position. This is only needed if `positionType` is \\"Before\\" or \\"After\\".\\n         */\\n        copy(\\n            positionType?: WorksheetPositionType,\\n            relativeTo?: Worksheet\\n        ): Worksheet;\\n\\n        /**\\n         * Deletes the worksheet from the workbook. Note that if the worksheet\'s visibility is set to \\"VeryHidden\\", the delete operation will fail with an `InvalidOperation` exception. You should first change its visibility to hidden or visible before deleting it.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Finds all occurrences of the given string based on the criteria specified and returns them as a `RangeAreas` object, comprising one or more rectangular ranges.\\n         * @param text The string to find.\\n         * @param criteria Additional search criteria, including whether the search needs to match the entire cell or be case-sensitive.\\n         */\\n        findAll(text: string, criteria: WorksheetSearchCriteria): RangeAreas;\\n\\n        /**\\n         * Gets the `Range` object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.\\n         * @param row The row number of the cell to be retrieved. Zero-indexed.\\n         * @param column The column number of the cell to be retrieved. Zero-indexed.\\n         */\\n        getCell(row: number, column: number): Range;\\n\\n        /**\\n         * Gets the worksheet that follows this one. If there are no worksheets following this one, then this method returns `undefined`.\\n         * @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n         */\\n        getNext(visibleOnly?: boolean): Worksheet;\\n\\n        /**\\n         * Gets the worksheet that precedes this one. If there are no previous worksheets, then this method returns `undefined`.\\n         * @param visibleOnly Optional. If `true`, considers only visible worksheets, skipping over any hidden ones.\\n         */\\n        getPrevious(visibleOnly?: boolean): Worksheet;\\n\\n        /**\\n         * Gets the `Range` object, representing a single rectangular block of cells, specified by the address or name.\\n         * @param address Optional. The string representing the address or name of the range. For example, \\"A1:B2\\". If not specified, the entire worksheet range is returned.\\n         */\\n        getRange(address?: string): Range;\\n\\n        /**\\n         * Gets the `Range` object beginning at a particular row index and column index, and spanning a certain number of rows and columns.\\n         * @param startRow Start row (zero-indexed).\\n         * @param startColumn Start column (zero-indexed).\\n         * @param rowCount Number of rows to include in the range.\\n         * @param columnCount Number of columns to include in the range.\\n         */\\n        getRangeByIndexes(\\n            startRow: number,\\n            startColumn: number,\\n            rowCount: number,\\n            columnCount: number\\n        ): Range;\\n\\n        /**\\n         * Gets the `RangeAreas` object, representing one or more blocks of rectangular ranges, specified by the address or name.\\n         * @param address Optional. A string containing the comma-separated or semicolon-separated addresses or names of the individual ranges. For example, \\"A1:B2, A5:B5\\" or \\"A1:B2; A5:B5\\". If not specified, a `RangeAreas` object for the entire worksheet is returned.\\n         */\\n        getRanges(address?: string): RangeAreas;\\n\\n        /**\\n         * @param valuesOnly Optional. Considers only cells with values as used cells.\\n         */\\n        getUsedRange(valuesOnly?: boolean): Range;\\n\\n        /**\\n         * Finds and replaces the given string based on the criteria specified within the current worksheet.\\n         * @param text String to find.\\n         * @param replacement The string that replaces the original string.\\n         * @param criteria Additional replacement criteria.\\n         */\\n        replaceAll(\\n            text: string,\\n            replacement: string,\\n            criteria: ReplaceCriteria\\n        ): number;\\n\\n        /**\\n         * Shows row or column groups by their outline levels.\\n         * Outlines groups and summarizes a list of data in the worksheet.\\n         * The `rowLevels` and `columnLevels` parameters specify how many levels of the outline will be displayed.\\n         * The acceptable argument range is between 0 and 8.\\n         * A value of 0 does not change the current display. A value greater than the current number of levels displays all the levels.\\n         * @param rowLevels The number of row levels of an outline to display.\\n         * @param columnLevels The number of column levels of an outline to display.\\n         */\\n        showOutlineLevels(rowLevels: number, columnLevels: number): void;\\n\\n        /**\\n         * Returns a collection of charts that are part of the worksheet.\\n         */\\n        getCharts(): Chart[];\\n\\n        /**\\n         * Creates a new chart.\\n         * @param type Represents the type of a chart. See `ExcelScript.ChartType` for details.\\n         * @param sourceData The `Range` object corresponding to the source data.\\n         * @param seriesBy Optional. Specifies the way columns or rows are used as data series on the chart. See `ExcelScript.ChartSeriesBy` for details.\\n         */\\n        addChart(\\n            type: ChartType,\\n            sourceData: Range,\\n            seriesBy?: ChartSeriesBy\\n        ): Chart;\\n\\n        /**\\n         * Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned. If the chart doesn\'t exist, then this method returns `undefined`.\\n         * @param name Name of the chart to be retrieved.\\n         */\\n        getChart(name: string): Chart | undefined;\\n\\n        /**\\n         * Returns a collection of all the Comments objects on the worksheet.\\n         */\\n        getComments(): Comment[];\\n\\n        /**\\n         * Creates a new comment with the given content on the given cell. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n         * @param cellAddress The cell to which the comment is added. This can be a `Range` object or a string. If it\'s a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n         * @param content The comment\'s content. This can be either a string or `CommentRichContent` object. Strings are used for plain text. `CommentRichContent` objects allow for other comment features, such as mentions.\\n         * @param contentType Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\\n         */\\n        addComment(\\n            cellAddress: Range | string,\\n            content: CommentRichContent | string,\\n            contentType?: ContentType\\n        ): Comment;\\n\\n        /**\\n         * Gets a comment from the collection based on its ID.\\n         * @param commentId The identifier for the comment.\\n         */\\n        getComment(commentId: string): Comment;\\n\\n        /**\\n         * Gets the comment from the specified cell.\\n         * @param cellAddress The cell which the comment is on. This can be a `Range` object or a string. If it\'s a string, it must contain the full address, including the sheet name. An `InvalidArgument` error is thrown if the provided range is larger than one cell.\\n         */\\n        getCommentByCell(cellAddress: Range | string): Comment;\\n\\n        /**\\n         * Gets the comment to which the given reply is connected.\\n         * @param replyId The identifier of comment reply.\\n         */\\n        getCommentByReplyId(replyId: string): Comment;\\n\\n        /**\\n         * Gets a collection of worksheet-level custom properties.\\n         */\\n        getCustomProperties(): WorksheetCustomProperty[];\\n\\n        /**\\n         * Adds a new custom property that maps to the provided key. This overwrites existing custom properties with that key.\\n         * @param key The key that identifies the custom property object. It is case-insensitive.The key is limited to 255 characters (larger values will cause an `InvalidArgument` error to be thrown.)\\n         * @param value The value of this custom property.\\n         */\\n        addWorksheetCustomProperty(\\n            key: string,\\n            value: string\\n        ): WorksheetCustomProperty;\\n\\n        /**\\n         * Gets a custom property object by its key, which is case-insensitive. If the custom property doesn\'t exist, then this method returns `undefined`.\\n         * @param key The key that identifies the custom property object. It is case-insensitive.\\n         */\\n        getWorksheetCustomProperty(\\n            key: string\\n        ): WorksheetCustomProperty | undefined;\\n\\n        /**\\n         * Gets the horizontal page break collection for the worksheet. This collection only contains manual page breaks.\\n         */\\n        getHorizontalPageBreaks(): PageBreak[];\\n\\n        /**\\n         * Adds a page break before the top-left cell of the range specified.\\n         * @param pageBreakRange The range immediately after the page break to be added.\\n         */\\n        addHorizontalPageBreak(pageBreakRange: Range | string): PageBreak;\\n\\n        /**\\n         * Resets all manual page breaks in the collection.\\n         */\\n        removeAllHorizontalPageBreaks(): void;\\n\\n        /**\\n         * Returns a collection of sheet views that are present in the worksheet.\\n         */\\n        getNamedSheetViews(): NamedSheetView[];\\n\\n        /**\\n         * Creates a new sheet view with the given name.\\n         * @param name The name of the sheet view to be created.\\n         * Throws an error when the provided name already exists, is empty, or is a name reserved by the worksheet.\\n         */\\n        addNamedSheetView(name: string): NamedSheetView;\\n\\n        /**\\n         * Creates and activates a new temporary sheet view.\\n         * Temporary views are removed when closing the application, exiting the temporary view with the exit method, or switching to another sheet view.\\n         * The temporary sheet view can also be acccessed with the empty string (\\"\\"), if the temporary view exists.\\n         */\\n        enterTemporaryNamedSheetView(): NamedSheetView;\\n\\n        /**\\n         * Exits the currently active sheet view.\\n         */\\n        exitActiveNamedSheetView(): void;\\n\\n        /**\\n         * Gets the worksheet\'s currently active sheet view.\\n         */\\n        getActiveNamedSheetView(): NamedSheetView;\\n\\n        /**\\n         * Gets a sheet view using its name.\\n         * @param key The case-sensitive name of the sheet view. Use the empty string (\\"\\") to get the temporary sheet view, if the temporary view exists.\\n         */\\n        getNamedSheetView(key: string): NamedSheetView;\\n\\n        /**\\n         * Collection of names scoped to the current worksheet.\\n         */\\n        getNames(): NamedItem[];\\n\\n        /**\\n         * Adds a new name to the collection of the given scope.\\n         * @param name The name of the named item.\\n         * @param reference The formula or the range that the name will refer to.\\n         * @param comment Optional. The comment associated with the named item.\\n         */\\n        addNamedItem(\\n            name: string,\\n            reference: Range | string,\\n            comment?: string\\n        ): NamedItem;\\n\\n        /**\\n         * Adds a new name to the collection of the given scope using the user\'s locale for the formula.\\n         * @param name The name of the named item.\\n         * @param formula The formula in the user\'s locale that the name will refer to.\\n         * @param comment Optional. The comment associated with the named item.\\n         */\\n        addNamedItemFormulaLocal(\\n            name: string,\\n            formula: string,\\n            comment?: string\\n        ): NamedItem;\\n\\n        /**\\n         * Gets a `NamedItem` object using its name. If the object does not exist, then this method returns `undefined`.\\n         * @param name Nameditem name.\\n         */\\n        getNamedItem(name: string): NamedItem | undefined;\\n\\n        /**\\n         * Collection of PivotTables that are part of the worksheet.\\n         */\\n        getPivotTables(): PivotTable[];\\n\\n        /**\\n         * Add a PivotTable based on the specified source data and insert it at the top-left cell of the destination range.\\n         * @param name The name of the new PivotTable.\\n         * @param source The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.\\n         * @param destination The cell in the upper-left corner of the PivotTable report\'s destination range (the range on the worksheet where the resulting report will be placed).\\n         */\\n        addPivotTable(\\n            name: string,\\n            source: Range | string | Table,\\n            destination: Range | string\\n        ): PivotTable;\\n\\n        /**\\n         * Gets a PivotTable by name. If the PivotTable does not exist, then this method returns `undefined`.\\n         * @param name Name of the PivotTable to be retrieved.\\n         */\\n        getPivotTable(name: string): PivotTable | undefined;\\n\\n        /**\\n         * Refreshes all the pivot tables in the collection.\\n         */\\n        refreshAllPivotTables(): void;\\n\\n        /**\\n         * Returns the collection of all the Shape objects on the worksheet.\\n         */\\n        getShapes(): Shape[];\\n\\n        /**\\n         * Adds a geometric shape to the worksheet. Returns a `Shape` object that represents the new shape.\\n         * @param geometricShapeType Represents the type of the geometric shape. See `ExcelScript.GeometricShapeType` for details.\\n         */\\n        addGeometricShape(geometricShapeType: GeometricShapeType): Shape;\\n\\n        /**\\n         * Groups a subset of shapes in this collection\'s worksheet. Returns a `Shape` object that represents the new group of shapes.\\n         * @param values An array of shape IDs or shape objects.\\n         */\\n        addGroup(values: Array<string | Shape>): Shape;\\n\\n        /**\\n         * Creates an image from a base64-encoded string and adds it to the worksheet. Returns the `Shape` object that represents the new image.\\n         * @param base64ImageString A base64-encoded string representing an image in either JPEG or PNG format.\\n         */\\n        addImage(base64ImageString: string): Shape;\\n\\n        /**\\n         * Adds a line to worksheet. Returns a `Shape` object that represents the new line.\\n         * @param startLeft The distance, in points, from the start of the line to the left side of the worksheet.\\n         * @param startTop The distance, in points, from the start of the line to the top of the worksheet.\\n         * @param endLeft The distance, in points, from the end of the line to the left of the worksheet.\\n         * @param endTop The distance, in points, from the end of the line to the top of the worksheet.\\n         * @param connectorType Represents the connector type. See `ExcelScript.ConnectorType` for details.\\n         */\\n        addLine(\\n            startLeft: number,\\n            startTop: number,\\n            endLeft: number,\\n            endTop: number,\\n            connectorType?: ConnectorType\\n        ): Shape;\\n\\n        /**\\n         * Adds a text box to the worksheet with the provided text as the content. Returns a `Shape` object that represents the new text box.\\n         * @param text Represents the text that will be shown in the created text box.\\n         */\\n        addTextBox(text?: string): Shape;\\n\\n        /**\\n         * Gets a shape using its name or ID.\\n         * @param key The name or ID of the shape to be retrieved.\\n         */\\n        getShape(key: string): Shape;\\n\\n        /**\\n         * Returns a collection of slicers that are part of the worksheet.\\n         */\\n        getSlicers(): Slicer[];\\n\\n        /**\\n         * Adds a new slicer to the workbook.\\n         * @param slicerSource The data source that the new slicer will be based on. It can be a `PivotTable` object, a `Table` object, or a string. When a PivotTable object is passed, the data source is the source of the `PivotTable` object. When a `Table` object is passed, the data source is the `Table` object. When a string is passed, it is interpreted as the name or ID of a PivotTable or table.\\n         * @param sourceField The field in the data source to filter by. It can be a `PivotField` object, a `TableColumn` object, the ID of a `PivotField` or the name or ID of a `TableColumn`.\\n         * @param slicerDestination Optional. The worksheet in which the new slicer will be created. It can be a `Worksheet` object or the name or ID of a worksheet. This parameter can be omitted if the slicer collection is retrieved from a worksheet.\\n         */\\n        addSlicer(\\n            slicerSource: string | PivotTable | Table,\\n            sourceField: string | PivotField | number | TableColumn,\\n            slicerDestination?: string | Worksheet\\n        ): Slicer;\\n\\n        /**\\n         * Gets a slicer using its name or ID. If the slicer doesn\'t exist, then this method returns `undefined`.\\n         * @param key Name or ID of the slicer to be retrieved.\\n         */\\n        getSlicer(key: string): Slicer | undefined;\\n\\n        /**\\n         * Collection of tables that are part of the worksheet.\\n         */\\n        getTables(): Table[];\\n\\n        /**\\n         * Creates a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.\\n         * @param address A `Range` object, or a string address or name of the range representing the data source. If the address does not contain a sheet name, the currently-active sheet is used.\\n         * @param hasHeaders A boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e., when this property set to `false`), Excel will automatically generate a header and shift the data down by one row.\\n         */\\n        addTable(address: Range | string, hasHeaders: boolean): Table;\\n\\n        /**\\n         * Gets a table by name or ID. If the table doesn\'t exist, then this method returns `undefined`.\\n         * @param key Name or ID of the table to be retrieved.\\n         */\\n        getTable(key: string): Table | undefined;\\n\\n        /**\\n         * Gets the vertical page break collection for the worksheet. This collection only contains manual page breaks.\\n         */\\n        getVerticalPageBreaks(): PageBreak[];\\n\\n        /**\\n         * Adds a page break before the top-left cell of the range specified.\\n         * @param pageBreakRange The range immediately after the page break to be added.\\n         */\\n        addVerticalPageBreak(pageBreakRange: Range | string): PageBreak;\\n\\n        /**\\n         * Resets all manual page breaks in the collection.\\n         */\\n        removeAllVerticalPageBreaks(): void;\\n    }\\n\\n    /**\\n     * Represents the protection of a worksheet object.\\n     */\\n    interface WorksheetProtection {\\n        /**\\n         * Specifies the protection options for the worksheet.\\n         */\\n        getOptions(): WorksheetProtectionOptions;\\n\\n        /**\\n         * Specifies if the worksheet is protected.\\n         */\\n        getProtected(): boolean;\\n\\n        /**\\n         * Protects a worksheet. Fails if the worksheet has already been protected.\\n         * @param options Optional. Sheet protection options.\\n         * @param password Optional. Sheet protection password.\\n         */\\n        protect(options?: WorksheetProtectionOptions, password?: string): void;\\n\\n        /**\\n         * Unprotects a worksheet.\\n         * @param password Sheet protection password.\\n         */\\n        unprotect(password?: string): void;\\n    }\\n\\n    interface WorksheetFreezePanes {\\n        /**\\n         * Sets the frozen cells in the active worksheet view.\\n         * The range provided corresponds to cells that will be frozen in the top- and left-most pane.\\n         * @param frozenRange A range that represents the cells to be frozen, or `null` to remove all frozen panes.\\n         */\\n        freezeAt(frozenRange: Range | string): void;\\n\\n        /**\\n         * Freeze the first column or columns of the worksheet in place.\\n         * @param count Optional number of columns to freeze, or zero to unfreeze all columns\\n         */\\n        freezeColumns(count?: number): void;\\n\\n        /**\\n         * Freeze the top row or rows of the worksheet in place.\\n         * @param count Optional number of rows to freeze, or zero to unfreeze all rows\\n         */\\n        freezeRows(count?: number): void;\\n\\n        /**\\n         * Gets a range that describes the frozen cells in the active worksheet view.\\n         * The frozen range corresponds to cells that are frozen in the top- and left-most pane.\\n         * If there is no frozen pane, then this method returns `undefined`.\\n         */\\n        getLocation(): Range;\\n\\n        /**\\n         * Removes all frozen panes in the worksheet.\\n         */\\n        unfreeze(): void;\\n    }\\n\\n    /**\\n     * Range represents a set of one or more contiguous cells such as a cell, a row, a column, or a block of cells.\\n     */\\n    interface Range {\\n        /**\\n         * Specifies the range reference in A1-style. Address value contains the sheet reference (e.g., \\"Sheet1!A1:B4\\").\\n         */\\n        getAddress(): string;\\n\\n        /**\\n         * Represents the range reference for the specified range in the language of the user.\\n         */\\n        getAddressLocal(): string;\\n\\n        /**\\n         * Specifies the number of cells in the range. This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647).\\n         */\\n        getCellCount(): number;\\n\\n        /**\\n         * Specifies the total number of columns in the range.\\n         */\\n        getColumnCount(): number;\\n\\n        /**\\n         * Represents if all columns in the current range are hidden. Value is `true` when all columns in a range are hidden. Value is `false` when no columns in the range are hidden. Value is `null` when some columns in a range are hidden and other columns in the same range are not hidden.\\n         */\\n        getColumnHidden(): boolean;\\n\\n        /**\\n         * Represents if all columns in the current range are hidden. Value is `true` when all columns in a range are hidden. Value is `false` when no columns in the range are hidden. Value is `null` when some columns in a range are hidden and other columns in the same range are not hidden.\\n         */\\n        setColumnHidden(columnHidden: boolean): void;\\n\\n        /**\\n         * Specifies the column number of the first cell in the range. Zero-indexed.\\n         */\\n        getColumnIndex(): number;\\n\\n        /**\\n         * Returns a data validation object.\\n         */\\n        getDataValidation(): DataValidation;\\n\\n        /**\\n         * Returns a format object, encapsulating the range\'s font, fill, borders, alignment, and other properties.\\n         */\\n        getFormat(): RangeFormat;\\n\\n        /**\\n         * Represents the formula in A1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        getFormulas(): string[][];\\n\\n        /**\\n         * Represents the formula in A1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        setFormulas(formulas: string[][]): void;\\n\\n        /**\\n         * Represents the formula in A1-style notation, in the user\'s language and number-formatting locale. For example, the English \\"=SUM(A1, 1.5)\\" formula would become \\"=SUMME(A1; 1,5)\\" in German. If a cell has no formula, its value is returned instead.\\n         */\\n        getFormulasLocal(): string[][];\\n\\n        /**\\n         * Represents the formula in A1-style notation, in the user\'s language and number-formatting locale. For example, the English \\"=SUM(A1, 1.5)\\" formula would become \\"=SUMME(A1; 1,5)\\" in German. If a cell has no formula, its value is returned instead.\\n         */\\n        setFormulasLocal(formulasLocal: string[][]): void;\\n\\n        /**\\n         * Represents the formula in R1C1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        getFormulasR1C1(): string[][];\\n\\n        /**\\n         * Represents the formula in R1C1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        setFormulasR1C1(formulasR1C1: string[][]): void;\\n\\n        /**\\n         * Represents if all cells have a spill border.\\n         * Returns `true` if all cells have a spill border, or `false` if all cells do not have a spill border.\\n         * Returns `null` if there are cells both with and without spill borders within the range.\\n         */\\n        getHasSpill(): boolean;\\n\\n        /**\\n         * Returns the distance in points, for 100% zoom, from the top edge of the range to the bottom edge of the range.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Represents if all cells in the current range are hidden. Value is `true` when all cells in a range are hidden. Value is `false` when no cells in the range are hidden. Value is `null` when some cells in a range are hidden and other cells in the same range are not hidden.\\n         */\\n        getHidden(): boolean;\\n\\n        /**\\n         * Represents the hyperlink for the current range.\\n         */\\n        getHyperlink(): RangeHyperlink;\\n\\n        /**\\n         * Represents the hyperlink for the current range.\\n         */\\n        setHyperlink(hyperlink: RangeHyperlink): void;\\n\\n        /**\\n         * Represents if the current range is an entire column.\\n         */\\n        getIsEntireColumn(): boolean;\\n\\n        /**\\n         * Represents if the current range is an entire row.\\n         */\\n        getIsEntireRow(): boolean;\\n\\n        /**\\n         * Returns the distance in points, for 100% zoom, from the left edge of the worksheet to the left edge of the range.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Represents the data type state of each cell.\\n         */\\n        getLinkedDataTypeStates(): LinkedDataTypeState[][];\\n\\n        /**\\n         * Represents Excel\'s number format code for the given range.\\n         */\\n        getNumberFormats(): string[][];\\n\\n        /**\\n         * Represents Excel\'s number format code for the given range.\\n         */\\n        setNumberFormats(numberFormats: string[][]): void;\\n\\n        /**\\n         * Represents the category of number format of each cell.\\n         */\\n        getNumberFormatCategories(): NumberFormatCategory[][];\\n\\n        /**\\n         * Represents Excel\'s number format code for the given range, based on the language settings of the user.\\n         * Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property.\\n         * Any returned text uses the locally-formatted strings based on the language specified in the system settings.\\n         */\\n        getNumberFormatsLocal(): string[][];\\n\\n        /**\\n         * Represents Excel\'s number format code for the given range, based on the language settings of the user.\\n         * Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property.\\n         * Any returned text uses the locally-formatted strings based on the language specified in the system settings.\\n         */\\n        setNumberFormatsLocal(numberFormatsLocal: string[][]): void;\\n\\n        /**\\n         * Returns the total number of rows in the range.\\n         */\\n        getRowCount(): number;\\n\\n        /**\\n         * Represents if all rows in the current range are hidden. Value is `true` when all rows in a range are hidden. Value is `false` when no rows in the range are hidden. Value is `null` when some rows in a range are hidden and other rows in the same range are not hidden.\\n         */\\n        getRowHidden(): boolean;\\n\\n        /**\\n         * Represents if all rows in the current range are hidden. Value is `true` when all rows in a range are hidden. Value is `false` when no rows in the range are hidden. Value is `null` when some rows in a range are hidden and other rows in the same range are not hidden.\\n         */\\n        setRowHidden(rowHidden: boolean): void;\\n\\n        /**\\n         * Returns the row number of the first cell in the range. Zero-indexed.\\n         */\\n        getRowIndex(): number;\\n\\n        /**\\n         * Represents if all the cells would be saved as an array formula.\\n         * Returns `true` if all cells would be saved as an array formula, or `false` if all cells would not be saved as an array formula.\\n         * Returns `null` if some cells would be saved as an array formula and some would not be.\\n         */\\n        getSavedAsArray(): boolean;\\n\\n        /**\\n         * Represents the range sort of the current range.\\n         */\\n        getSort(): RangeSort;\\n\\n        /**\\n         * Represents the style of the current range.\\n         * If the styles of the cells are inconsistent, `null` will be returned.\\n         * For custom styles, the style name will be returned. For built-in styles, a string representing a value in the `BuiltInStyle` enum will be returned.\\n         */\\n        getPredefinedCellStyle(): string;\\n\\n        /**\\n         * Represents the style of the current range.\\n         * If the styles of the cells are inconsistent, `null` will be returned.\\n         * For custom styles, the style name will be returned. For built-in styles, a string representing a value in the `BuiltInStyle` enum will be returned.\\n         */\\n        setPredefinedCellStyle(predefinedCellStyle: string): void;\\n\\n        /**\\n         * Text values of the specified range. The text value will not depend on the cell width. The number sign (#) substitution that happens in the Excel UI will not affect the text value returned by the API.\\n         */\\n        getTexts(): string[][];\\n\\n        /**\\n         * Returns the distance in points, for 100% zoom, from the top edge of the worksheet to the top edge of the range.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Specifies the type of data in each cell.\\n         */\\n        getValueTypes(): RangeValueType[][];\\n\\n        /**\\n         * Represents the raw values of the specified range. The data returned could be a string, number, or boolean. Cells that contain an error will return the error string.\\n         * If the returned value starts with a plus (\\"+\\"), minus (\\"-\\"), or equal sign (\\"=\\"), Excel interprets this value as a formula.\\n         */\\n        getValues(): (string | number | boolean)[][];\\n\\n        /**\\n         * Sets the raw values of the specified range. The data provided could be a string, number, or boolean.\\n         * If the provided value starts with a plus (\\"+\\"), minus (\\"-\\"), or equal sign (\\"=\\"), Excel interprets this value as a formula.\\n         */\\n        setValues(values: (string | number | boolean)[][]): void;\\n\\n        /**\\n         * Returns the distance in points, for 100% zoom, from the left edge of the range to the right edge of the range.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * The worksheet containing the current range.\\n         */\\n        getWorksheet(): Worksheet;\\n\\n        /**\\n         * Fills a range from the current range to the destination range using the specified AutoFill logic.\\n         * The destination range can be `null` or can extend the source range either horizontally or vertically.\\n         * Discontiguous ranges are not supported.\\n         *\\n         * @param destinationRange The destination range to AutoFill. If the destination range is `null`, data is filled out based on the surrounding cells (which is the behavior when double-clicking the UI\u2019s range fill handle).\\n         * @param autoFillType The type of AutoFill. Specifies how the destination range is to be filled, based on the contents of the current range. Default is \\"FillDefault\\".\\n         */\\n        autoFill(\\n            destinationRange?: Range | string,\\n            autoFillType?: AutoFillType\\n        ): void;\\n\\n        /**\\n         * Calculates a range of cells on a worksheet.\\n         */\\n        calculate(): void;\\n\\n        /**\\n         * Clear range values, format, fill, border, etc.\\n         * @param applyTo Optional. Determines the type of clear action. See `ExcelScript.ClearApplyTo` for details.\\n         */\\n        clear(applyTo?: ClearApplyTo): void;\\n\\n        /**\\n         * Converts the range cells with data types into text.\\n         */\\n        convertDataTypeToText(): void;\\n\\n        /**\\n         * Copies cell data or formatting from the source range or `RangeAreas` to the current range.\\n         * The destination range can be a different size than the source range or `RangeAreas`. The destination will be expanded automatically if it is smaller than the source.\\n         * @param sourceRange The source range or `RangeAreas` to copy from. When the source `RangeAreas` has multiple ranges, their form must be able to be created by removing full rows or columns from a rectangular range.\\n         * @param copyType The type of cell data or formatting to copy over. Default is \\"All\\".\\n         * @param skipBlanks True if to skip blank cells in the source range. Default is false.\\n         * @param transpose True if to transpose the cells in the destination range. Default is false.\\n         */\\n        copyFrom(\\n            sourceRange: Range | RangeAreas | string,\\n            copyType?: RangeCopyType,\\n            skipBlanks?: boolean,\\n            transpose?: boolean\\n        ): void;\\n\\n        /**\\n         * Deletes the cells associated with the range.\\n         * @param shift Specifies which way to shift the cells. See `ExcelScript.DeleteShiftDirection` for details.\\n         */\\n        delete(shift: DeleteShiftDirection): void;\\n\\n        /**\\n         * Finds the given string based on the criteria specified.\\n         * If the current range is larger than a single cell, then the search will be limited to that range, else the search will cover the entire sheet starting after that cell.\\n         * If there are no matches, then this method returns `undefined`.\\n         * @param text The string to find.\\n         * @param criteria Additional search criteria, including the search direction and whether the search needs to match the entire cell or be case-sensitive.\\n         */\\n        find(text: string, criteria: SearchCriteria): Range;\\n\\n        /**\\n         * Does a Flash Fill to the current range. Flash Fill automatically fills data when it senses a pattern, so the range must be a single column range and have data around it in order to find a pattern.\\n         */\\n        flashFill(): void;\\n\\n        /**\\n         * Gets a `Range` object with the same top-left cell as the current `Range` object, but with the specified numbers of rows and columns.\\n         * @param numRows The number of rows of the new range size.\\n         * @param numColumns The number of columns of the new range size.\\n         */\\n        getAbsoluteResizedRange(numRows: number, numColumns: number): Range;\\n\\n        /**\\n         * Gets the smallest range object that encompasses the given ranges. For example, the `GetBoundingRect` of \\"B2:C5\\" and \\"D10:E15\\" is \\"B2:E15\\".\\n         * @param anotherRange The range object, address, or range name.\\n         */\\n        getBoundingRect(anotherRange: Range | string): Range;\\n\\n        /**\\n         * Gets the range object containing the single cell based on row and column numbers. The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid. The returned cell is located relative to the top left cell of the range.\\n         * @param row Row number of the cell to be retrieved. Zero-indexed.\\n         * @param column Column number of the cell to be retrieved. Zero-indexed.\\n         */\\n        getCell(row: number, column: number): Range;\\n\\n        /**\\n         * Gets a column contained in the range.\\n         * @param column Column number of the range to be retrieved. Zero-indexed.\\n         */\\n        getColumn(column: number): Range;\\n\\n        /**\\n         * Gets a certain number of columns to the right of the current `Range` object.\\n         * @param count Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n         */\\n        getColumnsAfter(count?: number): Range;\\n\\n        /**\\n         * Gets a certain number of columns to the left of the current `Range` object.\\n         * @param count Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n         */\\n        getColumnsBefore(count?: number): Range;\\n\\n        /**\\n         * Returns a `WorkbookRangeAreas` object that represents the range containing all the direct precedents of a cell in the same worksheet or in multiple worksheets.\\n         */\\n        getDirectPrecedents(): WorkbookRangeAreas;\\n\\n        /**\\n         * Gets an object that represents the entire column of the range (for example, if the current range represents cells \\"B4:E11\\", its `getEntireColumn` is a range that represents columns \\"B:E\\").\\n         */\\n        getEntireColumn(): Range;\\n\\n        /**\\n         * Gets an object that represents the entire row of the range (for example, if the current range represents cells \\"B4:E11\\", its `GetEntireRow` is a range that represents rows \\"4:11\\").\\n         */\\n        getEntireRow(): Range;\\n\\n        /**\\n         * Returns a range object that includes the current range and up to the edge of the range, based on the provided direction. This matches the Ctrl+Shift+Arrow key behavior in the Excel on Windows UI.\\n         * @param direction The direction from the active cell.\\n         * @param activeCell The active cell in this range. By default, the active cell is the top-left cell of the range. An error is thrown if the active cell is not in this range.\\n         */\\n        getExtendedRange(\\n            direction: KeyboardDirection,\\n            activeCell?: Range | string\\n        ): Range;\\n\\n        /**\\n         * Renders the range as a base64-encoded png image.\\n         */\\n        getImage(): string;\\n\\n        /**\\n         * Gets the range object that represents the rectangular intersection of the given ranges. If no intersection is found, then this method returns `undefined`.\\n         * @param anotherRange The range object or range address that will be used to determine the intersection of ranges.\\n         */\\n        getIntersection(anotherRange: Range | string): Range;\\n\\n        /**\\n         * Gets the last cell within the range. For example, the last cell of \\"B2:D5\\" is \\"D5\\".\\n         */\\n        getLastCell(): Range;\\n\\n        /**\\n         * Gets the last column within the range. For example, the last column of \\"B2:D5\\" is \\"D2:D5\\".\\n         */\\n        getLastColumn(): Range;\\n\\n        /**\\n         * Gets the last row within the range. For example, the last row of \\"B2:D5\\" is \\"B5:D5\\".\\n         */\\n        getLastRow(): Range;\\n\\n        /**\\n         * Returns a `RangeAreas` object that represents the merged areas in this range. Note that if the merged areas count in this range is more than 512, then this method will fail to return the result. If the `RangeAreas` object doesn\'t exist, then this function will return an object with its `isNullObject` property set to `true`.\\n         */\\n        getMergedAreas(): RangeAreas;\\n\\n        /**\\n         * Gets an object which represents a range that\'s offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.\\n         * @param rowOffset The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.\\n         * @param columnOffset The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.\\n         */\\n        getOffsetRange(rowOffset: number, columnOffset: number): Range;\\n\\n        /**\\n         * Gets a scoped collection of PivotTables that overlap with the range.\\n         * @param fullyContained If `true`, returns only PivotTables that are fully contained within the range bounds. The default value is `false`.\\n         */\\n        getPivotTables(fullyContained?: boolean): PivotTable[];\\n\\n        /**\\n         * Returns a range object that is the edge cell of the data region that corresponds to the provided direction. This matches the Ctrl+Arrow key behavior in the Excel on Windows UI.\\n         * @param direction The direction from the active cell.\\n         * @param activeCell The active cell in this range. By default, the active cell is the top-left cell of the range. An error is thrown if the active cell is not in this range.\\n         */\\n        getRangeEdge(\\n            direction: KeyboardDirection,\\n            activeCell?: Range | string\\n        ): Range;\\n\\n        /**\\n         * Gets a `Range` object similar to the current `Range` object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.\\n         * @param deltaRows The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\\n         * @param deltaColumns The number of columns by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.\\n         */\\n        getResizedRange(deltaRows: number, deltaColumns: number): Range;\\n\\n        /**\\n         * Gets a row contained in the range.\\n         * @param row Row number of the range to be retrieved. Zero-indexed.\\n         */\\n        getRow(row: number): Range;\\n\\n        /**\\n         * Gets a certain number of rows above the current `Range` object.\\n         * @param count Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n         */\\n        getRowsAbove(count?: number): Range;\\n\\n        /**\\n         * Gets a certain number of rows below the current `Range` object.\\n         * @param count Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.\\n         */\\n        getRowsBelow(count?: number): Range;\\n\\n        /**\\n         * Gets the `RangeAreas` object, comprising one or more ranges, that represents all the cells that match the specified type and value.\\n         * If no special cells are found, then this method returns `undefined`.\\n         * @param cellType The type of cells to include.\\n         * @param cellValueType If `cellType` is either `constants` or `formulas`, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\\n         */\\n        getSpecialCells(\\n            cellType: SpecialCellType,\\n            cellValueType?: SpecialCellValueType\\n        ): RangeAreas;\\n\\n        /**\\n         * Gets the range object containing the anchor cell for the cell getting spilled into.\\n         * If it\'s not a spilled cell, or more than one cell is given, then this method returns `undefined`.\\n         */\\n        getSpillParent(): Range;\\n\\n        /**\\n         * Gets the range object containing the spill range when called on an anchor cell.\\n         * If the range isn\'t an anchor cell or the spill range can\'t be found, then this method returns `undefined`.\\n         */\\n        getSpillingToRange(): Range;\\n\\n        /**\\n         * Returns a `Range` object that represents the surrounding region for the top-left cell in this range. A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.\\n         */\\n        getSurroundingRegion(): Range;\\n\\n        /**\\n         * Gets a scoped collection of tables that overlap with the range.\\n         * @param fullyContained If `true`, returns only tables that are fully contained within the range bounds. The default value is `false`.\\n         */\\n        getTables(fullyContained?: boolean): Table[];\\n\\n        /**\\n         * Returns the used range of the given range object. If there are no used cells within the range, then this method returns `undefined`.\\n         * @param valuesOnly Considers only cells with values as used cells.\\n         */\\n        getUsedRange(valuesOnly?: boolean): Range;\\n\\n        /**\\n         * Represents the visible rows of the current range.\\n         */\\n        getVisibleView(): RangeView;\\n\\n        /**\\n         * Groups columns and rows for an outline.\\n         * @param groupOption Specifies how the range can be grouped by rows or columns.\\n         * An `InvalidArgument` error is thrown when the group option differs from the range\'s\\n         * `isEntireRow` or `isEntireColumn` property (i.e., `range.isEntireRow` is true and `groupOption` is \\"ByColumns\\"\\n         * or `range.isEntireColumn` is true and `groupOption` is \\"ByRows\\").\\n         */\\n        group(groupOption: GroupOption): void;\\n\\n        /**\\n         * Hides the details of the row or column group.\\n         * @param groupOption Specifies whether to hide the details of grouped rows or grouped columns.\\n         */\\n        hideGroupDetails(groupOption: GroupOption): void;\\n\\n        /**\\n         * Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new `Range` object at the now blank space.\\n         * @param shift Specifies which way to shift the cells. See `ExcelScript.InsertShiftDirection` for details.\\n         */\\n        insert(shift: InsertShiftDirection): Range;\\n\\n        /**\\n         * Merge the range cells into one region in the worksheet.\\n         * @param across Optional. Set `true` to merge cells in each row of the specified range as separate merged cells. The default value is `false`.\\n         */\\n        merge(across?: boolean): void;\\n\\n        /**\\n         * Moves cell values, formatting, and formulas from current range to the destination range, replacing the old information in those cells.\\n         * The destination range will be expanded automatically if it is smaller than the current range. Any cells in the destination range that are outside of the original range\'s area are not changed.\\n         * @param destinationRange destinationRange Specifies the range to where the information in this range will be moved.\\n         */\\n        moveTo(destinationRange: Range | string): void;\\n\\n        /**\\n         * Removes duplicate values from the range specified by the columns.\\n         * @param columns The columns inside the range that may contain duplicates. At least one column needs to be specified. Zero-indexed.\\n         * @param includesHeader True if the input data contains header. Default is false.\\n         */\\n        removeDuplicates(\\n            columns: number[],\\n            includesHeader: boolean\\n        ): RemoveDuplicatesResult;\\n\\n        /**\\n         * Finds and replaces the given string based on the criteria specified within the current range.\\n         * @param text String to find.\\n         * @param replacement The string that replaces the original string.\\n         * @param criteria Additional replacement criteria.\\n         */\\n        replaceAll(\\n            text: string,\\n            replacement: string,\\n            criteria: ReplaceCriteria\\n        ): number;\\n\\n        /**\\n         * Selects the specified range in the Excel UI.\\n         */\\n        select(): void;\\n\\n        /**\\n         * Set a range to be recalculated when the next recalculation occurs.\\n         */\\n        setDirty(): void;\\n\\n        /**\\n         * Displays the card for an active cell if it has rich value content.\\n         */\\n        showCard(): void;\\n\\n        /**\\n         * Shows the details of the row or column group.\\n         * @param groupOption Specifies whether to show the details of grouped rows or grouped columns.\\n         */\\n        showGroupDetails(groupOption: GroupOption): void;\\n\\n        /**\\n         * Ungroups columns and rows for an outline.\\n         * @param groupOption Specifies how the range can be ungrouped by rows or columns.\\n         */\\n        ungroup(groupOption: GroupOption): void;\\n\\n        /**\\n         * Unmerge the range cells into separate cells.\\n         */\\n        unmerge(): void;\\n\\n        /**\\n         * The collection of `ConditionalFormats` that intersect the range.\\n         */\\n        getConditionalFormats(): ConditionalFormat[];\\n\\n        /**\\n         * Adds a new conditional format to the collection at the first/top priority.\\n         * @param type The type of conditional format being added. See `ExcelScript.ConditionalFormatType` for details.\\n         */\\n        addConditionalFormat(type: ConditionalFormatType): ConditionalFormat;\\n\\n        /**\\n         * Clears all conditional formats active on the current specified range.\\n         */\\n        clearAllConditionalFormats(): void;\\n\\n        /**\\n         * Returns a conditional format for the given ID.\\n         * @param id The ID of the conditional format.\\n         */\\n        getConditionalFormat(id: string): ConditionalFormat;\\n\\n        /**\\n         * Represents the cell formula in A1-style notation.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getFormula(): string;\\n\\n        /**\\n         * Sets the cell formula in A1-style notation.\\n         * If the range contains multiple cells, each cell in the given range will be updated with the input data.\\n         */\\n        setFormula(formula: string): void;\\n\\n        /**\\n         * Represents the cell formula in A1-style notation, in the user\'s language and number-formatting locale.  For example, the English \\"=SUM(A1, 1.5)\\" formula would become \\"=SUMME(A1; 1,5)\\" in German.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getFormulaLocal(): string;\\n\\n        /**\\n         * Set the cell formula in A1-style notation, in the user\'s language and number-formatting locale.  For example, the English \\"=SUM(A1, 1.5)\\" formula would become \\"=SUMME(A1; 1,5)\\" in German.\\n         * If the range contains multiple cells, each cell in the given range will be updated with the input data.\\n         */\\n        setFormulaLocal(formulaLocal: string): void;\\n\\n        /**\\n         * Represents the cell formula in R1C1-style notation.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getFormulaR1C1(): string;\\n\\n        /**\\n         * Sets the cell formula in R1C1-style notation.\\n         * If the range contains multiple cells, each cell in the given range will be updated with the input data.\\n         */\\n        setFormulaR1C1(formulaR1C1: string): void;\\n\\n        /**\\n         * Represents the data type state of the cell.\\n         */\\n        getLinkedDataTypeState(): LinkedDataTypeState;\\n\\n        /**\\n         * Represents cell Excel number format code for the given range.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * Sets cell Excel number format code for the given range.\\n         * If the range contains multiple cells, each cell in the given range will be updated with the input data.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * Represents cell Excel number format code for the given range, based on the language settings of the user.\u200b\\n         * Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property.\\n         * Any returned text uses the locally-formatted strings based on the language specified in the system settings.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getNumberFormatLocal(): string;\\n\\n        /**\\n         * Sets cell Excel number format code for the given range, based on the language settings of the user.\u200b\\n         * Excel does not perform any language or format coercion when getting or setting the `numberFormatLocal` property.\\n         * Any returned text uses the locally-formatted strings based on the language specified in the system settings.\\n         * If the range contains multiple cells, each cell in the given range will be updated with the input data.\\n         */\\n        setNumberFormatLocal(numberFormatLocal: string): void;\\n\\n        /**\\n         * Specifies the number format category of first cell in the range (represented by row index of 0 and column index of 0).\\n         */\\n        getNumberFormatCategory(): NumberFormatCategory;\\n\\n        /**\\n         * Represents Text value of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getText(): string;\\n\\n        /**\\n         * Represents the type of data in the cell.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n\\n        getValueType(): RangeValueType;\\n\\n        /**\\n         * Represents the raw value of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.\\n         * If the range contains multiple cells, the data from first cell (represented by row index of 0 and column index of 0) will be returned.\\n         */\\n        getValue(): string | number | boolean;\\n\\n        /**\\n         * Sets the raw value of the specified range. The data being set could be of type string, number, or a boolean. `null` value will be ignored (not set or overwritten in Excel).\\n         * If the range contains multiple cells, each cell in the given range will be updated with the input data.\\n         */\\n        setValue(value: any): void;\\n    }\\n\\n    /**\\n     * `RangeAreas` represents a collection of one or more rectangular ranges in the same worksheet.\\n     */\\n    interface RangeAreas {\\n        /**\\n         * Returns the `RangeAreas` reference in A1-style. Address value will contain the worksheet name for each rectangular block of cells (e.g., \\"Sheet1!A1:B4, Sheet1!D1:D4\\").\\n         */\\n        getAddress(): string;\\n\\n        /**\\n         * Returns the `RangeAreas` reference in the user locale.\\n         */\\n        getAddressLocal(): string;\\n\\n        /**\\n         * Returns the number of rectangular ranges that comprise this `RangeAreas` object.\\n         */\\n        getAreaCount(): number;\\n\\n        /**\\n         * Returns the number of cells in the `RangeAreas` object, summing up the cell counts of all of the individual rectangular ranges. Returns -1 if the cell count exceeds 2^31-1 (2,147,483,647).\\n         */\\n        getCellCount(): number;\\n\\n        /**\\n         * Returns a data validation object for all ranges in the `RangeAreas`.\\n         */\\n        getDataValidation(): DataValidation;\\n\\n        /**\\n         * Returns a `RangeFormat` object, encapsulating the the font, fill, borders, alignment, and other properties for all ranges in the `RangeAreas` object.\\n         */\\n        getFormat(): RangeFormat;\\n\\n        /**\\n         * Specifies if all the ranges on this `RangeAreas` object represent entire columns (e.g., \\"A:C, Q:Z\\").\\n         */\\n        getIsEntireColumn(): boolean;\\n\\n        /**\\n         * Specifies if all the ranges on this `RangeAreas` object represent entire rows (e.g., \\"1:3, 5:7\\").\\n         */\\n        getIsEntireRow(): boolean;\\n\\n        /**\\n         * Represents the style for all ranges in this `RangeAreas` object.\\n         * If the styles of the cells are inconsistent, `null` will be returned.\\n         * For custom styles, the style name will be returned. For built-in styles, a string representing a value in the `BuiltInStyle` enum will be returned.\\n         */\\n        getPredefinedCellStyle(): string;\\n\\n        /**\\n         * Represents the style for all ranges in this `RangeAreas` object.\\n         * If the styles of the cells are inconsistent, `null` will be returned.\\n         * For custom styles, the style name will be returned. For built-in styles, a string representing a value in the `BuiltInStyle` enum will be returned.\\n         */\\n        setPredefinedCellStyle(predefinedCellStyle: string): void;\\n\\n        /**\\n         * Returns the worksheet for the current `RangeAreas`.\\n         */\\n        getWorksheet(): Worksheet;\\n\\n        /**\\n         * Calculates all cells in the `RangeAreas`.\\n         */\\n        calculate(): void;\\n\\n        /**\\n         * Clears values, format, fill, border, and other properties on each of the areas that comprise this `RangeAreas` object.\\n         * @param applyTo Optional. Determines the type of clear action. See `ExcelScript.ClearApplyTo` for details. Default is \\"All\\".\\n         */\\n        clear(applyTo?: ClearApplyTo): void;\\n\\n        /**\\n         * Converts all cells in the `RangeAreas` with data types into text.\\n         */\\n        convertDataTypeToText(): void;\\n\\n        /**\\n         * Copies cell data or formatting from the source range or `RangeAreas` to the current `RangeAreas`.\\n         * The destination `RangeAreas` can be a different size than the source range or `RangeAreas`. The destination will be expanded automatically if it is smaller than the source.\\n         * @param sourceRange The source range or `RangeAreas` to copy from. When the source `RangeAreas` has multiple ranges, their form must able to be created by removing full rows or columns from a rectangular range.\\n         * @param copyType The type of cell data or formatting to copy over. Default is \\"All\\".\\n         * @param skipBlanks True if to skip blank cells in the source range or `RangeAreas`. Default is false.\\n         * @param transpose True if to transpose the cells in the destination `RangeAreas`. Default is false.\\n         */\\n        copyFrom(\\n            sourceRange: Range | RangeAreas | string,\\n            copyType?: RangeCopyType,\\n            skipBlanks?: boolean,\\n            transpose?: boolean\\n        ): void;\\n\\n        /**\\n         * Returns a `RangeAreas` object that represents the entire columns of the `RangeAreas` (for example, if the current `RangeAreas` represents cells \\"B4:E11, H2\\", it returns a `RangeAreas` that represents columns \\"B:E, H:H\\").\\n         */\\n        getEntireColumn(): RangeAreas;\\n\\n        /**\\n         * Returns a `RangeAreas` object that represents the entire rows of the `RangeAreas` (for example, if the current `RangeAreas` represents cells \\"B4:E11\\", it returns a `RangeAreas` that represents rows \\"4:11\\").\\n         */\\n        getEntireRow(): RangeAreas;\\n\\n        /**\\n         * Returns the `RangeAreas` object that represents the intersection of the given ranges or `RangeAreas`. If no intersection is found, then this method returns `undefined`.\\n         * @param anotherRange The range, `RangeAreas` object, or address that will be used to determine the intersection.\\n         */\\n        getIntersection(anotherRange: Range | RangeAreas | string): RangeAreas;\\n\\n        /**\\n         * Returns a `RangeAreas` object that is shifted by the specific row and column offset. The dimension of the returned `RangeAreas` will match the original object. If the resulting `RangeAreas` is forced outside the bounds of the worksheet grid, an error will be thrown.\\n         * @param rowOffset The number of rows (positive, negative, or 0) by which the `RangeAreas` is to be offset. Positive values are offset downward, and negative values are offset upward.\\n         * @param columnOffset The number of columns (positive, negative, or 0) by which the `RangeAreas` is to be offset. Positive values are offset to the right, and negative values are offset to the left.\\n         */\\n        getOffsetRangeAreas(\\n            rowOffset: number,\\n            columnOffset: number\\n        ): RangeAreas;\\n\\n        /**\\n         * Returns a `RangeAreas` object that represents all the cells that match the specified type and value. If no special cells are found that match the criteria, then this method returns `undefined`.\\n         * @param cellType The type of cells to include.\\n         * @param cellValueType If `cellType` is either `constants` or `formulas`, this argument is used to determine which types of cells to include in the result. These values can be combined together to return more than one type. The default is to select all constants or formulas, no matter what the type.\\n         */\\n        getSpecialCells(\\n            cellType: SpecialCellType,\\n            cellValueType?: SpecialCellValueType\\n        ): RangeAreas;\\n\\n        /**\\n         * Returns a scoped collection of tables that overlap with any range in this `RangeAreas` object.\\n         * @param fullyContained If `true`, returns only tables that are fully contained within the range bounds. Default is `false`.\\n         */\\n        getTables(fullyContained?: boolean): Table[];\\n\\n        /**\\n         * Returns the used `RangeAreas` that comprises all the used areas of individual rectangular ranges in the `RangeAreas` object.\\n         * If there are no used cells within the `RangeAreas`, then this method returns `undefined`.\\n         * @param valuesOnly Whether to only consider cells with values as used cells.\\n         */\\n        getUsedRangeAreas(valuesOnly?: boolean): RangeAreas;\\n\\n        /**\\n         * Sets the `RangeAreas` to be recalculated when the next recalculation occurs.\\n         */\\n        setDirty(): void;\\n\\n        /**\\n         * Returns a collection of rectangular ranges that comprise this `RangeAreas` object.\\n         */\\n        getAreas(): Range[];\\n\\n        /**\\n         * Returns a collection of conditional formats that intersect with any cells in this `RangeAreas` object.\\n         */\\n        getConditionalFormats(): ConditionalFormat[];\\n\\n        /**\\n         * Adds a new conditional format to the collection at the first/top priority.\\n         * @param type The type of conditional format being added. See `ExcelScript.ConditionalFormatType` for details.\\n         */\\n        addConditionalFormat(type: ConditionalFormatType): ConditionalFormat;\\n\\n        /**\\n         * Clears all conditional formats active on the current specified range.\\n         */\\n        clearAllConditionalFormats(): void;\\n\\n        /**\\n         * Returns a conditional format for the given ID.\\n         * @param id The ID of the conditional format.\\n         */\\n        getConditionalFormat(id: string): ConditionalFormat;\\n    }\\n\\n    /**\\n     * Represents a collection of one or more rectangular ranges in multiple worksheets.\\n     */\\n    interface WorkbookRangeAreas {\\n        /**\\n         * Returns an array of addresses in A1-style. Address values contain the worksheet name for each rectangular block of cells (e.g., \\"Sheet1!A1:B4, Sheet1!D1:D4\\"). Read-only.\\n         */\\n        getAddresses(): string[];\\n\\n        /**\\n         * Returns the `RangeAreas` object based on worksheet name or ID in the collection. If the worksheet does not exist, then this method returns `undefined`.\\n         * @param key The name or ID of the worksheet.\\n         */\\n        getRangeAreasBySheet(key: string): RangeAreas;\\n\\n        /**\\n         * Returns the `RangeAreasCollection` object. Each `RangeAreas` in the collection represent one or more rectangle ranges in one worksheet.\\n         */\\n        getAreas(): RangeAreas[];\\n\\n        /**\\n         * Returns ranges that comprise this object in a `RangeCollection` object.\\n         */\\n        getRanges(): Range[];\\n    }\\n\\n    /**\\n     * RangeView represents a set of visible cells of the parent range.\\n     */\\n    interface RangeView {\\n        /**\\n         * Represents the cell addresses of the `RangeView`.\\n         */\\n        getCellAddresses(): string[][];\\n\\n        /**\\n         * The number of visible columns.\\n         */\\n        getColumnCount(): number;\\n\\n        /**\\n         * Represents the formula in A1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        getFormulas(): string[][];\\n\\n        /**\\n         * Represents the formula in A1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        setFormulas(formulas: string[][]): void;\\n\\n        /**\\n         * Represents the formula in A1-style notation, in the user\'s language and number-formatting locale.  For example, the English \\"=SUM(A1, 1.5)\\" formula would become \\"=SUMME(A1; 1,5)\\" in German. If a cell has no formula, its value is returned instead.\\n         */\\n        getFormulasLocal(): string[][];\\n\\n        /**\\n         * Represents the formula in A1-style notation, in the user\'s language and number-formatting locale.  For example, the English \\"=SUM(A1, 1.5)\\" formula would become \\"=SUMME(A1; 1,5)\\" in German. If a cell has no formula, its value is returned instead.\\n         */\\n        setFormulasLocal(formulasLocal: string[][]): void;\\n\\n        /**\\n         * Represents the formula in R1C1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        getFormulasR1C1(): string[][];\\n\\n        /**\\n         * Represents the formula in R1C1-style notation. If a cell has no formula, its value is returned instead.\\n         */\\n        setFormulasR1C1(formulasR1C1: string[][]): void;\\n\\n        /**\\n         * Returns a value that represents the index of the `RangeView`.\\n         */\\n        getIndex(): number;\\n\\n        /**\\n         * Represents Excel\'s number format code for the given cell.\\n         */\\n        getNumberFormat(): string[][];\\n\\n        /**\\n         * Represents Excel\'s number format code for the given cell.\\n         */\\n        setNumberFormat(numberFormat: string[][]): void;\\n\\n        /**\\n         * The number of visible rows.\\n         */\\n        getRowCount(): number;\\n\\n        /**\\n         * Text values of the specified range. The text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API.\\n         */\\n        getText(): string[][];\\n\\n        /**\\n         * Represents the type of data of each cell.\\n         */\\n        getValueTypes(): RangeValueType[][];\\n\\n        /**\\n         * Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\\n         */\\n        getValues(): (string | number | boolean)[][];\\n\\n        /**\\n         * Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cells that contain an error will return the error string.\\n         */\\n        setValues(values: (string | number | boolean)[][]): void;\\n\\n        /**\\n         * Gets the parent range associated with the current `RangeView`.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Represents a collection of range views associated with the range.\\n         */\\n        getRows(): RangeView[];\\n    }\\n\\n    /**\\n     * Represents a defined name for a range of cells or value. Names can be primitive named objects (as seen in the type below), range object, or a reference to a range. This object can be used to obtain range object associated with names.\\n     */\\n    interface NamedItem {\\n        /**\\n         * Returns an object containing values and types of the named item.\\n         */\\n        getArrayValues(): NamedItemArrayValues;\\n\\n        /**\\n         * Specifies the comment associated with this name.\\n         */\\n        getComment(): string;\\n\\n        /**\\n         * Specifies the comment associated with this name.\\n         */\\n        setComment(comment: string): void;\\n\\n        /**\\n         * The formula of the named item. Formulas always start with an equal sign (\\"=\\").\\n         */\\n        getFormula(): string;\\n\\n        /**\\n         * The formula of the named item. Formulas always start with an equal sign (\\"=\\").\\n         */\\n        setFormula(formula: string): void;\\n\\n        /**\\n         * The name of the object.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Specifies if the name is scoped to the workbook or to a specific worksheet. Possible values are: Worksheet, Workbook.\\n         */\\n        getScope(): NamedItemScope;\\n\\n        /**\\n         * Specifies the type of the value returned by the name\'s formula. See `ExcelScript.NamedItemType` for details.\\n         */\\n        getType(): NamedItemType;\\n\\n        /**\\n         * Represents the value computed by the name\'s formula. For a named range, will return the range address.\\n         */\\n        getValue(): string | number;\\n\\n        /**\\n         * Specifies if the object is visible.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the object is visible.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Returns the worksheet to which the named item is scoped. If the item is scoped to the workbook instead, then this method returns `undefined`.\\n         */\\n        getWorksheet(): Worksheet | undefined;\\n\\n        /**\\n         * Deletes the given name.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Returns the range object that is associated with the name. If the named item\'s type is not a range, then this method returns `undefined`.\\n         */\\n        getRange(): Range;\\n    }\\n\\n    /**\\n     * Represents an object containing values and types of a named item.\\n     */\\n    interface NamedItemArrayValues {\\n        /**\\n         * Represents the types for each item in the named item array\\n         */\\n        getTypes(): RangeValueType[][];\\n\\n        /**\\n         * Represents the values of each item in the named item array.\\n         */\\n        getValues(): (string | number | boolean)[][];\\n    }\\n\\n    /**\\n     * Represents an Office.js binding that is defined in the workbook.\\n     */\\n    interface Binding {\\n        /**\\n         * Represents the binding identifier.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Returns the type of the binding. See `ExcelScript.BindingType` for details.\\n         */\\n        getType(): BindingType;\\n\\n        /**\\n         * Deletes the binding.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Returns the range represented by the binding. Will throw an error if the binding is not of the correct type.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Returns the table represented by the binding. Will throw an error if the binding is not of the correct type.\\n         */\\n        getTable(): Table;\\n\\n        /**\\n         * Returns the text represented by the binding. Will throw an error if the binding is not of the correct type.\\n         */\\n        getText(): string;\\n    }\\n\\n    /**\\n     * Represents an Excel table.\\n     */\\n    interface Table {\\n        /**\\n         * Represents the `AutoFilter` object of the table.\\n         */\\n        getAutoFilter(): AutoFilter;\\n\\n        /**\\n         * Specifies if the first column contains special formatting.\\n         */\\n        getHighlightFirstColumn(): boolean;\\n\\n        /**\\n         * Specifies if the first column contains special formatting.\\n         */\\n        setHighlightFirstColumn(highlightFirstColumn: boolean): void;\\n\\n        /**\\n         * Specifies if the last column contains special formatting.\\n         */\\n        getHighlightLastColumn(): boolean;\\n\\n        /**\\n         * Specifies if the last column contains special formatting.\\n         */\\n        setHighlightLastColumn(highlightLastColumn: boolean): void;\\n\\n        /**\\n         * Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Returns a numeric ID.\\n         */\\n        getLegacyId(): string;\\n\\n        /**\\n         * Name of the table.\\n         *\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the table.\\n         *\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones, to make reading the table easier.\\n         */\\n        getShowBandedColumns(): boolean;\\n\\n        /**\\n         * Specifies if the columns show banded formatting in which odd columns are highlighted differently from even ones, to make reading the table easier.\\n         */\\n        setShowBandedColumns(showBandedColumns: boolean): void;\\n\\n        /**\\n         * Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones, to make reading the table easier.\\n         */\\n        getShowBandedRows(): boolean;\\n\\n        /**\\n         * Specifies if the rows show banded formatting in which odd rows are highlighted differently from even ones, to make reading the table easier.\\n         */\\n        setShowBandedRows(showBandedRows: boolean): void;\\n\\n        /**\\n         * Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.\\n         */\\n        getShowFilterButton(): boolean;\\n\\n        /**\\n         * Specifies if the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.\\n         */\\n        setShowFilterButton(showFilterButton: boolean): void;\\n\\n        /**\\n         * Specifies if the header row is visible. This value can be set to show or remove the header row.\\n         */\\n        getShowHeaders(): boolean;\\n\\n        /**\\n         * Specifies if the header row is visible. This value can be set to show or remove the header row.\\n         */\\n        setShowHeaders(showHeaders: boolean): void;\\n\\n        /**\\n         * Specifies if the total row is visible. This value can be set to show or remove the total row.\\n         */\\n        getShowTotals(): boolean;\\n\\n        /**\\n         * Specifies if the total row is visible. This value can be set to show or remove the total row.\\n         */\\n        setShowTotals(showTotals: boolean): void;\\n\\n        /**\\n         * Represents the sorting for the table.\\n         */\\n        getSort(): TableSort;\\n\\n        /**\\n         * Constant value that represents the table style. Possible values are: \\"TableStyleLight1\\" through \\"TableStyleLight21\\", \\"TableStyleMedium1\\" through \\"TableStyleMedium28\\", \\"TableStyleDark1\\" through \\"TableStyleDark11\\". A custom user-defined style present in the workbook can also be specified.\\n         */\\n        getPredefinedTableStyle(): string;\\n\\n        /**\\n         * Constant value that represents the table style. Possible values are: \\"TableStyleLight1\\" through \\"TableStyleLight21\\", \\"TableStyleMedium1\\" through \\"TableStyleMedium28\\", \\"TableStyleDark1\\" through \\"TableStyleDark11\\". A custom user-defined style present in the workbook can also be specified.\\n         */\\n        setPredefinedTableStyle(predefinedTableStyle: string): void;\\n\\n        /**\\n         * The worksheet containing the current table.\\n         */\\n        getWorksheet(): Worksheet;\\n\\n        /**\\n         * Clears all the filters currently applied on the table.\\n         */\\n        clearFilters(): void;\\n\\n        /**\\n         * Converts the table into a normal range of cells. All data is preserved.\\n         */\\n        convertToRange(): Range;\\n\\n        /**\\n         * Deletes the table.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the range object associated with the data body of the table.\\n         */\\n        getRangeBetweenHeaderAndTotal(): Range;\\n\\n        /**\\n         * Gets the range object associated with the header row of the table.\\n         */\\n        getHeaderRowRange(): Range;\\n\\n        /**\\n         * Gets the range object associated with the entire table.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Gets the range object associated with the totals row of the table.\\n         */\\n        getTotalRowRange(): Range;\\n\\n        /**\\n         * Reapplies all the filters currently on the table.\\n         */\\n        reapplyFilters(): void;\\n\\n        /**\\n         * Resize the table to the new range. The new range must overlap with the original table range and the headers (or the top of the table) must be in the same row.\\n         * @param newRange The range object or range address that will be used to determine the new size of the table.\\n         */\\n        resize(newRange: Range | string): void;\\n\\n        /**\\n         * Represents a collection of all the columns in the table.\\n         */\\n        getColumns(): TableColumn[];\\n\\n        /**\\n         * Gets a column object by name or ID. If the column doesn\'t exist, then this method returns `undefined`.\\n         * @param key Column name or ID.\\n         */\\n        getColumn(key: number | string): TableColumn | undefined;\\n\\n        /**\\n         * Adds one row to the table.\\n         * @param index Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.\\n         * @param values Optional. A 1-dimensional array of unformatted values of the table row.\\n         */\\n        addRow(index?: number, values?: (boolean | string | number)[]): void;\\n\\n        /**\\n         * Adds one or more rows to the table.\\n         * @param index Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.\\n         * @param values Optional. A 2-dimensional array of unformatted values of the table row.\\n         */\\n        addRows(index?: number, values?: (boolean | string | number)[][]): void;\\n\\n        /**\\n         * Adds a new column to the table.\\n         * @param index Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.\\n         * @param values Optional. A 1-dimensional array of unformatted values of the table column.\\n         * @param name Optional. Specifies the name of the new column. If null, the default name will be used.\\n         */\\n        addColumn(\\n            index?: number,\\n            values?: (boolean | string | number)[],\\n            name?: string\\n        ): TableColumn;\\n\\n        /**\\n         * Delete a specified number of rows at a given index.\\n         * @param index The index value of the row to be deleted. Caution: the index of the row may have moved from the time you determined the value to use for removal.\\n         * @param count Number of rows to delete. By default, a single row will be deleted. Note: Deleting more than 1000 rows at the same time could result in a Power Automate timeout.\\n         */\\n        deleteRowsAt(index: number, count?: number): void;\\n\\n        /**\\n         * Gets a column object by ID. If the column does not exist, will return undefined.\\n         * @param key Column ID.\\n         */\\n        getColumnById(key: number): TableColumn | undefined;\\n\\n        /**\\n         * Gets a column object by Name. If the column does not exist, will return undefined.\\n         * @param key Column Name.\\n         */\\n        getColumnByName(key: string): TableColumn | undefined;\\n\\n        /**\\n         * Gets the number of rows in the table.\\n         */\\n        getRowCount(): number;\\n    }\\n\\n    /**\\n     * Represents a column in a table.\\n     */\\n    interface TableColumn {\\n        /**\\n         * Retrieves the filter applied to the column.\\n         */\\n        getFilter(): Filter;\\n\\n        /**\\n         * Returns a unique key that identifies the column within the table.\\n         */\\n        getId(): number;\\n\\n        /**\\n         * Returns the index number of the column within the columns collection of the table. Zero-indexed.\\n         */\\n        getIndex(): number;\\n\\n        /**\\n         * Specifies the name of the table column.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Specifies the name of the table column.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Deletes the column from the table.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the range object associated with the data body of the column.\\n         */\\n        getRangeBetweenHeaderAndTotal(): Range;\\n\\n        /**\\n         * Gets the range object associated with the header row of the column.\\n         */\\n        getHeaderRowRange(): Range;\\n\\n        /**\\n         * Gets the range object associated with the entire column.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Gets the range object associated with the totals row of the column.\\n         */\\n        getTotalRowRange(): Range;\\n    }\\n\\n    /**\\n     * Represents the data validation applied to the current range.\\n     */\\n    interface DataValidation {\\n        /**\\n         * Error alert when user enters invalid data.\\n         */\\n        getErrorAlert(): DataValidationErrorAlert;\\n\\n        /**\\n         * Error alert when user enters invalid data.\\n         */\\n        setErrorAlert(errorAlert: DataValidationErrorAlert): void;\\n\\n        /**\\n         * Specifies if data validation will be performed on blank cells. Default is `true`.\\n         */\\n        getIgnoreBlanks(): boolean;\\n\\n        /**\\n         * Specifies if data validation will be performed on blank cells. Default is `true`.\\n         */\\n        setIgnoreBlanks(ignoreBlanks: boolean): void;\\n\\n        /**\\n         * Prompt when users select a cell.\\n         */\\n        getPrompt(): DataValidationPrompt;\\n\\n        /**\\n         * Prompt when users select a cell.\\n         */\\n        setPrompt(prompt: DataValidationPrompt): void;\\n\\n        /**\\n         * Data validation rule that contains different type of data validation criteria.\\n         */\\n        getRule(): DataValidationRule;\\n\\n        /**\\n         * Data validation rule that contains different type of data validation criteria.\\n         */\\n        setRule(rule: DataValidationRule): void;\\n\\n        /**\\n         * Type of the data validation, see `ExcelScript.DataValidationType` for details.\\n         */\\n        getType(): DataValidationType;\\n\\n        /**\\n         * Represents if all cell values are valid according to the data validation rules.\\n         * Returns `true` if all cell values are valid, or `false` if all cell values are invalid.\\n         * Returns `null` if there are both valid and invalid cell values within the range.\\n         */\\n        getValid(): boolean;\\n\\n        /**\\n         * Clears the data validation from the current range.\\n         */\\n        clear(): void;\\n\\n        /**\\n         * Returns a `RangeAreas` object, comprising one or more rectangular ranges, with invalid cell values. If all cell values are valid, this function will return `null`.\\n         */\\n        getInvalidCells(): RangeAreas;\\n    }\\n\\n    /**\\n     * Represents the results from `Range.removeDuplicates`.\\n     */\\n    interface RemoveDuplicatesResult {\\n        /**\\n         * Number of duplicated rows removed by the operation.\\n         */\\n        getRemoved(): number;\\n\\n        /**\\n         * Number of remaining unique rows present in the resulting range.\\n         */\\n        getUniqueRemaining(): number;\\n    }\\n\\n    /**\\n     * A format object encapsulating the range\'s font, fill, borders, alignment, and other properties.\\n     */\\n    interface RangeFormat {\\n        /**\\n         * Specifies if text is automatically indented when text alignment is set to equal distribution.\\n         */\\n        getAutoIndent(): boolean;\\n\\n        /**\\n         * Specifies if text is automatically indented when text alignment is set to equal distribution.\\n         */\\n        setAutoIndent(autoIndent: boolean): void;\\n\\n        /**\\n         * Specifies the width of all colums within the range. If the column widths are not uniform, `null` will be returned.\\n         */\\n        getColumnWidth(): number;\\n\\n        /**\\n         * Specifies the width of all colums within the range. If the column widths are not uniform, `null` will be returned.\\n         */\\n        setColumnWidth(columnWidth: number): void;\\n\\n        /**\\n         * Returns the fill object defined on the overall range.\\n         */\\n        getFill(): RangeFill;\\n\\n        /**\\n         * Returns the font object defined on the overall range.\\n         */\\n        getFont(): RangeFont;\\n\\n        /**\\n         * Represents the horizontal alignment for the specified object. See `ExcelScript.HorizontalAlignment` for details.\\n         */\\n        getHorizontalAlignment(): HorizontalAlignment;\\n\\n        /**\\n         * Represents the horizontal alignment for the specified object. See `ExcelScript.HorizontalAlignment` for details.\\n         */\\n        setHorizontalAlignment(horizontalAlignment: HorizontalAlignment): void;\\n\\n        /**\\n         * An integer from 0 to 250 that indicates the indent level.\\n         */\\n        getIndentLevel(): number;\\n\\n        /**\\n         * An integer from 0 to 250 that indicates the indent level.\\n         */\\n        setIndentLevel(indentLevel: number): void;\\n\\n        /**\\n         * Returns the format protection object for a range.\\n         */\\n        getProtection(): FormatProtection;\\n\\n        /**\\n         * The reading order for the range.\\n         */\\n        getReadingOrder(): ReadingOrder;\\n\\n        /**\\n         * The reading order for the range.\\n         */\\n        setReadingOrder(readingOrder: ReadingOrder): void;\\n\\n        /**\\n         * The height of all rows in the range. If the row heights are not uniform, `null` will be returned.\\n         */\\n        getRowHeight(): number;\\n\\n        /**\\n         * The height of all rows in the range. If the row heights are not uniform, `null` will be returned.\\n         */\\n        setRowHeight(rowHeight: number): void;\\n\\n        /**\\n         * Specifies if text automatically shrinks to fit in the available column width.\\n         */\\n        getShrinkToFit(): boolean;\\n\\n        /**\\n         * Specifies if text automatically shrinks to fit in the available column width.\\n         */\\n        setShrinkToFit(shrinkToFit: boolean): void;\\n\\n        /**\\n         * The text orientation of all the cells within the range.\\n         * The text orientation should be an integer either from -90 to 90, or 180 for vertically-oriented text.\\n         * If the orientation within a range are not uniform, then `null` will be returned.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * The text orientation of all the cells within the range.\\n         * The text orientation should be an integer either from -90 to 90, or 180 for vertically-oriented text.\\n         * If the orientation within a range are not uniform, then `null` will be returned.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Determines if the row height of the `Range` object equals the standard height of the sheet.\\n         * Returns `true` if the row height of the `Range` object equals the standard height of the sheet.\\n         * Returns `null` if the range contains more than one row and the rows aren\'t all the same height.\\n         * Returns `false` otherwise.\\n         * Note: This property is only intended to be set to `true`. Setting it to `false` has no effect.\\n         */\\n        getUseStandardHeight(): boolean;\\n\\n        /**\\n         * Determines if the row height of the `Range` object equals the standard height of the sheet.\\n         * Returns `true` if the row height of the `Range` object equals the standard height of the sheet.\\n         * Returns `null` if the range contains more than one row and the rows aren\'t all the same height.\\n         * Returns `false` otherwise.\\n         * Note: This property is only intended to be set to `true`. Setting it to `false` has no effect.\\n         */\\n        setUseStandardHeight(useStandardHeight: boolean): void;\\n\\n        /**\\n         * Specifies if the column width of the `Range` object equals the standard width of the sheet.\\n         * Returns `true` if the column width of the `Range` object equals the standard width of the sheet.\\n         * Returns `null` if the range contains more than one column and the columns aren\'t all the same height.\\n         * Returns `false` otherwise.\\n         * Note: This property is only intended to be set to `true`. Setting it to `false` has no effect.\\n         */\\n        getUseStandardWidth(): boolean;\\n\\n        /**\\n         * Specifies if the column width of the `Range` object equals the standard width of the sheet.\\n         * Returns `true` if the column width of the `Range` object equals the standard width of the sheet.\\n         * Returns `null` if the range contains more than one column and the columns aren\'t all the same height.\\n         * Returns `false` otherwise.\\n         * Note: This property is only intended to be set to `true`. Setting it to `false` has no effect.\\n         */\\n        setUseStandardWidth(useStandardWidth: boolean): void;\\n\\n        /**\\n         * Represents the vertical alignment for the specified object. See `ExcelScript.VerticalAlignment` for details.\\n         */\\n        getVerticalAlignment(): VerticalAlignment;\\n\\n        /**\\n         * Represents the vertical alignment for the specified object. See `ExcelScript.VerticalAlignment` for details.\\n         */\\n        setVerticalAlignment(verticalAlignment: VerticalAlignment): void;\\n\\n        /**\\n         * Specifies if Excel wraps the text in the object. A `null` value indicates that the entire range doesn\'t have a uniform wrap setting\\n         */\\n        getWrapText(): boolean;\\n\\n        /**\\n         * Specifies if Excel wraps the text in the object. A `null` value indicates that the entire range doesn\'t have a uniform wrap setting\\n         */\\n        setWrapText(wrapText: boolean): void;\\n\\n        /**\\n         * Adjusts the indentation of the range formatting. The indent value ranges from 0 to 250 and is measured in characters.\\n         * @param amount The number of character spaces by which the current indent is adjusted. This value should be between -250 and 250.\\n         * **Note**: If the amount would raise the indent level above 250, the indent level stays with 250.\\n         * Similarly, if the amount would lower the indent level below 0, the indent level stays 0.\\n         */\\n        adjustIndent(amount: number): void;\\n\\n        /**\\n         * Changes the width of the columns of the current range to achieve the best fit, based on the current data in the columns.\\n         */\\n        autofitColumns(): void;\\n\\n        /**\\n         * Changes the height of the rows of the current range to achieve the best fit, based on the current data in the columns.\\n         */\\n        autofitRows(): void;\\n\\n        /**\\n         * Collection of border objects that apply to the overall range.\\n         */\\n        getBorders(): RangeBorder[];\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for range borders. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the entire border collection doesn\'t have a uniform `tintAndShade` setting.\\n         */\\n        getRangeBorderTintAndShade(): number;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for range borders. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the entire border collection doesn\'t have a uniform `tintAndShade` setting.\\n         */\\n        setRangeBorderTintAndShade(rangeBorderTintAndShade: number): void;\\n\\n        /**\\n         * Gets a border object using its name.\\n         * @param index Index value of the border object to be retrieved. See `ExcelScript.BorderIndex` for details.\\n         */\\n        getRangeBorder(index: BorderIndex): RangeBorder;\\n    }\\n\\n    /**\\n     * Represents the format protection of a range object.\\n     */\\n    interface FormatProtection {\\n        /**\\n         * Specifies if Excel hides the formula for the cells in the range. A `null` value indicates that the entire range doesn\'t have a uniform formula hidden setting.\\n         */\\n        getFormulaHidden(): boolean;\\n\\n        /**\\n         * Specifies if Excel hides the formula for the cells in the range. A `null` value indicates that the entire range doesn\'t have a uniform formula hidden setting.\\n         */\\n        setFormulaHidden(formulaHidden: boolean): void;\\n\\n        /**\\n         * Specifies if Excel locks the cells in the object. A `null` value indicates that the entire range doesn\'t have a uniform lock setting.\\n         */\\n        getLocked(): boolean;\\n\\n        /**\\n         * Specifies if Excel locks the cells in the object. A `null` value indicates that the entire range doesn\'t have a uniform lock setting.\\n         */\\n        setLocked(locked: boolean): void;\\n    }\\n\\n    /**\\n     * Represents the background of a range object.\\n     */\\n    interface RangeFill {\\n        /**\\n         * HTML color code representing the color of the background, in the form #RRGGBB (e.g., \\"FFA500\\"), or as a named HTML color (e.g., \\"orange\\")\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the background, in the form #RRGGBB (e.g., \\"FFA500\\"), or as a named HTML color (e.g., \\"orange\\")\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * The pattern of a range. See `ExcelScript.FillPattern` for details. LinearGradient and RectangularGradient are not supported.\\n         * A `null` value indicates that the entire range doesn\'t have a uniform pattern setting.\\n         */\\n        getPattern(): FillPattern;\\n\\n        /**\\n         * The pattern of a range. See `ExcelScript.FillPattern` for details. LinearGradient and RectangularGradient are not supported.\\n         * A `null` value indicates that the entire range doesn\'t have a uniform pattern setting.\\n         */\\n        setPattern(pattern: FillPattern): void;\\n\\n        /**\\n         * The HTML color code representing the color of the range pattern, in the form #RRGGBB (e.g., \\"FFA500\\"), or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getPatternColor(): string;\\n\\n        /**\\n         * The HTML color code representing the color of the range pattern, in the form #RRGGBB (e.g., \\"FFA500\\"), or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setPatternColor(patternColor: string): void;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a pattern color for the range fill. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the range doesn\'t have uniform `patternTintAndShade` settings.\\n         */\\n        getPatternTintAndShade(): number;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a pattern color for the range fill. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the range doesn\'t have uniform `patternTintAndShade` settings.\\n         */\\n        setPatternTintAndShade(patternTintAndShade: number): void;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for the range fill. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the range doesn\'t have uniform `tintAndShade` settings.\\n         */\\n        getTintAndShade(): number;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for the range fill. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the range doesn\'t have uniform `tintAndShade` settings.\\n         */\\n        setTintAndShade(tintAndShade: number): void;\\n\\n        /**\\n         * Resets the range background.\\n         */\\n        clear(): void;\\n    }\\n\\n    /**\\n     * Represents the border of an object.\\n     */\\n    interface RangeBorder {\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\"), or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\"), or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Constant value that indicates the specific side of the border. See `ExcelScript.BorderIndex` for details.\\n         */\\n        getSideIndex(): BorderIndex;\\n\\n        /**\\n         * One of the constants of line style specifying the line style for the border. See `ExcelScript.BorderLineStyle` for details.\\n         */\\n        getStyle(): BorderLineStyle;\\n\\n        /**\\n         * One of the constants of line style specifying the line style for the border. See `ExcelScript.BorderLineStyle` for details.\\n         */\\n        setStyle(style: BorderLineStyle): void;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for the range border, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the border doesn\'t have a uniform `tintAndShade` setting.\\n         */\\n        getTintAndShade(): number;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for the range border, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the border doesn\'t have a uniform `tintAndShade` setting.\\n         */\\n        setTintAndShade(tintAndShade: number): void;\\n\\n        /**\\n         * Specifies the weight of the border around a range. See `ExcelScript.BorderWeight` for details.\\n         */\\n        getWeight(): BorderWeight;\\n\\n        /**\\n         * Specifies the weight of the border around a range. See `ExcelScript.BorderWeight` for details.\\n         */\\n        setWeight(weight: BorderWeight): void;\\n    }\\n\\n    /**\\n     * This object represents the font attributes (font name, font size, color, etc.) for an object.\\n     */\\n    interface RangeFont {\\n        /**\\n         * Represents the bold status of the font.\\n         */\\n        getBold(): boolean;\\n\\n        /**\\n         * Represents the bold status of the font.\\n         */\\n        setBold(bold: boolean): void;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Specifies the italic status of the font.\\n         */\\n        getItalic(): boolean;\\n\\n        /**\\n         * Specifies the italic status of the font.\\n         */\\n        setItalic(italic: boolean): void;\\n\\n        /**\\n         * Font name (e.g., \\"Calibri\\"). The name\'s length should not be greater than 31 characters.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Font name (e.g., \\"Calibri\\"). The name\'s length should not be greater than 31 characters.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Font size.\\n         */\\n        getSize(): number;\\n\\n        /**\\n         * Font size.\\n         */\\n        setSize(size: number): void;\\n\\n        /**\\n         * Specifies the strikethrough status of font. A `null` value indicates that the entire range doesn\'t have a uniform strikethrough setting.\\n         */\\n        getStrikethrough(): boolean;\\n\\n        /**\\n         * Specifies the strikethrough status of font. A `null` value indicates that the entire range doesn\'t have a uniform strikethrough setting.\\n         */\\n        setStrikethrough(strikethrough: boolean): void;\\n\\n        /**\\n         * Specifies the subscript status of font.\\n         * Returns `true` if all the fonts of the range are subscript.\\n         * Returns `false` if all the fonts of the range are superscript or normal (neither superscript, nor subscript).\\n         * Returns `null` otherwise.\\n         */\\n        getSubscript(): boolean;\\n\\n        /**\\n         * Specifies the subscript status of font.\\n         * Returns `true` if all the fonts of the range are subscript.\\n         * Returns `false` if all the fonts of the range are superscript or normal (neither superscript, nor subscript).\\n         * Returns `null` otherwise.\\n         */\\n        setSubscript(subscript: boolean): void;\\n\\n        /**\\n         * Specifies the superscript status of font.\\n         * Returns `true` if all the fonts of the range are superscript.\\n         * Returns `false` if all the fonts of the range are subscript or normal (neither superscript, nor subscript).\\n         * Returns `null` otherwise.\\n         */\\n        getSuperscript(): boolean;\\n\\n        /**\\n         * Specifies the superscript status of font.\\n         * Returns `true` if all the fonts of the range are superscript.\\n         * Returns `false` if all the fonts of the range are subscript or normal (neither superscript, nor subscript).\\n         * Returns `null` otherwise.\\n         */\\n        setSuperscript(superscript: boolean): void;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for the range font. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the entire range doesn\'t have a uniform font `tintAndShade` setting.\\n         */\\n        getTintAndShade(): number;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for the range font. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the entire range doesn\'t have a uniform font `tintAndShade` setting.\\n         */\\n        setTintAndShade(tintAndShade: number): void;\\n\\n        /**\\n         * Type of underline applied to the font. See `ExcelScript.RangeUnderlineStyle` for details.\\n         */\\n        getUnderline(): RangeUnderlineStyle;\\n\\n        /**\\n         * Type of underline applied to the font. See `ExcelScript.RangeUnderlineStyle` for details.\\n         */\\n        setUnderline(underline: RangeUnderlineStyle): void;\\n    }\\n\\n    /**\\n     * Represents a chart object in a workbook.\\n     */\\n    interface Chart {\\n        /**\\n         * Represents chart axes.\\n         */\\n        getAxes(): ChartAxes;\\n\\n        /**\\n         * Specifies a chart category label level enumeration constant, referring to the level of the source category labels.\\n         */\\n        getCategoryLabelLevel(): number;\\n\\n        /**\\n         * Specifies a chart category label level enumeration constant, referring to the level of the source category labels.\\n         */\\n        setCategoryLabelLevel(categoryLabelLevel: number): void;\\n\\n        /**\\n         * Specifies the type of the chart. See `ExcelScript.ChartType` for details.\\n         */\\n        getChartType(): ChartType;\\n\\n        /**\\n         * Specifies the type of the chart. See `ExcelScript.ChartType` for details.\\n         */\\n        setChartType(chartType: ChartType): void;\\n\\n        /**\\n         * Represents the data labels on the chart.\\n         */\\n        getDataLabels(): ChartDataLabels;\\n\\n        /**\\n         * Specifies the way that blank cells are plotted on a chart.\\n         */\\n        getDisplayBlanksAs(): ChartDisplayBlanksAs;\\n\\n        /**\\n         * Specifies the way that blank cells are plotted on a chart.\\n         */\\n        setDisplayBlanksAs(displayBlanksAs: ChartDisplayBlanksAs): void;\\n\\n        /**\\n         * Encapsulates the format properties for the chart area.\\n         */\\n        getFormat(): ChartAreaFormat;\\n\\n        /**\\n         * Specifies the height, in points, of the chart object.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies the height, in points, of the chart object.\\n         */\\n        setHeight(height: number): void;\\n\\n        /**\\n         * The unique ID of chart.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * The distance, in points, from the left side of the chart to the worksheet origin.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * The distance, in points, from the left side of the chart to the worksheet origin.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Represents the legend for the chart.\\n         */\\n        getLegend(): ChartLegend;\\n\\n        /**\\n         * Specifies the name of a chart object.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Specifies the name of a chart object.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Encapsulates the options for a pivot chart.\\n         */\\n        getPivotOptions(): ChartPivotOptions;\\n\\n        /**\\n         * Represents the plot area for the chart.\\n         */\\n        getPlotArea(): ChartPlotArea;\\n\\n        /**\\n         * Specifies the way columns or rows are used as data series on the chart.\\n         */\\n        getPlotBy(): ChartPlotBy;\\n\\n        /**\\n         * Specifies the way columns or rows are used as data series on the chart.\\n         */\\n        setPlotBy(plotBy: ChartPlotBy): void;\\n\\n        /**\\n         * True if only visible cells are plotted. False if both visible and hidden cells are plotted.\\n         */\\n        getPlotVisibleOnly(): boolean;\\n\\n        /**\\n         * True if only visible cells are plotted. False if both visible and hidden cells are plotted.\\n         */\\n        setPlotVisibleOnly(plotVisibleOnly: boolean): void;\\n\\n        /**\\n         * Specifies a chart series name level enumeration constant, referring to the level of the source series names.\\n         */\\n        getSeriesNameLevel(): number;\\n\\n        /**\\n         * Specifies a chart series name level enumeration constant, referring to the level of the source series names.\\n         */\\n        setSeriesNameLevel(seriesNameLevel: number): void;\\n\\n        /**\\n         * Specifies whether to display all field buttons on a PivotChart.\\n         */\\n        getShowAllFieldButtons(): boolean;\\n\\n        /**\\n         * Specifies whether to display all field buttons on a PivotChart.\\n         */\\n        setShowAllFieldButtons(showAllFieldButtons: boolean): void;\\n\\n        /**\\n         * Specifies whether to show the data labels when the value is greater than the maximum value on the value axis.\\n         * If the value axis becomes smaller than the size of the data points, you can use this property to set whether to show the data labels.\\n         * This property applies to 2-D charts only.\\n         */\\n        getShowDataLabelsOverMaximum(): boolean;\\n\\n        /**\\n         * Specifies whether to show the data labels when the value is greater than the maximum value on the value axis.\\n         * If the value axis becomes smaller than the size of the data points, you can use this property to set whether to show the data labels.\\n         * This property applies to 2-D charts only.\\n         */\\n        setShowDataLabelsOverMaximum(showDataLabelsOverMaximum: boolean): void;\\n\\n        /**\\n         * Specifies the chart style for the chart.\\n         */\\n        getStyle(): number;\\n\\n        /**\\n         * Specifies the chart style for the chart.\\n         */\\n        setStyle(style: number): void;\\n\\n        /**\\n         * Represents the title of the specified chart, including the text, visibility, position, and formatting of the title.\\n         */\\n        getTitle(): ChartTitle;\\n\\n        /**\\n         * Specifies the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Specifies the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Specifies the width, in points, of the chart object.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Specifies the width, in points, of the chart object.\\n         */\\n        setWidth(width: number): void;\\n\\n        /**\\n         * The worksheet containing the current chart.\\n         */\\n        getWorksheet(): Worksheet;\\n\\n        /**\\n         * Activates the chart in the Excel UI.\\n         */\\n        activate(): void;\\n\\n        /**\\n         * Deletes the chart object.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.\\n         * The aspect ratio is preserved as part of the resizing.\\n         * @param height Optional. The desired height of the resulting image.\\n         * @param width Optional. The desired width of the resulting image.\\n         * @param fittingMode Optional. The method used to scale the chart to the specified dimensions (if both height and width are set).\\n         */\\n        getImage(\\n            width?: number,\\n            height?: number,\\n            fittingMode?: ImageFittingMode\\n        ): string;\\n\\n        /**\\n         * Resets the source data for the chart.\\n         * @param sourceData The range object corresponding to the source data.\\n         * @param seriesBy Specifies the way columns or rows are used as data series on the chart. Can be one of the following: Auto (default), Rows, and Columns. See `ExcelScript.ChartSeriesBy` for details.\\n         */\\n        setData(sourceData: Range, seriesBy?: ChartSeriesBy): void;\\n\\n        /**\\n         * Positions the chart relative to cells on the worksheet.\\n         * @param startCell The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user\'s right-to-left display settings.\\n         * @param endCell Optional. The end cell. If specified, the chart\'s width and height will be set to fully cover up this cell/range.\\n         */\\n        setPosition(startCell: Range | string, endCell?: Range | string): void;\\n\\n        /**\\n         * Represents either a single series or collection of series in the chart.\\n         */\\n        getSeries(): ChartSeries[];\\n\\n        /**\\n         * Add a new series to the collection. The new added series is not visible until values, x-axis values, or bubble sizes for it are set (depending on chart type).\\n         * @param name Optional. Name of the series.\\n         * @param index Optional. Index value of the series to be added. Zero-indexed.\\n         */\\n        addChartSeries(name?: string, index?: number): ChartSeries;\\n    }\\n\\n    /**\\n     * Encapsulates the options for the pivot chart.\\n     */\\n    interface ChartPivotOptions {\\n        /**\\n         * Specifies whether to display the axis field buttons on a PivotChart. The `showAxisFieldButtons` property corresponds to the \\"Show Axis Field Buttons\\" command on the \\"Field Buttons\\" drop-down list of the \\"Analyze\\" tab, which is available when a PivotChart is selected.\\n         */\\n        getShowAxisFieldButtons(): boolean;\\n\\n        /**\\n         * Specifies whether to display the axis field buttons on a PivotChart. The `showAxisFieldButtons` property corresponds to the \\"Show Axis Field Buttons\\" command on the \\"Field Buttons\\" drop-down list of the \\"Analyze\\" tab, which is available when a PivotChart is selected.\\n         */\\n        setShowAxisFieldButtons(showAxisFieldButtons: boolean): void;\\n\\n        /**\\n         * Specifies whether to display the legend field buttons on a PivotChart.\\n         */\\n        getShowLegendFieldButtons(): boolean;\\n\\n        /**\\n         * Specifies whether to display the legend field buttons on a PivotChart.\\n         */\\n        setShowLegendFieldButtons(showLegendFieldButtons: boolean): void;\\n\\n        /**\\n         * Specifies whether to display the report filter field buttons on a PivotChart.\\n         */\\n        getShowReportFilterFieldButtons(): boolean;\\n\\n        /**\\n         * Specifies whether to display the report filter field buttons on a PivotChart.\\n         */\\n        setShowReportFilterFieldButtons(\\n            showReportFilterFieldButtons: boolean\\n        ): void;\\n\\n        /**\\n         * Specifies whether to display the show value field buttons on a PivotChart.\\n         */\\n        getShowValueFieldButtons(): boolean;\\n\\n        /**\\n         * Specifies whether to display the show value field buttons on a PivotChart.\\n         */\\n        setShowValueFieldButtons(showValueFieldButtons: boolean): void;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for the overall chart area.\\n     */\\n    interface ChartAreaFormat {\\n        /**\\n         * Represents the border format of chart area, which includes color, linestyle, and weight.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Specifies the color scheme of the chart.\\n         */\\n        getColorScheme(): ChartColorScheme;\\n\\n        /**\\n         * Specifies the color scheme of the chart.\\n         */\\n        setColorScheme(colorScheme: ChartColorScheme): void;\\n\\n        /**\\n         * Represents the fill format of an object, which includes background formatting information.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Represents the font attributes (font name, font size, color, etc.) for the current object.\\n         */\\n        getFont(): ChartFont;\\n\\n        /**\\n         * Specifies if the chart area of the chart has rounded corners.\\n         */\\n        getRoundedCorners(): boolean;\\n\\n        /**\\n         * Specifies if the chart area of the chart has rounded corners.\\n         */\\n        setRoundedCorners(roundedCorners: boolean): void;\\n    }\\n\\n    /**\\n     * Represents a series in a chart.\\n     */\\n    interface ChartSeries {\\n        /**\\n         * Specifies the group for the specified series.\\n         */\\n        getAxisGroup(): ChartAxisGroup;\\n\\n        /**\\n         * Specifies the group for the specified series.\\n         */\\n        setAxisGroup(axisGroup: ChartAxisGroup): void;\\n\\n        /**\\n         * Encapsulates the bin options for histogram charts and pareto charts.\\n         */\\n        getBinOptions(): ChartBinOptions;\\n\\n        /**\\n         * Encapsulates the options for the box and whisker charts.\\n         */\\n        getBoxwhiskerOptions(): ChartBoxwhiskerOptions;\\n\\n        /**\\n         * This can be an integer value from 0 (zero) to 300, representing the percentage of the default size. This property only applies to bubble charts.\\n         */\\n        getBubbleScale(): number;\\n\\n        /**\\n         * This can be an integer value from 0 (zero) to 300, representing the percentage of the default size. This property only applies to bubble charts.\\n         */\\n        setBubbleScale(bubbleScale: number): void;\\n\\n        /**\\n         * Represents the chart type of a series. See `ExcelScript.ChartType` for details.\\n         */\\n        getChartType(): ChartType;\\n\\n        /**\\n         * Represents the chart type of a series. See `ExcelScript.ChartType` for details.\\n         */\\n        setChartType(chartType: ChartType): void;\\n\\n        /**\\n         * Represents a collection of all data labels in the series.\\n         */\\n        getDataLabels(): ChartDataLabels;\\n\\n        /**\\n         * Represents the doughnut hole size of a chart series. Only valid on doughnut and doughnut exploded charts.\\n         * Throws an `InvalidArgument` error on invalid charts.\\n         */\\n        getDoughnutHoleSize(): number;\\n\\n        /**\\n         * Represents the doughnut hole size of a chart series. Only valid on doughnut and doughnut exploded charts.\\n         * Throws an `InvalidArgument` error on invalid charts.\\n         */\\n        setDoughnutHoleSize(doughnutHoleSize: number): void;\\n\\n        /**\\n         * Specifies the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there\'s no explosion (the tip of the slice is in the center of the pie).\\n         */\\n        getExplosion(): number;\\n\\n        /**\\n         * Specifies the explosion value for a pie-chart or doughnut-chart slice. Returns 0 (zero) if there\'s no explosion (the tip of the slice is in the center of the pie).\\n         */\\n        setExplosion(explosion: number): void;\\n\\n        /**\\n         * Specifies if the series is filtered. Not applicable for surface charts.\\n         */\\n        getFiltered(): boolean;\\n\\n        /**\\n         * Specifies if the series is filtered. Not applicable for surface charts.\\n         */\\n        setFiltered(filtered: boolean): void;\\n\\n        /**\\n         * Specifies the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts. Can be a value from 0 through 360.\\n         */\\n        getFirstSliceAngle(): number;\\n\\n        /**\\n         * Specifies the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical). Applies only to pie, 3-D pie, and doughnut charts. Can be a value from 0 through 360.\\n         */\\n        setFirstSliceAngle(firstSliceAngle: number): void;\\n\\n        /**\\n         * Represents the formatting of a chart series, which includes fill and line formatting.\\n         */\\n        getFormat(): ChartSeriesFormat;\\n\\n        /**\\n         * Represents the gap width of a chart series. Only valid on bar and column charts, as well as\\n         * specific classes of line and pie charts. Throws an invalid argument exception on invalid charts.\\n         */\\n        getGapWidth(): number;\\n\\n        /**\\n         * Represents the gap width of a chart series. Only valid on bar and column charts, as well as\\n         * specific classes of line and pie charts. Throws an invalid argument exception on invalid charts.\\n         */\\n        setGapWidth(gapWidth: number): void;\\n\\n        /**\\n         * Specifies the color for maximum value of a region map chart series.\\n         */\\n        getGradientMaximumColor(): string;\\n\\n        /**\\n         * Specifies the color for maximum value of a region map chart series.\\n         */\\n        setGradientMaximumColor(gradientMaximumColor: string): void;\\n\\n        /**\\n         * Specifies the type for maximum value of a region map chart series.\\n         */\\n        getGradientMaximumType(): ChartGradientStyleType;\\n\\n        /**\\n         * Specifies the type for maximum value of a region map chart series.\\n         */\\n        setGradientMaximumType(\\n            gradientMaximumType: ChartGradientStyleType\\n        ): void;\\n\\n        /**\\n         * Specifies the maximum value of a region map chart series.\\n         */\\n        getGradientMaximumValue(): number;\\n\\n        /**\\n         * Specifies the maximum value of a region map chart series.\\n         */\\n        setGradientMaximumValue(gradientMaximumValue: number): void;\\n\\n        /**\\n         * Specifies the color for the midpoint value of a region map chart series.\\n         */\\n        getGradientMidpointColor(): string;\\n\\n        /**\\n         * Specifies the color for the midpoint value of a region map chart series.\\n         */\\n        setGradientMidpointColor(gradientMidpointColor: string): void;\\n\\n        /**\\n         * Specifies the type for the midpoint value of a region map chart series.\\n         */\\n        getGradientMidpointType(): ChartGradientStyleType;\\n\\n        /**\\n         * Specifies the type for the midpoint value of a region map chart series.\\n         */\\n        setGradientMidpointType(\\n            gradientMidpointType: ChartGradientStyleType\\n        ): void;\\n\\n        /**\\n         * Specifies the midpoint value of a region map chart series.\\n         */\\n        getGradientMidpointValue(): number;\\n\\n        /**\\n         * Specifies the midpoint value of a region map chart series.\\n         */\\n        setGradientMidpointValue(gradientMidpointValue: number): void;\\n\\n        /**\\n         * Specifies the color for the minimum value of a region map chart series.\\n         */\\n        getGradientMinimumColor(): string;\\n\\n        /**\\n         * Specifies the color for the minimum value of a region map chart series.\\n         */\\n        setGradientMinimumColor(gradientMinimumColor: string): void;\\n\\n        /**\\n         * Specifies the type for the minimum value of a region map chart series.\\n         */\\n        getGradientMinimumType(): ChartGradientStyleType;\\n\\n        /**\\n         * Specifies the type for the minimum value of a region map chart series.\\n         */\\n        setGradientMinimumType(\\n            gradientMinimumType: ChartGradientStyleType\\n        ): void;\\n\\n        /**\\n         * Specifies the minimum value of a region map chart series.\\n         */\\n        getGradientMinimumValue(): number;\\n\\n        /**\\n         * Specifies the minimum value of a region map chart series.\\n         */\\n        setGradientMinimumValue(gradientMinimumValue: number): void;\\n\\n        /**\\n         * Specifies the series gradient style of a region map chart.\\n         */\\n        getGradientStyle(): ChartGradientStyle;\\n\\n        /**\\n         * Specifies the series gradient style of a region map chart.\\n         */\\n        setGradientStyle(gradientStyle: ChartGradientStyle): void;\\n\\n        /**\\n         * Specifies if the series has data labels.\\n         */\\n        getHasDataLabels(): boolean;\\n\\n        /**\\n         * Specifies if the series has data labels.\\n         */\\n        setHasDataLabels(hasDataLabels: boolean): void;\\n\\n        /**\\n         * Specifies the fill color for negative data points in a series.\\n         */\\n        getInvertColor(): string;\\n\\n        /**\\n         * Specifies the fill color for negative data points in a series.\\n         */\\n        setInvertColor(invertColor: string): void;\\n\\n        /**\\n         * True if Excel inverts the pattern in the item when it corresponds to a negative number.\\n         */\\n        getInvertIfNegative(): boolean;\\n\\n        /**\\n         * True if Excel inverts the pattern in the item when it corresponds to a negative number.\\n         */\\n        setInvertIfNegative(invertIfNegative: boolean): void;\\n\\n        /**\\n         * Encapsulates the options for a region map chart.\\n         */\\n        getMapOptions(): ChartMapOptions;\\n\\n        /**\\n         * Specifies the marker background color of a chart series.\\n         */\\n        getMarkerBackgroundColor(): string;\\n\\n        /**\\n         * Specifies the marker background color of a chart series.\\n         */\\n        setMarkerBackgroundColor(markerBackgroundColor: string): void;\\n\\n        /**\\n         * Specifies the marker foreground color of a chart series.\\n         */\\n        getMarkerForegroundColor(): string;\\n\\n        /**\\n         * Specifies the marker foreground color of a chart series.\\n         */\\n        setMarkerForegroundColor(markerForegroundColor: string): void;\\n\\n        /**\\n         * Specifies the marker size of a chart series.\\n         */\\n        getMarkerSize(): number;\\n\\n        /**\\n         * Specifies the marker size of a chart series.\\n         */\\n        setMarkerSize(markerSize: number): void;\\n\\n        /**\\n         * Specifies the marker style of a chart series. See `ExcelScript.ChartMarkerStyle` for details.\\n         */\\n        getMarkerStyle(): ChartMarkerStyle;\\n\\n        /**\\n         * Specifies the marker style of a chart series. See `ExcelScript.ChartMarkerStyle` for details.\\n         */\\n        setMarkerStyle(markerStyle: ChartMarkerStyle): void;\\n\\n        /**\\n         * Specifies the name of a series in a chart. The name\'s length should not be greater than 255 characters.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Specifies the name of a series in a chart. The name\'s length should not be greater than 255 characters.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies how bars and columns are positioned. Can be a value between \u2013100 and 100. Applies only to 2-D bar and 2-D column charts.\\n         */\\n        getOverlap(): number;\\n\\n        /**\\n         * Specifies how bars and columns are positioned. Can be a value between \u2013100 and 100. Applies only to 2-D bar and 2-D column charts.\\n         */\\n        setOverlap(overlap: number): void;\\n\\n        /**\\n         * Specifies the series parent label strategy area for a treemap chart.\\n         */\\n        getParentLabelStrategy(): ChartParentLabelStrategy;\\n\\n        /**\\n         * Specifies the series parent label strategy area for a treemap chart.\\n         */\\n        setParentLabelStrategy(\\n            parentLabelStrategy: ChartParentLabelStrategy\\n        ): void;\\n\\n        /**\\n         * Specifies the plot order of a chart series within the chart group.\\n         */\\n        getPlotOrder(): number;\\n\\n        /**\\n         * Specifies the plot order of a chart series within the chart group.\\n         */\\n        setPlotOrder(plotOrder: number): void;\\n\\n        /**\\n         * Specifies the size of the secondary section of either a pie-of-pie chart or a bar-of-pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.\\n         */\\n        getSecondPlotSize(): number;\\n\\n        /**\\n         * Specifies the size of the secondary section of either a pie-of-pie chart or a bar-of-pie chart, as a percentage of the size of the primary pie. Can be a value from 5 to 200.\\n         */\\n        setSecondPlotSize(secondPlotSize: number): void;\\n\\n        /**\\n         * Specifies whether connector lines are shown in waterfall charts.\\n         */\\n        getShowConnectorLines(): boolean;\\n\\n        /**\\n         * Specifies whether connector lines are shown in waterfall charts.\\n         */\\n        setShowConnectorLines(showConnectorLines: boolean): void;\\n\\n        /**\\n         * Specifies whether leader lines are displayed for each data label in the series.\\n         */\\n        getShowLeaderLines(): boolean;\\n\\n        /**\\n         * Specifies whether leader lines are displayed for each data label in the series.\\n         */\\n        setShowLeaderLines(showLeaderLines: boolean): void;\\n\\n        /**\\n         * Specifies if the series has a shadow.\\n         */\\n        getShowShadow(): boolean;\\n\\n        /**\\n         * Specifies if the series has a shadow.\\n         */\\n        setShowShadow(showShadow: boolean): void;\\n\\n        /**\\n         * Specifies if the series is smooth. Only applicable to line and scatter charts.\\n         */\\n        getSmooth(): boolean;\\n\\n        /**\\n         * Specifies if the series is smooth. Only applicable to line and scatter charts.\\n         */\\n        setSmooth(smooth: boolean): void;\\n\\n        /**\\n         * Specifies the way the two sections of either a pie-of-pie chart or a bar-of-pie chart are split.\\n         */\\n        getSplitType(): ChartSplitType;\\n\\n        /**\\n         * Specifies the way the two sections of either a pie-of-pie chart or a bar-of-pie chart are split.\\n         */\\n        setSplitType(splitType: ChartSplitType): void;\\n\\n        /**\\n         * Specifies the threshold value that separates two sections of either a pie-of-pie chart or a bar-of-pie chart.\\n         */\\n        getSplitValue(): number;\\n\\n        /**\\n         * Specifies the threshold value that separates two sections of either a pie-of-pie chart or a bar-of-pie chart.\\n         */\\n        setSplitValue(splitValue: number): void;\\n\\n        /**\\n         * True if Excel assigns a different color or pattern to each data marker. The chart must contain only one series.\\n         */\\n        getVaryByCategories(): boolean;\\n\\n        /**\\n         * True if Excel assigns a different color or pattern to each data marker. The chart must contain only one series.\\n         */\\n        setVaryByCategories(varyByCategories: boolean): void;\\n\\n        /**\\n         * Represents the error bar object of a chart series.\\n         */\\n        getXErrorBars(): ChartErrorBars;\\n\\n        /**\\n         * Represents the error bar object of a chart series.\\n         */\\n        getYErrorBars(): ChartErrorBars;\\n\\n        /**\\n         * Deletes the chart series.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the values from a single dimension of the chart series. These could be either category values or data values, depending on the dimension specified and how the data is mapped for the chart series.\\n         * @param dimension The dimension of the axis where the data is from.\\n         */\\n        getDimensionValues(dimension: ChartSeriesDimension): string[];\\n\\n        /**\\n         * Sets the bubble sizes for a chart series. Only works for bubble charts.\\n         * @param sourceData The `Range` object corresponding to the source data.\\n         */\\n        setBubbleSizes(sourceData: Range): void;\\n\\n        /**\\n         * Sets the values for a chart series. For scatter charts, it refers to y-axis values.\\n         * @param sourceData The `Range` object corresponding to the source data.\\n         */\\n        setValues(sourceData: Range): void;\\n\\n        /**\\n         * Sets the values of the x-axis for a chart series. Only works for scatter charts.\\n         * @param sourceData The `Range` object corresponding to the source data.\\n         */\\n        setXAxisValues(sourceData: Range): void;\\n\\n        /**\\n         * Returns a collection of all points in the series.\\n         */\\n        getPoints(): ChartPoint[];\\n\\n        /**\\n         * The collection of trendlines in the series.\\n         */\\n        getTrendlines(): ChartTrendline[];\\n\\n        /**\\n         * Adds a new trendline to trendline collection.\\n         * @param type Specifies the trendline type. The default value is \\"Linear\\". See `ExcelScript.ChartTrendline` for details.\\n         */\\n        addChartTrendline(type?: ChartTrendlineType): ChartTrendline;\\n\\n        /**\\n         * Gets a trendline object by index, which is the insertion order in the items array.\\n         * @param index Represents the insertion order in the items array.\\n         */\\n        getChartTrendline(index: number): ChartTrendline;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for the chart series\\n     */\\n    interface ChartSeriesFormat {\\n        /**\\n         * Represents the fill format of a chart series, which includes background formatting information.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Represents line formatting.\\n         */\\n        getLine(): ChartLineFormat;\\n    }\\n\\n    /**\\n     * Represents a point of a series in a chart.\\n     */\\n    interface ChartPoint {\\n        /**\\n         * Returns the data label of a chart point.\\n         */\\n        getDataLabel(): ChartDataLabel;\\n\\n        /**\\n         * Encapsulates the format properties chart point.\\n         */\\n        getFormat(): ChartPointFormat;\\n\\n        /**\\n         * Represents whether a data point has a data label. Not applicable for surface charts.\\n         */\\n        getHasDataLabel(): boolean;\\n\\n        /**\\n         * Represents whether a data point has a data label. Not applicable for surface charts.\\n         */\\n        setHasDataLabel(hasDataLabel: boolean): void;\\n\\n        /**\\n         * HTML color code representation of the marker background color of a data point (e.g., #FF0000 represents Red).\\n         */\\n        getMarkerBackgroundColor(): string;\\n\\n        /**\\n         * HTML color code representation of the marker background color of a data point (e.g., #FF0000 represents Red).\\n         */\\n        setMarkerBackgroundColor(markerBackgroundColor: string): void;\\n\\n        /**\\n         * HTML color code representation of the marker foreground color of a data point (e.g., #FF0000 represents Red).\\n         */\\n        getMarkerForegroundColor(): string;\\n\\n        /**\\n         * HTML color code representation of the marker foreground color of a data point (e.g., #FF0000 represents Red).\\n         */\\n        setMarkerForegroundColor(markerForegroundColor: string): void;\\n\\n        /**\\n         * Represents marker size of a data point.\\n         */\\n        getMarkerSize(): number;\\n\\n        /**\\n         * Represents marker size of a data point.\\n         */\\n        setMarkerSize(markerSize: number): void;\\n\\n        /**\\n         * Represents marker style of a chart data point. See `ExcelScript.ChartMarkerStyle` for details.\\n         */\\n        getMarkerStyle(): ChartMarkerStyle;\\n\\n        /**\\n         * Represents marker style of a chart data point. See `ExcelScript.ChartMarkerStyle` for details.\\n         */\\n        setMarkerStyle(markerStyle: ChartMarkerStyle): void;\\n\\n        /**\\n         * Returns the value of a chart point.\\n         */\\n        getValue(): number;\\n    }\\n\\n    /**\\n     * Represents the formatting object for chart points.\\n     */\\n    interface ChartPointFormat {\\n        /**\\n         * Represents the border format of a chart data point, which includes color, style, and weight information.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Represents the fill format of a chart, which includes background formatting information.\\n         */\\n        getFill(): ChartFill;\\n    }\\n\\n    /**\\n     * Represents the chart axes.\\n     */\\n    interface ChartAxes {\\n        /**\\n         * Represents the category axis in a chart.\\n         */\\n        getCategoryAxis(): ChartAxis;\\n\\n        /**\\n         * Represents the series axis of a 3-D chart.\\n         */\\n        getSeriesAxis(): ChartAxis;\\n\\n        /**\\n         * Represents the value axis in an axis.\\n         */\\n        getValueAxis(): ChartAxis;\\n\\n        /**\\n         * Returns the specific axis identified by type and group.\\n         * @param type Specifies the axis type. See `ExcelScript.ChartAxisType` for details.\\n         * @param group Optional. Specifies the axis group. See `ExcelScript.ChartAxisGroup` for details.\\n         */\\n        getChartAxis(type: ChartAxisType, group?: ChartAxisGroup): ChartAxis;\\n    }\\n\\n    /**\\n     * Represents a single axis in a chart.\\n     */\\n    interface ChartAxis {\\n        /**\\n         * Specifies the alignment for the specified axis tick label. See `ExcelScript.ChartTextHorizontalAlignment` for detail.\\n         */\\n        getAlignment(): ChartTickLabelAlignment;\\n\\n        /**\\n         * Specifies the alignment for the specified axis tick label. See `ExcelScript.ChartTextHorizontalAlignment` for detail.\\n         */\\n        setAlignment(alignment: ChartTickLabelAlignment): void;\\n\\n        /**\\n         * Specifies the group for the specified axis. See `ExcelScript.ChartAxisGroup` for details.\\n         */\\n        getAxisGroup(): ChartAxisGroup;\\n\\n        /**\\n         * Specifies the base unit for the specified category axis.\\n         */\\n        getBaseTimeUnit(): ChartAxisTimeUnit;\\n\\n        /**\\n         * Specifies the base unit for the specified category axis.\\n         */\\n        setBaseTimeUnit(baseTimeUnit: ChartAxisTimeUnit): void;\\n\\n        /**\\n         * Specifies the category axis type.\\n         */\\n        getCategoryType(): ChartAxisCategoryType;\\n\\n        /**\\n         * Specifies the category axis type.\\n         */\\n        setCategoryType(categoryType: ChartAxisCategoryType): void;\\n\\n        /**\\n         * Specifies the custom axis display unit value. To set this property, please use the `SetCustomDisplayUnit(double)` method.\\n         */\\n        getCustomDisplayUnit(): number;\\n\\n        /**\\n         * Represents the axis display unit. See `ExcelScript.ChartAxisDisplayUnit` for details.\\n         */\\n        getDisplayUnit(): ChartAxisDisplayUnit;\\n\\n        /**\\n         * Represents the axis display unit. See `ExcelScript.ChartAxisDisplayUnit` for details.\\n         */\\n        setDisplayUnit(displayUnit: ChartAxisDisplayUnit): void;\\n\\n        /**\\n         * Represents the formatting of a chart object, which includes line and font formatting.\\n         */\\n        getFormat(): ChartAxisFormat;\\n\\n        /**\\n         * Specifies the height, in points, of the chart axis. Returns `null` if the axis is not visible.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies if the value axis crosses the category axis between categories.\\n         */\\n        getIsBetweenCategories(): boolean;\\n\\n        /**\\n         * Specifies if the value axis crosses the category axis between categories.\\n         */\\n        setIsBetweenCategories(isBetweenCategories: boolean): void;\\n\\n        /**\\n         * Specifies the distance, in points, from the left edge of the axis to the left of chart area. Returns `null` if the axis is not visible.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells. If `true`, the number format will change in the labels when it changes in the cells.\\n         */\\n        getLinkNumberFormat(): boolean;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells. If `true`, the number format will change in the labels when it changes in the cells.\\n         */\\n        setLinkNumberFormat(linkNumberFormat: boolean): void;\\n\\n        /**\\n         * Specifies the base of the logarithm when using logarithmic scales.\\n         */\\n        getLogBase(): number;\\n\\n        /**\\n         * Specifies the base of the logarithm when using logarithmic scales.\\n         */\\n        setLogBase(logBase: number): void;\\n\\n        /**\\n         * Returns an object that represents the major gridlines for the specified axis.\\n         */\\n        getMajorGridlines(): ChartGridlines;\\n\\n        /**\\n         * Specifies the type of major tick mark for the specified axis. See `ExcelScript.ChartAxisTickMark` for details.\\n         */\\n        getMajorTickMark(): ChartAxisTickMark;\\n\\n        /**\\n         * Specifies the type of major tick mark for the specified axis. See `ExcelScript.ChartAxisTickMark` for details.\\n         */\\n        setMajorTickMark(majorTickMark: ChartAxisTickMark): void;\\n\\n        /**\\n         * Specifies the major unit scale value for the category axis when the `categoryType` property is set to `dateAxis`.\\n         */\\n        getMajorTimeUnitScale(): ChartAxisTimeUnit;\\n\\n        /**\\n         * Specifies the major unit scale value for the category axis when the `categoryType` property is set to `dateAxis`.\\n         */\\n        setMajorTimeUnitScale(majorTimeUnitScale: ChartAxisTimeUnit): void;\\n\\n        /**\\n         * Specifies the interval between two major tick marks.\\n         */\\n        getMajorUnit(): number;\\n\\n        /**\\n         * Specifies the interval between two major tick marks.\\n         */\\n        setMajorUnit(majorUnit: number): void;\\n\\n        /**\\n         * Specifies the maximum value on the value axis.\\n         */\\n        getMaximum(): number;\\n\\n        /**\\n         * Specifies the maximum value on the value axis.\\n         */\\n        setMaximum(maximum: number): void;\\n\\n        /**\\n         * Specifies the minimum value on the value axis.\\n         */\\n        getMinimum(): number;\\n\\n        /**\\n         * Specifies the minimum value on the value axis.\\n         */\\n        setMinimum(minimum: number): void;\\n\\n        /**\\n         * Returns an object that represents the minor gridlines for the specified axis.\\n         */\\n        getMinorGridlines(): ChartGridlines;\\n\\n        /**\\n         * Specifies the type of minor tick mark for the specified axis. See `ExcelScript.ChartAxisTickMark` for details.\\n         */\\n        getMinorTickMark(): ChartAxisTickMark;\\n\\n        /**\\n         * Specifies the type of minor tick mark for the specified axis. See `ExcelScript.ChartAxisTickMark` for details.\\n         */\\n        setMinorTickMark(minorTickMark: ChartAxisTickMark): void;\\n\\n        /**\\n         * Specifies the minor unit scale value for the category axis when the `categoryType` property is set to `dateAxis`.\\n         */\\n        getMinorTimeUnitScale(): ChartAxisTimeUnit;\\n\\n        /**\\n         * Specifies the minor unit scale value for the category axis when the `categoryType` property is set to `dateAxis`.\\n         */\\n        setMinorTimeUnitScale(minorTimeUnitScale: ChartAxisTimeUnit): void;\\n\\n        /**\\n         * Specifies the interval between two minor tick marks.\\n         */\\n        getMinorUnit(): number;\\n\\n        /**\\n         * Specifies the interval between two minor tick marks.\\n         */\\n        setMinorUnit(minorUnit: number): void;\\n\\n        /**\\n         * Specifies if an axis is multilevel.\\n         */\\n        getMultiLevel(): boolean;\\n\\n        /**\\n         * Specifies if an axis is multilevel.\\n         */\\n        setMultiLevel(multiLevel: boolean): void;\\n\\n        /**\\n         * Specifies the format code for the axis tick label.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * Specifies the format code for the axis tick label.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * Specifies the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.\\n         */\\n        getOffset(): number;\\n\\n        /**\\n         * Specifies the distance between the levels of labels, and the distance between the first level and the axis line. The value should be an integer from 0 to 1000.\\n         */\\n        setOffset(offset: number): void;\\n\\n        /**\\n         * Specifies the specified axis position where the other axis crosses. See `ExcelScript.ChartAxisPosition` for details.\\n         */\\n        getPosition(): ChartAxisPosition;\\n\\n        /**\\n         * Specifies the specified axis position where the other axis crosses. See `ExcelScript.ChartAxisPosition` for details.\\n         */\\n        setPosition(position: ChartAxisPosition): void;\\n\\n        /**\\n         * Specifies the axis position where the other axis crosses. You should use the `SetPositionAt(double)` method to set this property.\\n         */\\n        getPositionAt(): number;\\n\\n        /**\\n         * Specifies if Excel plots data points from last to first.\\n         */\\n        getReversePlotOrder(): boolean;\\n\\n        /**\\n         * Specifies if Excel plots data points from last to first.\\n         */\\n        setReversePlotOrder(reversePlotOrder: boolean): void;\\n\\n        /**\\n         * Specifies the value axis scale type. See `ExcelScript.ChartAxisScaleType` for details.\\n         */\\n        getScaleType(): ChartAxisScaleType;\\n\\n        /**\\n         * Specifies the value axis scale type. See `ExcelScript.ChartAxisScaleType` for details.\\n         */\\n        setScaleType(scaleType: ChartAxisScaleType): void;\\n\\n        /**\\n         * Specifies if the axis display unit label is visible.\\n         */\\n        getShowDisplayUnitLabel(): boolean;\\n\\n        /**\\n         * Specifies if the axis display unit label is visible.\\n         */\\n        setShowDisplayUnitLabel(showDisplayUnitLabel: boolean): void;\\n\\n        /**\\n         * Specifies the angle to which the text is oriented for the chart axis tick label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * Specifies the angle to which the text is oriented for the chart axis tick label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Specifies the position of tick-mark labels on the specified axis. See `ExcelScript.ChartAxisTickLabelPosition` for details.\\n         */\\n        getTickLabelPosition(): ChartAxisTickLabelPosition;\\n\\n        /**\\n         * Specifies the position of tick-mark labels on the specified axis. See `ExcelScript.ChartAxisTickLabelPosition` for details.\\n         */\\n        setTickLabelPosition(\\n            tickLabelPosition: ChartAxisTickLabelPosition\\n        ): void;\\n\\n        /**\\n         * Specifies the number of categories or series between tick-mark labels. Can be a value from 1 through 31999.\\n         */\\n        getTickLabelSpacing(): number;\\n\\n        /**\\n         * Specifies the number of categories or series between tick-mark labels. Can be a value from 1 through 31999.\\n         */\\n        setTickLabelSpacing(tickLabelSpacing: number): void;\\n\\n        /**\\n         * Specifies the number of categories or series between tick marks.\\n         */\\n        getTickMarkSpacing(): number;\\n\\n        /**\\n         * Specifies the number of categories or series between tick marks.\\n         */\\n        setTickMarkSpacing(tickMarkSpacing: number): void;\\n\\n        /**\\n         * Represents the axis title.\\n         */\\n        getTitle(): ChartAxisTitle;\\n\\n        /**\\n         * Specifies the distance, in points, from the top edge of the axis to the top of chart area. Returns `null` if the axis is not visible.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Specifies the axis type. See `ExcelScript.ChartAxisType` for details.\\n         */\\n        getType(): ChartAxisType;\\n\\n        /**\\n         * Specifies if the axis is visible.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the axis is visible.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Specifies the width, in points, of the chart axis. Returns `null` if the axis is not visible.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Sets all the category names for the specified axis.\\n         * @param sourceData The `Range` object corresponding to the source data.\\n         */\\n        setCategoryNames(sourceData: Range): void;\\n\\n        /**\\n         * Sets the axis display unit to a custom value.\\n         * @param value Custom value of the display unit.\\n         */\\n        setCustomDisplayUnit(value: number): void;\\n\\n        /**\\n         * Sets the specified axis position where the other axis crosses.\\n         * @param value Custom value of the crossing point.\\n         */\\n        setPositionAt(value: number): void;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for the chart axis.\\n     */\\n    interface ChartAxisFormat {\\n        /**\\n         * Specifies chart fill formatting.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Specifies the font attributes (font name, font size, color, etc.) for a chart axis element.\\n         */\\n        getFont(): ChartFont;\\n\\n        /**\\n         * Specifies chart line formatting.\\n         */\\n        getLine(): ChartLineFormat;\\n    }\\n\\n    /**\\n     * Represents the title of a chart axis.\\n     */\\n    interface ChartAxisTitle {\\n        /**\\n         * Specifies the formatting of the chart axis title.\\n         */\\n        getFormat(): ChartAxisTitleFormat;\\n\\n        /**\\n         * Specifies the axis title.\\n         */\\n        getText(): string;\\n\\n        /**\\n         * Specifies the axis title.\\n         */\\n        setText(text: string): void;\\n\\n        /**\\n         * Specifies the angle to which the text is oriented for the chart axis title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * Specifies the angle to which the text is oriented for the chart axis title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Specifies if the axis title is visibile.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the axis title is visibile.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * A string value that represents the formula of chart axis title using A1-style notation.\\n         * @param formula A string that represents the formula to set.\\n         */\\n        setFormula(formula: string): void;\\n    }\\n\\n    /**\\n     * Represents the chart axis title formatting.\\n     */\\n    interface ChartAxisTitleFormat {\\n        /**\\n         * Specifies the chart axis title\'s border format, which includes color, linestyle, and weight.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Specifies the chart axis title\'s fill formatting.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Specifies the chart axis title\'s font attributes, such as font name, font size, or color, of the chart axis title object.\\n         */\\n        getFont(): ChartFont;\\n    }\\n\\n    /**\\n     * Represents a collection of all the data labels on a chart point.\\n     */\\n    interface ChartDataLabels {\\n        /**\\n         * Specifies if data labels automatically generate appropriate text based on context.\\n         */\\n        getAutoText(): boolean;\\n\\n        /**\\n         * Specifies if data labels automatically generate appropriate text based on context.\\n         */\\n        setAutoText(autoText: boolean): void;\\n\\n        /**\\n         * Specifies the format of chart data labels, which includes fill and font formatting.\\n         */\\n        getFormat(): ChartDataLabelFormat;\\n\\n        /**\\n         * Specifies the horizontal alignment for chart data label. See `ExcelScript.ChartTextHorizontalAlignment` for details.\\n         * This property is valid only when the `TextOrientation` of data label is 0.\\n         */\\n        getHorizontalAlignment(): ChartTextHorizontalAlignment;\\n\\n        /**\\n         * Specifies the horizontal alignment for chart data label. See `ExcelScript.ChartTextHorizontalAlignment` for details.\\n         * This property is valid only when the `TextOrientation` of data label is 0.\\n         */\\n        setHorizontalAlignment(\\n            horizontalAlignment: ChartTextHorizontalAlignment\\n        ): void;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells. If `true`, the number format will change in the labels when it changes in the cells.\\n         */\\n        getLinkNumberFormat(): boolean;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells. If `true`, the number format will change in the labels when it changes in the cells.\\n         */\\n        setLinkNumberFormat(linkNumberFormat: boolean): void;\\n\\n        /**\\n         * Specifies the format code for data labels.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * Specifies the format code for data labels.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * Value that represents the position of the data label. See `ExcelScript.ChartDataLabelPosition` for details.\\n         */\\n        getPosition(): ChartDataLabelPosition;\\n\\n        /**\\n         * Value that represents the position of the data label. See `ExcelScript.ChartDataLabelPosition` for details.\\n         */\\n        setPosition(position: ChartDataLabelPosition): void;\\n\\n        /**\\n         * String representing the separator used for the data labels on a chart.\\n         */\\n        getSeparator(): string;\\n\\n        /**\\n         * String representing the separator used for the data labels on a chart.\\n         */\\n        setSeparator(separator: string): void;\\n\\n        /**\\n         * Specifies if the data label bubble size is visible.\\n         */\\n        getShowBubbleSize(): boolean;\\n\\n        /**\\n         * Specifies if the data label bubble size is visible.\\n         */\\n        setShowBubbleSize(showBubbleSize: boolean): void;\\n\\n        /**\\n         * Specifies if the data label category name is visible.\\n         */\\n        getShowCategoryName(): boolean;\\n\\n        /**\\n         * Specifies if the data label category name is visible.\\n         */\\n        setShowCategoryName(showCategoryName: boolean): void;\\n\\n        /**\\n         * Specifies if the data label legend key is visible.\\n         */\\n        getShowLegendKey(): boolean;\\n\\n        /**\\n         * Specifies if the data label legend key is visible.\\n         */\\n        setShowLegendKey(showLegendKey: boolean): void;\\n\\n        /**\\n         * Specifies if the data label percentage is visible.\\n         */\\n        getShowPercentage(): boolean;\\n\\n        /**\\n         * Specifies if the data label percentage is visible.\\n         */\\n        setShowPercentage(showPercentage: boolean): void;\\n\\n        /**\\n         * Specifies if the data label series name is visible.\\n         */\\n        getShowSeriesName(): boolean;\\n\\n        /**\\n         * Specifies if the data label series name is visible.\\n         */\\n        setShowSeriesName(showSeriesName: boolean): void;\\n\\n        /**\\n         * Specifies if the data label value is visible.\\n         */\\n        getShowValue(): boolean;\\n\\n        /**\\n         * Specifies if the data label value is visible.\\n         */\\n        setShowValue(showValue: boolean): void;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for data labels. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for data labels. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Represents the vertical alignment of chart data label. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of the data label is -90, 90, or 180.\\n         */\\n        getVerticalAlignment(): ChartTextVerticalAlignment;\\n\\n        /**\\n         * Represents the vertical alignment of chart data label. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of the data label is -90, 90, or 180.\\n         */\\n        setVerticalAlignment(\\n            verticalAlignment: ChartTextVerticalAlignment\\n        ): void;\\n    }\\n\\n    /**\\n     * Represents the data label of a chart point.\\n     */\\n    interface ChartDataLabel {\\n        /**\\n         * Specifies if the data label automatically generates appropriate text based on context.\\n         */\\n        getAutoText(): boolean;\\n\\n        /**\\n         * Specifies if the data label automatically generates appropriate text based on context.\\n         */\\n        setAutoText(autoText: boolean): void;\\n\\n        /**\\n         * Represents the format of chart data label.\\n         */\\n        getFormat(): ChartDataLabelFormat;\\n\\n        /**\\n         * String value that represents the formula of chart data label using A1-style notation.\\n         */\\n        getFormula(): string;\\n\\n        /**\\n         * String value that represents the formula of chart data label using A1-style notation.\\n         */\\n        setFormula(formula: string): void;\\n\\n        /**\\n         * Returns the height, in points, of the chart data label. Value is `null` if the chart data label is not visible.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Represents the horizontal alignment for chart data label. See `ExcelScript.ChartTextHorizontalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of data label is -90, 90, or 180.\\n         */\\n        getHorizontalAlignment(): ChartTextHorizontalAlignment;\\n\\n        /**\\n         * Represents the horizontal alignment for chart data label. See `ExcelScript.ChartTextHorizontalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of data label is -90, 90, or 180.\\n         */\\n        setHorizontalAlignment(\\n            horizontalAlignment: ChartTextHorizontalAlignment\\n        ): void;\\n\\n        /**\\n         * Represents the distance, in points, from the left edge of chart data label to the left edge of chart area. Value is `null` if the chart data label is not visible.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Represents the distance, in points, from the left edge of chart data label to the left edge of chart area. Value is `null` if the chart data label is not visible.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\\n         */\\n        getLinkNumberFormat(): boolean;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\\n         */\\n        setLinkNumberFormat(linkNumberFormat: boolean): void;\\n\\n        /**\\n         * String value that represents the format code for data label.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * String value that represents the format code for data label.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * Value that represents the position of the data label. See `ExcelScript.ChartDataLabelPosition` for details.\\n         */\\n        getPosition(): ChartDataLabelPosition;\\n\\n        /**\\n         * Value that represents the position of the data label. See `ExcelScript.ChartDataLabelPosition` for details.\\n         */\\n        setPosition(position: ChartDataLabelPosition): void;\\n\\n        /**\\n         * String representing the separator used for the data label on a chart.\\n         */\\n        getSeparator(): string;\\n\\n        /**\\n         * String representing the separator used for the data label on a chart.\\n         */\\n        setSeparator(separator: string): void;\\n\\n        /**\\n         * Specifies if the data label bubble size is visible.\\n         */\\n        getShowBubbleSize(): boolean;\\n\\n        /**\\n         * Specifies if the data label bubble size is visible.\\n         */\\n        setShowBubbleSize(showBubbleSize: boolean): void;\\n\\n        /**\\n         * Specifies if the data label category name is visible.\\n         */\\n        getShowCategoryName(): boolean;\\n\\n        /**\\n         * Specifies if the data label category name is visible.\\n         */\\n        setShowCategoryName(showCategoryName: boolean): void;\\n\\n        /**\\n         * Specifies if the data label legend key is visible.\\n         */\\n        getShowLegendKey(): boolean;\\n\\n        /**\\n         * Specifies if the data label legend key is visible.\\n         */\\n        setShowLegendKey(showLegendKey: boolean): void;\\n\\n        /**\\n         * Specifies if the data label percentage is visible.\\n         */\\n        getShowPercentage(): boolean;\\n\\n        /**\\n         * Specifies if the data label percentage is visible.\\n         */\\n        setShowPercentage(showPercentage: boolean): void;\\n\\n        /**\\n         * Specifies if the data label series name is visible.\\n         */\\n        getShowSeriesName(): boolean;\\n\\n        /**\\n         * Specifies if the data label series name is visible.\\n         */\\n        setShowSeriesName(showSeriesName: boolean): void;\\n\\n        /**\\n         * Specifies if the data label value is visible.\\n         */\\n        getShowValue(): boolean;\\n\\n        /**\\n         * Specifies if the data label value is visible.\\n         */\\n        setShowValue(showValue: boolean): void;\\n\\n        /**\\n         * String representing the text of the data label on a chart.\\n         */\\n        getText(): string;\\n\\n        /**\\n         * String representing the text of the data label on a chart.\\n         */\\n        setText(text: string): void;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for the chart data label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for the chart data label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Represents the distance, in points, from the top edge of chart data label to the top of chart area. Value is `null` if the chart data label is not visible.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Represents the distance, in points, from the top edge of chart data label to the top of chart area. Value is `null` if the chart data label is not visible.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Represents the vertical alignment of chart data label. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of data label is 0.\\n         */\\n        getVerticalAlignment(): ChartTextVerticalAlignment;\\n\\n        /**\\n         * Represents the vertical alignment of chart data label. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of data label is 0.\\n         */\\n        setVerticalAlignment(\\n            verticalAlignment: ChartTextVerticalAlignment\\n        ): void;\\n\\n        /**\\n         * Returns the width, in points, of the chart data label. Value is `null` if the chart data label is not visible.\\n         */\\n        getWidth(): number;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for the chart data labels.\\n     */\\n    interface ChartDataLabelFormat {\\n        /**\\n         * Represents the border format, which includes color, linestyle, and weight.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Represents the fill format of the current chart data label.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Represents the font attributes (such as font name, font size, and color) for a chart data label.\\n         */\\n        getFont(): ChartFont;\\n    }\\n\\n    /**\\n     * This object represents the attributes for a chart\'s error bars.\\n     */\\n    interface ChartErrorBars {\\n        /**\\n         * Specifies if error bars have an end style cap.\\n         */\\n        getEndStyleCap(): boolean;\\n\\n        /**\\n         * Specifies if error bars have an end style cap.\\n         */\\n        setEndStyleCap(endStyleCap: boolean): void;\\n\\n        /**\\n         * Specifies the formatting type of the error bars.\\n         */\\n        getFormat(): ChartErrorBarsFormat;\\n\\n        /**\\n         * Specifies which parts of the error bars to include.\\n         */\\n        getInclude(): ChartErrorBarsInclude;\\n\\n        /**\\n         * Specifies which parts of the error bars to include.\\n         */\\n        setInclude(include: ChartErrorBarsInclude): void;\\n\\n        /**\\n         * The type of range marked by the error bars.\\n         */\\n        getType(): ChartErrorBarsType;\\n\\n        /**\\n         * The type of range marked by the error bars.\\n         */\\n        setType(type: ChartErrorBarsType): void;\\n\\n        /**\\n         * Specifies whether the error bars are displayed.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies whether the error bars are displayed.\\n         */\\n        setVisible(visible: boolean): void;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for chart error bars.\\n     */\\n    interface ChartErrorBarsFormat {\\n        /**\\n         * Represents the chart line formatting.\\n         */\\n        getLine(): ChartLineFormat;\\n    }\\n\\n    /**\\n     * Represents major or minor gridlines on a chart axis.\\n     */\\n    interface ChartGridlines {\\n        /**\\n         * Represents the formatting of chart gridlines.\\n         */\\n        getFormat(): ChartGridlinesFormat;\\n\\n        /**\\n         * Specifies if the axis gridlines are visible.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the axis gridlines are visible.\\n         */\\n        setVisible(visible: boolean): void;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for chart gridlines.\\n     */\\n    interface ChartGridlinesFormat {\\n        /**\\n         * Represents chart line formatting.\\n         */\\n        getLine(): ChartLineFormat;\\n    }\\n\\n    /**\\n     * Represents the legend in a chart.\\n     */\\n    interface ChartLegend {\\n        /**\\n         * Represents the formatting of a chart legend, which includes fill and font formatting.\\n         */\\n        getFormat(): ChartLegendFormat;\\n\\n        /**\\n         * Specifies the height, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies the height, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n         */\\n        setHeight(height: number): void;\\n\\n        /**\\n         * Specifies the left value, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Specifies the left value, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Specifies if the chart legend should overlap with the main body of the chart.\\n         */\\n        getOverlay(): boolean;\\n\\n        /**\\n         * Specifies if the chart legend should overlap with the main body of the chart.\\n         */\\n        setOverlay(overlay: boolean): void;\\n\\n        /**\\n         * Specifies the position of the legend on the chart. See `ExcelScript.ChartLegendPosition` for details.\\n         */\\n        getPosition(): ChartLegendPosition;\\n\\n        /**\\n         * Specifies the position of the legend on the chart. See `ExcelScript.ChartLegendPosition` for details.\\n         */\\n        setPosition(position: ChartLegendPosition): void;\\n\\n        /**\\n         * Specifies if the legend has a shadow on the chart.\\n         */\\n        getShowShadow(): boolean;\\n\\n        /**\\n         * Specifies if the legend has a shadow on the chart.\\n         */\\n        setShowShadow(showShadow: boolean): void;\\n\\n        /**\\n         * Specifies the top of a chart legend.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Specifies the top of a chart legend.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Specifies if the chart legend is visible.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the chart legend is visible.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Specifies the width, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Specifies the width, in points, of the legend on the chart. Value is `null` if the legend is not visible.\\n         */\\n        setWidth(width: number): void;\\n\\n        /**\\n         * Represents a collection of legendEntries in the legend.\\n         */\\n        getLegendEntries(): ChartLegendEntry[];\\n    }\\n\\n    /**\\n     * Represents the legend entry in `legendEntryCollection`.\\n     */\\n    interface ChartLegendEntry {\\n        /**\\n         * Specifies the height of the legend entry on the chart legend.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies the index of the legend entry in the chart legend.\\n         */\\n        getIndex(): number;\\n\\n        /**\\n         * Specifies the left value of a chart legend entry.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Specifies the top of a chart legend entry.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Represents the visibility of a chart legend entry.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Represents the visibility of a chart legend entry.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Represents the width of the legend entry on the chart Legend.\\n         */\\n        getWidth(): number;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties of a chart legend.\\n     */\\n    interface ChartLegendFormat {\\n        /**\\n         * Represents the border format, which includes color, linestyle, and weight.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Represents the fill format of an object, which includes background formatting information.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Represents the font attributes such as font name, font size, and color of a chart legend.\\n         */\\n        getFont(): ChartFont;\\n    }\\n\\n    /**\\n     * Encapsulates the properties for a region map chart.\\n     */\\n    interface ChartMapOptions {\\n        /**\\n         * Specifies the series map labels strategy of a region map chart.\\n         */\\n        getLabelStrategy(): ChartMapLabelStrategy;\\n\\n        /**\\n         * Specifies the series map labels strategy of a region map chart.\\n         */\\n        setLabelStrategy(labelStrategy: ChartMapLabelStrategy): void;\\n\\n        /**\\n         * Specifies the series mapping level of a region map chart.\\n         */\\n        getLevel(): ChartMapAreaLevel;\\n\\n        /**\\n         * Specifies the series mapping level of a region map chart.\\n         */\\n        setLevel(level: ChartMapAreaLevel): void;\\n\\n        /**\\n         * Specifies the series projection type of a region map chart.\\n         */\\n        getProjectionType(): ChartMapProjectionType;\\n\\n        /**\\n         * Specifies the series projection type of a region map chart.\\n         */\\n        setProjectionType(projectionType: ChartMapProjectionType): void;\\n    }\\n\\n    /**\\n     * Represents a chart title object of a chart.\\n     */\\n    interface ChartTitle {\\n        /**\\n         * Represents the formatting of a chart title, which includes fill and font formatting.\\n         */\\n        getFormat(): ChartTitleFormat;\\n\\n        /**\\n         * Returns the height, in points, of the chart title. Value is `null` if the chart title is not visible.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies the horizontal alignment for chart title.\\n         */\\n        getHorizontalAlignment(): ChartTextHorizontalAlignment;\\n\\n        /**\\n         * Specifies the horizontal alignment for chart title.\\n         */\\n        setHorizontalAlignment(\\n            horizontalAlignment: ChartTextHorizontalAlignment\\n        ): void;\\n\\n        /**\\n         * Specifies the distance, in points, from the left edge of chart title to the left edge of chart area. Value is `null` if the chart title is not visible.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Specifies the distance, in points, from the left edge of chart title to the left edge of chart area. Value is `null` if the chart title is not visible.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Specifies if the chart title will overlay the chart.\\n         */\\n        getOverlay(): boolean;\\n\\n        /**\\n         * Specifies if the chart title will overlay the chart.\\n         */\\n        setOverlay(overlay: boolean): void;\\n\\n        /**\\n         * Represents the position of chart title. See `ExcelScript.ChartTitlePosition` for details.\\n         */\\n        getPosition(): ChartTitlePosition;\\n\\n        /**\\n         * Represents the position of chart title. See `ExcelScript.ChartTitlePosition` for details.\\n         */\\n        setPosition(position: ChartTitlePosition): void;\\n\\n        /**\\n         * Represents a boolean value that determines if the chart title has a shadow.\\n         */\\n        getShowShadow(): boolean;\\n\\n        /**\\n         * Represents a boolean value that determines if the chart title has a shadow.\\n         */\\n        setShowShadow(showShadow: boolean): void;\\n\\n        /**\\n         * Specifies the chart\'s title text.\\n         */\\n        getText(): string;\\n\\n        /**\\n         * Specifies the chart\'s title text.\\n         */\\n        setText(text: string): void;\\n\\n        /**\\n         * Specifies the angle to which the text is oriented for the chart title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * Specifies the angle to which the text is oriented for the chart title. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Specifies the distance, in points, from the top edge of chart title to the top of chart area. Value is `null` if the chart title is not visible.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Specifies the distance, in points, from the top edge of chart title to the top of chart area. Value is `null` if the chart title is not visible.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Specifies the vertical alignment of chart title. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         */\\n        getVerticalAlignment(): ChartTextVerticalAlignment;\\n\\n        /**\\n         * Specifies the vertical alignment of chart title. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         */\\n        setVerticalAlignment(\\n            verticalAlignment: ChartTextVerticalAlignment\\n        ): void;\\n\\n        /**\\n         * Specifies if the chart title is visibile.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the chart title is visibile.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Specifies the width, in points, of the chart title. Value is `null` if the chart title is not visible.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Get the substring of a chart title. Line break \'\\\\n\' counts one character.\\n         * @param start Start position of substring to be retrieved. Zero-indexed.\\n         * @param length Length of the substring to be retrieved.\\n         */\\n        getSubstring(start: number, length: number): ChartFormatString;\\n\\n        /**\\n         * Sets a string value that represents the formula of chart title using A1-style notation.\\n         * @param formula A string that represents the formula to set.\\n         */\\n        setFormula(formula: string): void;\\n    }\\n\\n    /**\\n     * Represents the substring in chart related objects that contain text, like a `ChartTitle` object or `ChartAxisTitle` object.\\n     */\\n    interface ChartFormatString {\\n        /**\\n         * Represents the font attributes, such as font name, font size, and color of a chart characters object.\\n         */\\n        getFont(): ChartFont;\\n    }\\n\\n    /**\\n     * Provides access to the formatting options for a chart title.\\n     */\\n    interface ChartTitleFormat {\\n        /**\\n         * Represents the border format of chart title, which includes color, linestyle, and weight.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Represents the fill format of an object, which includes background formatting information.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Represents the font attributes (such as font name, font size, and color) for an object.\\n         */\\n        getFont(): ChartFont;\\n    }\\n\\n    /**\\n     * Represents the fill formatting for a chart element.\\n     */\\n    interface ChartFill {\\n        /**\\n         * Clears the fill color of a chart element.\\n         */\\n        clear(): void;\\n\\n        /**\\n         * Sets the fill formatting of a chart element to a uniform color.\\n         * @param color HTML color code representing the color of the background, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setSolidColor(color: string): void;\\n    }\\n\\n    /**\\n     * Represents the border formatting of a chart element.\\n     */\\n    interface ChartBorder {\\n        /**\\n         * HTML color code representing the color of borders in the chart.\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of borders in the chart.\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Represents the line style of the border. See `ExcelScript.ChartLineStyle` for details.\\n         */\\n        getLineStyle(): ChartLineStyle;\\n\\n        /**\\n         * Represents the line style of the border. See `ExcelScript.ChartLineStyle` for details.\\n         */\\n        setLineStyle(lineStyle: ChartLineStyle): void;\\n\\n        /**\\n         * Represents weight of the border, in points.\\n         */\\n        getWeight(): number;\\n\\n        /**\\n         * Represents weight of the border, in points.\\n         */\\n        setWeight(weight: number): void;\\n\\n        /**\\n         * Clear the border format of a chart element.\\n         */\\n        clear(): void;\\n    }\\n\\n    /**\\n     * Encapsulates the bin options for histogram charts and pareto charts.\\n     */\\n    interface ChartBinOptions {\\n        /**\\n         * Specifies if bin overflow is enabled in a histogram chart or pareto chart.\\n         */\\n        getAllowOverflow(): boolean;\\n\\n        /**\\n         * Specifies if bin overflow is enabled in a histogram chart or pareto chart.\\n         */\\n        setAllowOverflow(allowOverflow: boolean): void;\\n\\n        /**\\n         * Specifies if bin underflow is enabled in a histogram chart or pareto chart.\\n         */\\n        getAllowUnderflow(): boolean;\\n\\n        /**\\n         * Specifies if bin underflow is enabled in a histogram chart or pareto chart.\\n         */\\n        setAllowUnderflow(allowUnderflow: boolean): void;\\n\\n        /**\\n         * Specifies the bin count of a histogram chart or pareto chart.\\n         */\\n        getCount(): number;\\n\\n        /**\\n         * Specifies the bin count of a histogram chart or pareto chart.\\n         */\\n        setCount(count: number): void;\\n\\n        /**\\n         * Specifies the bin overflow value of a histogram chart or pareto chart.\\n         */\\n        getOverflowValue(): number;\\n\\n        /**\\n         * Specifies the bin overflow value of a histogram chart or pareto chart.\\n         */\\n        setOverflowValue(overflowValue: number): void;\\n\\n        /**\\n         * Specifies the bin\'s type for a histogram chart or pareto chart.\\n         */\\n        getType(): ChartBinType;\\n\\n        /**\\n         * Specifies the bin\'s type for a histogram chart or pareto chart.\\n         */\\n        setType(type: ChartBinType): void;\\n\\n        /**\\n         * Specifies the bin underflow value of a histogram chart or pareto chart.\\n         */\\n        getUnderflowValue(): number;\\n\\n        /**\\n         * Specifies the bin underflow value of a histogram chart or pareto chart.\\n         */\\n        setUnderflowValue(underflowValue: number): void;\\n\\n        /**\\n         * Specifies the bin width value of a histogram chart or pareto chart.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Specifies the bin width value of a histogram chart or pareto chart.\\n         */\\n        setWidth(width: number): void;\\n    }\\n\\n    /**\\n     * Represents the properties of a box and whisker chart.\\n     */\\n    interface ChartBoxwhiskerOptions {\\n        /**\\n         * Specifies if the quartile calculation type of a box and whisker chart.\\n         */\\n        getQuartileCalculation(): ChartBoxQuartileCalculation;\\n\\n        /**\\n         * Specifies if the quartile calculation type of a box and whisker chart.\\n         */\\n        setQuartileCalculation(\\n            quartileCalculation: ChartBoxQuartileCalculation\\n        ): void;\\n\\n        /**\\n         * Specifies if inner points are shown in a box and whisker chart.\\n         */\\n        getShowInnerPoints(): boolean;\\n\\n        /**\\n         * Specifies if inner points are shown in a box and whisker chart.\\n         */\\n        setShowInnerPoints(showInnerPoints: boolean): void;\\n\\n        /**\\n         * Specifies if the mean line is shown in a box and whisker chart.\\n         */\\n        getShowMeanLine(): boolean;\\n\\n        /**\\n         * Specifies if the mean line is shown in a box and whisker chart.\\n         */\\n        setShowMeanLine(showMeanLine: boolean): void;\\n\\n        /**\\n         * Specifies if the mean marker is shown in a box and whisker chart.\\n         */\\n        getShowMeanMarker(): boolean;\\n\\n        /**\\n         * Specifies if the mean marker is shown in a box and whisker chart.\\n         */\\n        setShowMeanMarker(showMeanMarker: boolean): void;\\n\\n        /**\\n         * Specifies if outlier points are shown in a box and whisker chart.\\n         */\\n        getShowOutlierPoints(): boolean;\\n\\n        /**\\n         * Specifies if outlier points are shown in a box and whisker chart.\\n         */\\n        setShowOutlierPoints(showOutlierPoints: boolean): void;\\n    }\\n\\n    /**\\n     * Encapsulates the formatting options for line elements.\\n     */\\n    interface ChartLineFormat {\\n        /**\\n         * HTML color code representing the color of lines in the chart.\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of lines in the chart.\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Represents the line style. See `ExcelScript.ChartLineStyle` for details.\\n         */\\n        getLineStyle(): ChartLineStyle;\\n\\n        /**\\n         * Represents the line style. See `ExcelScript.ChartLineStyle` for details.\\n         */\\n        setLineStyle(lineStyle: ChartLineStyle): void;\\n\\n        /**\\n         * Represents weight of the line, in points.\\n         */\\n        getWeight(): number;\\n\\n        /**\\n         * Represents weight of the line, in points.\\n         */\\n        setWeight(weight: number): void;\\n\\n        /**\\n         * Clears the line format of a chart element.\\n         */\\n        clear(): void;\\n    }\\n\\n    /**\\n     * This object represents the font attributes (such as font name, font size, and color) for a chart object.\\n     */\\n    interface ChartFont {\\n        /**\\n         * Represents the bold status of font.\\n         */\\n        getBold(): boolean;\\n\\n        /**\\n         * Represents the bold status of font.\\n         */\\n        setBold(bold: boolean): void;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Represents the italic status of the font.\\n         */\\n        getItalic(): boolean;\\n\\n        /**\\n         * Represents the italic status of the font.\\n         */\\n        setItalic(italic: boolean): void;\\n\\n        /**\\n         * Font name (e.g., \\"Calibri\\")\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Font name (e.g., \\"Calibri\\")\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Size of the font (e.g., 11)\\n         */\\n        getSize(): number;\\n\\n        /**\\n         * Size of the font (e.g., 11)\\n         */\\n        setSize(size: number): void;\\n\\n        /**\\n         * Type of underline applied to the font. See `ExcelScript.ChartUnderlineStyle` for details.\\n         */\\n        getUnderline(): ChartUnderlineStyle;\\n\\n        /**\\n         * Type of underline applied to the font. See `ExcelScript.ChartUnderlineStyle` for details.\\n         */\\n        setUnderline(underline: ChartUnderlineStyle): void;\\n    }\\n\\n    /**\\n     * This object represents the attributes for a chart trendline object.\\n     */\\n    interface ChartTrendline {\\n        /**\\n         * Represents the number of periods that the trendline extends backward.\\n         */\\n        getBackwardPeriod(): number;\\n\\n        /**\\n         * Represents the number of periods that the trendline extends backward.\\n         */\\n        setBackwardPeriod(backwardPeriod: number): void;\\n\\n        /**\\n         * Represents the formatting of a chart trendline.\\n         */\\n        getFormat(): ChartTrendlineFormat;\\n\\n        /**\\n         * Represents the number of periods that the trendline extends forward.\\n         */\\n        getForwardPeriod(): number;\\n\\n        /**\\n         * Represents the number of periods that the trendline extends forward.\\n         */\\n        setForwardPeriod(forwardPeriod: number): void;\\n\\n        /**\\n         * Specifies the intercept value of the trendline.\\n         */\\n        getIntercept(): number;\\n\\n        /**\\n         * Specifies the intercept value of the trendline.\\n         */\\n        setIntercept(intercept: number): void;\\n\\n        /**\\n         * Represents the label of a chart trendline.\\n         */\\n        getLabel(): ChartTrendlineLabel;\\n\\n        /**\\n         * Represents the period of a chart trendline. Only applicable to trendlines with the type `MovingAverage`.\\n         */\\n        getMovingAveragePeriod(): number;\\n\\n        /**\\n         * Represents the period of a chart trendline. Only applicable to trendlines with the type `MovingAverage`.\\n         */\\n        setMovingAveragePeriod(movingAveragePeriod: number): void;\\n\\n        /**\\n         * Represents the name of the trendline. Can be set to a string value, a `null` value represents automatic values. The returned value is always a string\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Represents the name of the trendline. Can be set to a string value, a `null` value represents automatic values. The returned value is always a string\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Represents the order of a chart trendline. Only applicable to trendlines with the type `Polynomial`.\\n         */\\n        getPolynomialOrder(): number;\\n\\n        /**\\n         * Represents the order of a chart trendline. Only applicable to trendlines with the type `Polynomial`.\\n         */\\n        setPolynomialOrder(polynomialOrder: number): void;\\n\\n        /**\\n         * True if the equation for the trendline is displayed on the chart.\\n         */\\n        getShowEquation(): boolean;\\n\\n        /**\\n         * True if the equation for the trendline is displayed on the chart.\\n         */\\n        setShowEquation(showEquation: boolean): void;\\n\\n        /**\\n         * True if the r-squared value for the trendline is displayed on the chart.\\n         */\\n        getShowRSquared(): boolean;\\n\\n        /**\\n         * True if the r-squared value for the trendline is displayed on the chart.\\n         */\\n        setShowRSquared(showRSquared: boolean): void;\\n\\n        /**\\n         * Represents the type of a chart trendline.\\n         */\\n        getType(): ChartTrendlineType;\\n\\n        /**\\n         * Represents the type of a chart trendline.\\n         */\\n        setType(type: ChartTrendlineType): void;\\n\\n        /**\\n         * Delete the trendline object.\\n         */\\n        delete(): void;\\n    }\\n\\n    /**\\n     * Represents the format properties for the chart trendline.\\n     */\\n    interface ChartTrendlineFormat {\\n        /**\\n         * Represents chart line formatting.\\n         */\\n        getLine(): ChartLineFormat;\\n    }\\n\\n    /**\\n     * This object represents the attributes for a chart trendline label object.\\n     */\\n    interface ChartTrendlineLabel {\\n        /**\\n         * Specifies if the trendline label automatically generates appropriate text based on context.\\n         */\\n        getAutoText(): boolean;\\n\\n        /**\\n         * Specifies if the trendline label automatically generates appropriate text based on context.\\n         */\\n        setAutoText(autoText: boolean): void;\\n\\n        /**\\n         * The format of the chart trendline label.\\n         */\\n        getFormat(): ChartTrendlineLabelFormat;\\n\\n        /**\\n         * String value that represents the formula of the chart trendline label using A1-style notation.\\n         */\\n        getFormula(): string;\\n\\n        /**\\n         * String value that represents the formula of the chart trendline label using A1-style notation.\\n         */\\n        setFormula(formula: string): void;\\n\\n        /**\\n         * Returns the height, in points, of the chart trendline label. Value is `null` if the chart trendline label is not visible.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Represents the horizontal alignment of the chart trendline label. See `ExcelScript.ChartTextHorizontalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of a trendline label is -90, 90, or 180.\\n         */\\n        getHorizontalAlignment(): ChartTextHorizontalAlignment;\\n\\n        /**\\n         * Represents the horizontal alignment of the chart trendline label. See `ExcelScript.ChartTextHorizontalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of a trendline label is -90, 90, or 180.\\n         */\\n        setHorizontalAlignment(\\n            horizontalAlignment: ChartTextHorizontalAlignment\\n        ): void;\\n\\n        /**\\n         * Represents the distance, in points, from the left edge of the chart trendline label to the left edge of the chart area. Value is `null` if the chart trendline label is not visible.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Represents the distance, in points, from the left edge of the chart trendline label to the left edge of the chart area. Value is `null` if the chart trendline label is not visible.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\\n         */\\n        getLinkNumberFormat(): boolean;\\n\\n        /**\\n         * Specifies if the number format is linked to the cells (so that the number format changes in the labels when it changes in the cells).\\n         */\\n        setLinkNumberFormat(linkNumberFormat: boolean): void;\\n\\n        /**\\n         * String value that represents the format code for the trendline label.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * String value that represents the format code for the trendline label.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * String representing the text of the trendline label on a chart.\\n         */\\n        getText(): string;\\n\\n        /**\\n         * String representing the text of the trendline label on a chart.\\n         */\\n        setText(text: string): void;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for the chart trendline label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for the chart trendline label. The value should either be an integer from -90 to 90 or the integer 180 for vertically-oriented text.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Represents the distance, in points, from the top edge of the chart trendline label to the top of the chart area. Value is `null` if the chart trendline label is not visible.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Represents the distance, in points, from the top edge of the chart trendline label to the top of the chart area. Value is `null` if the chart trendline label is not visible.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Represents the vertical alignment of the chart trendline label. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of a trendline label is 0.\\n         */\\n        getVerticalAlignment(): ChartTextVerticalAlignment;\\n\\n        /**\\n         * Represents the vertical alignment of the chart trendline label. See `ExcelScript.ChartTextVerticalAlignment` for details.\\n         * This property is valid only when `TextOrientation` of a trendline label is 0.\\n         */\\n        setVerticalAlignment(\\n            verticalAlignment: ChartTextVerticalAlignment\\n        ): void;\\n\\n        /**\\n         * Returns the width, in points, of the chart trendline label. Value is `null` if the chart trendline label is not visible.\\n         */\\n        getWidth(): number;\\n    }\\n\\n    /**\\n     * Encapsulates the format properties for the chart trendline label.\\n     */\\n    interface ChartTrendlineLabelFormat {\\n        /**\\n         * Specifies the border format, which includes color, linestyle, and weight.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Specifies the fill format of the current chart trendline label.\\n         */\\n        getFill(): ChartFill;\\n\\n        /**\\n         * Specifies the font attributes (such as font name, font size, and color) for a chart trendline label.\\n         */\\n        getFont(): ChartFont;\\n    }\\n\\n    /**\\n     * This object represents the attributes for a chart plot area.\\n     */\\n    interface ChartPlotArea {\\n        /**\\n         * Specifies the formatting of a chart plot area.\\n         */\\n        getFormat(): ChartPlotAreaFormat;\\n\\n        /**\\n         * Specifies the height value of a plot area.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies the height value of a plot area.\\n         */\\n        setHeight(height: number): void;\\n\\n        /**\\n         * Specifies the inside height value of a plot area.\\n         */\\n        getInsideHeight(): number;\\n\\n        /**\\n         * Specifies the inside height value of a plot area.\\n         */\\n        setInsideHeight(insideHeight: number): void;\\n\\n        /**\\n         * Specifies the inside left value of a plot area.\\n         */\\n        getInsideLeft(): number;\\n\\n        /**\\n         * Specifies the inside left value of a plot area.\\n         */\\n        setInsideLeft(insideLeft: number): void;\\n\\n        /**\\n         * Specifies the inside top value of a plot area.\\n         */\\n        getInsideTop(): number;\\n\\n        /**\\n         * Specifies the inside top value of a plot area.\\n         */\\n        setInsideTop(insideTop: number): void;\\n\\n        /**\\n         * Specifies the inside width value of a plot area.\\n         */\\n        getInsideWidth(): number;\\n\\n        /**\\n         * Specifies the inside width value of a plot area.\\n         */\\n        setInsideWidth(insideWidth: number): void;\\n\\n        /**\\n         * Specifies the left value of a plot area.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Specifies the left value of a plot area.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Specifies the position of a plot area.\\n         */\\n        getPosition(): ChartPlotAreaPosition;\\n\\n        /**\\n         * Specifies the position of a plot area.\\n         */\\n        setPosition(position: ChartPlotAreaPosition): void;\\n\\n        /**\\n         * Specifies the top value of a plot area.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Specifies the top value of a plot area.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Specifies the width value of a plot area.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Specifies the width value of a plot area.\\n         */\\n        setWidth(width: number): void;\\n    }\\n\\n    /**\\n     * Represents the format properties for a chart plot area.\\n     */\\n    interface ChartPlotAreaFormat {\\n        /**\\n         * Specifies the border attributes of a chart plot area.\\n         */\\n        getBorder(): ChartBorder;\\n\\n        /**\\n         * Specifies the fill format of an object, which includes background formatting information.\\n         */\\n        getFill(): ChartFill;\\n    }\\n\\n    /**\\n     * Manages sorting operations on `Range` objects.\\n     */\\n    interface RangeSort {\\n        /**\\n         * Perform a sort operation.\\n         * @param fields The list of conditions to sort on.\\n         * @param matchCase Optional. Whether to have the casing impact string ordering.\\n         * @param hasHeaders Optional. Whether the range has a header.\\n         * @param orientation Optional. Whether the operation is sorting rows or columns.\\n         * @param method Optional. The ordering method used for Chinese characters.\\n         */\\n        apply(\\n            fields: SortField[],\\n            matchCase?: boolean,\\n            hasHeaders?: boolean,\\n            orientation?: SortOrientation,\\n            method?: SortMethod\\n        ): void;\\n    }\\n\\n    /**\\n     * Manages sorting operations on `Table` objects.\\n     */\\n    interface TableSort {\\n        /**\\n         * Specifies the current conditions used to last sort the table.\\n         */\\n        getFields(): SortField[];\\n\\n        /**\\n         * Specifies if the casing impacts the last sort of the table.\\n         */\\n        getMatchCase(): boolean;\\n\\n        /**\\n         * Represents the Chinese character ordering method last used to sort the table.\\n         */\\n        getMethod(): SortMethod;\\n\\n        /**\\n         * Perform a sort operation.\\n         * @param fields The list of conditions to sort on.\\n         * @param matchCase Optional. Whether to have the casing impact string ordering.\\n         * @param method Optional. The ordering method used for Chinese characters.\\n         */\\n        apply(\\n            fields: SortField[],\\n            matchCase?: boolean,\\n            method?: SortMethod\\n        ): void;\\n\\n        /**\\n         * Clears the sorting that is currently on the table. While this doesn\'t modify the table\'s ordering, it clears the state of the header buttons.\\n         */\\n        clear(): void;\\n\\n        /**\\n         * Reapplies the current sorting parameters to the table.\\n         */\\n        reapply(): void;\\n    }\\n\\n    /**\\n     * Manages the filtering of a table\'s column.\\n     */\\n    interface Filter {\\n        /**\\n         * The currently applied filter on the given column.\\n         */\\n        getCriteria(): FilterCriteria;\\n\\n        /**\\n         * Apply the given filter criteria on the given column.\\n         * @param criteria The criteria to apply.\\n         */\\n        apply(criteria: FilterCriteria): void;\\n\\n        /**\\n         * Apply a \\"Bottom Item\\" filter to the column for the given number of elements.\\n         * @param count The number of elements from the bottom to show.\\n         */\\n        applyBottomItemsFilter(count: number): void;\\n\\n        /**\\n         * Apply a \\"Bottom Percent\\" filter to the column for the given percentage of elements.\\n         * @param percent The percentage of elements from the bottom to show.\\n         */\\n        applyBottomPercentFilter(percent: number): void;\\n\\n        /**\\n         * Apply a \\"Cell Color\\" filter to the column for the given color.\\n         * @param color The background color of the cells to show.\\n         */\\n        applyCellColorFilter(color: string): void;\\n\\n        /**\\n         * Apply an \\"Icon\\" filter to the column for the given criteria strings.\\n         * @param criteria1 The first criteria string.\\n         * @param criteria2 Optional. The second criteria string.\\n         * @param oper Optional. The operator that describes how the two criteria are joined.\\n         */\\n        applyCustomFilter(\\n            criteria1: string,\\n            criteria2?: string,\\n            oper?: FilterOperator\\n        ): void;\\n\\n        /**\\n         * Apply a \\"Dynamic\\" filter to the column.\\n         * @param criteria The dynamic criteria to apply.\\n         */\\n        applyDynamicFilter(criteria: DynamicFilterCriteria): void;\\n\\n        /**\\n         * Apply a \\"Font Color\\" filter to the column for the given color.\\n         * @param color The font color of the cells to show.\\n         */\\n        applyFontColorFilter(color: string): void;\\n\\n        /**\\n         * Apply an \\"Icon\\" filter to the column for the given icon.\\n         * @param icon The icons of the cells to show.\\n         */\\n        applyIconFilter(icon: Icon): void;\\n\\n        /**\\n         * Apply a \\"Top Item\\" filter to the column for the given number of elements.\\n         * @param count The number of elements from the top to show.\\n         */\\n        applyTopItemsFilter(count: number): void;\\n\\n        /**\\n         * Apply a \\"Top Percent\\" filter to the column for the given percentage of elements.\\n         * @param percent The percentage of elements from the top to show.\\n         */\\n        applyTopPercentFilter(percent: number): void;\\n\\n        /**\\n         * Apply a \\"Values\\" filter to the column for the given values.\\n         * @param values The list of values to show. This must be an array of strings or an array of `ExcelScript.FilterDateTime` objects.\\n         */\\n        applyValuesFilter(values: Array<string | FilterDatetime>): void;\\n\\n        /**\\n         * Clear the filter on the given column.\\n         */\\n        clear(): void;\\n    }\\n\\n    /**\\n     * Represents the `AutoFilter` object.\\n     * AutoFilter turns the values in Excel column into specific filters based on the cell contents.\\n     */\\n    interface AutoFilter {\\n        /**\\n         * An array that holds all the filter criteria in the autofiltered range.\\n         */\\n        getCriteria(): FilterCriteria[];\\n\\n        /**\\n         * Specifies if the AutoFilter is enabled.\\n         */\\n        getEnabled(): boolean;\\n\\n        /**\\n         * Specifies if the AutoFilter has filter criteria.\\n         */\\n        getIsDataFiltered(): boolean;\\n\\n        /**\\n         * Applies the AutoFilter to a range. This filters the column if column index and filter criteria are specified.\\n         * @param range The range on which the AutoFilter will apply.\\n         * @param columnIndex The zero-based column index to which the AutoFilter is applied.\\n         * @param criteria The filter criteria.\\n         */\\n        apply(\\n            range: Range | string,\\n            columnIndex?: number,\\n            criteria?: FilterCriteria\\n        ): void;\\n\\n        /**\\n         * Clears the filter criteria and sort state of the AutoFilter.\\n         */\\n        clearCriteria(): void;\\n\\n        /**\\n         * Returns the `Range` object that represents the range to which the AutoFilter applies.\\n         * If there is no `Range` object associated with the AutoFilter, then this method returns `undefined`.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Applies the specified AutoFilter object currently on the range.\\n         */\\n        reapply(): void;\\n\\n        /**\\n         * Removes the AutoFilter for the range.\\n         */\\n        remove(): void;\\n    }\\n\\n    /**\\n     * Provides information based on current system culture settings. This includes the culture names, number formatting, and other culturally dependent settings.\\n     */\\n    interface CultureInfo {\\n        /**\\n         * Defines the culturally appropriate format of displaying date and time. This is based on current system culture settings.\\n         */\\n        getDatetimeFormat(): DatetimeFormatInfo;\\n\\n        /**\\n         * Gets the culture name in the format languagecode2-country/regioncode2 (e.g., \\"zh-cn\\" or \\"en-us\\"). This is based on current system settings.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\\n         */\\n        getNumberFormat(): NumberFormatInfo;\\n    }\\n\\n    /**\\n     * Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\\n     */\\n    interface NumberFormatInfo {\\n        /**\\n         * Gets the string used as the decimal separator for numeric values. This is based on current system settings.\\n         */\\n        getNumberDecimalSeparator(): string;\\n\\n        /**\\n         * Gets the string used to separate groups of digits to the left of the decimal for numeric values. This is based on current system settings.\\n         */\\n        getNumberGroupSeparator(): string;\\n    }\\n\\n    /**\\n     * Defines the culturally appropriate format of displaying numbers. This is based on current system culture settings.\\n     */\\n    interface DatetimeFormatInfo {\\n        /**\\n         * Gets the string used as the date separator. This is based on current system settings.\\n         */\\n        getDateSeparator(): string;\\n\\n        /**\\n         * Gets the format string for a long date value. This is based on current system settings.\\n         */\\n        getLongDatePattern(): string;\\n\\n        /**\\n         * Gets the format string for a long time value. This is based on current system settings.\\n         */\\n        getLongTimePattern(): string;\\n\\n        /**\\n         * Gets the format string for a short date value. This is based on current system settings.\\n         */\\n        getShortDatePattern(): string;\\n\\n        /**\\n         * Gets the string used as the time separator. This is based on current system settings.\\n         */\\n        getTimeSeparator(): string;\\n    }\\n\\n    /**\\n     * Represents a custom XML part object in a workbook.\\n     */\\n    interface CustomXmlPart {\\n        /**\\n         * The custom XML part\'s ID.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * The custom XML part\'s namespace URI.\\n         */\\n        getNamespaceUri(): string;\\n\\n        /**\\n         * Deletes the custom XML part.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the custom XML part\'s full XML content.\\n         */\\n        getXml(): string;\\n\\n        /**\\n         * Sets the custom XML part\'s full XML content.\\n         * @param xml XML content for the part.\\n         */\\n        setXml(xml: string): void;\\n    }\\n\\n    /**\\n     * Represents an Excel PivotTable.\\n     */\\n    interface PivotTable {\\n        /**\\n         * Specifies if the PivotTable allows the application of multiple PivotFilters on a given PivotField in the table.\\n         */\\n        getAllowMultipleFiltersPerField(): boolean;\\n\\n        /**\\n         * Specifies if the PivotTable allows the application of multiple PivotFilters on a given PivotField in the table.\\n         */\\n        setAllowMultipleFiltersPerField(\\n            allowMultipleFiltersPerField: boolean\\n        ): void;\\n\\n        /**\\n         * Specifies if the PivotTable allows values in the data body to be edited by the user.\\n         */\\n        getEnableDataValueEditing(): boolean;\\n\\n        /**\\n         * Specifies if the PivotTable allows values in the data body to be edited by the user.\\n         */\\n        setEnableDataValueEditing(enableDataValueEditing: boolean): void;\\n\\n        /**\\n         * ID of the PivotTable.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * The PivotLayout describing the layout and visual structure of the PivotTable.\\n         */\\n        getLayout(): PivotLayout;\\n\\n        /**\\n         * Name of the PivotTable.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the PivotTable.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if the PivotTable uses custom lists when sorting.\\n         */\\n        getUseCustomSortLists(): boolean;\\n\\n        /**\\n         * Specifies if the PivotTable uses custom lists when sorting.\\n         */\\n        setUseCustomSortLists(useCustomSortLists: boolean): void;\\n\\n        /**\\n         * The worksheet containing the current PivotTable.\\n         */\\n        getWorksheet(): Worksheet;\\n\\n        /**\\n         * Deletes the PivotTable.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Refreshes the PivotTable.\\n         */\\n        refresh(): void;\\n\\n        /**\\n         * The Column Pivot Hierarchies of the PivotTable.\\n         */\\n        getColumnHierarchies(): RowColumnPivotHierarchy[];\\n\\n        /**\\n         * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column,\\n         * or filter axis, it will be removed from that location.\\n         */\\n        addColumnHierarchy(\\n            pivotHierarchy: PivotHierarchy\\n        ): RowColumnPivotHierarchy;\\n\\n        /**\\n         * Gets a RowColumnPivotHierarchy by name. If the RowColumnPivotHierarchy does not exist, then this method returns `undefined`.\\n         * @param name Name of the RowColumnPivotHierarchy to be retrieved.\\n         */\\n        getColumnHierarchy(name: string): RowColumnPivotHierarchy | undefined;\\n\\n        /**\\n         * Removes the PivotHierarchy from the current axis.\\n         */\\n        removeColumnHierarchy(\\n            rowColumnPivotHierarchy: RowColumnPivotHierarchy\\n        ): void;\\n\\n        /**\\n         * The Data Pivot Hierarchies of the PivotTable.\\n         */\\n        getDataHierarchies(): DataPivotHierarchy[];\\n\\n        /**\\n         * Adds the PivotHierarchy to the current axis.\\n         */\\n        addDataHierarchy(pivotHierarchy: PivotHierarchy): DataPivotHierarchy;\\n\\n        /**\\n         * Gets a DataPivotHierarchy by name. If the DataPivotHierarchy does not exist, then this method returns `undefined`.\\n         * @param name Name of the DataPivotHierarchy to be retrieved.\\n         */\\n        getDataHierarchy(name: string): DataPivotHierarchy | undefined;\\n\\n        /**\\n         * Removes the PivotHierarchy from the current axis.\\n         */\\n        removeDataHierarchy(DataPivotHierarchy: DataPivotHierarchy): void;\\n\\n        /**\\n         * The Filter Pivot Hierarchies of the PivotTable.\\n         */\\n        getFilterHierarchies(): FilterPivotHierarchy[];\\n\\n        /**\\n         * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column,\\n         * or filter axis, it will be removed from that location.\\n         */\\n        addFilterHierarchy(\\n            pivotHierarchy: PivotHierarchy\\n        ): FilterPivotHierarchy;\\n\\n        /**\\n         * Gets a FilterPivotHierarchy by name. If the FilterPivotHierarchy does not exist, then this method returns `undefined`.\\n         * @param name Name of the FilterPivotHierarchy to be retrieved.\\n         */\\n        getFilterHierarchy(name: string): FilterPivotHierarchy | undefined;\\n\\n        /**\\n         * Removes the PivotHierarchy from the current axis.\\n         */\\n        removeFilterHierarchy(filterPivotHierarchy: FilterPivotHierarchy): void;\\n\\n        /**\\n         * The Pivot Hierarchies of the PivotTable.\\n         */\\n        getHierarchies(): PivotHierarchy[];\\n\\n        /**\\n         * Gets a PivotHierarchy by name. If the PivotHierarchy does not exist, then this method returns `undefined`.\\n         * @param name Name of the PivotHierarchy to be retrieved.\\n         */\\n        getHierarchy(name: string): PivotHierarchy | undefined;\\n\\n        /**\\n         * The Row Pivot Hierarchies of the PivotTable.\\n         */\\n        getRowHierarchies(): RowColumnPivotHierarchy[];\\n\\n        /**\\n         * Adds the PivotHierarchy to the current axis. If the hierarchy is present elsewhere on the row, column,\\n         * or filter axis, it will be removed from that location.\\n         */\\n        addRowHierarchy(\\n            pivotHierarchy: PivotHierarchy\\n        ): RowColumnPivotHierarchy;\\n\\n        /**\\n         * Gets a RowColumnPivotHierarchy by name. If the RowColumnPivotHierarchy does not exist, then this method returns `undefined`.\\n         * @param name Name of the RowColumnPivotHierarchy to be retrieved.\\n         */\\n        getRowHierarchy(name: string): RowColumnPivotHierarchy | undefined;\\n\\n        /**\\n         * Removes the PivotHierarchy from the current axis.\\n         */\\n        removeRowHierarchy(\\n            rowColumnPivotHierarchy: RowColumnPivotHierarchy\\n        ): void;\\n    }\\n\\n    /**\\n     * Represents the visual layout of the PivotTable.\\n     */\\n    interface PivotLayout {\\n        /**\\n         * Specifies if formatting will be automatically formatted when it\u2019s refreshed or when fields are moved.\\n         */\\n        getAutoFormat(): boolean;\\n\\n        /**\\n         * Specifies if formatting will be automatically formatted when it\u2019s refreshed or when fields are moved.\\n         */\\n        setAutoFormat(autoFormat: boolean): void;\\n\\n        /**\\n         * Specifies if the field list can be shown in the UI.\\n         */\\n        getEnableFieldList(): boolean;\\n\\n        /**\\n         * Specifies if the field list can be shown in the UI.\\n         */\\n        setEnableFieldList(enableFieldList: boolean): void;\\n\\n        /**\\n         * This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this will be null.\\n         */\\n        getLayoutType(): PivotLayoutType;\\n\\n        /**\\n         * This property indicates the PivotLayoutType of all fields on the PivotTable. If fields have different states, this will be null.\\n         */\\n        setLayoutType(layoutType: PivotLayoutType): void;\\n\\n        /**\\n         * Specifies if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.\\n         */\\n        getPreserveFormatting(): boolean;\\n\\n        /**\\n         * Specifies if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.\\n         */\\n        setPreserveFormatting(preserveFormatting: boolean): void;\\n\\n        /**\\n         * Specifies if the PivotTable report shows grand totals for columns.\\n         */\\n        getShowColumnGrandTotals(): boolean;\\n\\n        /**\\n         * Specifies if the PivotTable report shows grand totals for columns.\\n         */\\n        setShowColumnGrandTotals(showColumnGrandTotals: boolean): void;\\n\\n        /**\\n         * Specifies if the PivotTable report shows grand totals for rows.\\n         */\\n        getShowRowGrandTotals(): boolean;\\n\\n        /**\\n         * Specifies if the PivotTable report shows grand totals for rows.\\n         */\\n        setShowRowGrandTotals(showRowGrandTotals: boolean): void;\\n\\n        /**\\n         * This property indicates the `SubtotalLocationType` of all fields on the PivotTable. If fields have different states, this will be `null`.\\n         */\\n        getSubtotalLocation(): SubtotalLocationType;\\n\\n        /**\\n         * This property indicates the `SubtotalLocationType` of all fields on the PivotTable. If fields have different states, this will be `null`.\\n         */\\n        setSubtotalLocation(subtotalLocation: SubtotalLocationType): void;\\n\\n        /**\\n         * Returns the range where the PivotTable\'s column labels reside.\\n         */\\n        getColumnLabelRange(): Range;\\n\\n        /**\\n         * Returns the range where the PivotTable\'s data values reside.\\n         */\\n        getBodyAndTotalRange(): Range;\\n\\n        /**\\n         * Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.\\n         * @param cell A single cell within the PivotTable data body.\\n         */\\n        getDataHierarchy(cell: Range | string): DataPivotHierarchy;\\n\\n        /**\\n         * Returns the range of the PivotTable\'s filter area.\\n         */\\n        getFilterAxisRange(): Range;\\n\\n        /**\\n         * Returns the range the PivotTable exists on, excluding the filter area.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Returns the range where the PivotTable\'s row labels reside.\\n         */\\n        getRowLabelRange(): Range;\\n\\n        /**\\n         * Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context. This behaves identically to applying an autosort from the UI.\\n         * @param cell A single cell to use get the criteria from for applying the autosort.\\n         * @param sortBy The direction of the sort.\\n         */\\n        setAutoSortOnCell(cell: Range | string, sortBy: SortBy): void;\\n    }\\n\\n    /**\\n     * Represents the Excel PivotHierarchy.\\n     */\\n    interface PivotHierarchy {\\n        /**\\n         * ID of the PivotHierarchy.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Name of the PivotHierarchy.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the PivotHierarchy.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Returns the PivotFields associated with the PivotHierarchy.\\n         */\\n        getFields(): PivotField[];\\n\\n        /**\\n         * Gets a PivotField by name. If the PivotField does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n         * @param name Name of the PivotField to be retrieved.\\n         */\\n        getPivotField(name: string): PivotField | undefined;\\n    }\\n\\n    /**\\n     * Represents the Excel RowColumnPivotHierarchy.\\n     */\\n    interface RowColumnPivotHierarchy {\\n        /**\\n         * ID of the RowColumnPivotHierarchy.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Name of the RowColumnPivotHierarchy.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the RowColumnPivotHierarchy.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Position of the RowColumnPivotHierarchy.\\n         */\\n        getPosition(): number;\\n\\n        /**\\n         * Position of the RowColumnPivotHierarchy.\\n         */\\n        setPosition(position: number): void;\\n\\n        /**\\n         * Reset the RowColumnPivotHierarchy back to its default values.\\n         */\\n        setToDefault(): void;\\n\\n        /**\\n         * Returns the PivotFields associated with the RowColumnPivotHierarchy.\\n         */\\n        getFields(): PivotField[];\\n\\n        /**\\n         * Gets a PivotField by name. If the PivotField does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n         * @param name Name of the PivotField to be retrieved.\\n         */\\n        getPivotField(name: string): PivotField | undefined;\\n    }\\n\\n    /**\\n     * Represents the Excel FilterPivotHierarchy.\\n     */\\n    interface FilterPivotHierarchy {\\n        /**\\n         * Determines whether to allow multiple filter items.\\n         */\\n        getEnableMultipleFilterItems(): boolean;\\n\\n        /**\\n         * Determines whether to allow multiple filter items.\\n         */\\n        setEnableMultipleFilterItems(enableMultipleFilterItems: boolean): void;\\n\\n        /**\\n         * ID of the FilterPivotHierarchy.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Name of the FilterPivotHierarchy.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the FilterPivotHierarchy.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Position of the FilterPivotHierarchy.\\n         */\\n        getPosition(): number;\\n\\n        /**\\n         * Position of the FilterPivotHierarchy.\\n         */\\n        setPosition(position: number): void;\\n\\n        /**\\n         * Reset the FilterPivotHierarchy back to its default values.\\n         */\\n        setToDefault(): void;\\n\\n        /**\\n         * Returns the PivotFields associated with the FilterPivotHierarchy.\\n         */\\n        getFields(): PivotField[];\\n\\n        /**\\n         * Gets a PivotField by name. If the PivotField does not exist, then this method returns an object with its `isNullObject` property set to `true`.\\n         * @param name Name of the PivotField to be retrieved.\\n         */\\n        getPivotField(name: string): PivotField | undefined;\\n    }\\n\\n    /**\\n     * Represents the Excel DataPivotHierarchy.\\n     */\\n    interface DataPivotHierarchy {\\n        /**\\n         * Returns the PivotFields associated with the DataPivotHierarchy.\\n         */\\n        getField(): PivotField;\\n\\n        /**\\n         * ID of the DataPivotHierarchy.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Name of the DataPivotHierarchy.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the DataPivotHierarchy.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Number format of the DataPivotHierarchy.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * Number format of the DataPivotHierarchy.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * Position of the DataPivotHierarchy.\\n         */\\n        getPosition(): number;\\n\\n        /**\\n         * Position of the DataPivotHierarchy.\\n         */\\n        setPosition(position: number): void;\\n\\n        /**\\n         * Specifies if the data should be shown as a specific summary calculation.\\n         */\\n        getShowAs(): ShowAsRule;\\n\\n        /**\\n         * Specifies if the data should be shown as a specific summary calculation.\\n         */\\n        setShowAs(showAs: ShowAsRule): void;\\n\\n        /**\\n         * Specifies if all items of the DataPivotHierarchy are shown.\\n         */\\n        getSummarizeBy(): AggregationFunction;\\n\\n        /**\\n         * Specifies if all items of the DataPivotHierarchy are shown.\\n         */\\n        setSummarizeBy(summarizeBy: AggregationFunction): void;\\n\\n        /**\\n         * Reset the DataPivotHierarchy back to its default values.\\n         */\\n        setToDefault(): void;\\n    }\\n\\n    /**\\n     * Represents the Excel PivotField.\\n     */\\n    interface PivotField {\\n        /**\\n         * ID of the PivotField.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Name of the PivotField.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the PivotField.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Determines whether to show all items of the PivotField.\\n         */\\n        getShowAllItems(): boolean;\\n\\n        /**\\n         * Determines whether to show all items of the PivotField.\\n         */\\n        setShowAllItems(showAllItems: boolean): void;\\n\\n        /**\\n         * Subtotals of the PivotField.\\n         */\\n        getSubtotals(): Subtotals;\\n\\n        /**\\n         * Subtotals of the PivotField.\\n         */\\n        setSubtotals(subtotals: Subtotals): void;\\n\\n        /**\\n         * Sets one or more of the field\'s current PivotFilters and applies them to the field.\\n         * If the provided filters are invalid or cannot be applied, an exception is thrown.\\n         * @param filter A configured specific PivotFilter, or a PivotFilters interface containing multiple configured filters.\\n         */\\n        applyFilter(filter: PivotFilters): void;\\n\\n        /**\\n         * Clears all criteria from all of the field\'s filters. This removes any active filtering on the field.\\n         */\\n        clearAllFilters(): void;\\n\\n        /**\\n         * Clears all existing criteria from the field\'s filter of the given type (if one is currently applied).\\n         * @param filterType The type of filter on the field of which to clear all criteria.\\n         */\\n        clearFilter(filterType: PivotFilterType): void;\\n\\n        /**\\n         * Gets all filters currently applied on the field.\\n         */\\n        getFilters(): PivotFilters;\\n\\n        /**\\n         * Checks if there are any applied filters on the field.\\n         * @param filterType The filter type to check. If no type is provided, this method will check if any filter is applied.\\n         */\\n        isFiltered(filterType?: PivotFilterType): boolean;\\n\\n        /**\\n         * Sorts the PivotField. If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.\\n         * @param sortBy Specifies if the sorting is done in ascending or descending order.\\n         */\\n        sortByLabels(sortBy: SortBy): void;\\n\\n        /**\\n         * Sorts the PivotField by specified values in a given scope. The scope defines which specific values will be used to sort when\\n         * there are multiple values from the same DataPivotHierarchy.\\n         * @param sortBy Specifies if the sorting is done in ascending or descending order.\\n         * @param valuesHierarchy Specifies the values hierarchy on the data axis to be used for sorting.\\n         * @param pivotItemScope The items that should be used for the scope of the sorting. These will be the\\n         * items that make up the row or column that you want to sort on. If a string is used instead of a PivotItem,\\n         * the string represents the ID of the PivotItem. If there are no items other than data hierarchy on the axis\\n         * you want to sort on, this can be empty.\\n         */\\n        sortByValues(\\n            sortBy: SortBy,\\n            valuesHierarchy: DataPivotHierarchy,\\n            pivotItemScope?: Array<PivotItem | string>\\n        ): void;\\n\\n        /**\\n         * Returns the PivotItems associated with the PivotField.\\n         */\\n        getItems(): PivotItem[];\\n\\n        /**\\n         * Gets a PivotItem by name. If the PivotItem does not exist, then this method returns `undefined`.\\n         * @param name Name of the PivotItem to be retrieved.\\n         */\\n        getPivotItem(name: string): PivotItem | undefined;\\n    }\\n\\n    /**\\n     * Represents the Excel PivotItem.\\n     */\\n    interface PivotItem {\\n        /**\\n         * ID of the PivotItem.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Determines whether the item is expanded to show child items or if it\'s collapsed and child items are hidden.\\n         */\\n        getIsExpanded(): boolean;\\n\\n        /**\\n         * Determines whether the item is expanded to show child items or if it\'s collapsed and child items are hidden.\\n         */\\n        setIsExpanded(isExpanded: boolean): void;\\n\\n        /**\\n         * Name of the PivotItem.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Name of the PivotItem.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if the PivotItem is visible.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the PivotItem is visible.\\n         */\\n        setVisible(visible: boolean): void;\\n    }\\n\\n    /**\\n     * Represents a worksheet-level custom property.\\n     */\\n    interface WorksheetCustomProperty {\\n        /**\\n         * Gets the key of the custom property. Custom property keys are case-insensitive. The key is limited to 255 characters (larger values will cause an `InvalidArgument` error to be thrown.)\\n         */\\n        getKey(): string;\\n\\n        /**\\n         * Gets or sets the value of the custom property.\\n         */\\n        getValue(): string;\\n\\n        /**\\n         * Gets or sets the value of the custom property.\\n         */\\n        setValue(value: string): void;\\n\\n        /**\\n         * Deletes the custom property.\\n         */\\n        delete(): void;\\n    }\\n\\n    /**\\n     * Represents workbook properties.\\n     */\\n    interface DocumentProperties {\\n        /**\\n         * The author of the workbook.\\n         */\\n        getAuthor(): string;\\n\\n        /**\\n         * The author of the workbook.\\n         */\\n        setAuthor(author: string): void;\\n\\n        /**\\n         * The category of the workbook.\\n         */\\n        getCategory(): string;\\n\\n        /**\\n         * The category of the workbook.\\n         */\\n        setCategory(category: string): void;\\n\\n        /**\\n         * The comments of the workbook.\\n         */\\n        getComments(): string;\\n\\n        /**\\n         * The comments of the workbook.\\n         */\\n        setComments(comments: string): void;\\n\\n        /**\\n         * The company of the workbook.\\n         */\\n        getCompany(): string;\\n\\n        /**\\n         * The company of the workbook.\\n         */\\n        setCompany(company: string): void;\\n\\n        /**\\n         * Gets the creation date of the workbook.\\n         */\\n        getCreationDate(): Date;\\n\\n        /**\\n         * The keywords of the workbook.\\n         */\\n        getKeywords(): string;\\n\\n        /**\\n         * The keywords of the workbook.\\n         */\\n        setKeywords(keywords: string): void;\\n\\n        /**\\n         * Gets the last author of the workbook.\\n         */\\n        getLastAuthor(): string;\\n\\n        /**\\n         * The manager of the workbook.\\n         */\\n        getManager(): string;\\n\\n        /**\\n         * The manager of the workbook.\\n         */\\n        setManager(manager: string): void;\\n\\n        /**\\n         * Gets the revision number of the workbook.\\n         */\\n        getRevisionNumber(): number;\\n\\n        /**\\n         * Gets the revision number of the workbook.\\n         */\\n        setRevisionNumber(revisionNumber: number): void;\\n\\n        /**\\n         * The subject of the workbook.\\n         */\\n        getSubject(): string;\\n\\n        /**\\n         * The subject of the workbook.\\n         */\\n        setSubject(subject: string): void;\\n\\n        /**\\n         * The title of the workbook.\\n         */\\n        getTitle(): string;\\n\\n        /**\\n         * The title of the workbook.\\n         */\\n        setTitle(title: string): void;\\n\\n        /**\\n         * Gets the collection of custom properties of the workbook.\\n         */\\n        getCustom(): CustomProperty[];\\n\\n        /**\\n         * Creates a new or sets an existing custom property.\\n         * @param key Required. The custom property\'s key, which is case-insensitive. The key is limited to 255 characters outside of Excel on the web (larger keys are automatically trimmed to 255 characters on other platforms).\\n         * @param value Required. The custom property\'s value. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\\n         */\\n        addCustomProperty(key: string, value: any): CustomProperty;\\n\\n        /**\\n         * Deletes all custom properties in this collection.\\n         */\\n        deleteAllCustomProperties(): void;\\n\\n        /**\\n         * Gets a custom property object by its key, which is case-insensitive. If the custom property doesn\'t exist, then this method returns `undefined`.\\n         * @param key Required. The key that identifies the custom property object.\\n         */\\n        getCustomProperty(key: string): CustomProperty | undefined;\\n    }\\n\\n    /**\\n     * Represents a custom property.\\n     */\\n    interface CustomProperty {\\n        /**\\n         * The key of the custom property. The key is limited to 255 characters outside of Excel on the web (larger keys are automatically trimmed to 255 characters on other platforms).\\n         */\\n        getKey(): string;\\n\\n        /**\\n         * The type of the value used for the custom property.\\n         */\\n        getType(): DocumentPropertyType;\\n\\n        /**\\n         * The value of the custom property. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\\n         */\\n        getValue(): any;\\n\\n        /**\\n         * The value of the custom property. The value is limited to 255 characters outside of Excel on the web (larger values are automatically trimmed to 255 characters on other platforms).\\n         */\\n        setValue(value: any): void;\\n\\n        /**\\n         * Deletes the custom property.\\n         */\\n        delete(): void;\\n    }\\n\\n    /**\\n     * An object encapsulating a conditional format\'s range, format, rule, and other properties.\\n     */\\n    interface ConditionalFormat {\\n        /**\\n         * Returns the cell value conditional format properties if the current conditional format is a `CellValue` type.\\n         */\\n        getCellValue(): CellValueConditionalFormat | undefined;\\n\\n        /**\\n         * Returns the color scale conditional format properties if the current conditional format is a `ColorScale` type.\\n         */\\n        getColorScale(): ColorScaleConditionalFormat | undefined;\\n\\n        /**\\n         * Returns the custom conditional format properties if the current conditional format is a custom type.\\n         */\\n        getCustom(): CustomConditionalFormat | undefined;\\n\\n        /**\\n         * Returns the data bar properties if the current conditional format is a data bar.\\n         */\\n        getDataBar(): DataBarConditionalFormat | undefined;\\n\\n        /**\\n         * Returns the icon set conditional format properties if the current conditional format is an `IconSet` type.\\n         */\\n        getIconSet(): IconSetConditionalFormat | undefined;\\n\\n        /**\\n         * The priority of the conditional format in the current `ConditionalFormatCollection`.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Returns the preset criteria conditional format. See `ExcelScript.PresetCriteriaConditionalFormat` for more details.\\n         */\\n        getPreset(): PresetCriteriaConditionalFormat | undefined;\\n\\n        /**\\n         * The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also\\n         * changes other conditional formats\' priorities, to allow for a contiguous priority order.\\n         * Use a negative priority to begin from the back.\\n         * Priorities greater than the bounds will get and set to the maximum (or minimum if negative) priority.\\n         * Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.\\n         */\\n        getPriority(): number;\\n\\n        /**\\n         * The priority (or index) within the conditional format collection that this conditional format currently exists in. Changing this also\\n         * changes other conditional formats\' priorities, to allow for a contiguous priority order.\\n         * Use a negative priority to begin from the back.\\n         * Priorities greater than the bounds will get and set to the maximum (or minimum if negative) priority.\\n         * Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.\\n         */\\n        setPriority(priority: number): void;\\n\\n        /**\\n         * If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.\\n         * Value is `null` on data bars, icon sets, and color scales as there\'s no concept of `StopIfTrue` for these.\\n         */\\n        getStopIfTrue(): boolean;\\n\\n        /**\\n         * If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.\\n         * Value is `null` on data bars, icon sets, and color scales as there\'s no concept of `StopIfTrue` for these.\\n         */\\n        setStopIfTrue(stopIfTrue: boolean): void;\\n\\n        /**\\n         * Returns the specific text conditional format properties if the current conditional format is a text type.\\n         * For example, to format cells matching the word \\"Text\\".\\n         */\\n        getTextComparison(): TextConditionalFormat | undefined;\\n\\n        /**\\n         * Returns the top/bottom conditional format properties if the current conditional format is a `TopBottom` type.\\n         * For example, to format the top 10% or bottom 10 items.\\n         */\\n        getTopBottom(): TopBottomConditionalFormat | undefined;\\n\\n        /**\\n         * A type of conditional format. Only one can be set at a time.\\n         */\\n        getType(): ConditionalFormatType;\\n\\n        /**\\n         * Deletes this conditional format.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Returns the range to which the conditonal format is applied. If the conditional format is applied to multiple ranges, then this method returns `undefined`.\\n         */\\n        getRange(): Range;\\n\\n        /**\\n         * Returns the `RangeAreas`, comprising one or more rectangular ranges, to which the conditonal format is applied.\\n         */\\n        getRanges(): RangeAreas;\\n    }\\n\\n    /**\\n     * Represents an Excel conditional data bar type.\\n     */\\n    interface DataBarConditionalFormat {\\n        /**\\n         * HTML color code representing the color of the Axis line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         * Value is \\"\\" (an empty string) if no axis is present or set.\\n         */\\n        getAxisColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the Axis line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         * Value is \\"\\" (an empty string) if no axis is present or set.\\n         */\\n        setAxisColor(axisColor: string): void;\\n\\n        /**\\n         * Representation of how the axis is determined for an Excel data bar.\\n         */\\n        getAxisFormat(): ConditionalDataBarAxisFormat;\\n\\n        /**\\n         * Representation of how the axis is determined for an Excel data bar.\\n         */\\n        setAxisFormat(axisFormat: ConditionalDataBarAxisFormat): void;\\n\\n        /**\\n         * Specifies the direction that the data bar graphic should be based on.\\n         */\\n        getBarDirection(): ConditionalDataBarDirection;\\n\\n        /**\\n         * Specifies the direction that the data bar graphic should be based on.\\n         */\\n        setBarDirection(barDirection: ConditionalDataBarDirection): void;\\n\\n        /**\\n         * The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar.\\n         * The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`).\\n         */\\n        getLowerBoundRule(): ConditionalDataBarRule;\\n\\n        /**\\n         * The rule for what consistutes the lower bound (and how to calculate it, if applicable) for a data bar.\\n         * The `ConditionalDataBarRule` object must be set as a JSON object (use `x.lowerBoundRule = {...}` instead of `x.lowerBoundRule.formula = ...`).\\n         */\\n        setLowerBoundRule(lowerBoundRule: ConditionalDataBarRule): void;\\n\\n        /**\\n         * Representation of all values to the left of the axis in an Excel data bar.\\n         */\\n        getNegativeFormat(): ConditionalDataBarNegativeFormat;\\n\\n        /**\\n         * Representation of all values to the right of the axis in an Excel data bar.\\n         */\\n        getPositiveFormat(): ConditionalDataBarPositiveFormat;\\n\\n        /**\\n         * If `true`, hides the values from the cells where the data bar is applied.\\n         */\\n        getShowDataBarOnly(): boolean;\\n\\n        /**\\n         * If `true`, hides the values from the cells where the data bar is applied.\\n         */\\n        setShowDataBarOnly(showDataBarOnly: boolean): void;\\n\\n        /**\\n         * The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar.\\n         * The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`).\\n         */\\n        getUpperBoundRule(): ConditionalDataBarRule;\\n\\n        /**\\n         * The rule for what constitutes the upper bound (and how to calculate it, if applicable) for a data bar.\\n         * The `ConditionalDataBarRule` object must be set as a JSON object (use `x.upperBoundRule = {...}` instead of `x.upperBoundRule.formula = ...`).\\n         */\\n        setUpperBoundRule(upperBoundRule: ConditionalDataBarRule): void;\\n    }\\n\\n    /**\\n     * Represents a conditional format for the positive side of the data bar.\\n     */\\n    interface ConditionalDataBarPositiveFormat {\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         * Value is \\"\\" (an empty string) if no border is present or set.\\n         */\\n        getBorderColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         * Value is \\"\\" (an empty string) if no border is present or set.\\n         */\\n        setBorderColor(borderColor: string): void;\\n\\n        /**\\n         * HTML color code representing the fill color, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getFillColor(): string;\\n\\n        /**\\n         * HTML color code representing the fill color, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setFillColor(fillColor: string): void;\\n\\n        /**\\n         * Specifies if the data bar has a gradient.\\n         */\\n        getGradientFill(): boolean;\\n\\n        /**\\n         * Specifies if the data bar has a gradient.\\n         */\\n        setGradientFill(gradientFill: boolean): void;\\n    }\\n\\n    /**\\n     * Represents a conditional format for the negative side of the data bar.\\n     */\\n    interface ConditionalDataBarNegativeFormat {\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         * Value is \\"\\" (an empty string) if no border is present or set.\\n         */\\n        getBorderColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         * Value is \\"\\" (an empty string) if no border is present or set.\\n         */\\n        setBorderColor(borderColor: string): void;\\n\\n        /**\\n         * HTML color code representing the fill color, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getFillColor(): string;\\n\\n        /**\\n         * HTML color code representing the fill color, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setFillColor(fillColor: string): void;\\n\\n        /**\\n         * Specifies if the negative data bar has the same border color as the positive data bar.\\n         */\\n        getMatchPositiveBorderColor(): boolean;\\n\\n        /**\\n         * Specifies if the negative data bar has the same border color as the positive data bar.\\n         */\\n        setMatchPositiveBorderColor(matchPositiveBorderColor: boolean): void;\\n\\n        /**\\n         * Specifies if the negative data bar has the same fill color as the positive data bar.\\n         */\\n        getMatchPositiveFillColor(): boolean;\\n\\n        /**\\n         * Specifies if the negative data bar has the same fill color as the positive data bar.\\n         */\\n        setMatchPositiveFillColor(matchPositiveFillColor: boolean): void;\\n    }\\n\\n    /**\\n     * Represents a custom conditional format type.\\n     */\\n    interface CustomConditionalFormat {\\n        /**\\n         * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\\n         */\\n        getFormat(): ConditionalRangeFormat;\\n\\n        /**\\n         * Specifies the `Rule` object on this conditional format.\\n         */\\n        getRule(): ConditionalFormatRule;\\n    }\\n\\n    /**\\n     * Represents a rule, for all traditional rule/format pairings.\\n     */\\n    interface ConditionalFormatRule {\\n        /**\\n         * The formula, if required, on which to evaluate the conditional format rule.\\n         */\\n        getFormula(): string;\\n\\n        /**\\n         * The formula, if required, on which to evaluate the conditional format rule.\\n         */\\n        setFormula(formula: string): void;\\n\\n        /**\\n         * The formula, if required, on which to evaluate the conditional format rule in the user\'s language.\\n         */\\n        getFormulaLocal(): string;\\n\\n        /**\\n         * The formula, if required, on which to evaluate the conditional format rule in the user\'s language.\\n         */\\n        setFormulaLocal(formulaLocal: string): void;\\n    }\\n\\n    /**\\n     * Represents an icon set criteria for conditional formatting.\\n     */\\n    interface IconSetConditionalFormat {\\n        /**\\n         * An array of criteria and icon sets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.\\n         */\\n        getCriteria(): ConditionalIconCriterion[];\\n\\n        /**\\n         * An array of criteria and icon sets for the rules and potential custom icons for conditional icons. Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.\\n         */\\n        setCriteria(criteria: ConditionalIconCriterion[]): void;\\n\\n        /**\\n         * If `true`, reverses the icon orders for the icon set. Note that this cannot be set if custom icons are used.\\n         */\\n        getReverseIconOrder(): boolean;\\n\\n        /**\\n         * If `true`, reverses the icon orders for the icon set. Note that this cannot be set if custom icons are used.\\n         */\\n        setReverseIconOrder(reverseIconOrder: boolean): void;\\n\\n        /**\\n         * If `true`, hides the values and only shows icons.\\n         */\\n        getShowIconOnly(): boolean;\\n\\n        /**\\n         * If `true`, hides the values and only shows icons.\\n         */\\n        setShowIconOnly(showIconOnly: boolean): void;\\n\\n        /**\\n         * If set, displays the icon set option for the conditional format.\\n         */\\n        getStyle(): IconSet;\\n\\n        /**\\n         * If set, displays the icon set option for the conditional format.\\n         */\\n        setStyle(style: IconSet): void;\\n    }\\n\\n    /**\\n     * Represents the color scale criteria for conditional formatting.\\n     */\\n    interface ColorScaleConditionalFormat {\\n        /**\\n         * The criteria of the color scale. Midpoint is optional when using a two point color scale.\\n         */\\n        getCriteria(): ConditionalColorScaleCriteria;\\n\\n        /**\\n         * The criteria of the color scale. Midpoint is optional when using a two point color scale.\\n         */\\n        setCriteria(criteria: ConditionalColorScaleCriteria): void;\\n\\n        /**\\n         * If `true`, the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).\\n         */\\n        getThreeColorScale(): boolean;\\n    }\\n\\n    /**\\n     * Represents a top/bottom conditional format.\\n     */\\n    interface TopBottomConditionalFormat {\\n        /**\\n         * Returns a format object, encapsulating the conditional format\'s font, fill, borders, and other properties.\\n         */\\n        getFormat(): ConditionalRangeFormat;\\n\\n        /**\\n         * The criteria of the top/bottom conditional format.\\n         */\\n        getRule(): ConditionalTopBottomRule;\\n\\n        /**\\n         * The criteria of the top/bottom conditional format.\\n         */\\n        setRule(rule: ConditionalTopBottomRule): void;\\n    }\\n\\n    /**\\n     * Represents the the preset criteria conditional format such as above average, below average, unique values, contains blank, nonblank, error, and noerror.\\n     */\\n    interface PresetCriteriaConditionalFormat {\\n        /**\\n         * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\\n         */\\n        getFormat(): ConditionalRangeFormat;\\n\\n        /**\\n         * The rule of the conditional format.\\n         */\\n        getRule(): ConditionalPresetCriteriaRule;\\n\\n        /**\\n         * The rule of the conditional format.\\n         */\\n        setRule(rule: ConditionalPresetCriteriaRule): void;\\n    }\\n\\n    /**\\n     * Represents a specific text conditional format.\\n     */\\n    interface TextConditionalFormat {\\n        /**\\n         * Returns a format object, encapsulating the conditional format\'s font, fill, borders, and other properties.\\n         */\\n        getFormat(): ConditionalRangeFormat;\\n\\n        /**\\n         * The rule of the conditional format.\\n         */\\n        getRule(): ConditionalTextComparisonRule;\\n\\n        /**\\n         * The rule of the conditional format.\\n         */\\n        setRule(rule: ConditionalTextComparisonRule): void;\\n    }\\n\\n    /**\\n     * Represents a cell value conditional format.\\n     */\\n    interface CellValueConditionalFormat {\\n        /**\\n         * Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.\\n         */\\n        getFormat(): ConditionalRangeFormat;\\n\\n        /**\\n         * Specifies the rule object on this conditional format.\\n         */\\n        getRule(): ConditionalCellValueRule;\\n\\n        /**\\n         * Specifies the rule object on this conditional format.\\n         */\\n        setRule(rule: ConditionalCellValueRule): void;\\n    }\\n\\n    /**\\n     * A format object encapsulating the conditional formats range\'s font, fill, borders, and other properties.\\n     */\\n    interface ConditionalRangeFormat {\\n        /**\\n         * Returns the fill object defined on the overall conditional format range.\\n         */\\n        getFill(): ConditionalRangeFill;\\n\\n        /**\\n         * Returns the font object defined on the overall conditional format range.\\n         */\\n        getFont(): ConditionalRangeFont;\\n\\n        /**\\n         * Represents Excel\'s number format code for the given range. Cleared if `null` is passed in.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * Represents Excel\'s number format code for the given range. Cleared if `null` is passed in.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * Collection of border objects that apply to the overall conditional format range.\\n         */\\n        getBorders(): ConditionalRangeBorder[];\\n\\n        /**\\n         * Gets the bottom border.\\n         */\\n        getConditionalRangeBorderBottom(): ConditionalRangeBorder;\\n\\n        /**\\n         * Gets the left border.\\n         */\\n        getConditionalRangeBorderLeft(): ConditionalRangeBorder;\\n\\n        /**\\n         * Gets the right border.\\n         */\\n        getConditionalRangeBorderRight(): ConditionalRangeBorder;\\n\\n        /**\\n         * Gets the top border.\\n         */\\n        getConditionalRangeBorderTop(): ConditionalRangeBorder;\\n\\n        /**\\n         * Gets a border object using its name.\\n         * @param index Index value of the border object to be retrieved. See `ExcelScript.ConditionalRangeBorderIndex` for details.\\n         */\\n        getConditionalRangeBorder(\\n            index: ConditionalRangeBorderIndex\\n        ): ConditionalRangeBorder;\\n    }\\n\\n    /**\\n     * This object represents the font attributes (font style, color, etc.) for an object.\\n     */\\n    interface ConditionalRangeFont {\\n        /**\\n         * Specifies if the font is bold.\\n         */\\n        getBold(): boolean;\\n\\n        /**\\n         * Specifies if the font is bold.\\n         */\\n        setBold(bold: boolean): void;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., #FF0000 represents Red).\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Specifies if the font is italic.\\n         */\\n        getItalic(): boolean;\\n\\n        /**\\n         * Specifies if the font is italic.\\n         */\\n        setItalic(italic: boolean): void;\\n\\n        /**\\n         * Specifies the strikethrough status of the font.\\n         */\\n        getStrikethrough(): boolean;\\n\\n        /**\\n         * Specifies the strikethrough status of the font.\\n         */\\n        setStrikethrough(strikethrough: boolean): void;\\n\\n        /**\\n         * The type of underline applied to the font. See `ExcelScript.ConditionalRangeFontUnderlineStyle` for details.\\n         */\\n        getUnderline(): ConditionalRangeFontUnderlineStyle;\\n\\n        /**\\n         * The type of underline applied to the font. See `ExcelScript.ConditionalRangeFontUnderlineStyle` for details.\\n         */\\n        setUnderline(underline: ConditionalRangeFontUnderlineStyle): void;\\n\\n        /**\\n         * Resets the font formats.\\n         */\\n        clear(): void;\\n    }\\n\\n    /**\\n     * Represents the background of a conditional range object.\\n     */\\n    interface ConditionalRangeFill {\\n        /**\\n         * HTML color code representing the color of the fill, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the fill, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Resets the fill.\\n         */\\n        clear(): void;\\n    }\\n\\n    /**\\n     * Represents the border of an object.\\n     */\\n    interface ConditionalRangeBorder {\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representing the color of the border line, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Constant value that indicates the specific side of the border. See `ExcelScript.ConditionalRangeBorderIndex` for details.\\n         */\\n        getSideIndex(): ConditionalRangeBorderIndex;\\n\\n        /**\\n         * One of the constants of line style specifying the line style for the border. See `ExcelScript.BorderLineStyle` for details.\\n         */\\n        getStyle(): ConditionalRangeBorderLineStyle;\\n\\n        /**\\n         * One of the constants of line style specifying the line style for the border. See `ExcelScript.BorderLineStyle` for details.\\n         */\\n        setStyle(style: ConditionalRangeBorderLineStyle): void;\\n    }\\n\\n    /**\\n     * An object encapsulating a style\'s format and other properties.\\n     */\\n    interface PredefinedCellStyle {\\n        /**\\n         * Specifies if text is automatically indented when the text alignment in a cell is set to equal distribution.\\n         */\\n        getAutoIndent(): boolean;\\n\\n        /**\\n         * Specifies if text is automatically indented when the text alignment in a cell is set to equal distribution.\\n         */\\n        setAutoIndent(autoIndent: boolean): void;\\n\\n        /**\\n         * Specifies if the style is a built-in style.\\n         */\\n        getBuiltIn(): boolean;\\n\\n        /**\\n         * The fill of the style.\\n         */\\n        getFill(): RangeFill;\\n\\n        /**\\n         * A `Font` object that represents the font of the style.\\n         */\\n        getFont(): RangeFont;\\n\\n        /**\\n         * Specifies if the formula will be hidden when the worksheet is protected.\\n         */\\n        getFormulaHidden(): boolean;\\n\\n        /**\\n         * Specifies if the formula will be hidden when the worksheet is protected.\\n         */\\n        setFormulaHidden(formulaHidden: boolean): void;\\n\\n        /**\\n         * Represents the horizontal alignment for the style. See `ExcelScript.HorizontalAlignment` for details.\\n         */\\n        getHorizontalAlignment(): HorizontalAlignment;\\n\\n        /**\\n         * Represents the horizontal alignment for the style. See `ExcelScript.HorizontalAlignment` for details.\\n         */\\n        setHorizontalAlignment(horizontalAlignment: HorizontalAlignment): void;\\n\\n        /**\\n         * Specifies if the style includes the auto indent, horizontal alignment, vertical alignment, wrap text, indent level, and text orientation properties.\\n         */\\n        getIncludeAlignment(): boolean;\\n\\n        /**\\n         * Specifies if the style includes the auto indent, horizontal alignment, vertical alignment, wrap text, indent level, and text orientation properties.\\n         */\\n        setIncludeAlignment(includeAlignment: boolean): void;\\n\\n        /**\\n         * Specifies if the style includes the color, color index, line style, and weight border properties.\\n         */\\n        getIncludeBorder(): boolean;\\n\\n        /**\\n         * Specifies if the style includes the color, color index, line style, and weight border properties.\\n         */\\n        setIncludeBorder(includeBorder: boolean): void;\\n\\n        /**\\n         * Specifies if the style includes the background, bold, color, color index, font style, italic, name, size, strikethrough, subscript, superscript, and underline font properties.\\n         */\\n        getIncludeFont(): boolean;\\n\\n        /**\\n         * Specifies if the style includes the background, bold, color, color index, font style, italic, name, size, strikethrough, subscript, superscript, and underline font properties.\\n         */\\n        setIncludeFont(includeFont: boolean): void;\\n\\n        /**\\n         * Specifies if the style includes the number format property.\\n         */\\n        getIncludeNumber(): boolean;\\n\\n        /**\\n         * Specifies if the style includes the number format property.\\n         */\\n        setIncludeNumber(includeNumber: boolean): void;\\n\\n        /**\\n         * Specifies if the style includes the color, color index, invert if negative, pattern, pattern color, and pattern color index interior properties.\\n         */\\n        getIncludePatterns(): boolean;\\n\\n        /**\\n         * Specifies if the style includes the color, color index, invert if negative, pattern, pattern color, and pattern color index interior properties.\\n         */\\n        setIncludePatterns(includePatterns: boolean): void;\\n\\n        /**\\n         * Specifies if the style includes the formula hidden and locked protection properties.\\n         */\\n        getIncludeProtection(): boolean;\\n\\n        /**\\n         * Specifies if the style includes the formula hidden and locked protection properties.\\n         */\\n        setIncludeProtection(includeProtection: boolean): void;\\n\\n        /**\\n         * An integer from 0 to 250 that indicates the indent level for the style.\\n         */\\n        getIndentLevel(): number;\\n\\n        /**\\n         * An integer from 0 to 250 that indicates the indent level for the style.\\n         */\\n        setIndentLevel(indentLevel: number): void;\\n\\n        /**\\n         * Specifies if the object is locked when the worksheet is protected.\\n         */\\n        getLocked(): boolean;\\n\\n        /**\\n         * Specifies if the object is locked when the worksheet is protected.\\n         */\\n        setLocked(locked: boolean): void;\\n\\n        /**\\n         * The name of the style.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * The format code of the number format for the style.\\n         */\\n        getNumberFormat(): string;\\n\\n        /**\\n         * The format code of the number format for the style.\\n         */\\n        setNumberFormat(numberFormat: string): void;\\n\\n        /**\\n         * The localized format code of the number format for the style.\\n         */\\n        getNumberFormatLocal(): string;\\n\\n        /**\\n         * The localized format code of the number format for the style.\\n         */\\n        setNumberFormatLocal(numberFormatLocal: string): void;\\n\\n        /**\\n         * The reading order for the style.\\n         */\\n        getReadingOrder(): ReadingOrder;\\n\\n        /**\\n         * The reading order for the style.\\n         */\\n        setReadingOrder(readingOrder: ReadingOrder): void;\\n\\n        /**\\n         * Specifies if text automatically shrinks to fit in the available column width.\\n         */\\n        getShrinkToFit(): boolean;\\n\\n        /**\\n         * Specifies if text automatically shrinks to fit in the available column width.\\n         */\\n        setShrinkToFit(shrinkToFit: boolean): void;\\n\\n        /**\\n         * The text orientation for the style.\\n         */\\n        getTextOrientation(): number;\\n\\n        /**\\n         * The text orientation for the style.\\n         */\\n        setTextOrientation(textOrientation: number): void;\\n\\n        /**\\n         * Specifies the vertical alignment for the style. See `ExcelScript.VerticalAlignment` for details.\\n         */\\n        getVerticalAlignment(): VerticalAlignment;\\n\\n        /**\\n         * Specifies the vertical alignment for the style. See `ExcelScript.VerticalAlignment` for details.\\n         */\\n        setVerticalAlignment(verticalAlignment: VerticalAlignment): void;\\n\\n        /**\\n         * Specifies if Excel wraps the text in the object.\\n         */\\n        getWrapText(): boolean;\\n\\n        /**\\n         * Specifies if Excel wraps the text in the object.\\n         */\\n        setWrapText(wrapText: boolean): void;\\n\\n        /**\\n         * Deletes this style.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * A collection of four border objects that represent the style of the four borders.\\n         */\\n        getBorders(): RangeBorder[];\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for range borders. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the entire border collection doesn\'t have a uniform `tintAndShade` setting.\\n         */\\n        getRangeBorderTintAndShade(): number;\\n\\n        /**\\n         * Specifies a double that lightens or darkens a color for range borders. The value is between -1 (darkest) and 1 (brightest), with 0 for the original color.\\n         * A `null` value indicates that the entire border collection doesn\'t have a uniform `tintAndShade` setting.\\n         */\\n        setRangeBorderTintAndShade(rangeBorderTintAndShade: number): void;\\n\\n        /**\\n         * Gets a border object using its name.\\n         * @param index Index value of the border object to be retrieved. See `ExcelScript.BorderIndex` for details.\\n         */\\n        getRangeBorder(index: BorderIndex): RangeBorder;\\n    }\\n\\n    /**\\n     * Represents a table style, which defines the style elements by region of the table.\\n     */\\n    interface TableStyle {\\n        /**\\n         * Gets the name of the table style.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Gets the name of the table style.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if this `TableStyle` object is read-only.\\n         */\\n        getReadOnly(): boolean;\\n\\n        /**\\n         * Deletes the table style.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Creates a duplicate of this table style with copies of all the style elements.\\n         */\\n        duplicate(): TableStyle;\\n    }\\n\\n    /**\\n     * Represents a PivotTable style, which defines style elements by PivotTable region.\\n     */\\n    interface PivotTableStyle {\\n        /**\\n         * Gets the name of the PivotTable style.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Gets the name of the PivotTable style.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if this `PivotTableStyle` object is read-only.\\n         */\\n        getReadOnly(): boolean;\\n\\n        /**\\n         * Deletes the PivotTable style.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Creates a duplicate of this PivotTable style with copies of all the style elements.\\n         */\\n        duplicate(): PivotTableStyle;\\n    }\\n\\n    /**\\n     * Represents a slicer style, which defines style elements by region of the slicer.\\n     */\\n    interface SlicerStyle {\\n        /**\\n         * Gets the name of the slicer style.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Gets the name of the slicer style.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if this `SlicerStyle` object is read-only.\\n         */\\n        getReadOnly(): boolean;\\n\\n        /**\\n         * Deletes the slicer style.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Creates a duplicate of this slicer style with copies of all the style elements.\\n         */\\n        duplicate(): SlicerStyle;\\n    }\\n\\n    /**\\n     * Represents a `TimelineStyle`, which defines style elements by region in the timeline.\\n     */\\n    interface TimelineStyle {\\n        /**\\n         * Gets the name of the timeline style.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Gets the name of the timeline style.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies if this `TimelineStyle` object is read-only.\\n         */\\n        getReadOnly(): boolean;\\n\\n        /**\\n         * Deletes the table style.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Creates a duplicate of this timeline style with copies of all the style elements.\\n         */\\n        duplicate(): TimelineStyle;\\n    }\\n\\n    /**\\n     * Represents layout and print settings that are not dependent on any printer-specific implementation. These settings include margins, orientation, page numbering, title rows, and print area.\\n     */\\n    interface PageLayout {\\n        /**\\n         * The worksheet\'s black and white print option.\\n         */\\n        getBlackAndWhite(): boolean;\\n\\n        /**\\n         * The worksheet\'s black and white print option.\\n         */\\n        setBlackAndWhite(blackAndWhite: boolean): void;\\n\\n        /**\\n         * The worksheet\'s bottom page margin to use for printing in points.\\n         */\\n        getBottomMargin(): number;\\n\\n        /**\\n         * The worksheet\'s bottom page margin to use for printing in points.\\n         */\\n        setBottomMargin(bottomMargin: number): void;\\n\\n        /**\\n         * The worksheet\'s center horizontally flag. This flag determines whether the worksheet will be centered horizontally when it\'s printed.\\n         */\\n        getCenterHorizontally(): boolean;\\n\\n        /**\\n         * The worksheet\'s center horizontally flag. This flag determines whether the worksheet will be centered horizontally when it\'s printed.\\n         */\\n        setCenterHorizontally(centerHorizontally: boolean): void;\\n\\n        /**\\n         * The worksheet\'s center vertically flag. This flag determines whether the worksheet will be centered vertically when it\'s printed.\\n         */\\n        getCenterVertically(): boolean;\\n\\n        /**\\n         * The worksheet\'s center vertically flag. This flag determines whether the worksheet will be centered vertically when it\'s printed.\\n         */\\n        setCenterVertically(centerVertically: boolean): void;\\n\\n        /**\\n         * The worksheet\'s draft mode option. If `true`, the sheet will be printed without graphics.\\n         */\\n        getDraftMode(): boolean;\\n\\n        /**\\n         * The worksheet\'s draft mode option. If `true`, the sheet will be printed without graphics.\\n         */\\n        setDraftMode(draftMode: boolean): void;\\n\\n        /**\\n         * The worksheet\'s first page number to print. A `null` value represents \\"auto\\" page numbering.\\n         */\\n        getFirstPageNumber(): number | \\"\\";\\n\\n        /**\\n         * The worksheet\'s first page number to print. A `null` value represents \\"auto\\" page numbering.\\n         */\\n        setFirstPageNumber(firstPageNumber: number | \\"\\"): void;\\n\\n        /**\\n         * The worksheet\'s footer margin, in points, for use when printing.\\n         */\\n        getFooterMargin(): number;\\n\\n        /**\\n         * The worksheet\'s footer margin, in points, for use when printing.\\n         */\\n        setFooterMargin(footerMargin: number): void;\\n\\n        /**\\n         * The worksheet\'s header margin, in points, for use when printing.\\n         */\\n        getHeaderMargin(): number;\\n\\n        /**\\n         * The worksheet\'s header margin, in points, for use when printing.\\n         */\\n        setHeaderMargin(headerMargin: number): void;\\n\\n        /**\\n         * Header and footer configuration for the worksheet.\\n         */\\n        getHeadersFooters(): HeaderFooterGroup;\\n\\n        /**\\n         * The worksheet\'s left margin, in points, for use when printing.\\n         */\\n        getLeftMargin(): number;\\n\\n        /**\\n         * The worksheet\'s left margin, in points, for use when printing.\\n         */\\n        setLeftMargin(leftMargin: number): void;\\n\\n        /**\\n         * The worksheet\'s orientation of the page.\\n         */\\n        getOrientation(): PageOrientation;\\n\\n        /**\\n         * The worksheet\'s orientation of the page.\\n         */\\n        setOrientation(orientation: PageOrientation): void;\\n\\n        /**\\n         * The worksheet\'s paper size of the page.\\n         */\\n        getPaperSize(): PaperType;\\n\\n        /**\\n         * The worksheet\'s paper size of the page.\\n         */\\n        setPaperSize(paperSize: PaperType): void;\\n\\n        /**\\n         * Specifies if the worksheet\'s comments should be displayed when printing.\\n         */\\n        getPrintComments(): PrintComments;\\n\\n        /**\\n         * Specifies if the worksheet\'s comments should be displayed when printing.\\n         */\\n        setPrintComments(printComments: PrintComments): void;\\n\\n        /**\\n         * The worksheet\'s print errors option.\\n         */\\n        getPrintErrors(): PrintErrorType;\\n\\n        /**\\n         * The worksheet\'s print errors option.\\n         */\\n        setPrintErrors(printErrors: PrintErrorType): void;\\n\\n        /**\\n         * Specifies if the worksheet\'s gridlines will be printed.\\n         */\\n        getPrintGridlines(): boolean;\\n\\n        /**\\n         * Specifies if the worksheet\'s gridlines will be printed.\\n         */\\n        setPrintGridlines(printGridlines: boolean): void;\\n\\n        /**\\n         * Specifies if the worksheet\'s headings will be printed.\\n         */\\n        getPrintHeadings(): boolean;\\n\\n        /**\\n         * Specifies if the worksheet\'s headings will be printed.\\n         */\\n        setPrintHeadings(printHeadings: boolean): void;\\n\\n        /**\\n         * The worksheet\'s page print order option. This specifies the order to use for processing the page number printed.\\n         */\\n        getPrintOrder(): PrintOrder;\\n\\n        /**\\n         * The worksheet\'s page print order option. This specifies the order to use for processing the page number printed.\\n         */\\n        setPrintOrder(printOrder: PrintOrder): void;\\n\\n        /**\\n         * The worksheet\'s right margin, in points, for use when printing.\\n         */\\n        getRightMargin(): number;\\n\\n        /**\\n         * The worksheet\'s right margin, in points, for use when printing.\\n         */\\n        setRightMargin(rightMargin: number): void;\\n\\n        /**\\n         * The worksheet\'s top margin, in points, for use when printing.\\n         */\\n        getTopMargin(): number;\\n\\n        /**\\n         * The worksheet\'s top margin, in points, for use when printing.\\n         */\\n        setTopMargin(topMargin: number): void;\\n\\n        /**\\n         * The worksheet\'s print zoom options.\\n         * The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`).\\n         */\\n        getZoom(): PageLayoutZoomOptions;\\n\\n        /**\\n         * The worksheet\'s print zoom options.\\n         * The `PageLayoutZoomOptions` object must be set as a JSON object (use `x.zoom = {...}` instead of `x.zoom.scale = ...`).\\n         */\\n        setZoom(zoom: PageLayoutZoomOptions): void;\\n\\n        /**\\n         * Gets the `RangeAreas` object, comprising one or more rectangular ranges, that represents the print area for the worksheet. If there is no print area, then this method returns `undefined`.\\n         */\\n        getPrintArea(): RangeAreas;\\n\\n        /**\\n         * Gets the range object representing the title columns. If not set, then this method returns `undefined`.\\n         */\\n        getPrintTitleColumns(): Range;\\n\\n        /**\\n         * Gets the range object representing the title rows. If not set, then this method returns `undefined`.\\n         */\\n        getPrintTitleRows(): Range;\\n\\n        /**\\n         * Sets the worksheet\'s print area.\\n         * @param printArea The range or ranges of the content to print.\\n         */\\n        setPrintArea(printArea: Range | RangeAreas | string): void;\\n\\n        /**\\n         * Sets the worksheet\'s page margins with units.\\n         * @param unit Measurement unit for the margins provided.\\n         * @param marginOptions Margin values to set. Margins not provided remain unchanged.\\n         */\\n        setPrintMargins(\\n            unit: PrintMarginUnit,\\n            marginOptions: PageLayoutMarginOptions\\n        ): void;\\n\\n        /**\\n         * Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.\\n         * @param printTitleColumns The columns to be repeated to the left of each page. The range must span the entire column to be valid.\\n         */\\n        setPrintTitleColumns(printTitleColumns: Range | string): void;\\n\\n        /**\\n         * Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.\\n         * @param printTitleRows The rows to be repeated at the top of each page. The range must span the entire row to be valid.\\n         */\\n        setPrintTitleRows(printTitleRows: Range | string): void;\\n    }\\n\\n    interface HeaderFooter {\\n        /**\\n         * The center footer of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        getCenterFooter(): string;\\n\\n        /**\\n         * The center footer of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        setCenterFooter(centerFooter: string): void;\\n\\n        /**\\n         * The center header of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        getCenterHeader(): string;\\n\\n        /**\\n         * The center header of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        setCenterHeader(centerHeader: string): void;\\n\\n        /**\\n         * The left footer of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        getLeftFooter(): string;\\n\\n        /**\\n         * The left footer of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        setLeftFooter(leftFooter: string): void;\\n\\n        /**\\n         * The left header of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        getLeftHeader(): string;\\n\\n        /**\\n         * The left header of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        setLeftHeader(leftHeader: string): void;\\n\\n        /**\\n         * The right footer of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        getRightFooter(): string;\\n\\n        /**\\n         * The right footer of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        setRightFooter(rightFooter: string): void;\\n\\n        /**\\n         * The right header of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        getRightHeader(): string;\\n\\n        /**\\n         * The right header of the worksheet.\\n         * To apply font formatting or insert a variable value, use format codes specified here: https://msdn.microsoft.com/library/bb225426.aspx.\\n         */\\n        setRightHeader(rightHeader: string): void;\\n    }\\n\\n    interface HeaderFooterGroup {\\n        /**\\n         * The general header/footer, used for all pages unless even/odd or first page is specified.\\n         */\\n        getDefaultForAllPages(): HeaderFooter;\\n\\n        /**\\n         * The header/footer to use for even pages, odd header/footer needs to be specified for odd pages.\\n         */\\n        getEvenPages(): HeaderFooter;\\n\\n        /**\\n         * The first page header/footer, for all other pages general or even/odd is used.\\n         */\\n        getFirstPage(): HeaderFooter;\\n\\n        /**\\n         * The header/footer to use for odd pages, even header/footer needs to be specified for even pages.\\n         */\\n        getOddPages(): HeaderFooter;\\n\\n        /**\\n         * The state by which headers/footers are set. See `ExcelScript.HeaderFooterState` for details.\\n         */\\n        getState(): HeaderFooterState;\\n\\n        /**\\n         * The state by which headers/footers are set. See `ExcelScript.HeaderFooterState` for details.\\n         */\\n        setState(state: HeaderFooterState): void;\\n\\n        /**\\n         * Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options for the worksheet.\\n         */\\n        getUseSheetMargins(): boolean;\\n\\n        /**\\n         * Gets or sets a flag indicating if headers/footers are aligned with the page margins set in the page layout options for the worksheet.\\n         */\\n        setUseSheetMargins(useSheetMargins: boolean): void;\\n\\n        /**\\n         * Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page layout options for the worksheet.\\n         */\\n        getUseSheetScale(): boolean;\\n\\n        /**\\n         * Gets or sets a flag indicating if headers/footers should be scaled by the page percentage scale set in the page layout options for the worksheet.\\n         */\\n        setUseSheetScale(useSheetScale: boolean): void;\\n    }\\n\\n    interface PageBreak {\\n        /**\\n         * Specifies the column index for the page break.\\n         */\\n        getColumnIndex(): number;\\n\\n        /**\\n         * Deletes a page break object.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the first cell after the page break.\\n         */\\n        getCellAfterBreak(): Range;\\n    }\\n\\n    /**\\n     * Represents a comment in the workbook.\\n     */\\n    interface Comment {\\n        /**\\n         * Gets the email of the comment\'s author.\\n         */\\n        getAuthorEmail(): string;\\n\\n        /**\\n         * Gets the name of the comment\'s author.\\n         */\\n        getAuthorName(): string;\\n\\n        /**\\n         * The comment\'s content. The string is plain text.\\n         */\\n        getContent(): string;\\n\\n        /**\\n         * The comment\'s content. The string is plain text.\\n         */\\n        setContent(content: string): void;\\n\\n        /**\\n         * Gets the content type of the comment.\\n         */\\n        getContentType(): ContentType;\\n\\n        /**\\n         * Gets the creation time of the comment. Returns `null` if the comment was converted from a note, since the comment does not have a creation date.\\n         */\\n        getCreationDate(): Date;\\n\\n        /**\\n         * Specifies the comment identifier.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Gets the entities (e.g., people) that are mentioned in comments.\\n         */\\n        getMentions(): CommentMention[];\\n\\n        /**\\n         * The comment thread status. A value of `true` means that the comment thread is resolved.\\n         */\\n        getResolved(): boolean;\\n\\n        /**\\n         * The comment thread status. A value of `true` means that the comment thread is resolved.\\n         */\\n        setResolved(resolved: boolean): void;\\n\\n        /**\\n         * Gets the rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\\n         */\\n        getRichContent(): string;\\n\\n        /**\\n         * Deletes the comment and all the connected replies.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the cell where this comment is located.\\n         */\\n        getLocation(): Range;\\n\\n        /**\\n         * Updates the comment content with a specially formatted string and a list of mentions.\\n         * @param contentWithMentions The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\\n         */\\n        updateMentions(contentWithMentions: CommentRichContent): void;\\n\\n        /**\\n         * Represents a collection of reply objects associated with the comment.\\n         */\\n        getReplies(): CommentReply[];\\n\\n        /**\\n         * Creates a comment reply for a comment.\\n         * @param content The comment\'s content. This can be either a string or a `CommentRichContent` object (e.g., for comments with mentions).\\n         * @param contentType Optional. The type of content contained within the comment. The default value is enum `ContentType.Plain`.\\n         */\\n        addCommentReply(\\n            content: CommentRichContent | string,\\n            contentType?: ContentType\\n        ): CommentReply;\\n\\n        /**\\n         * Returns a comment reply identified by its ID.\\n         * @param commentReplyId The identifier for the comment reply.\\n         */\\n        getCommentReply(commentReplyId: string): CommentReply;\\n    }\\n\\n    /**\\n     * Represents a comment reply in the workbook.\\n     */\\n    interface CommentReply {\\n        /**\\n         * Gets the email of the comment reply\'s author.\\n         */\\n        getAuthorEmail(): string;\\n\\n        /**\\n         * Gets the name of the comment reply\'s author.\\n         */\\n        getAuthorName(): string;\\n\\n        /**\\n         * The comment reply\'s content. The string is plain text.\\n         */\\n        getContent(): string;\\n\\n        /**\\n         * The comment reply\'s content. The string is plain text.\\n         */\\n        setContent(content: string): void;\\n\\n        /**\\n         * The content type of the reply.\\n         */\\n        getContentType(): ContentType;\\n\\n        /**\\n         * Gets the creation time of the comment reply.\\n         */\\n        getCreationDate(): Date;\\n\\n        /**\\n         * Specifies the comment reply identifier.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * The entities (e.g., people) that are mentioned in comments.\\n         */\\n        getMentions(): CommentMention[];\\n\\n        /**\\n         * The comment reply status. A value of `true` means the reply is in the resolved state.\\n         */\\n        getResolved(): boolean;\\n\\n        /**\\n         * The rich comment content (e.g., mentions in comments). This string is not meant to be displayed to end-users. Your add-in should only use this to parse rich comment content.\\n         */\\n        getRichContent(): string;\\n\\n        /**\\n         * Deletes the comment reply.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Gets the cell where this comment reply is located.\\n         */\\n        getLocation(): Range;\\n\\n        /**\\n         * Gets the parent comment of this reply.\\n         */\\n        getParentComment(): Comment;\\n\\n        /**\\n         * Updates the comment content with a specially formatted string and a list of mentions.\\n         * @param contentWithMentions The content for the comment. This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.\\n         */\\n        updateMentions(contentWithMentions: CommentRichContent): void;\\n    }\\n\\n    /**\\n     * Represents a generic shape object in the worksheet. A shape could be a geometric shape, a line, a group of shapes, etc.\\n     */\\n    interface Shape {\\n        /**\\n         * Specifies the alternative description text for a `Shape` object.\\n         */\\n        getAltTextDescription(): string;\\n\\n        /**\\n         * Specifies the alternative description text for a `Shape` object.\\n         */\\n        setAltTextDescription(altTextDescription: string): void;\\n\\n        /**\\n         * Specifies the alternative title text for a `Shape` object.\\n         */\\n        getAltTextTitle(): string;\\n\\n        /**\\n         * Specifies the alternative title text for a `Shape` object.\\n         */\\n        setAltTextTitle(altTextTitle: string): void;\\n\\n        /**\\n         * Returns the number of connection sites on this shape.\\n         */\\n        getConnectionSiteCount(): number;\\n\\n        /**\\n         * Returns the fill formatting of this shape.\\n         */\\n        getFill(): ShapeFill;\\n\\n        /**\\n         * Returns the geometric shape associated with the shape. An error will be thrown if the shape type is not \\"GeometricShape\\".\\n         */\\n        getGeometricShape(): GeometricShape;\\n\\n        /**\\n         * Specifies the geometric shape type of this geometric shape. See `ExcelScript.GeometricShapeType` for details. Returns `null` if the shape type is not \\"GeometricShape\\".\\n         */\\n        getGeometricShapeType(): GeometricShapeType;\\n\\n        /**\\n         * Specifies the geometric shape type of this geometric shape. See `ExcelScript.GeometricShapeType` for details. Returns `null` if the shape type is not \\"GeometricShape\\".\\n         */\\n        setGeometricShapeType(geometricShapeType: GeometricShapeType): void;\\n\\n        /**\\n         * Returns the shape group associated with the shape. An error will be thrown if the shape type is not \\"GroupShape\\".\\n         */\\n        getGroup(): ShapeGroup;\\n\\n        /**\\n         * Specifies the height, in points, of the shape.\\n         * Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Specifies the height, in points, of the shape.\\n         * Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n         */\\n        setHeight(height: number): void;\\n\\n        /**\\n         * Specifies the shape identifier.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Returns the image associated with the shape. An error will be thrown if the shape type is not \\"Image\\".\\n         */\\n        getImage(): Image;\\n\\n        /**\\n         * The distance, in points, from the left side of the shape to the left side of the worksheet.\\n         * Throws an `InvalidArgument` exception when set with a negative value as an input.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * The distance, in points, from the left side of the shape to the left side of the worksheet.\\n         * Throws an `InvalidArgument` exception when set with a negative value as an input.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Specifies the level of the specified shape. For example, a level of 0 means that the shape is not part of any groups, a level of 1 means the shape is part of a top-level group, and a level of 2 means the shape is part of a sub-group of the top level.\\n         */\\n        getLevel(): number;\\n\\n        /**\\n         * Returns the line associated with the shape. An error will be thrown if the shape type is not \\"Line\\".\\n         */\\n        getLine(): Line;\\n\\n        /**\\n         * Returns the line formatting of this shape.\\n         */\\n        getLineFormat(): ShapeLineFormat;\\n\\n        /**\\n         * Specifies if the aspect ratio of this shape is locked.\\n         */\\n        getLockAspectRatio(): boolean;\\n\\n        /**\\n         * Specifies if the aspect ratio of this shape is locked.\\n         */\\n        setLockAspectRatio(lockAspectRatio: boolean): void;\\n\\n        /**\\n         * Specifies the name of the shape.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Specifies the name of the shape.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Specifies the parent group of this shape.\\n         */\\n        getParentGroup(): Shape;\\n\\n        /**\\n         * Represents how the object is attached to the cells below it.\\n         */\\n        getPlacement(): Placement;\\n\\n        /**\\n         * Represents how the object is attached to the cells below it.\\n         */\\n        setPlacement(placement: Placement): void;\\n\\n        /**\\n         * Specifies the rotation, in degrees, of the shape.\\n         */\\n        getRotation(): number;\\n\\n        /**\\n         * Specifies the rotation, in degrees, of the shape.\\n         */\\n        setRotation(rotation: number): void;\\n\\n        /**\\n         * Returns the text frame object of this shape.\\n         */\\n        getTextFrame(): TextFrame;\\n\\n        /**\\n         * The distance, in points, from the top edge of the shape to the top edge of the worksheet.\\n         * Throws an `InvalidArgument` exception when set with a negative value as an input.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * The distance, in points, from the top edge of the shape to the top edge of the worksheet.\\n         * Throws an `InvalidArgument` exception when set with a negative value as an input.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Returns the type of this shape. See `ExcelScript.ShapeType` for details.\\n         */\\n        getType(): ShapeType;\\n\\n        /**\\n         * Specifies if the shape is visible.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the shape is visible.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Specifies the width, in points, of the shape.\\n         * Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Specifies the width, in points, of the shape.\\n         * Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n         */\\n        setWidth(width: number): void;\\n\\n        /**\\n         * Returns the position of the specified shape in the z-order, with 0 representing the bottom of the order stack.\\n         */\\n        getZOrderPosition(): number;\\n\\n        /**\\n         * Copies and pastes a `Shape` object.\\n         * The pasted shape is copied to the same pixel location as this shape.\\n         * @param destinationSheet The sheet to which the shape object will be pasted. The default value is the copied shape\'s worksheet.\\n         */\\n        copyTo(destinationSheet?: Worksheet | string): Shape;\\n\\n        /**\\n         * Removes the shape from the worksheet.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Converts the shape to an image and returns the image as a base64-encoded string. The DPI is 96. The only supported formats are `ExcelScript.PictureFormat.BMP`, `ExcelScript.PictureFormat.PNG`, `ExcelScript.PictureFormat.JPEG`, and `ExcelScript.PictureFormat.GIF`.\\n         * @param format Specifies the format of the image.\\n         */\\n        getImageAsBase64(format: PictureFormat): string;\\n\\n        /**\\n         * Moves the shape horizontally by the specified number of points.\\n         * @param increment The increment, in points, the shape will be horizontally moved. A positive value moves the shape to the right and a negative value moves it to the left. If the sheet is right-to-left oriented, this is reversed: positive values will move the shape to the left and negative values will move it to the right.\\n         */\\n        incrementLeft(increment: number): void;\\n\\n        /**\\n         * Rotates the shape clockwise around the z-axis by the specified number of degrees.\\n         * Use the `rotation` property to set the absolute rotation of the shape.\\n         * @param increment How many degrees the shape will be rotated. A positive value rotates the shape clockwise and a negative value rotates it counterclockwise.\\n         */\\n        incrementRotation(increment: number): void;\\n\\n        /**\\n         * Moves the shape vertically by the specified number of points.\\n         * @param increment The increment, in points, the shape will be vertically moved. A positive value moves the shape down and a negative value moves it up.\\n         */\\n        incrementTop(increment: number): void;\\n\\n        /**\\n         * Scales the height of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current height.\\n         * @param scaleFactor Specifies the ratio between the height of the shape after you resize it and the current or original height.\\n         * @param scaleType Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\\n         * @param scaleFrom Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape\'s upper left corner retains its position.\\n         */\\n        scaleHeight(\\n            scaleFactor: number,\\n            scaleType: ShapeScaleType,\\n            scaleFrom?: ShapeScaleFrom\\n        ): void;\\n\\n        /**\\n         * Scales the width of the shape by a specified factor. For images, you can indicate whether you want to scale the shape relative to the original or the current size. Shapes other than pictures are always scaled relative to their current width.\\n         * @param scaleFactor Specifies the ratio between the width of the shape after you resize it and the current or original width.\\n         * @param scaleType Specifies whether the shape is scaled relative to its original or current size. The original size scaling option only works for images.\\n         * @param scaleFrom Optional. Specifies which part of the shape retains its position when the shape is scaled. If omitted, it represents the shape\'s upper left corner retains its position.\\n         */\\n        scaleWidth(\\n            scaleFactor: number,\\n            scaleType: ShapeScaleType,\\n            scaleFrom?: ShapeScaleFrom\\n        ): void;\\n\\n        /**\\n         * Moves the specified shape up or down the collection\'s z-order, which shifts it in front of or behind other shapes.\\n         * @param position Where to move the shape in the z-order stack relative to the other shapes. See `ExcelScript.ShapeZOrder` for details.\\n         */\\n        setZOrder(position: ShapeZOrder): void;\\n\\n        /**\\n         * Converts the shape to an image and returns the image as a base64-encoded string. The DPI is 96. The only supported formats are `ExcelScript.PictureFormat.BMP`, `ExcelScript.PictureFormat.PNG`, `ExcelScript.PictureFormat.JPEG`, and `ExcelScript.PictureFormat.GIF`.\\n         * @param format Specifies the format of the image.\\n         * @deprecated Use `getImageAsBase64` instead.\\n         */\\n        getAsImage(format: PictureFormat): string;\\n    }\\n\\n    /**\\n     * Represents a geometric shape inside a worksheet. A geometric shape can be a rectangle, block arrow, equation symbol, flowchart item, star, banner, callout, or any other basic shape in Excel.\\n     */\\n    interface GeometricShape {\\n        /**\\n         * Returns the shape identifier.\\n         */\\n        getId(): string;\\n    }\\n\\n    /**\\n     * Represents an image in the worksheet. To get the corresponding `Shape` object, use `Image.shape`.\\n     */\\n    interface Image {\\n        /**\\n         * Specifies the shape identifier for the image object.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Returns the `Shape` object associated with the image.\\n         */\\n        getShape(): Shape;\\n\\n        /**\\n         * Returns the format of the image.\\n         */\\n        getFormat(): PictureFormat;\\n    }\\n\\n    /**\\n     * Represents a shape group inside a worksheet. To get the corresponding `Shape` object, use `ShapeGroup.shape`.\\n     */\\n    interface ShapeGroup {\\n        /**\\n         * Specifies the shape identifier.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Returns the `Shape` object associated with the group.\\n         */\\n        getGroupShape(): Shape;\\n\\n        /**\\n         * Ungroups any grouped shapes in the specified shape group.\\n         */\\n        ungroup(): void;\\n\\n        /**\\n         * Returns the collection of `Shape` objects.\\n         */\\n        getShapes(): Shape[];\\n\\n        /**\\n         * Gets a shape using its name or ID.\\n         * @param key The name or ID of the shape to be retrieved.\\n         */\\n        getShape(key: string): Shape;\\n    }\\n\\n    /**\\n     * Represents a line inside a worksheet. To get the corresponding `Shape` object, use `Line.shape`.\\n     */\\n    interface Line {\\n        /**\\n         * Represents the length of the arrowhead at the beginning of the specified line.\\n         */\\n        getBeginArrowheadLength(): ArrowheadLength;\\n\\n        /**\\n         * Represents the length of the arrowhead at the beginning of the specified line.\\n         */\\n        setBeginArrowheadLength(beginArrowheadLength: ArrowheadLength): void;\\n\\n        /**\\n         * Represents the style of the arrowhead at the beginning of the specified line.\\n         */\\n        getBeginArrowheadStyle(): ArrowheadStyle;\\n\\n        /**\\n         * Represents the style of the arrowhead at the beginning of the specified line.\\n         */\\n        setBeginArrowheadStyle(beginArrowheadStyle: ArrowheadStyle): void;\\n\\n        /**\\n         * Represents the width of the arrowhead at the beginning of the specified line.\\n         */\\n        getBeginArrowheadWidth(): ArrowheadWidth;\\n\\n        /**\\n         * Represents the width of the arrowhead at the beginning of the specified line.\\n         */\\n        setBeginArrowheadWidth(beginArrowheadWidth: ArrowheadWidth): void;\\n\\n        /**\\n         * Represents the shape to which the beginning of the specified line is attached.\\n         */\\n        getBeginConnectedShape(): Shape;\\n\\n        /**\\n         * Represents the connection site to which the beginning of a connector is connected. Returns `null` when the beginning of the line is not attached to any shape.\\n         */\\n        getBeginConnectedSite(): number;\\n\\n        /**\\n         * Represents the length of the arrowhead at the end of the specified line.\\n         */\\n        getEndArrowheadLength(): ArrowheadLength;\\n\\n        /**\\n         * Represents the length of the arrowhead at the end of the specified line.\\n         */\\n        setEndArrowheadLength(endArrowheadLength: ArrowheadLength): void;\\n\\n        /**\\n         * Represents the style of the arrowhead at the end of the specified line.\\n         */\\n        getEndArrowheadStyle(): ArrowheadStyle;\\n\\n        /**\\n         * Represents the style of the arrowhead at the end of the specified line.\\n         */\\n        setEndArrowheadStyle(endArrowheadStyle: ArrowheadStyle): void;\\n\\n        /**\\n         * Represents the width of the arrowhead at the end of the specified line.\\n         */\\n        getEndArrowheadWidth(): ArrowheadWidth;\\n\\n        /**\\n         * Represents the width of the arrowhead at the end of the specified line.\\n         */\\n        setEndArrowheadWidth(endArrowheadWidth: ArrowheadWidth): void;\\n\\n        /**\\n         * Represents the shape to which the end of the specified line is attached.\\n         */\\n        getEndConnectedShape(): Shape;\\n\\n        /**\\n         * Represents the connection site to which the end of a connector is connected. Returns `null` when the end of the line is not attached to any shape.\\n         */\\n        getEndConnectedSite(): number;\\n\\n        /**\\n         * Specifies the shape identifier.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Specifies if the beginning of the specified line is connected to a shape.\\n         */\\n        getIsBeginConnected(): boolean;\\n\\n        /**\\n         * Specifies if the end of the specified line is connected to a shape.\\n         */\\n        getIsEndConnected(): boolean;\\n\\n        /**\\n         * Returns the `Shape` object associated with the line.\\n         */\\n        getShape(): Shape;\\n\\n        /**\\n         * Represents the connector type for the line.\\n         */\\n        getConnectorType(): ConnectorType;\\n\\n        /**\\n         * Represents the connector type for the line.\\n         */\\n        setConnectorType(connectorType: ConnectorType): void;\\n\\n        /**\\n         * Attaches the beginning of the specified connector to a specified shape.\\n         * @param shape The shape to connect.\\n         * @param connectionSite The connection site on the shape to which the beginning of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\\n         */\\n        connectBeginShape(shape: Shape, connectionSite: number): void;\\n\\n        /**\\n         * Attaches the end of the specified connector to a specified shape.\\n         * @param shape The shape to connect.\\n         * @param connectionSite The connection site on the shape to which the end of the connector is attached. Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).\\n         */\\n        connectEndShape(shape: Shape, connectionSite: number): void;\\n\\n        /**\\n         * Detaches the beginning of the specified connector from a shape.\\n         */\\n        disconnectBeginShape(): void;\\n\\n        /**\\n         * Detaches the end of the specified connector from a shape.\\n         */\\n        disconnectEndShape(): void;\\n    }\\n\\n    /**\\n     * Represents the fill formatting of a shape object.\\n     */\\n    interface ShapeFill {\\n        /**\\n         * Represents the shape fill foreground color in HTML color format, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\")\\n         */\\n        getForegroundColor(): string;\\n\\n        /**\\n         * Represents the shape fill foreground color in HTML color format, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\")\\n         */\\n        setForegroundColor(foregroundColor: string): void;\\n\\n        /**\\n         * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.\\n         */\\n        getTransparency(): number;\\n\\n        /**\\n         * Specifies the transparency percentage of the fill as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` if the shape type does not support transparency or the shape fill has inconsistent transparency, such as with a gradient fill type.\\n         */\\n        setTransparency(transparency: number): void;\\n\\n        /**\\n         * Returns the fill type of the shape. See `ExcelScript.ShapeFillType` for details.\\n         */\\n        getType(): ShapeFillType;\\n\\n        /**\\n         * Clears the fill formatting of this shape.\\n         */\\n        clear(): void;\\n\\n        /**\\n         * Sets the fill formatting of the shape to a uniform color. This changes the fill type to \\"Solid\\".\\n         * @param color A string that represents the fill color in HTML color format, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setSolidColor(color: string): void;\\n    }\\n\\n    /**\\n     * Represents the line formatting for the shape object. For images and geometric shapes, line formatting represents the border of the shape.\\n     */\\n    interface ShapeLineFormat {\\n        /**\\n         * Represents the line color in HTML color format, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * Represents the line color in HTML color format, in the form #RRGGBB (e.g., \\"FFA500\\") or as a named HTML color (e.g., \\"orange\\").\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Represents the line style of the shape. Returns `null` when the line is not visible or there are inconsistent dash styles. See `ExcelScript.ShapeLineDashStyle` for details.\\n         */\\n        getDashStyle(): ShapeLineDashStyle;\\n\\n        /**\\n         * Represents the line style of the shape. Returns `null` when the line is not visible or there are inconsistent dash styles. See `ExcelScript.ShapeLineDashStyle` for details.\\n         */\\n        setDashStyle(dashStyle: ShapeLineDashStyle): void;\\n\\n        /**\\n         * Represents the line style of the shape. Returns `null` when the line is not visible or there are inconsistent styles. See `ExcelScript.ShapeLineStyle` for details.\\n         */\\n        getStyle(): ShapeLineStyle;\\n\\n        /**\\n         * Represents the line style of the shape. Returns `null` when the line is not visible or there are inconsistent styles. See `ExcelScript.ShapeLineStyle` for details.\\n         */\\n        setStyle(style: ShapeLineStyle): void;\\n\\n        /**\\n         * Represents the degree of transparency of the specified line as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` when the shape has inconsistent transparencies.\\n         */\\n        getTransparency(): number;\\n\\n        /**\\n         * Represents the degree of transparency of the specified line as a value from 0.0 (opaque) through 1.0 (clear). Returns `null` when the shape has inconsistent transparencies.\\n         */\\n        setTransparency(transparency: number): void;\\n\\n        /**\\n         * Specifies if the line formatting of a shape element is visible. Returns `null` when the shape has inconsistent visibilities.\\n         */\\n        getVisible(): boolean;\\n\\n        /**\\n         * Specifies if the line formatting of a shape element is visible. Returns `null` when the shape has inconsistent visibilities.\\n         */\\n        setVisible(visible: boolean): void;\\n\\n        /**\\n         * Represents the weight of the line, in points. Returns `null` when the line is not visible or there are inconsistent line weights.\\n         */\\n        getWeight(): number;\\n\\n        /**\\n         * Represents the weight of the line, in points. Returns `null` when the line is not visible or there are inconsistent line weights.\\n         */\\n        setWeight(weight: number): void;\\n    }\\n\\n    /**\\n     * Represents the text frame of a shape object.\\n     */\\n    interface TextFrame {\\n        /**\\n         * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.\\n         */\\n        getAutoSizeSetting(): ShapeAutoSize;\\n\\n        /**\\n         * The automatic sizing settings for the text frame. A text frame can be set to automatically fit the text to the text frame, to automatically fit the text frame to the text, or not perform any automatic sizing.\\n         */\\n        setAutoSizeSetting(autoSizeSetting: ShapeAutoSize): void;\\n\\n        /**\\n         * Represents the bottom margin, in points, of the text frame.\\n         */\\n        getBottomMargin(): number;\\n\\n        /**\\n         * Represents the bottom margin, in points, of the text frame.\\n         */\\n        setBottomMargin(bottomMargin: number): void;\\n\\n        /**\\n         * Specifies if the text frame contains text.\\n         */\\n        getHasText(): boolean;\\n\\n        /**\\n         * Represents the horizontal alignment of the text frame. See `ExcelScript.ShapeTextHorizontalAlignment` for details.\\n         */\\n        getHorizontalAlignment(): ShapeTextHorizontalAlignment;\\n\\n        /**\\n         * Represents the horizontal alignment of the text frame. See `ExcelScript.ShapeTextHorizontalAlignment` for details.\\n         */\\n        setHorizontalAlignment(\\n            horizontalAlignment: ShapeTextHorizontalAlignment\\n        ): void;\\n\\n        /**\\n         * Represents the horizontal overflow behavior of the text frame. See `ExcelScript.ShapeTextHorizontalOverflow` for details.\\n         */\\n        getHorizontalOverflow(): ShapeTextHorizontalOverflow;\\n\\n        /**\\n         * Represents the horizontal overflow behavior of the text frame. See `ExcelScript.ShapeTextHorizontalOverflow` for details.\\n         */\\n        setHorizontalOverflow(\\n            horizontalOverflow: ShapeTextHorizontalOverflow\\n        ): void;\\n\\n        /**\\n         * Represents the left margin, in points, of the text frame.\\n         */\\n        getLeftMargin(): number;\\n\\n        /**\\n         * Represents the left margin, in points, of the text frame.\\n         */\\n        setLeftMargin(leftMargin: number): void;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for the text frame. See `ExcelScript.ShapeTextOrientation` for details.\\n         */\\n        getOrientation(): ShapeTextOrientation;\\n\\n        /**\\n         * Represents the angle to which the text is oriented for the text frame. See `ExcelScript.ShapeTextOrientation` for details.\\n         */\\n        setOrientation(orientation: ShapeTextOrientation): void;\\n\\n        /**\\n         * Represents the reading order of the text frame, either left-to-right or right-to-left. See `ExcelScript.ShapeTextReadingOrder` for details.\\n         */\\n        getReadingOrder(): ShapeTextReadingOrder;\\n\\n        /**\\n         * Represents the reading order of the text frame, either left-to-right or right-to-left. See `ExcelScript.ShapeTextReadingOrder` for details.\\n         */\\n        setReadingOrder(readingOrder: ShapeTextReadingOrder): void;\\n\\n        /**\\n         * Represents the right margin, in points, of the text frame.\\n         */\\n        getRightMargin(): number;\\n\\n        /**\\n         * Represents the right margin, in points, of the text frame.\\n         */\\n        setRightMargin(rightMargin: number): void;\\n\\n        /**\\n         * Represents the text that is attached to a shape in the text frame, and properties and methods for manipulating the text. See `ExcelScript.TextRange` for details.\\n         */\\n        getTextRange(): TextRange;\\n\\n        /**\\n         * Represents the top margin, in points, of the text frame.\\n         */\\n        getTopMargin(): number;\\n\\n        /**\\n         * Represents the top margin, in points, of the text frame.\\n         */\\n        setTopMargin(topMargin: number): void;\\n\\n        /**\\n         * Represents the vertical alignment of the text frame. See `ExcelScript.ShapeTextVerticalAlignment` for details.\\n         */\\n        getVerticalAlignment(): ShapeTextVerticalAlignment;\\n\\n        /**\\n         * Represents the vertical alignment of the text frame. See `ExcelScript.ShapeTextVerticalAlignment` for details.\\n         */\\n        setVerticalAlignment(\\n            verticalAlignment: ShapeTextVerticalAlignment\\n        ): void;\\n\\n        /**\\n         * Represents the vertical overflow behavior of the text frame. See `ExcelScript.ShapeTextVerticalOverflow` for details.\\n         */\\n        getVerticalOverflow(): ShapeTextVerticalOverflow;\\n\\n        /**\\n         * Represents the vertical overflow behavior of the text frame. See `ExcelScript.ShapeTextVerticalOverflow` for details.\\n         */\\n        setVerticalOverflow(verticalOverflow: ShapeTextVerticalOverflow): void;\\n\\n        /**\\n         * Deletes all the text in the text frame.\\n         */\\n        deleteText(): void;\\n    }\\n\\n    /**\\n     * Contains the text that is attached to a shape, in addition to properties and methods for manipulating the text.\\n     */\\n    interface TextRange {\\n        /**\\n         * Returns a `ShapeFont` object that represents the font attributes for the text range.\\n         */\\n        getFont(): ShapeFont;\\n\\n        /**\\n         * Represents the plain text content of the text range.\\n         */\\n        getText(): string;\\n\\n        /**\\n         * Represents the plain text content of the text range.\\n         */\\n        setText(text: string): void;\\n\\n        /**\\n         * Returns a TextRange object for the substring in the given range.\\n         * @param start The zero-based index of the first character to get from the text range.\\n         * @param length Optional. The number of characters to be returned in the new text range. If length is omitted, all the characters from start to the end of the text range\'s last paragraph will be returned.\\n         */\\n        getSubstring(start: number, length?: number): TextRange;\\n    }\\n\\n    /**\\n     * Represents the font attributes, such as font name, font size, and color, for a shape\'s `TextRange` object.\\n     */\\n    interface ShapeFont {\\n        /**\\n         * Represents the bold status of font. Returns `null` if the `TextRange` includes both bold and non-bold text fragments.\\n         */\\n        getBold(): boolean;\\n\\n        /**\\n         * Represents the bold status of font. Returns `null` if the `TextRange` includes both bold and non-bold text fragments.\\n         */\\n        setBold(bold: boolean): void;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., \\"#FF0000\\" represents red). Returns `null` if the `TextRange` includes text fragments with different colors.\\n         */\\n        getColor(): string;\\n\\n        /**\\n         * HTML color code representation of the text color (e.g., \\"#FF0000\\" represents red). Returns `null` if the `TextRange` includes text fragments with different colors.\\n         */\\n        setColor(color: string): void;\\n\\n        /**\\n         * Represents the italic status of font. Returns `null` if the `TextRange` includes both italic and non-italic text fragments.\\n         */\\n        getItalic(): boolean;\\n\\n        /**\\n         * Represents the italic status of font. Returns `null` if the `TextRange` includes both italic and non-italic text fragments.\\n         */\\n        setItalic(italic: boolean): void;\\n\\n        /**\\n         * Represents font name (e.g., \\"Calibri\\"). If the text is a Complex Script or East Asian language, this is the corresponding font name; otherwise it is the Latin font name.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Represents font name (e.g., \\"Calibri\\"). If the text is a Complex Script or East Asian language, this is the corresponding font name; otherwise it is the Latin font name.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Represents font size in points (e.g., 11). Returns `null` if the `TextRange` includes text fragments with different font sizes.\\n         */\\n        getSize(): number;\\n\\n        /**\\n         * Represents font size in points (e.g., 11). Returns `null` if the `TextRange` includes text fragments with different font sizes.\\n         */\\n        setSize(size: number): void;\\n\\n        /**\\n         * Type of underline applied to the font. Returns `null` if the `TextRange` includes text fragments with different underline styles. See `ExcelScript.ShapeFontUnderlineStyle` for details.\\n         */\\n        getUnderline(): ShapeFontUnderlineStyle;\\n\\n        /**\\n         * Type of underline applied to the font. Returns `null` if the `TextRange` includes text fragments with different underline styles. See `ExcelScript.ShapeFontUnderlineStyle` for details.\\n         */\\n        setUnderline(underline: ShapeFontUnderlineStyle): void;\\n    }\\n\\n    /**\\n     * Represents a `Slicer` object in the workbook.\\n     */\\n    interface Slicer {\\n        /**\\n         * Represents the caption of the slicer.\\n         */\\n        getCaption(): string;\\n\\n        /**\\n         * Represents the caption of the slicer.\\n         */\\n        setCaption(caption: string): void;\\n\\n        /**\\n         * Represents the height, in points, of the slicer.\\n         * Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n         */\\n        getHeight(): number;\\n\\n        /**\\n         * Represents the height, in points, of the slicer.\\n         * Throws an `InvalidArgument` exception when set with a negative value or zero as an input.\\n         */\\n        setHeight(height: number): void;\\n\\n        /**\\n         * Represents the unique ID of the slicer.\\n         */\\n        getId(): string;\\n\\n        /**\\n         * Value is `true` if all filters currently applied on the slicer are cleared.\\n         */\\n        getIsFilterCleared(): boolean;\\n\\n        /**\\n         * Represents the distance, in points, from the left side of the slicer to the left of the worksheet.\\n         * Throws an `InvalidArgument` error when set with a negative value as an input.\\n         */\\n        getLeft(): number;\\n\\n        /**\\n         * Represents the distance, in points, from the left side of the slicer to the left of the worksheet.\\n         * Throws an `InvalidArgument` error when set with a negative value as an input.\\n         */\\n        setLeft(left: number): void;\\n\\n        /**\\n         * Represents the name of the slicer.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Represents the name of the slicer.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Represents the sort order of the items in the slicer. Possible values are: \\"DataSourceOrder\\", \\"Ascending\\", \\"Descending\\".\\n         */\\n        getSortBy(): SlicerSortType;\\n\\n        /**\\n         * Represents the sort order of the items in the slicer. Possible values are: \\"DataSourceOrder\\", \\"Ascending\\", \\"Descending\\".\\n         */\\n        setSortBy(sortBy: SlicerSortType): void;\\n\\n        /**\\n         * Constant value that represents the slicer style. Possible values are: \\"SlicerStyleLight1\\" through \\"SlicerStyleLight6\\", \\"TableStyleOther1\\" through \\"TableStyleOther2\\", \\"SlicerStyleDark1\\" through \\"SlicerStyleDark6\\". A custom user-defined style present in the workbook can also be specified.\\n         */\\n        getStyle(): string;\\n\\n        /**\\n         * Constant value that represents the slicer style. Possible values are: \\"SlicerStyleLight1\\" through \\"SlicerStyleLight6\\", \\"TableStyleOther1\\" through \\"TableStyleOther2\\", \\"SlicerStyleDark1\\" through \\"SlicerStyleDark6\\". A custom user-defined style present in the workbook can also be specified.\\n         */\\n        setStyle(style: string): void;\\n\\n        /**\\n         * Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.\\n         * Throws an `InvalidArgument` error when set with a negative value as an input.\\n         */\\n        getTop(): number;\\n\\n        /**\\n         * Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.\\n         * Throws an `InvalidArgument` error when set with a negative value as an input.\\n         */\\n        setTop(top: number): void;\\n\\n        /**\\n         * Represents the width, in points, of the slicer.\\n         * Throws an `InvalidArgument` error when set with a negative value or zero as an input.\\n         */\\n        getWidth(): number;\\n\\n        /**\\n         * Represents the width, in points, of the slicer.\\n         * Throws an `InvalidArgument` error when set with a negative value or zero as an input.\\n         */\\n        setWidth(width: number): void;\\n\\n        /**\\n         * Represents the worksheet containing the slicer.\\n         */\\n        getWorksheet(): Worksheet;\\n\\n        /**\\n         * Clears all the filters currently applied on the slicer.\\n         */\\n        clearFilters(): void;\\n\\n        /**\\n         * Deletes the slicer.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Returns an array of selected items\' keys.\\n         */\\n        getSelectedItems(): string[];\\n\\n        /**\\n         * Selects slicer items based on their keys. The previous selections are cleared.\\n         * All items will be selected by default if the array is empty.\\n         * @param items Optional. The specified slicer item names to be selected.\\n         */\\n        selectItems(items?: string[]): void;\\n\\n        /**\\n         * Represents the collection of slicer items that are part of the slicer.\\n         */\\n        getSlicerItems(): SlicerItem[];\\n\\n        /**\\n         * Gets a slicer item using its key or name. If the slicer item doesn\'t exist, then this method returns `undefined`.\\n         * @param key Key or name of the slicer to be retrieved.\\n         */\\n        getSlicerItem(key: string): SlicerItem | undefined;\\n    }\\n\\n    /**\\n     * Represents a slicer item in a slicer.\\n     */\\n    interface SlicerItem {\\n        /**\\n         * Value is `true` if the slicer item has data.\\n         */\\n        getHasData(): boolean;\\n\\n        /**\\n         * Value is `true` if the slicer item is selected.\\n         * Setting this value will not clear the selected state of other slicer items.\\n         * By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.\\n         */\\n        getIsSelected(): boolean;\\n\\n        /**\\n         * Value is `true` if the slicer item is selected.\\n         * Setting this value will not clear the selected state of other slicer items.\\n         * By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.\\n         */\\n        setIsSelected(isSelected: boolean): void;\\n\\n        /**\\n         * Represents the unique value representing the slicer item.\\n         */\\n        getKey(): string;\\n\\n        /**\\n         * Represents the title displayed in the Excel UI.\\n         */\\n        getName(): string;\\n    }\\n\\n    /**\\n     * Represents a named sheet view of a worksheet. A sheet view stores the sort and filter rules for a particular worksheet.\\n     * Every sheet view (even a temporary sheet view) has a unique, worksheet-scoped name that is used to access the view.\\n     */\\n    interface NamedSheetView {\\n        /**\\n         * Gets or sets the name of the sheet view.\\n         * The temporary sheet view name is the empty string (\\"\\").  Naming the view by using the name property causes the sheet view to be saved.\\n         */\\n        getName(): string;\\n\\n        /**\\n         * Gets or sets the name of the sheet view.\\n         * The temporary sheet view name is the empty string (\\"\\").  Naming the view by using the name property causes the sheet view to be saved.\\n         */\\n        setName(name: string): void;\\n\\n        /**\\n         * Activates this sheet view. This is equivalent to using \\"Switch To\\" in the Excel UI.\\n         */\\n        activate(): void;\\n\\n        /**\\n         * Removes the sheet view from the worksheet.\\n         */\\n        delete(): void;\\n\\n        /**\\n         * Creates a copy of this sheet view.\\n         * @param name The name of the duplicated sheet view. If no name is provided, one will be generated.\\n         */\\n        duplicate(name?: string): NamedSheetView;\\n    }\\n\\n    //\\n    // Interface\\n    //\\n\\n    /**\\n     * Configurable template for a date filter to apply to a PivotField.\\n     * The `condition` defines what criteria need to be set in order for the filter to operate.\\n     */\\n    interface PivotDateFilter {\\n        /**\\n         * The comparator is the static value to which other values are compared. The type of comparison is defined by the condition.\\n         */\\n        comparator?: FilterDatetime;\\n\\n        /**\\n         * Specifies the condition for the filter, which defines the necessary filtering criteria.\\n         */\\n        condition: DateFilterCondition;\\n\\n        /**\\n         * If `true`, filter *excludes* items that meet criteria. The default is `false` (filter to include items that meet criteria).\\n         */\\n        exclusive?: boolean;\\n\\n        /**\\n         * The lower-bound of the range for the `between` filter condition.\\n         */\\n        lowerBound?: FilterDatetime;\\n\\n        /**\\n         * The upper-bound of the range for the `between` filter condition.\\n         */\\n        upperBound?: FilterDatetime;\\n\\n        /**\\n         * For `equals`, `before`, `after`, and `between` filter conditions, indicates if comparisons should be made as whole days.\\n         */\\n        wholeDays?: boolean;\\n    }\\n\\n    /**\\n     * An interface representing all PivotFilters currently applied to a given PivotField.\\n     */\\n    interface PivotFilters {\\n        /**\\n         * The PivotField\'s currently applied date filter. This property is `null` if no value filter is applied.\\n         */\\n        dateFilter?: PivotDateFilter;\\n\\n        /**\\n         * The PivotField\'s currently applied label filter. This property is `null` if no value filter is applied.\\n         */\\n        labelFilter?: PivotLabelFilter;\\n\\n        /**\\n         * The PivotField\'s currently applied manual filter. This property is `null` if no value filter is applied.\\n         */\\n        manualFilter?: PivotManualFilter;\\n\\n        /**\\n         * The PivotField\'s currently applied value filter. This property is `null` if no value filter is applied.\\n         */\\n        valueFilter?: PivotValueFilter;\\n    }\\n\\n    /**\\n     * Configurable template for a label filter to apply to a PivotField.\\n     * The `condition` defines what criteria need to be set in order for the filter to operate.\\n     */\\n    interface PivotLabelFilter {\\n        /**\\n         * Specifies the condition for the filter, which defines the necessary filtering criteria.\\n         */\\n        condition: LabelFilterCondition;\\n\\n        /**\\n         * If `true`, filter *excludes* items that meet criteria. The default is `false` (filter to include items that meet criteria).\\n         */\\n        exclusive?: boolean;\\n\\n        /**\\n         * The lower-bound of the range for the `between` filter condition.\\n         * Note: A numeric string is treated as a number when being compared against other numeric strings.\\n         */\\n        lowerBound?: string;\\n\\n        /**\\n         * The substring used for `beginsWith`, `endsWith`, and `contains` filter conditions.\\n         */\\n        substring?: string;\\n\\n        /**\\n         * The upper-bound of the range for the `between` filter condition.\\n         * Note: A numeric string is treated as a number when being compared against other numeric strings.\\n         */\\n        upperBound?: string;\\n    }\\n\\n    /**\\n     * Configurable template for a manual filter to apply to a PivotField.\\n     * The `condition` defines what criteria need to be set in order for the filter to operate.\\n     */\\n    interface PivotManualFilter {\\n        /**\\n         * A list of selected items to manually filter. These must be existing and valid items from the chosen field.\\n         */\\n        selectedItems?: (string | PivotItem)[];\\n    }\\n\\n    /**\\n     * Configurable template for a value filter to apply to a PivotField.\\n     * The `condition` defines what criteria need to be set in order for the filter to operate.\\n     */\\n    interface PivotValueFilter {\\n        /**\\n         * The comparator is the static value to which other values are compared. The type of comparison is defined by the condition.\\n         * For example, if comparator is \\"50\\" and condition is \\"greaterThan\\", all item values that are not greater than 50 will be removed by the filter.\\n         */\\n        comparator?: number;\\n\\n        /**\\n         * Specifies the condition for the filter, which defines the necessary filtering criteria.\\n         */\\n        condition: ValueFilterCondition;\\n\\n        /**\\n         * If `true`, filter *excludes* items that meet criteria. The default is `false` (filter to include items that meet criteria).\\n         */\\n        exclusive?: boolean;\\n\\n        /**\\n         * The lower-bound of the range for the `between` filter condition.\\n         */\\n        lowerBound?: number;\\n\\n        /**\\n         * Specifies if the filter is for the top/bottom N items, top/bottom N percent, or top/bottom N sum.\\n         */\\n        selectionType?: TopBottomSelectionType;\\n\\n        /**\\n         * The \\"N\\" threshold number of items, percent, or sum to be filtered for a top/bottom filter condition.\\n         */\\n        threshold?: number;\\n\\n        /**\\n         * The upper-bound of the range for the `between` filter condition.\\n         */\\n        upperBound?: number;\\n\\n        /**\\n         * Name of the chosen \\"value\\" in the field by which to filter.\\n         */\\n        value: string;\\n    }\\n\\n    /**\\n     * Represents the options in sheet protection.\\n     */\\n    interface WorksheetProtectionOptions {\\n        /**\\n         * Represents the worksheet protection option allowing use of the AutoFilter feature.\\n         */\\n        allowAutoFilter?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing deleting of columns.\\n         */\\n        allowDeleteColumns?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing deleting of rows.\\n         */\\n        allowDeleteRows?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing editing of objects.\\n         */\\n        allowEditObjects?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing editing of scenarios.\\n         */\\n        allowEditScenarios?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing formatting of cells.\\n         */\\n        allowFormatCells?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing formatting of columns.\\n         */\\n        allowFormatColumns?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing formatting of rows.\\n         */\\n        allowFormatRows?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing inserting of columns.\\n         */\\n        allowInsertColumns?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing inserting of hyperlinks.\\n         */\\n        allowInsertHyperlinks?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing inserting of rows.\\n         */\\n        allowInsertRows?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing use of the PivotTable feature.\\n         */\\n        allowPivotTables?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option allowing use of the sort feature.\\n         */\\n        allowSort?: boolean;\\n\\n        /**\\n         * Represents the worksheet protection option of selection mode.\\n         */\\n        selectionMode?: ProtectionSelectionMode;\\n    }\\n\\n    /**\\n     * Represents the necessary strings to get/set a hyperlink (XHL) object.\\n     */\\n    interface RangeHyperlink {\\n        /**\\n         * Represents the URL target for the hyperlink.\\n         */\\n        address?: string;\\n\\n        /**\\n         * Represents the document reference target for the hyperlink.\\n         */\\n        documentReference?: string;\\n\\n        /**\\n         * Represents the string displayed when hovering over the hyperlink.\\n         */\\n        screenTip?: string;\\n\\n        /**\\n         * Represents the string that is displayed in the top left most cell in the range.\\n         */\\n        textToDisplay?: string;\\n    }\\n\\n    /**\\n     * Represents the search criteria to be used.\\n     */\\n    interface SearchCriteria {\\n        /**\\n         * Specifies if the match needs to be complete or partial.\\n         * A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`).\\n         * Default is `false` (partial).\\n         */\\n        completeMatch?: boolean;\\n\\n        /**\\n         * Specifies if the match is case-sensitive. Default is `false` (case-insensitive).\\n         */\\n        matchCase?: boolean;\\n\\n        /**\\n         * Specifies the search direction. Default is forward. See `ExcelScript.SearchDirection`.\\n         */\\n        searchDirection?: SearchDirection;\\n    }\\n\\n    /**\\n     * Represents the worksheet search criteria to be used.\\n     */\\n    interface WorksheetSearchCriteria {\\n        /**\\n         * Specifies if the match needs to be complete or partial.\\n         * A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`).\\n         * Default is `false` (partial).\\n         */\\n        completeMatch?: boolean;\\n\\n        /**\\n         * Specifies if the match is case-sensitive. Default is `false` (case-insensitive).\\n         */\\n        matchCase?: boolean;\\n    }\\n\\n    /**\\n     * Represents the replace criteria to be used.\\n     */\\n    interface ReplaceCriteria {\\n        /**\\n         * Specifies if the match needs to be complete or partial.\\n         * A complete match matches the entire contents of the cell. A partial match matches a substring within the content of the cell (e.g., `cat` partially matches `caterpillar` and `scatter`).\\n         * Default is `false` (partial).\\n         */\\n        completeMatch?: boolean;\\n\\n        /**\\n         * Specifies if the match is case-sensitive. Default is `false` (case-insensitive).\\n         */\\n        matchCase?: boolean;\\n    }\\n\\n    /**\\n     * A data validation rule contains different types of data validation. You can only use one of them at a time according the `ExcelScript.DataValidationType`.\\n     */\\n    interface DataValidationRule {\\n        /**\\n         * Custom data validation criteria.\\n         */\\n        custom?: CustomDataValidation;\\n\\n        /**\\n         * Date data validation criteria.\\n         */\\n        date?: DateTimeDataValidation;\\n\\n        /**\\n         * Decimal data validation criteria.\\n         */\\n        decimal?: BasicDataValidation;\\n\\n        /**\\n         * List data validation criteria.\\n         */\\n        list?: ListDataValidation;\\n\\n        /**\\n         * Text length data validation criteria.\\n         */\\n        textLength?: BasicDataValidation;\\n\\n        /**\\n         * Time data validation criteria.\\n         */\\n        time?: DateTimeDataValidation;\\n\\n        /**\\n         * Whole number data validation criteria.\\n         */\\n        wholeNumber?: BasicDataValidation;\\n    }\\n\\n    /**\\n     * Represents the basic type data validation criteria.\\n     */\\n    interface BasicDataValidation {\\n        /**\\n         * Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand.\\n         * For example, setting formula1 to 10 and operator to GreaterThan means that valid data for the range must be greater than 10.\\n         * When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \\"=A1\\", or a formula like \\"=MIN(A1, B1)\\").\\n         * When retrieving the value, it will always be returned as a string formula, for example: \\"=10\\", \\"=A1\\", \\"=SUM(A1:B5)\\", etc.\\n         */\\n        formula1: string | number | Range;\\n\\n        /**\\n         * With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan.\\n         * When setting the value, it can be passed in as a number, a range object, or a string formula (where the string is either a stringified number, a cell reference like \\"=A1\\", or a formula like \\"=MIN(A1, B1)\\").\\n         * When retrieving the value, it will always be returned as a string formula, for example: \\"=10\\", \\"=A1\\", \\"=SUM(A1:B5)\\", etc.\\n         */\\n        formula2?: string | number | Range;\\n\\n        /**\\n         * The operator to use for validating the data.\\n         */\\n        operator: DataValidationOperator;\\n    }\\n\\n    /**\\n     * Represents the date data validation criteria.\\n     */\\n    interface DateTimeDataValidation {\\n        /**\\n         * Specifies the right-hand operand when the operator property is set to a binary operator such as GreaterThan (the left-hand operand is the value the user tries to enter in the cell). With the ternary operators Between and NotBetween, specifies the lower bound operand.\\n         * When setting the value, it can be passed in as a Date, a Range object, or a string formula (where the string is either a stringified date/time in ISO8601 format, a cell reference like \\"=A1\\", or a formula like \\"=MIN(A1, B1)\\").\\n         * When retrieving the value, it will always be returned as a string formula, for example: \\"=10\\", \\"=A1\\", \\"=SUM(A1:B5)\\", etc.\\n         */\\n        formula1: string | Date | Range;\\n\\n        /**\\n         * With the ternary operators Between and NotBetween, specifies the upper bound operand. Is not used with the binary operators, such as GreaterThan.\\n         * When setting the value, it can be passed in as a Date, a Range object, or a string (where the string is either a stringified date/time in ISO8601 format, a cell reference like \\"=A1\\", or a formula like \\"=MIN(A1, B1)\\").\\n         * When retrieving the value, it will always be returned as a string formula, for example: \\"=10\\", \\"=A1\\", \\"=SUM(A1:B5)\\", etc.\\n         */\\n        formula2?: string | Date | Range;\\n\\n        /**\\n         * The operator to use for validating the data.\\n         */\\n        operator: DataValidationOperator;\\n    }\\n\\n    /**\\n     * Represents the List data validation criteria.\\n     */\\n    interface ListDataValidation {\\n        /**\\n         * Specifies whether to display the list in a cell drop-down. The default is `true`.\\n         */\\n        inCellDropDown: boolean;\\n\\n        /**\\n         * Source of the list for data validation\\n         * When setting the value, it can be passed in as a `Range` object, or a string that contains a comma-separated number, boolean, or date.\\n         */\\n        source: string | Range;\\n    }\\n\\n    /**\\n     * Represents the custom data validation criteria.\\n     */\\n    interface CustomDataValidation {\\n        /**\\n         * A custom data validation formula. This creates special input rules, such as preventing duplicates, or limiting the total in a range of cells.\\n         */\\n        formula: string;\\n    }\\n\\n    /**\\n     * Represents the error alert properties for the data validation.\\n     */\\n    interface DataValidationErrorAlert {\\n        /**\\n         * Represents the error alert message.\\n         */\\n        message: string;\\n\\n        /**\\n         * Specifies whether to show an error alert dialog when a user enters invalid data. The default is `true`.\\n         */\\n        showAlert: boolean;\\n\\n        /**\\n         * The data validation alert type, please see `ExcelScript.DataValidationAlertStyle` for details.\\n         */\\n        style: DataValidationAlertStyle;\\n\\n        /**\\n         * Represents the error alert dialog title.\\n         */\\n        title: string;\\n    }\\n\\n    /**\\n     * Represents the user prompt properties for the data validation.\\n     */\\n    interface DataValidationPrompt {\\n        /**\\n         * Specifies the message of the prompt.\\n         */\\n        message: string;\\n\\n        /**\\n         * Specifies if a prompt is shown when a user selects a cell with data validation.\\n         */\\n        showPrompt: boolean;\\n\\n        /**\\n         * Specifies the title for the prompt.\\n         */\\n        title: string;\\n    }\\n\\n    /**\\n     * Represents a condition in a sorting operation.\\n     */\\n    interface SortField {\\n        /**\\n         * Specifies if the sorting is done in an ascending fashion.\\n         */\\n        ascending?: boolean;\\n\\n        /**\\n         * Specifies the color that is the target of the condition if the sorting is on font or cell color.\\n         */\\n        color?: string;\\n\\n        /**\\n         * Represents additional sorting options for this field.\\n         */\\n        dataOption?: SortDataOption;\\n\\n        /**\\n         * Specifies the icon that is the target of the condition, if the sorting is on the cell\'s icon.\\n         */\\n        icon?: Icon;\\n\\n        /**\\n         * Specifies the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).\\n         */\\n        key: number;\\n\\n        /**\\n         * Specifies the type of sorting of this condition.\\n         */\\n        sortOn?: SortOn;\\n\\n        /**\\n         * Specifies the subfield that is the target property name of a rich value to sort on.\\n         */\\n        subField?: string;\\n    }\\n\\n    /**\\n     * Represents the filtering criteria applied to a column.\\n     */\\n    interface FilterCriteria {\\n        /**\\n         * The HTML color string used to filter cells. Used with `cellColor` and `fontColor` filtering.\\n         */\\n        color?: string;\\n\\n        /**\\n         * The first criterion used to filter data. Used as an operator in the case of `custom` filtering.\\n         * For example \\">50\\" for numbers greater than 50, or \\"=*s\\" for values ending in \\"s\\".\\n         *\\n         * Used as a number in the case of top/bottom items/percents (e.g., \\"5\\" for the top 5 items if `filterOn` is set to `topItems`).\\n         */\\n        criterion1?: string;\\n\\n        /**\\n         * The second criterion used to filter data. Only used as an operator in the case of `custom` filtering.\\n         */\\n        criterion2?: string;\\n\\n        /**\\n         * The dynamic criteria from the `ExcelScript.DynamicFilterCriteria` set to apply on this column. Used with `dynamic` filtering.\\n         */\\n        dynamicCriteria?: DynamicFilterCriteria;\\n\\n        /**\\n         * The property used by the filter to determine whether the values should stay visible.\\n         */\\n        filterOn: FilterOn;\\n\\n        /**\\n         * The icon used to filter cells. Used with `icon` filtering.\\n         */\\n        icon?: Icon;\\n\\n        /**\\n         * The operator used to combine criterion 1 and 2 when using `custom` filtering.\\n         */\\n        operator?: FilterOperator;\\n\\n        /**\\n         * The property used by the filter to do a rich filter on rich values.\\n         */\\n        subField?: string;\\n\\n        /**\\n         * The set of values to be used as part of `values` filtering.\\n         */\\n        values?: Array<string | FilterDatetime>;\\n    }\\n\\n    /**\\n     * Represents how to filter a date when filtering on values.\\n     */\\n    interface FilterDatetime {\\n        /**\\n         * The date in ISO8601 format used to filter data.\\n         */\\n        date: string;\\n\\n        /**\\n         * How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to \\"month\\", the filter operation will keep all rows with a date in the month of April 2005.\\n         */\\n        specificity: FilterDatetimeSpecificity;\\n    }\\n\\n    /**\\n     * Represents a cell icon.\\n     */\\n    interface Icon {\\n        /**\\n         * Specifies the index of the icon in the given set.\\n         */\\n        index: number;\\n\\n        /**\\n         * Specifies the set that the icon is part of.\\n         */\\n        set: IconSet;\\n    }\\n\\n    interface ShowAsRule {\\n        /**\\n         * The PivotField to base the `ShowAs` calculation on, if applicable according to the `ShowAsCalculation` type, else `null`.\\n         */\\n        baseField?: PivotField;\\n\\n        /**\\n         * The item to base the `ShowAs` calculation on, if applicable according to the `ShowAsCalculation` type, else `null`.\\n         */\\n        baseItem?: PivotItem;\\n\\n        /**\\n         * The `ShowAs` calculation to use for the PivotField. See `ExcelScript.ShowAsCalculation` for details.\\n         */\\n        calculation: ShowAsCalculation;\\n    }\\n\\n    /**\\n     * Subtotals for the Pivot Field.\\n     */\\n    interface Subtotals {\\n        /**\\n         * If `Automatic` is set to `true`, then all other values will be ignored when setting the `Subtotals`.\\n         */\\n        automatic?: boolean;\\n\\n        /**\\n         * Average\\n         */\\n        average?: boolean;\\n\\n        /**\\n         * Count\\n         */\\n        count?: boolean;\\n\\n        /**\\n         * CountNumbers\\n         */\\n        countNumbers?: boolean;\\n\\n        /**\\n         * Max\\n         */\\n        max?: boolean;\\n\\n        /**\\n         * Min\\n         */\\n        min?: boolean;\\n\\n        /**\\n         * Product\\n         */\\n        product?: boolean;\\n\\n        /**\\n         * StandardDeviation\\n         */\\n        standardDeviation?: boolean;\\n\\n        /**\\n         * StandardDeviationP\\n         */\\n        standardDeviationP?: boolean;\\n\\n        /**\\n         * Sum\\n         */\\n        sum?: boolean;\\n\\n        /**\\n         * Variance\\n         */\\n        variance?: boolean;\\n\\n        /**\\n         * VarianceP\\n         */\\n        varianceP?: boolean;\\n    }\\n\\n    /**\\n     * Represents a rule-type for a data bar.\\n     */\\n    interface ConditionalDataBarRule {\\n        /**\\n         * The formula, if required, on which to evaluate the data bar rule.\\n         */\\n        formula?: string;\\n\\n        /**\\n         * The type of rule for the data bar.\\n         */\\n        type: ConditionalFormatRuleType;\\n    }\\n\\n    /**\\n     * Represents an icon criterion which contains a type, value, an operator, and an optional custom icon, if not using an icon set.\\n     */\\n    interface ConditionalIconCriterion {\\n        /**\\n         * The custom icon for the current criterion, if different from the default icon set, else `null` will be returned.\\n         */\\n        customIcon?: Icon;\\n\\n        /**\\n         * A number or a formula depending on the type.\\n         */\\n        formula: string;\\n\\n        /**\\n         * `greaterThan` or `greaterThanOrEqual` for each of the rule types for the icon conditional format.\\n         */\\n        operator: ConditionalIconCriterionOperator;\\n\\n        /**\\n         * What the icon conditional formula should be based on.\\n         */\\n        type: ConditionalFormatIconRuleType;\\n    }\\n\\n    /**\\n     * Represents the criteria of the color scale.\\n     */\\n    interface ConditionalColorScaleCriteria {\\n        /**\\n         * The maximum point of the color scale criterion.\\n         */\\n        maximum: ConditionalColorScaleCriterion;\\n\\n        /**\\n         * The midpoint of the color scale criterion, if the color scale is a 3-color scale.\\n         */\\n        midpoint?: ConditionalColorScaleCriterion;\\n\\n        /**\\n         * The minimum point of the color scale criterion.\\n         */\\n        minimum: ConditionalColorScaleCriterion;\\n    }\\n\\n    /**\\n     * Represents a color scale criterion which contains a type, value, and a color.\\n     */\\n    interface ConditionalColorScaleCriterion {\\n        /**\\n         * HTML color code representation of the color scale color (e.g., #FF0000 represents Red).\\n         */\\n        color?: string;\\n\\n        /**\\n         * A number, a formula, or `null` (if `type` is `lowestValue`).\\n         */\\n        formula?: string;\\n\\n        /**\\n         * What the criterion conditional formula should be based on.\\n         */\\n        type: ConditionalFormatColorCriterionType;\\n    }\\n\\n    /**\\n     * Represents the rule of the top/bottom conditional format.\\n     */\\n    interface ConditionalTopBottomRule {\\n        /**\\n         * The rank between 1 and 1000 for numeric ranks or 1 and 100 for percent ranks.\\n         */\\n        rank: number;\\n\\n        /**\\n         * Format values based on the top or bottom rank.\\n         */\\n        type: ConditionalTopBottomCriterionType;\\n    }\\n\\n    /**\\n     * Represents the preset criteria conditional format rule.\\n     */\\n    interface ConditionalPresetCriteriaRule {\\n        /**\\n         * The criterion of the conditional format.\\n         */\\n        criterion: ConditionalFormatPresetCriterion;\\n    }\\n\\n    /**\\n     * Represents a cell value conditional format rule.\\n     */\\n    interface ConditionalTextComparisonRule {\\n        /**\\n         * The operator of the text conditional format.\\n         */\\n        operator: ConditionalTextOperator;\\n\\n        /**\\n         * The text value of the conditional format.\\n         */\\n        text: string;\\n    }\\n\\n    /**\\n     * Represents a cell value conditional format rule.\\n     */\\n    interface ConditionalCellValueRule {\\n        /**\\n         * The formula, if required, on which to evaluate the conditional format rule.\\n         */\\n        formula1: string;\\n\\n        /**\\n         * The formula, if required, on which to evaluate the conditional format rule.\\n         */\\n        formula2?: string;\\n\\n        /**\\n         * The operator of the cell value conditional format.\\n         */\\n        operator: ConditionalCellValueOperator;\\n    }\\n\\n    /**\\n     * Represents page zoom properties.\\n     */\\n    interface PageLayoutZoomOptions {\\n        /**\\n         * Number of pages to fit horizontally. This value can be `null` if percentage scale is used.\\n         */\\n        horizontalFitToPages?: number;\\n\\n        /**\\n         * Print page scale value can be between 10 and 400. This value can be `null` if fit to page tall or wide is specified.\\n         */\\n        scale?: number;\\n\\n        /**\\n         * Number of pages to fit vertically. This value can be `null` if percentage scale is used.\\n         */\\n        verticalFitToPages?: number;\\n    }\\n\\n    /**\\n     * Represents the options in page layout margins.\\n     */\\n    interface PageLayoutMarginOptions {\\n        /**\\n         * Specifies the page layout bottom margin in the unit specified to use for printing.\\n         */\\n        bottom?: number;\\n\\n        /**\\n         * Specifies the page layout footer margin in the unit specified to use for printing.\\n         */\\n        footer?: number;\\n\\n        /**\\n         * Specifies the page layout header margin in the unit specified to use for printing.\\n         */\\n        header?: number;\\n\\n        /**\\n         * Specifies the page layout left margin in the unit specified to use for printing.\\n         */\\n        left?: number;\\n\\n        /**\\n         * Specifies the page layout right margin in the unit specified to use for printing.\\n         */\\n        right?: number;\\n\\n        /**\\n         * Specifies the page layout top margin in the unit specified to use for printing.\\n         */\\n        top?: number;\\n    }\\n\\n    /**\\n     * Represents the entity that is mentioned in comments.\\n     */\\n    interface CommentMention {\\n        /**\\n         * The email address of the entity that is mentioned in a comment.\\n         */\\n        email: string;\\n\\n        /**\\n         * The ID of the entity. The ID matches one of the IDs in `CommentRichContent.richContent`.\\n         */\\n        id: number;\\n\\n        /**\\n         * The name of the entity that is mentioned in a comment.\\n         */\\n        name: string;\\n    }\\n\\n    /**\\n     * Represents the content contained within a comment or comment reply. Rich content incudes the text string and any other objects contained within the comment body, such as mentions.\\n     */\\n    interface CommentRichContent {\\n        /**\\n         * An array containing all the entities (e.g., people) mentioned within the comment.\\n         */\\n        mentions?: CommentMention[];\\n\\n        /**\\n         * Specifies the rich content of the comment (e.g., comment content with mentions, the first mentioned entity has an ID attribute of 0, and the second mentioned entity has an ID attribute of 1).\\n         */\\n        richContent: string;\\n    }\\n\\n    //\\n    // Enum\\n    //\\n\\n    /**\\n     * Represents the refresh mode of the workbook links.\\n     */\\n    enum WorkbookLinksRefreshMode {\\n        /**\\n         * The workbook links are updated manually.\\n         */\\n        manual,\\n\\n        /**\\n         * The workbook links are updated at a set interval determined by the Excel application.\\n         */\\n        automatic,\\n    }\\n\\n    /**\\n     * Enum representing all accepted conditions by which a date filter can be applied.\\n     * Used to configure the type of PivotFilter that is applied to the field.\\n     */\\n    enum DateFilterCondition {\\n        /**\\n         * `DateFilterCondition` is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * Equals comparator criterion.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         * Optional Criteria: {`wholeDays`, `exclusive`}.\\n         */\\n        equals,\\n\\n        /**\\n         * Date is before comparator date.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         * Optional Criteria: {`wholeDays`}.\\n         */\\n        before,\\n\\n        /**\\n         * Date is before or equal to comparator date.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         * Optional Criteria: {`wholeDays`}.\\n         */\\n        beforeOrEqualTo,\\n\\n        /**\\n         * Date is after comparator date.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         * Optional Criteria: {`wholeDays`}.\\n         */\\n        after,\\n\\n        /**\\n         * Date is after or equal to comparator date.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         * Optional Criteria: {`wholeDays`}.\\n         */\\n        afterOrEqualTo,\\n\\n        /**\\n         * Between `lowerBound` and `upperBound` dates.\\n         *\\n         * Required Criteria: {`lowerBound`, `upperBound`}.\\n         * Optional Criteria: {`wholeDays`, `exclusive`}.\\n         */\\n        between,\\n\\n        /**\\n         * Date is tomorrow.\\n         */\\n        tomorrow,\\n\\n        /**\\n         * Date is today.\\n         */\\n        today,\\n\\n        /**\\n         * Date is yesterday.\\n         */\\n        yesterday,\\n\\n        /**\\n         * Date is next week.\\n         */\\n        nextWeek,\\n\\n        /**\\n         * Date is this week.\\n         */\\n        thisWeek,\\n\\n        /**\\n         * Date is last week.\\n         */\\n        lastWeek,\\n\\n        /**\\n         * Date is next month.\\n         */\\n        nextMonth,\\n\\n        /**\\n         * Date is this month.\\n         */\\n        thisMonth,\\n\\n        /**\\n         * Date is last month.\\n         */\\n        lastMonth,\\n\\n        /**\\n         * Date is next quarter.\\n         */\\n        nextQuarter,\\n\\n        /**\\n         * Date is this quarter.\\n         */\\n        thisQuarter,\\n\\n        /**\\n         * Date is last quarter.\\n         */\\n        lastQuarter,\\n\\n        /**\\n         * Date is next year.\\n         */\\n        nextYear,\\n\\n        /**\\n         * Date is this year.\\n         */\\n        thisYear,\\n\\n        /**\\n         * Date is last year.\\n         */\\n        lastYear,\\n\\n        /**\\n         * Date is in the same year to date.\\n         */\\n        yearToDate,\\n\\n        /**\\n         * Date is in Quarter 1.\\n         */\\n        allDatesInPeriodQuarter1,\\n\\n        /**\\n         * Date is in Quarter 2.\\n         */\\n        allDatesInPeriodQuarter2,\\n\\n        /**\\n         * Date is in Quarter 3.\\n         */\\n        allDatesInPeriodQuarter3,\\n\\n        /**\\n         * Date is in Quarter 4.\\n         */\\n        allDatesInPeriodQuarter4,\\n\\n        /**\\n         * Date is in January.\\n         */\\n        allDatesInPeriodJanuary,\\n\\n        /**\\n         * Date is in February.\\n         */\\n        allDatesInPeriodFebruary,\\n\\n        /**\\n         * Date is in March.\\n         */\\n        allDatesInPeriodMarch,\\n\\n        /**\\n         * Date is in April.\\n         */\\n        allDatesInPeriodApril,\\n\\n        /**\\n         * Date is in May.\\n         */\\n        allDatesInPeriodMay,\\n\\n        /**\\n         * Date is in June.\\n         */\\n        allDatesInPeriodJune,\\n\\n        /**\\n         * Date is in July.\\n         */\\n        allDatesInPeriodJuly,\\n\\n        /**\\n         * Date is in August.\\n         */\\n        allDatesInPeriodAugust,\\n\\n        /**\\n         * Date is in September.\\n         */\\n        allDatesInPeriodSeptember,\\n\\n        /**\\n         * Date is in October.\\n         */\\n        allDatesInPeriodOctober,\\n\\n        /**\\n         * Date is in November.\\n         */\\n        allDatesInPeriodNovember,\\n\\n        /**\\n         * Date is in December.\\n         */\\n        allDatesInPeriodDecember,\\n    }\\n\\n    /**\\n     * Enum representing all accepted conditions by which a label filter can be applied.\\n     * Used to configure the type of PivotFilter that is applied to the field.\\n     * `PivotFilter.criteria.exclusive` can be set to `true` to invert many of these conditions.\\n     */\\n    enum LabelFilterCondition {\\n        /**\\n         * `LabelFilterCondition` is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * Equals comparator criterion.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        equals,\\n\\n        /**\\n         * Label begins with substring criterion.\\n         *\\n         * Required Criteria: {`substring`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        beginsWith,\\n\\n        /**\\n         * Label ends with substring criterion.\\n         *\\n         * Required Criteria: {`substring`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        endsWith,\\n\\n        /**\\n         * Label contains substring criterion.\\n         *\\n         * Required Criteria: {`substring`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        contains,\\n\\n        /**\\n         * Greater than comparator criterion.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         */\\n        greaterThan,\\n\\n        /**\\n         * Greater than or equal to comparator criterion.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         */\\n        greaterThanOrEqualTo,\\n\\n        /**\\n         * Less than comparator criterion.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         */\\n        lessThan,\\n\\n        /**\\n         * Less than or equal to comparator criterion.\\n         *\\n         * Required Criteria: {`comparator`}.\\n         */\\n        lessThanOrEqualTo,\\n\\n        /**\\n         * Between `lowerBound` and `upperBound` criteria.\\n         *\\n         * Required Criteria: {`lowerBound`, `upperBound`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        between,\\n    }\\n\\n    /**\\n     * A simple enum that represents a type of filter for a PivotField.\\n     */\\n    enum PivotFilterType {\\n        /**\\n         * `PivotFilterType` is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * Filters based on the value of a PivotItem with respect to a `DataPivotHierarchy`.\\n         */\\n        value,\\n\\n        /**\\n         * Filters specific manually selected PivotItems from the PivotTable.\\n         */\\n        manual,\\n\\n        /**\\n         * Filters PivotItems based on their labels.\\n         * Note: A PivotField cannot simultaneously have a label filter and a date filter applied.\\n         */\\n        label,\\n\\n        /**\\n         * Filters PivotItems with a date in place of a label.\\n         * Note: A PivotField cannot simultaneously have a label filter and a date filter applied.\\n         */\\n        date,\\n    }\\n\\n    /**\\n     * A simple enum for top/bottom filters to select whether to filter by the top N or bottom N percent, number, or sum of values.\\n     */\\n    enum TopBottomSelectionType {\\n        /**\\n         * Filter the top/bottom N number of items as measured by the chosen value.\\n         */\\n        items,\\n\\n        /**\\n         * Filter the top/bottom N percent of items as measured by the chosen value.\\n         */\\n        percent,\\n\\n        /**\\n         * Filter the top/bottom N sum as measured by the chosen value.\\n         */\\n        sum,\\n    }\\n\\n    /**\\n     * Enum representing all accepted conditions by which a value filter can be applied.\\n     * Used to configure the type of PivotFilter that is applied to the field.\\n     * `PivotFilter.exclusive` can be set to `true` to invert many of these conditions.\\n     */\\n    enum ValueFilterCondition {\\n        /**\\n         * `ValueFilterCondition` is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * Equals comparator criterion.\\n         *\\n         * Required Criteria: {`value`, `comparator`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        equals,\\n\\n        /**\\n         * Greater than comparator criterion.\\n         *\\n         * Required Criteria: {`value`, `comparator`}.\\n         */\\n        greaterThan,\\n\\n        /**\\n         * Greater than or equal to comparator criterion.\\n         *\\n         * Required Criteria: {`value`, `comparator`}.\\n         */\\n        greaterThanOrEqualTo,\\n\\n        /**\\n         * Less than comparator criterion.\\n         *\\n         * Required Criteria: {`value`, `comparator`}.\\n         */\\n        lessThan,\\n\\n        /**\\n         * Less than or equal to comparator criterion.\\n         *\\n         * Required Criteria: {`value`, `comparator`}.\\n         */\\n        lessThanOrEqualTo,\\n\\n        /**\\n         * Between `lowerBound` and `upperBound` criteria.\\n         *\\n         * Required Criteria: {`value`, `lowerBound`, `upperBound`}.\\n         * Optional Criteria: {`exclusive`}.\\n         */\\n        between,\\n\\n        /**\\n         * In top N (`threshold`) [items, percent, sum] of value category.\\n         *\\n         * Required Criteria: {`value`, `threshold`, `selectionType`}.\\n         */\\n        topN,\\n\\n        /**\\n         * In bottom N (`threshold`) [items, percent, sum] of value category.\\n         *\\n         * Required Criteria: {`value`, `threshold`, `selectionType`}.\\n         */\\n        bottomN,\\n    }\\n\\n    /**\\n     * Represents the dimensions when getting values from chart series.\\n     */\\n    enum ChartSeriesDimension {\\n        /**\\n         * The chart series axis for the categories.\\n         */\\n        categories,\\n\\n        /**\\n         * The chart series axis for the values.\\n         */\\n        values,\\n\\n        /**\\n         * The chart series axis for the x-axis values in scatter and bubble charts.\\n         */\\n        xvalues,\\n\\n        /**\\n         * The chart series axis for the y-axis values in scatter and bubble charts.\\n         */\\n        yvalues,\\n\\n        /**\\n         * The chart series axis for the bubble sizes in bubble charts.\\n         */\\n        bubbleSizes,\\n    }\\n\\n    /**\\n     * Represents the criteria for the top/bottom values filter.\\n     */\\n    enum PivotFilterTopBottomCriterion {\\n        invalid,\\n\\n        topItems,\\n\\n        topPercent,\\n\\n        topSum,\\n\\n        bottomItems,\\n\\n        bottomPercent,\\n\\n        bottomSum,\\n    }\\n\\n    /**\\n     * Represents the sort direction.\\n     */\\n    enum SortBy {\\n        /**\\n         * Ascending sort. Smallest to largest or A to Z.\\n         */\\n        ascending,\\n\\n        /**\\n         * Descending sort. Largest to smallest or Z to A.\\n         */\\n        descending,\\n    }\\n\\n    /**\\n     * Aggregation function for the DataPivotField.\\n     */\\n    enum AggregationFunction {\\n        /**\\n         * Aggregation function is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * Excel will automatically select the aggregation based on the data items.\\n         */\\n        automatic,\\n\\n        /**\\n         * Aggregate using the sum of the data, equivalent to the SUM function.\\n         */\\n        sum,\\n\\n        /**\\n         * Aggregate using the count of items in the data, equivalent to the COUNTA function.\\n         */\\n        count,\\n\\n        /**\\n         * Aggregate using the average of the data, equivalent to the AVERAGE function.\\n         */\\n        average,\\n\\n        /**\\n         * Aggregate using the maximum value of the data, equivalent to the MAX function.\\n         */\\n        max,\\n\\n        /**\\n         * Aggregate using the minimum value of the data, equivalent to the MIN function.\\n         */\\n        min,\\n\\n        /**\\n         * Aggregate using the product of the data, equivalent to the PRODUCT function.\\n         */\\n        product,\\n\\n        /**\\n         * Aggregate using the count of numbers in the data, equivalent to the COUNT function.\\n         */\\n        countNumbers,\\n\\n        /**\\n         * Aggregate using the standard deviation of the data, equivalent to the STDEV function.\\n         */\\n        standardDeviation,\\n\\n        /**\\n         * Aggregate using the standard deviation of the data, equivalent to the STDEVP function.\\n         */\\n        standardDeviationP,\\n\\n        /**\\n         * Aggregate using the variance of the data, equivalent to the VAR function.\\n         */\\n        variance,\\n\\n        /**\\n         * Aggregate using the variance of the data, equivalent to the VARP function.\\n         */\\n        varianceP,\\n    }\\n\\n    /**\\n     * The ShowAs calculation function for the DataPivotField.\\n     */\\n    enum ShowAsCalculation {\\n        /**\\n         * Calculation is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * No calculation is applied.\\n         */\\n        none,\\n\\n        /**\\n         * Percent of the grand total.\\n         */\\n        percentOfGrandTotal,\\n\\n        /**\\n         * Percent of the row total.\\n         */\\n        percentOfRowTotal,\\n\\n        /**\\n         * Percent of the column total.\\n         */\\n        percentOfColumnTotal,\\n\\n        /**\\n         * Percent of the row total for the specified Base field.\\n         */\\n        percentOfParentRowTotal,\\n\\n        /**\\n         * Percent of the column total for the specified Base field.\\n         */\\n        percentOfParentColumnTotal,\\n\\n        /**\\n         * Percent of the grand total for the specified Base field.\\n         */\\n        percentOfParentTotal,\\n\\n        /**\\n         * Percent of the specified Base field and Base item.\\n         */\\n        percentOf,\\n\\n        /**\\n         * Running total of the specified Base field.\\n         */\\n        runningTotal,\\n\\n        /**\\n         * Percent running total of the specified Base field.\\n         */\\n        percentRunningTotal,\\n\\n        /**\\n         * Difference from the specified Base field and Base item.\\n         */\\n        differenceFrom,\\n\\n        /**\\n         * Difference from the specified Base field and Base item.\\n         */\\n        percentDifferenceFrom,\\n\\n        /**\\n         * Ascending rank of the specified Base field.\\n         */\\n        rankAscending,\\n\\n        /**\\n         * Descending rank of the specified Base field.\\n         */\\n        rankDecending,\\n\\n        /**\\n         * Calculates the values as follows:\\n         * ((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))\\n         */\\n        index,\\n    }\\n\\n    /**\\n     * Represents the axis from which to get the PivotItems.\\n     */\\n    enum PivotAxis {\\n        /**\\n         * The axis or region is unknown or unsupported.\\n         */\\n        unknown,\\n\\n        /**\\n         * The row axis.\\n         */\\n        row,\\n\\n        /**\\n         * The column axis.\\n         */\\n        column,\\n\\n        /**\\n         * The data axis.\\n         */\\n        data,\\n\\n        /**\\n         * The filter axis.\\n         */\\n        filter,\\n    }\\n\\n    enum ChartAxisType {\\n        invalid,\\n\\n        /**\\n         * Axis displays categories.\\n         */\\n        category,\\n\\n        /**\\n         * Axis displays values.\\n         */\\n        value,\\n\\n        /**\\n         * Axis displays data series.\\n         */\\n        series,\\n    }\\n\\n    enum ChartAxisGroup {\\n        primary,\\n\\n        secondary,\\n    }\\n\\n    enum ChartAxisScaleType {\\n        linear,\\n\\n        logarithmic,\\n    }\\n\\n    enum ChartAxisPosition {\\n        automatic,\\n\\n        maximum,\\n\\n        minimum,\\n\\n        custom,\\n    }\\n\\n    enum ChartAxisTickMark {\\n        none,\\n\\n        cross,\\n\\n        inside,\\n\\n        outside,\\n    }\\n\\n    /**\\n     * Represents the state of calculation across the entire Excel application.\\n     */\\n    enum CalculationState {\\n        /**\\n         * Calculations complete.\\n         */\\n        done,\\n\\n        /**\\n         * Calculations in progress.\\n         */\\n        calculating,\\n\\n        /**\\n         * Changes that trigger calculation have been made, but a recalculation has not yet been performed.\\n         */\\n        pending,\\n    }\\n\\n    enum ChartAxisTickLabelPosition {\\n        nextToAxis,\\n\\n        high,\\n\\n        low,\\n\\n        none,\\n    }\\n\\n    enum ChartAxisDisplayUnit {\\n        /**\\n         * Default option. This will reset display unit to the axis, and set unit label invisible.\\n         */\\n        none,\\n\\n        /**\\n         * This will set the axis in units of hundreds.\\n         */\\n        hundreds,\\n\\n        /**\\n         * This will set the axis in units of thousands.\\n         */\\n        thousands,\\n\\n        /**\\n         * This will set the axis in units of tens of thousands.\\n         */\\n        tenThousands,\\n\\n        /**\\n         * This will set the axis in units of hundreds of thousands.\\n         */\\n        hundredThousands,\\n\\n        /**\\n         * This will set the axis in units of millions.\\n         */\\n        millions,\\n\\n        /**\\n         * This will set the axis in units of tens of millions.\\n         */\\n        tenMillions,\\n\\n        /**\\n         * This will set the axis in units of hundreds of millions.\\n         */\\n        hundredMillions,\\n\\n        /**\\n         * This will set the axis in units of billions.\\n         */\\n        billions,\\n\\n        /**\\n         * This will set the axis in units of trillions.\\n         */\\n        trillions,\\n\\n        /**\\n         * This will set the axis in units of custom value.\\n         */\\n        custom,\\n    }\\n\\n    /**\\n     * Specifies the unit of time for chart axes and data series.\\n     */\\n    enum ChartAxisTimeUnit {\\n        days,\\n\\n        months,\\n\\n        years,\\n    }\\n\\n    /**\\n     * Represents the quartile calculation type of chart series layout. Only applies to a box and whisker chart.\\n     */\\n    enum ChartBoxQuartileCalculation {\\n        inclusive,\\n\\n        exclusive,\\n    }\\n\\n    /**\\n     * Specifies the type of the category axis.\\n     */\\n    enum ChartAxisCategoryType {\\n        /**\\n         * Excel controls the axis type.\\n         */\\n        automatic,\\n\\n        /**\\n         * Axis groups data by an arbitrary set of categories.\\n         */\\n        textAxis,\\n\\n        /**\\n         * Axis groups data on a time scale.\\n         */\\n        dateAxis,\\n    }\\n\\n    /**\\n     * Specifies the bin type of a histogram chart or pareto chart series.\\n     */\\n    enum ChartBinType {\\n        category,\\n\\n        auto,\\n\\n        binWidth,\\n\\n        binCount,\\n    }\\n\\n    enum ChartLineStyle {\\n        none,\\n\\n        continuous,\\n\\n        dash,\\n\\n        dashDot,\\n\\n        dashDotDot,\\n\\n        dot,\\n\\n        grey25,\\n\\n        grey50,\\n\\n        grey75,\\n\\n        automatic,\\n\\n        roundDot,\\n    }\\n\\n    enum ChartDataLabelPosition {\\n        invalid,\\n\\n        none,\\n\\n        center,\\n\\n        insideEnd,\\n\\n        insideBase,\\n\\n        outsideEnd,\\n\\n        left,\\n\\n        right,\\n\\n        top,\\n\\n        bottom,\\n\\n        bestFit,\\n\\n        callout,\\n    }\\n\\n    /**\\n     * Represents which parts of the error bar to include.\\n     */\\n    enum ChartErrorBarsInclude {\\n        both,\\n\\n        minusValues,\\n\\n        plusValues,\\n    }\\n\\n    /**\\n     * Represents the range type for error bars.\\n     */\\n    enum ChartErrorBarsType {\\n        fixedValue,\\n\\n        percent,\\n\\n        stDev,\\n\\n        stError,\\n\\n        custom,\\n    }\\n\\n    /**\\n     * Represents the mapping level of a chart series. This only applies to region map charts.\\n     */\\n    enum ChartMapAreaLevel {\\n        automatic,\\n\\n        dataOnly,\\n\\n        city,\\n\\n        county,\\n\\n        state,\\n\\n        country,\\n\\n        continent,\\n\\n        world,\\n    }\\n\\n    /**\\n     * Represents the gradient style of a chart series. This is only applicable for region map charts.\\n     */\\n    enum ChartGradientStyle {\\n        twoPhaseColor,\\n\\n        threePhaseColor,\\n    }\\n\\n    /**\\n     * Represents the gradient style type of a chart series. This is only applicable for region map charts.\\n     */\\n    enum ChartGradientStyleType {\\n        extremeValue,\\n\\n        number,\\n\\n        percent,\\n    }\\n\\n    /**\\n     * Represents the position of the chart title.\\n     */\\n    enum ChartTitlePosition {\\n        automatic,\\n\\n        top,\\n\\n        bottom,\\n\\n        left,\\n\\n        right,\\n    }\\n\\n    enum ChartLegendPosition {\\n        invalid,\\n\\n        top,\\n\\n        bottom,\\n\\n        left,\\n\\n        right,\\n\\n        corner,\\n\\n        custom,\\n    }\\n\\n    enum ChartMarkerStyle {\\n        invalid,\\n\\n        automatic,\\n\\n        none,\\n\\n        square,\\n\\n        diamond,\\n\\n        triangle,\\n\\n        x,\\n\\n        star,\\n\\n        dot,\\n\\n        dash,\\n\\n        circle,\\n\\n        plus,\\n\\n        picture,\\n    }\\n\\n    enum ChartPlotAreaPosition {\\n        automatic,\\n\\n        custom,\\n    }\\n\\n    /**\\n     * Represents the region level of a chart series layout. This only applies to region map charts.\\n     */\\n    enum ChartMapLabelStrategy {\\n        none,\\n\\n        bestFit,\\n\\n        showAll,\\n    }\\n\\n    /**\\n     * Represents the region projection type of a chart series layout. This only applies to region map charts.\\n     */\\n    enum ChartMapProjectionType {\\n        automatic,\\n\\n        mercator,\\n\\n        miller,\\n\\n        robinson,\\n\\n        albers,\\n    }\\n\\n    /**\\n     * Represents the parent label strategy of the chart series layout. This only applies to treemap charts\\n     */\\n    enum ChartParentLabelStrategy {\\n        none,\\n\\n        banner,\\n\\n        overlapping,\\n    }\\n\\n    /**\\n     * Specifies whether the series are by rows or by columns. In Excel on desktop, the \\"auto\\" option will inspect the source data shape to automatically guess whether the data is by rows or columns. In Excel on the web, \\"auto\\" will simply default to \\"columns\\".\\n     */\\n    enum ChartSeriesBy {\\n        /**\\n         * In Excel on desktop, the \\"auto\\" option will inspect the source data shape to automatically guess whether the data is by rows or columns. In Excel on the web, \\"auto\\" will simply default to \\"columns\\".\\n         */\\n        auto,\\n\\n        columns,\\n\\n        rows,\\n    }\\n\\n    /**\\n     * Represents the horizontal alignment for the specified object.\\n     */\\n    enum ChartTextHorizontalAlignment {\\n        center,\\n\\n        left,\\n\\n        right,\\n\\n        justify,\\n\\n        distributed,\\n    }\\n\\n    /**\\n     * Represents the vertical alignment for the specified object.\\n     */\\n    enum ChartTextVerticalAlignment {\\n        center,\\n\\n        bottom,\\n\\n        top,\\n\\n        justify,\\n\\n        distributed,\\n    }\\n\\n    enum ChartTickLabelAlignment {\\n        center,\\n\\n        left,\\n\\n        right,\\n    }\\n\\n    enum ChartType {\\n        invalid,\\n\\n        columnClustered,\\n\\n        columnStacked,\\n\\n        columnStacked100,\\n\\n        barClustered,\\n\\n        barStacked,\\n\\n        barStacked100,\\n\\n        lineStacked,\\n\\n        lineStacked100,\\n\\n        lineMarkers,\\n\\n        lineMarkersStacked,\\n\\n        lineMarkersStacked100,\\n\\n        pieOfPie,\\n\\n        pieExploded,\\n\\n        barOfPie,\\n\\n        xyscatterSmooth,\\n\\n        xyscatterSmoothNoMarkers,\\n\\n        xyscatterLines,\\n\\n        xyscatterLinesNoMarkers,\\n\\n        areaStacked,\\n\\n        areaStacked100,\\n\\n        doughnutExploded,\\n\\n        radarMarkers,\\n\\n        radarFilled,\\n\\n        surface,\\n\\n        surfaceWireframe,\\n\\n        surfaceTopView,\\n\\n        surfaceTopViewWireframe,\\n\\n        bubble,\\n\\n        bubble3DEffect,\\n\\n        stockHLC,\\n\\n        stockOHLC,\\n\\n        stockVHLC,\\n\\n        stockVOHLC,\\n\\n        cylinderColClustered,\\n\\n        cylinderColStacked,\\n\\n        cylinderColStacked100,\\n\\n        cylinderBarClustered,\\n\\n        cylinderBarStacked,\\n\\n        cylinderBarStacked100,\\n\\n        cylinderCol,\\n\\n        coneColClustered,\\n\\n        coneColStacked,\\n\\n        coneColStacked100,\\n\\n        coneBarClustered,\\n\\n        coneBarStacked,\\n\\n        coneBarStacked100,\\n\\n        coneCol,\\n\\n        pyramidColClustered,\\n\\n        pyramidColStacked,\\n\\n        pyramidColStacked100,\\n\\n        pyramidBarClustered,\\n\\n        pyramidBarStacked,\\n\\n        pyramidBarStacked100,\\n\\n        pyramidCol,\\n\\n        line,\\n\\n        pie,\\n\\n        xyscatter,\\n\\n        area,\\n\\n        doughnut,\\n\\n        radar,\\n\\n        histogram,\\n\\n        boxwhisker,\\n\\n        pareto,\\n\\n        regionMap,\\n\\n        treemap,\\n\\n        waterfall,\\n\\n        sunburst,\\n\\n        funnel,\\n    }\\n\\n    enum ChartUnderlineStyle {\\n        none,\\n\\n        single,\\n    }\\n\\n    enum ChartDisplayBlanksAs {\\n        notPlotted,\\n\\n        zero,\\n\\n        interplotted,\\n    }\\n\\n    enum ChartPlotBy {\\n        rows,\\n\\n        columns,\\n    }\\n\\n    enum ChartSplitType {\\n        splitByPosition,\\n\\n        splitByValue,\\n\\n        splitByPercentValue,\\n\\n        splitByCustomSplit,\\n    }\\n\\n    enum ChartColorScheme {\\n        colorfulPalette1,\\n\\n        colorfulPalette2,\\n\\n        colorfulPalette3,\\n\\n        colorfulPalette4,\\n\\n        monochromaticPalette1,\\n\\n        monochromaticPalette2,\\n\\n        monochromaticPalette3,\\n\\n        monochromaticPalette4,\\n\\n        monochromaticPalette5,\\n\\n        monochromaticPalette6,\\n\\n        monochromaticPalette7,\\n\\n        monochromaticPalette8,\\n\\n        monochromaticPalette9,\\n\\n        monochromaticPalette10,\\n\\n        monochromaticPalette11,\\n\\n        monochromaticPalette12,\\n\\n        monochromaticPalette13,\\n    }\\n\\n    enum ChartTrendlineType {\\n        linear,\\n\\n        exponential,\\n\\n        logarithmic,\\n\\n        movingAverage,\\n\\n        polynomial,\\n\\n        power,\\n    }\\n\\n    /**\\n     * Specifies where in the z-order a shape should be moved relative to other shapes.\\n     */\\n    enum ShapeZOrder {\\n        bringToFront,\\n\\n        bringForward,\\n\\n        sendToBack,\\n\\n        sendBackward,\\n    }\\n\\n    /**\\n     * Specifies the type of a shape.\\n     */\\n    enum ShapeType {\\n        unsupported,\\n\\n        image,\\n\\n        geometricShape,\\n\\n        group,\\n\\n        line,\\n    }\\n\\n    /**\\n     * Specifies whether the shape is scaled relative to its original or current size.\\n     */\\n    enum ShapeScaleType {\\n        currentSize,\\n\\n        originalSize,\\n    }\\n\\n    /**\\n     * Specifies which part of the shape retains its position when the shape is scaled.\\n     */\\n    enum ShapeScaleFrom {\\n        scaleFromTopLeft,\\n\\n        scaleFromMiddle,\\n\\n        scaleFromBottomRight,\\n    }\\n\\n    /**\\n     * Specifies a shape\'s fill type.\\n     */\\n    enum ShapeFillType {\\n        /**\\n         * No fill.\\n         */\\n        noFill,\\n\\n        /**\\n         * Solid fill.\\n         */\\n        solid,\\n\\n        /**\\n         * Gradient fill.\\n         */\\n        gradient,\\n\\n        /**\\n         * Pattern fill.\\n         */\\n        pattern,\\n\\n        /**\\n         * Picture and texture fill.\\n         */\\n        pictureAndTexture,\\n\\n        /**\\n         * Mixed fill.\\n         */\\n        mixed,\\n    }\\n\\n    /**\\n     * The type of underline applied to a font.\\n     */\\n    enum ShapeFontUnderlineStyle {\\n        none,\\n\\n        single,\\n\\n        double,\\n\\n        heavy,\\n\\n        dotted,\\n\\n        dottedHeavy,\\n\\n        dash,\\n\\n        dashHeavy,\\n\\n        dashLong,\\n\\n        dashLongHeavy,\\n\\n        dotDash,\\n\\n        dotDashHeavy,\\n\\n        dotDotDash,\\n\\n        dotDotDashHeavy,\\n\\n        wavy,\\n\\n        wavyHeavy,\\n\\n        wavyDouble,\\n    }\\n\\n    /**\\n     * The format of the image.\\n     */\\n    enum PictureFormat {\\n        unknown,\\n\\n        /**\\n         * Bitmap image.\\n         */\\n        bmp,\\n\\n        /**\\n         * Joint Photographic Experts Group.\\n         */\\n        jpeg,\\n\\n        /**\\n         * Graphics Interchange Format.\\n         */\\n        gif,\\n\\n        /**\\n         * Portable Network Graphics.\\n         */\\n        png,\\n\\n        /**\\n         * Scalable Vector Graphic.\\n         */\\n        svg,\\n    }\\n\\n    /**\\n     * The style for a line.\\n     */\\n    enum ShapeLineStyle {\\n        /**\\n         * Single line.\\n         */\\n        single,\\n\\n        /**\\n         * Thick line with a thin line on each side.\\n         */\\n        thickBetweenThin,\\n\\n        /**\\n         * Thick line next to thin line. For horizontal lines, the thick line is above the thin line. For vertical lines, the thick line is to the left of the thin line.\\n         */\\n        thickThin,\\n\\n        /**\\n         * Thick line next to thin line. For horizontal lines, the thick line is below the thin line. For vertical lines, the thick line is to the right of the thin line.\\n         */\\n        thinThick,\\n\\n        /**\\n         * Two thin lines.\\n         */\\n        thinThin,\\n    }\\n\\n    /**\\n     * The dash style for a line.\\n     */\\n    enum ShapeLineDashStyle {\\n        dash,\\n\\n        dashDot,\\n\\n        dashDotDot,\\n\\n        longDash,\\n\\n        longDashDot,\\n\\n        roundDot,\\n\\n        solid,\\n\\n        squareDot,\\n\\n        longDashDotDot,\\n\\n        systemDash,\\n\\n        systemDot,\\n\\n        systemDashDot,\\n    }\\n\\n    enum ArrowheadLength {\\n        short,\\n\\n        medium,\\n\\n        long,\\n    }\\n\\n    enum ArrowheadStyle {\\n        none,\\n\\n        triangle,\\n\\n        stealth,\\n\\n        diamond,\\n\\n        oval,\\n\\n        open,\\n    }\\n\\n    enum ArrowheadWidth {\\n        narrow,\\n\\n        medium,\\n\\n        wide,\\n    }\\n\\n    enum BindingType {\\n        range,\\n\\n        table,\\n\\n        text,\\n    }\\n\\n    enum BorderIndex {\\n        edgeTop,\\n\\n        edgeBottom,\\n\\n        edgeLeft,\\n\\n        edgeRight,\\n\\n        insideVertical,\\n\\n        insideHorizontal,\\n\\n        diagonalDown,\\n\\n        diagonalUp,\\n    }\\n\\n    enum BorderLineStyle {\\n        none,\\n\\n        continuous,\\n\\n        dash,\\n\\n        dashDot,\\n\\n        dashDotDot,\\n\\n        dot,\\n\\n        double,\\n\\n        slantDashDot,\\n    }\\n\\n    enum BorderWeight {\\n        hairline,\\n\\n        thin,\\n\\n        medium,\\n\\n        thick,\\n    }\\n\\n    enum CalculationMode {\\n        /**\\n         * The default recalculation behavior where Excel calculates new formula results every time the relevant data is changed.\\n         */\\n        automatic,\\n\\n        /**\\n         * Calculates new formula results every time the relevant data is changed, unless the formula is in a data table.\\n         */\\n        automaticExceptTables,\\n\\n        /**\\n         * Calculations only occur when the user or add-in requests them.\\n         */\\n        manual,\\n    }\\n\\n    enum CalculationType {\\n        /**\\n         * Recalculates all cells that Excel has marked as dirty, that is, dependents of volatile or changed data, and cells programmatically marked as dirty.\\n         */\\n        recalculate,\\n\\n        /**\\n         * This will mark all cells as dirty and then recalculate them.\\n         */\\n        full,\\n\\n        /**\\n         * This will rebuild the full dependency chain, mark all cells as dirty and then recalculate them.\\n         */\\n        fullRebuild,\\n    }\\n\\n    enum ClearApplyTo {\\n        all,\\n\\n        /**\\n         * Clears all formatting for the range.\\n         */\\n        formats,\\n\\n        /**\\n         * Clears the contents of the range.\\n         */\\n        contents,\\n\\n        /**\\n         * Clears all hyperlinks, but leaves all content and formatting intact.\\n         */\\n        hyperlinks,\\n\\n        /**\\n         * Removes hyperlinks and formatting for the cell but leaves content, conditional formats, and data validation intact.\\n         */\\n        removeHyperlinks,\\n    }\\n\\n    /**\\n     * Represents the format options for a data bar axis.\\n     */\\n    enum ConditionalDataBarAxisFormat {\\n        automatic,\\n\\n        none,\\n\\n        cellMidPoint,\\n    }\\n\\n    /**\\n     * Represents the data bar direction within a cell.\\n     */\\n    enum ConditionalDataBarDirection {\\n        context,\\n\\n        leftToRight,\\n\\n        rightToLeft,\\n    }\\n\\n    /**\\n     * Represents the direction for a selection.\\n     */\\n    enum ConditionalFormatDirection {\\n        top,\\n\\n        bottom,\\n    }\\n\\n    enum ConditionalFormatType {\\n        custom,\\n\\n        dataBar,\\n\\n        colorScale,\\n\\n        iconSet,\\n\\n        topBottom,\\n\\n        presetCriteria,\\n\\n        containsText,\\n\\n        cellValue,\\n    }\\n\\n    /**\\n     * Represents the types of conditional format values.\\n     */\\n    enum ConditionalFormatRuleType {\\n        invalid,\\n\\n        automatic,\\n\\n        lowestValue,\\n\\n        highestValue,\\n\\n        number,\\n\\n        percent,\\n\\n        formula,\\n\\n        percentile,\\n    }\\n\\n    /**\\n     * Represents the types of icon conditional format.\\n     */\\n    enum ConditionalFormatIconRuleType {\\n        invalid,\\n\\n        number,\\n\\n        percent,\\n\\n        formula,\\n\\n        percentile,\\n    }\\n\\n    /**\\n     * Represents the types of color criterion for conditional formatting.\\n     */\\n    enum ConditionalFormatColorCriterionType {\\n        invalid,\\n\\n        lowestValue,\\n\\n        highestValue,\\n\\n        number,\\n\\n        percent,\\n\\n        formula,\\n\\n        percentile,\\n    }\\n\\n    /**\\n     * Represents the criteria for the above/below average conditional format type.\\n     */\\n    enum ConditionalTopBottomCriterionType {\\n        invalid,\\n\\n        topItems,\\n\\n        topPercent,\\n\\n        bottomItems,\\n\\n        bottomPercent,\\n    }\\n\\n    /**\\n     * Represents the criteria of the preset criteria conditional format type.\\n     */\\n    enum ConditionalFormatPresetCriterion {\\n        invalid,\\n\\n        blanks,\\n\\n        nonBlanks,\\n\\n        errors,\\n\\n        nonErrors,\\n\\n        yesterday,\\n\\n        today,\\n\\n        tomorrow,\\n\\n        lastSevenDays,\\n\\n        lastWeek,\\n\\n        thisWeek,\\n\\n        nextWeek,\\n\\n        lastMonth,\\n\\n        thisMonth,\\n\\n        nextMonth,\\n\\n        aboveAverage,\\n\\n        belowAverage,\\n\\n        equalOrAboveAverage,\\n\\n        equalOrBelowAverage,\\n\\n        oneStdDevAboveAverage,\\n\\n        oneStdDevBelowAverage,\\n\\n        twoStdDevAboveAverage,\\n\\n        twoStdDevBelowAverage,\\n\\n        threeStdDevAboveAverage,\\n\\n        threeStdDevBelowAverage,\\n\\n        uniqueValues,\\n\\n        duplicateValues,\\n    }\\n\\n    /**\\n     * Represents the operator of the text conditional format type.\\n     */\\n    enum ConditionalTextOperator {\\n        invalid,\\n\\n        contains,\\n\\n        notContains,\\n\\n        beginsWith,\\n\\n        endsWith,\\n    }\\n\\n    /**\\n     * Represents the operator of the text conditional format type.\\n     */\\n    enum ConditionalCellValueOperator {\\n        invalid,\\n\\n        between,\\n\\n        notBetween,\\n\\n        equalTo,\\n\\n        notEqualTo,\\n\\n        greaterThan,\\n\\n        lessThan,\\n\\n        greaterThanOrEqual,\\n\\n        lessThanOrEqual,\\n    }\\n\\n    /**\\n     * Represents the operator for each icon criteria.\\n     */\\n    enum ConditionalIconCriterionOperator {\\n        invalid,\\n\\n        greaterThan,\\n\\n        greaterThanOrEqual,\\n    }\\n\\n    enum ConditionalRangeBorderIndex {\\n        edgeTop,\\n\\n        edgeBottom,\\n\\n        edgeLeft,\\n\\n        edgeRight,\\n    }\\n\\n    enum ConditionalRangeBorderLineStyle {\\n        none,\\n\\n        continuous,\\n\\n        dash,\\n\\n        dashDot,\\n\\n        dashDotDot,\\n\\n        dot,\\n    }\\n\\n    enum ConditionalRangeFontUnderlineStyle {\\n        none,\\n\\n        single,\\n\\n        double,\\n    }\\n\\n    /**\\n     * Represents the data validation type enum.\\n     */\\n    enum DataValidationType {\\n        /**\\n         * None means allow any value, indicating that there is no data validation in the range.\\n         */\\n        none,\\n\\n        /**\\n         * The whole number data validation type.\\n         */\\n        wholeNumber,\\n\\n        /**\\n         * The decimal data validation type.\\n         */\\n        decimal,\\n\\n        /**\\n         * The list data validation type.\\n         */\\n        list,\\n\\n        /**\\n         * The date data validation type.\\n         */\\n        date,\\n\\n        /**\\n         * The time data validation type.\\n         */\\n        time,\\n\\n        /**\\n         * The text length data validation type.\\n         */\\n        textLength,\\n\\n        /**\\n         * The custom data validation type.\\n         */\\n        custom,\\n\\n        /**\\n         * Inconsistent means that the range has inconsistent data validation, indicating that there are different rules on different cells.\\n         */\\n        inconsistent,\\n\\n        /**\\n         * Mixed criteria means that the range has data validation present on some but not all cells.\\n         */\\n        mixedCriteria,\\n    }\\n\\n    /**\\n     * Represents the data validation operator enum.\\n     */\\n    enum DataValidationOperator {\\n        between,\\n\\n        notBetween,\\n\\n        equalTo,\\n\\n        notEqualTo,\\n\\n        greaterThan,\\n\\n        lessThan,\\n\\n        greaterThanOrEqualTo,\\n\\n        lessThanOrEqualTo,\\n    }\\n\\n    /**\\n     * Represents the data validation error alert style. The default is `Stop`.\\n     */\\n    enum DataValidationAlertStyle {\\n        stop,\\n\\n        warning,\\n\\n        information,\\n    }\\n\\n    enum DeleteShiftDirection {\\n        up,\\n\\n        left,\\n    }\\n\\n    enum DynamicFilterCriteria {\\n        unknown,\\n\\n        aboveAverage,\\n\\n        allDatesInPeriodApril,\\n\\n        allDatesInPeriodAugust,\\n\\n        allDatesInPeriodDecember,\\n\\n        allDatesInPeriodFebruary,\\n\\n        allDatesInPeriodJanuary,\\n\\n        allDatesInPeriodJuly,\\n\\n        allDatesInPeriodJune,\\n\\n        allDatesInPeriodMarch,\\n\\n        allDatesInPeriodMay,\\n\\n        allDatesInPeriodNovember,\\n\\n        allDatesInPeriodOctober,\\n\\n        allDatesInPeriodQuarter1,\\n\\n        allDatesInPeriodQuarter2,\\n\\n        allDatesInPeriodQuarter3,\\n\\n        allDatesInPeriodQuarter4,\\n\\n        allDatesInPeriodSeptember,\\n\\n        belowAverage,\\n\\n        lastMonth,\\n\\n        lastQuarter,\\n\\n        lastWeek,\\n\\n        lastYear,\\n\\n        nextMonth,\\n\\n        nextQuarter,\\n\\n        nextWeek,\\n\\n        nextYear,\\n\\n        thisMonth,\\n\\n        thisQuarter,\\n\\n        thisWeek,\\n\\n        thisYear,\\n\\n        today,\\n\\n        tomorrow,\\n\\n        yearToDate,\\n\\n        yesterday,\\n    }\\n\\n    enum FilterDatetimeSpecificity {\\n        year,\\n\\n        month,\\n\\n        day,\\n\\n        hour,\\n\\n        minute,\\n\\n        second,\\n    }\\n\\n    enum FilterOn {\\n        bottomItems,\\n\\n        bottomPercent,\\n\\n        cellColor,\\n\\n        dynamic,\\n\\n        fontColor,\\n\\n        values,\\n\\n        topItems,\\n\\n        topPercent,\\n\\n        icon,\\n\\n        custom,\\n    }\\n\\n    enum FilterOperator {\\n        and,\\n\\n        or,\\n    }\\n\\n    enum HorizontalAlignment {\\n        general,\\n\\n        left,\\n\\n        center,\\n\\n        right,\\n\\n        fill,\\n\\n        justify,\\n\\n        centerAcrossSelection,\\n\\n        distributed,\\n    }\\n\\n    enum IconSet {\\n        invalid,\\n\\n        threeArrows,\\n\\n        threeArrowsGray,\\n\\n        threeFlags,\\n\\n        threeTrafficLights1,\\n\\n        threeTrafficLights2,\\n\\n        threeSigns,\\n\\n        threeSymbols,\\n\\n        threeSymbols2,\\n\\n        fourArrows,\\n\\n        fourArrowsGray,\\n\\n        fourRedToBlack,\\n\\n        fourRating,\\n\\n        fourTrafficLights,\\n\\n        fiveArrows,\\n\\n        fiveArrowsGray,\\n\\n        fiveRating,\\n\\n        fiveQuarters,\\n\\n        threeStars,\\n\\n        threeTriangles,\\n\\n        fiveBoxes,\\n    }\\n\\n    enum ImageFittingMode {\\n        fit,\\n\\n        fitAndCenter,\\n\\n        fill,\\n    }\\n\\n    enum InsertShiftDirection {\\n        down,\\n\\n        right,\\n    }\\n\\n    enum NamedItemScope {\\n        worksheet,\\n\\n        workbook,\\n    }\\n\\n    enum NamedItemType {\\n        string,\\n\\n        integer,\\n\\n        double,\\n\\n        boolean,\\n\\n        range,\\n\\n        error,\\n\\n        array,\\n    }\\n\\n    enum RangeUnderlineStyle {\\n        none,\\n\\n        single,\\n\\n        double,\\n\\n        singleAccountant,\\n\\n        doubleAccountant,\\n    }\\n\\n    enum SheetVisibility {\\n        visible,\\n\\n        hidden,\\n\\n        veryHidden,\\n    }\\n\\n    enum RangeValueType {\\n        unknown,\\n\\n        empty,\\n\\n        string,\\n\\n        integer,\\n\\n        double,\\n\\n        boolean,\\n\\n        error,\\n\\n        richValue,\\n    }\\n\\n    enum KeyboardDirection {\\n        left,\\n\\n        right,\\n\\n        up,\\n\\n        down,\\n    }\\n\\n    /**\\n     * Specifies the search direction.\\n     */\\n    enum SearchDirection {\\n        /**\\n         * Search in forward order.\\n         */\\n        forward,\\n\\n        /**\\n         * Search in reverse order.\\n         */\\n        backwards,\\n    }\\n\\n    enum SortOrientation {\\n        rows,\\n\\n        columns,\\n    }\\n\\n    enum SortOn {\\n        value,\\n\\n        cellColor,\\n\\n        fontColor,\\n\\n        icon,\\n    }\\n\\n    enum SortDataOption {\\n        normal,\\n\\n        textAsNumber,\\n    }\\n\\n    enum SortMethod {\\n        pinYin,\\n\\n        strokeCount,\\n    }\\n\\n    enum VerticalAlignment {\\n        top,\\n\\n        center,\\n\\n        bottom,\\n\\n        justify,\\n\\n        distributed,\\n    }\\n\\n    enum DocumentPropertyType {\\n        number,\\n\\n        boolean,\\n\\n        date,\\n\\n        string,\\n\\n        float,\\n    }\\n\\n    enum SubtotalLocationType {\\n        /**\\n         * Subtotals are at the top.\\n         */\\n        atTop,\\n\\n        /**\\n         * Subtotals are at the bottom.\\n         */\\n        atBottom,\\n\\n        /**\\n         * Subtotals are off.\\n         */\\n        off,\\n    }\\n\\n    enum PivotLayoutType {\\n        /**\\n         * A horizontally compressed form with labels from the next field in the same column.\\n         */\\n        compact,\\n\\n        /**\\n         * Inner fields\' items are always on a new line relative to the outer fields\' items.\\n         */\\n        tabular,\\n\\n        /**\\n         * Inner fields\' items are on same row as outer fields\' items and subtotals are always on the bottom.\\n         */\\n        outline,\\n    }\\n\\n    enum ProtectionSelectionMode {\\n        /**\\n         * Selection is allowed for all cells.\\n         */\\n        normal,\\n\\n        /**\\n         * Selection is allowed only for cells that are not locked.\\n         */\\n        unlocked,\\n\\n        /**\\n         * Selection is not allowed for any cells.\\n         */\\n        none,\\n    }\\n\\n    enum PageOrientation {\\n        portrait,\\n\\n        landscape,\\n    }\\n\\n    enum PaperType {\\n        letter,\\n\\n        letterSmall,\\n\\n        tabloid,\\n\\n        ledger,\\n\\n        legal,\\n\\n        statement,\\n\\n        executive,\\n\\n        a3,\\n\\n        a4,\\n\\n        a4Small,\\n\\n        a5,\\n\\n        b4,\\n\\n        b5,\\n\\n        folio,\\n\\n        quatro,\\n\\n        paper10x14,\\n\\n        paper11x17,\\n\\n        note,\\n\\n        envelope9,\\n\\n        envelope10,\\n\\n        envelope11,\\n\\n        envelope12,\\n\\n        envelope14,\\n\\n        csheet,\\n\\n        dsheet,\\n\\n        esheet,\\n\\n        envelopeDL,\\n\\n        envelopeC5,\\n\\n        envelopeC3,\\n\\n        envelopeC4,\\n\\n        envelopeC6,\\n\\n        envelopeC65,\\n\\n        envelopeB4,\\n\\n        envelopeB5,\\n\\n        envelopeB6,\\n\\n        envelopeItaly,\\n\\n        envelopeMonarch,\\n\\n        envelopePersonal,\\n\\n        fanfoldUS,\\n\\n        fanfoldStdGerman,\\n\\n        fanfoldLegalGerman,\\n    }\\n\\n    enum ReadingOrder {\\n        /**\\n         * Reading order is determined by the language of the first character entered.\\n         * If a right-to-left language character is entered first, reading order is right to left.\\n         * If a left-to-right language character is entered first, reading order is left to right.\\n         */\\n        context,\\n\\n        /**\\n         * Left to right reading order\\n         */\\n        leftToRight,\\n\\n        /**\\n         * Right to left reading order\\n         */\\n        rightToLeft,\\n    }\\n\\n    enum BuiltInStyle {\\n        normal,\\n\\n        comma,\\n\\n        currency,\\n\\n        percent,\\n\\n        wholeComma,\\n\\n        wholeDollar,\\n\\n        hlink,\\n\\n        hlinkTrav,\\n\\n        note,\\n\\n        warningText,\\n\\n        emphasis1,\\n\\n        emphasis2,\\n\\n        emphasis3,\\n\\n        sheetTitle,\\n\\n        heading1,\\n\\n        heading2,\\n\\n        heading3,\\n\\n        heading4,\\n\\n        input,\\n\\n        output,\\n\\n        calculation,\\n\\n        checkCell,\\n\\n        linkedCell,\\n\\n        total,\\n\\n        good,\\n\\n        bad,\\n\\n        neutral,\\n\\n        accent1,\\n\\n        accent1_20,\\n\\n        accent1_40,\\n\\n        accent1_60,\\n\\n        accent2,\\n\\n        accent2_20,\\n\\n        accent2_40,\\n\\n        accent2_60,\\n\\n        accent3,\\n\\n        accent3_20,\\n\\n        accent3_40,\\n\\n        accent3_60,\\n\\n        accent4,\\n\\n        accent4_20,\\n\\n        accent4_40,\\n\\n        accent4_60,\\n\\n        accent5,\\n\\n        accent5_20,\\n\\n        accent5_40,\\n\\n        accent5_60,\\n\\n        accent6,\\n\\n        accent6_20,\\n\\n        accent6_40,\\n\\n        accent6_60,\\n\\n        explanatoryText,\\n    }\\n\\n    enum PrintErrorType {\\n        asDisplayed,\\n\\n        blank,\\n\\n        dash,\\n\\n        notAvailable,\\n    }\\n\\n    enum WorksheetPositionType {\\n        none,\\n\\n        before,\\n\\n        after,\\n\\n        beginning,\\n\\n        end,\\n    }\\n\\n    enum PrintComments {\\n        /**\\n         * Comments will not be printed.\\n         */\\n        noComments,\\n\\n        /**\\n         * Comments will be printed as end notes at the end of the worksheet.\\n         */\\n        endSheet,\\n\\n        /**\\n         * Comments will be printed where they were inserted in the worksheet.\\n         */\\n        inPlace,\\n    }\\n\\n    enum PrintOrder {\\n        /**\\n         * Process down the rows before processing across pages or page fields to the right.\\n         */\\n        downThenOver,\\n\\n        /**\\n         * Process across pages or page fields to the right before moving down the rows.\\n         */\\n        overThenDown,\\n    }\\n\\n    enum PrintMarginUnit {\\n        /**\\n         * Assign the page margins in points. A point is 1/72 of an inch.\\n         */\\n        points,\\n\\n        /**\\n         * Assign the page margins in inches.\\n         */\\n        inches,\\n\\n        /**\\n         * Assign the page margins in centimeters.\\n         */\\n        centimeters,\\n    }\\n\\n    enum HeaderFooterState {\\n        /**\\n         * Only one general header/footer is used for all pages printed.\\n         */\\n        default,\\n\\n        /**\\n         * There is a separate first page header/footer, and a general header/footer used for all other pages.\\n         */\\n        firstAndDefault,\\n\\n        /**\\n         * There is a different header/footer for odd and even pages.\\n         */\\n        oddAndEven,\\n\\n        /**\\n         * There is a separate first page header/footer, then there is a separate header/footer for odd and even pages.\\n         */\\n        firstOddAndEven,\\n    }\\n\\n    /**\\n     * The behavior types when AutoFill is used on a range in the workbook.\\n     */\\n    enum AutoFillType {\\n        /**\\n         * Populates the adjacent cells based on the surrounding data (the standard AutoFill behavior).\\n         */\\n        fillDefault,\\n\\n        /**\\n         * Populates the adjacent cells with data based on the selected data.\\n         */\\n        fillCopy,\\n\\n        /**\\n         * Populates the adjacent cells with data that follows a pattern in the copied cells.\\n         */\\n        fillSeries,\\n\\n        /**\\n         * Populates the adjacent cells with the selected formulas.\\n         */\\n        fillFormats,\\n\\n        /**\\n         * Populates the adjacent cells with the selected values.\\n         */\\n        fillValues,\\n\\n        /**\\n         * A version of \\"FillSeries\\" for dates that bases the pattern on either the day of the month or the day of the week, depending on the context.\\n         */\\n        fillDays,\\n\\n        /**\\n         * A version of \\"FillSeries\\" for dates that bases the pattern on the day of the week and only includes weekdays.\\n         */\\n        fillWeekdays,\\n\\n        /**\\n         * A version of \\"FillSeries\\" for dates that bases the pattern on the month.\\n         */\\n        fillMonths,\\n\\n        /**\\n         * A version of \\"FillSeries\\" for dates that bases the pattern on the year.\\n         */\\n        fillYears,\\n\\n        /**\\n         * A version of \\"FillSeries\\" for numbers that fills out the values in the adjacent cells according to a linear trend model.\\n         */\\n        linearTrend,\\n\\n        /**\\n         * A version of \\"FillSeries\\" for numbers that fills out the values in the adjacent cells according to a growth trend model.\\n         */\\n        growthTrend,\\n\\n        /**\\n         * Populates the adjacent cells by using Excel\'s Flash Fill feature.\\n         */\\n        flashFill,\\n    }\\n\\n    enum GroupOption {\\n        /**\\n         * Group by rows.\\n         */\\n        byRows,\\n\\n        /**\\n         * Group by columns.\\n         */\\n        byColumns,\\n    }\\n\\n    enum RangeCopyType {\\n        all,\\n\\n        formulas,\\n\\n        values,\\n\\n        formats,\\n\\n        link,\\n    }\\n\\n    enum LinkedDataTypeState {\\n        none,\\n\\n        validLinkedData,\\n\\n        disambiguationNeeded,\\n\\n        brokenLinkedData,\\n\\n        fetchingData,\\n    }\\n\\n    /**\\n     * Specifies the shape type for a `GeometricShape` object.\\n     */\\n    enum GeometricShapeType {\\n        lineInverse,\\n\\n        triangle,\\n\\n        rightTriangle,\\n\\n        rectangle,\\n\\n        diamond,\\n\\n        parallelogram,\\n\\n        trapezoid,\\n\\n        nonIsoscelesTrapezoid,\\n\\n        pentagon,\\n\\n        hexagon,\\n\\n        heptagon,\\n\\n        octagon,\\n\\n        decagon,\\n\\n        dodecagon,\\n\\n        star4,\\n\\n        star5,\\n\\n        star6,\\n\\n        star7,\\n\\n        star8,\\n\\n        star10,\\n\\n        star12,\\n\\n        star16,\\n\\n        star24,\\n\\n        star32,\\n\\n        roundRectangle,\\n\\n        round1Rectangle,\\n\\n        round2SameRectangle,\\n\\n        round2DiagonalRectangle,\\n\\n        snipRoundRectangle,\\n\\n        snip1Rectangle,\\n\\n        snip2SameRectangle,\\n\\n        snip2DiagonalRectangle,\\n\\n        plaque,\\n\\n        ellipse,\\n\\n        teardrop,\\n\\n        homePlate,\\n\\n        chevron,\\n\\n        pieWedge,\\n\\n        pie,\\n\\n        blockArc,\\n\\n        donut,\\n\\n        noSmoking,\\n\\n        rightArrow,\\n\\n        leftArrow,\\n\\n        upArrow,\\n\\n        downArrow,\\n\\n        stripedRightArrow,\\n\\n        notchedRightArrow,\\n\\n        bentUpArrow,\\n\\n        leftRightArrow,\\n\\n        upDownArrow,\\n\\n        leftUpArrow,\\n\\n        leftRightUpArrow,\\n\\n        quadArrow,\\n\\n        leftArrowCallout,\\n\\n        rightArrowCallout,\\n\\n        upArrowCallout,\\n\\n        downArrowCallout,\\n\\n        leftRightArrowCallout,\\n\\n        upDownArrowCallout,\\n\\n        quadArrowCallout,\\n\\n        bentArrow,\\n\\n        uturnArrow,\\n\\n        circularArrow,\\n\\n        leftCircularArrow,\\n\\n        leftRightCircularArrow,\\n\\n        curvedRightArrow,\\n\\n        curvedLeftArrow,\\n\\n        curvedUpArrow,\\n\\n        curvedDownArrow,\\n\\n        swooshArrow,\\n\\n        cube,\\n\\n        can,\\n\\n        lightningBolt,\\n\\n        heart,\\n\\n        sun,\\n\\n        moon,\\n\\n        smileyFace,\\n\\n        irregularSeal1,\\n\\n        irregularSeal2,\\n\\n        foldedCorner,\\n\\n        bevel,\\n\\n        frame,\\n\\n        halfFrame,\\n\\n        corner,\\n\\n        diagonalStripe,\\n\\n        chord,\\n\\n        arc,\\n\\n        leftBracket,\\n\\n        rightBracket,\\n\\n        leftBrace,\\n\\n        rightBrace,\\n\\n        bracketPair,\\n\\n        bracePair,\\n\\n        callout1,\\n\\n        callout2,\\n\\n        callout3,\\n\\n        accentCallout1,\\n\\n        accentCallout2,\\n\\n        accentCallout3,\\n\\n        borderCallout1,\\n\\n        borderCallout2,\\n\\n        borderCallout3,\\n\\n        accentBorderCallout1,\\n\\n        accentBorderCallout2,\\n\\n        accentBorderCallout3,\\n\\n        wedgeRectCallout,\\n\\n        wedgeRRectCallout,\\n\\n        wedgeEllipseCallout,\\n\\n        cloudCallout,\\n\\n        cloud,\\n\\n        ribbon,\\n\\n        ribbon2,\\n\\n        ellipseRibbon,\\n\\n        ellipseRibbon2,\\n\\n        leftRightRibbon,\\n\\n        verticalScroll,\\n\\n        horizontalScroll,\\n\\n        wave,\\n\\n        doubleWave,\\n\\n        plus,\\n\\n        flowChartProcess,\\n\\n        flowChartDecision,\\n\\n        flowChartInputOutput,\\n\\n        flowChartPredefinedProcess,\\n\\n        flowChartInternalStorage,\\n\\n        flowChartDocument,\\n\\n        flowChartMultidocument,\\n\\n        flowChartTerminator,\\n\\n        flowChartPreparation,\\n\\n        flowChartManualInput,\\n\\n        flowChartManualOperation,\\n\\n        flowChartConnector,\\n\\n        flowChartPunchedCard,\\n\\n        flowChartPunchedTape,\\n\\n        flowChartSummingJunction,\\n\\n        flowChartOr,\\n\\n        flowChartCollate,\\n\\n        flowChartSort,\\n\\n        flowChartExtract,\\n\\n        flowChartMerge,\\n\\n        flowChartOfflineStorage,\\n\\n        flowChartOnlineStorage,\\n\\n        flowChartMagneticTape,\\n\\n        flowChartMagneticDisk,\\n\\n        flowChartMagneticDrum,\\n\\n        flowChartDisplay,\\n\\n        flowChartDelay,\\n\\n        flowChartAlternateProcess,\\n\\n        flowChartOffpageConnector,\\n\\n        actionButtonBlank,\\n\\n        actionButtonHome,\\n\\n        actionButtonHelp,\\n\\n        actionButtonInformation,\\n\\n        actionButtonForwardNext,\\n\\n        actionButtonBackPrevious,\\n\\n        actionButtonEnd,\\n\\n        actionButtonBeginning,\\n\\n        actionButtonReturn,\\n\\n        actionButtonDocument,\\n\\n        actionButtonSound,\\n\\n        actionButtonMovie,\\n\\n        gear6,\\n\\n        gear9,\\n\\n        funnel,\\n\\n        mathPlus,\\n\\n        mathMinus,\\n\\n        mathMultiply,\\n\\n        mathDivide,\\n\\n        mathEqual,\\n\\n        mathNotEqual,\\n\\n        cornerTabs,\\n\\n        squareTabs,\\n\\n        plaqueTabs,\\n\\n        chartX,\\n\\n        chartStar,\\n\\n        chartPlus,\\n    }\\n\\n    enum ConnectorType {\\n        straight,\\n\\n        elbow,\\n\\n        curve,\\n    }\\n\\n    enum ContentType {\\n        /**\\n         * Indicates a plain format type for the comment content.\\n         */\\n        plain,\\n\\n        /**\\n         * Comment content containing mentions.\\n         */\\n        mention,\\n    }\\n\\n    enum SpecialCellType {\\n        /**\\n         * All cells with conditional formats.\\n         */\\n        conditionalFormats,\\n\\n        /**\\n         * Cells with validation criteria.\\n         */\\n        dataValidations,\\n\\n        /**\\n         * Cells with no content.\\n         */\\n        blanks,\\n\\n        /**\\n         * Cells containing constants.\\n         */\\n        constants,\\n\\n        /**\\n         * Cells containing formulas.\\n         */\\n        formulas,\\n\\n        /**\\n         * Cells with the same conditional format as the first cell in the range.\\n         */\\n        sameConditionalFormat,\\n\\n        /**\\n         * Cells with the same data validation criteria as the first cell in the range.\\n         */\\n        sameDataValidation,\\n\\n        /**\\n         * Cells that are visible.\\n         */\\n        visible,\\n    }\\n\\n    enum SpecialCellValueType {\\n        /**\\n         * Cells that have errors, boolean, numeric, or string values.\\n         */\\n        all,\\n\\n        /**\\n         * Cells that have errors.\\n         */\\n        errors,\\n\\n        /**\\n         * Cells that have errors or boolean values.\\n         */\\n        errorsLogical,\\n\\n        /**\\n         * Cells that have errors or numeric values.\\n         */\\n        errorsNumbers,\\n\\n        /**\\n         * Cells that have errors or string values.\\n         */\\n        errorsText,\\n\\n        /**\\n         * Cells that have errors, boolean, or numeric values.\\n         */\\n        errorsLogicalNumber,\\n\\n        /**\\n         * Cells that have errors, boolean, or string values.\\n         */\\n        errorsLogicalText,\\n\\n        /**\\n         * Cells that have errors, numeric, or string values.\\n         */\\n        errorsNumberText,\\n\\n        /**\\n         * Cells that have a boolean value.\\n         */\\n        logical,\\n\\n        /**\\n         * Cells that have a boolean or numeric value.\\n         */\\n        logicalNumbers,\\n\\n        /**\\n         * Cells that have a boolean or string value.\\n         */\\n        logicalText,\\n\\n        /**\\n         * Cells that have a boolean, numeric, or string value.\\n         */\\n        logicalNumbersText,\\n\\n        /**\\n         * Cells that have a numeric value.\\n         */\\n        numbers,\\n\\n        /**\\n         * Cells that have a numeric or string value.\\n         */\\n        numbersText,\\n\\n        /**\\n         * Cells that have a string value.\\n         */\\n        text,\\n    }\\n\\n    /**\\n     * Specifies the way that an object is attached to its underlying cells.\\n     */\\n    enum Placement {\\n        /**\\n         * The object is moved with the cells.\\n         */\\n        twoCell,\\n\\n        /**\\n         * The object is moved and sized with the cells.\\n         */\\n        oneCell,\\n\\n        /**\\n         * The object is free floating.\\n         */\\n        absolute,\\n    }\\n\\n    enum FillPattern {\\n        none,\\n\\n        solid,\\n\\n        gray50,\\n\\n        gray75,\\n\\n        gray25,\\n\\n        horizontal,\\n\\n        vertical,\\n\\n        down,\\n\\n        up,\\n\\n        checker,\\n\\n        semiGray75,\\n\\n        lightHorizontal,\\n\\n        lightVertical,\\n\\n        lightDown,\\n\\n        lightUp,\\n\\n        grid,\\n\\n        crissCross,\\n\\n        gray16,\\n\\n        gray8,\\n\\n        linearGradient,\\n\\n        rectangularGradient,\\n    }\\n\\n    /**\\n     * Specifies the horizontal alignment for the text frame in a shape.\\n     */\\n    enum ShapeTextHorizontalAlignment {\\n        left,\\n\\n        center,\\n\\n        right,\\n\\n        justify,\\n\\n        justifyLow,\\n\\n        distributed,\\n\\n        thaiDistributed,\\n    }\\n\\n    /**\\n     * Specifies the vertical alignment for the text frame in a shape.\\n     */\\n    enum ShapeTextVerticalAlignment {\\n        top,\\n\\n        middle,\\n\\n        bottom,\\n\\n        justified,\\n\\n        distributed,\\n    }\\n\\n    /**\\n     * Specifies the vertical overflow for the text frame in a shape.\\n     */\\n    enum ShapeTextVerticalOverflow {\\n        /**\\n         * Allow text to overflow the text frame vertically (can be from the top, bottom, or both depending on the text alignment).\\n         */\\n        overflow,\\n\\n        /**\\n         * Hide text that does not fit vertically within the text frame, and add an ellipsis (...) at the end of the visible text.\\n         */\\n        ellipsis,\\n\\n        /**\\n         * Hide text that does not fit vertically within the text frame.\\n         */\\n        clip,\\n    }\\n\\n    /**\\n     * Specifies the horizontal overflow for the text frame in a shape.\\n     */\\n    enum ShapeTextHorizontalOverflow {\\n        overflow,\\n\\n        clip,\\n    }\\n\\n    /**\\n     * Specifies the reading order for the text frame in a shape.\\n     */\\n    enum ShapeTextReadingOrder {\\n        leftToRight,\\n\\n        rightToLeft,\\n    }\\n\\n    /**\\n     * Specifies the orientation for the text frame in a shape.\\n     */\\n    enum ShapeTextOrientation {\\n        horizontal,\\n\\n        vertical,\\n\\n        vertical270,\\n\\n        wordArtVertical,\\n\\n        eastAsianVertical,\\n\\n        mongolianVertical,\\n\\n        wordArtVerticalRTL,\\n    }\\n\\n    /**\\n     * Determines the type of automatic sizing allowed.\\n     */\\n    enum ShapeAutoSize {\\n        /**\\n         * No autosizing.\\n         */\\n        autoSizeNone,\\n\\n        /**\\n         * The text is adjusted to fit the shape.\\n         */\\n        autoSizeTextToFitShape,\\n\\n        /**\\n         * The shape is adjusted to fit the text.\\n         */\\n        autoSizeShapeToFitText,\\n\\n        /**\\n         * A combination of automatic sizing schemes are used.\\n         */\\n        autoSizeMixed,\\n    }\\n\\n    /**\\n     * Specifies the slicer sort behavior for `Slicer.sortBy`.\\n     */\\n    enum SlicerSortType {\\n        /**\\n         * Sort slicer items in the order provided by the data source.\\n         */\\n        dataSourceOrder,\\n\\n        /**\\n         * Sort slicer items in ascending order by item captions.\\n         */\\n        ascending,\\n\\n        /**\\n         * Sort slicer items in descending order by item captions.\\n         */\\n        descending,\\n    }\\n\\n    /**\\n     * Represents a category of number formats.\\n     */\\n    enum NumberFormatCategory {\\n        /**\\n         * General format cells have no specific number format.\\n         */\\n        general,\\n\\n        /**\\n         * Number is used for general display of numbers. Currency and Accounting offer specialized formatting for monetary value.\\n         */\\n        number,\\n\\n        /**\\n         * Currency formats are used for general monetary values. Use Accounting formats to align decimal points in a column.\\n         */\\n        currency,\\n\\n        /**\\n         * Accounting formats line up the currency symbols and decimal points in a column.\\n         */\\n        accounting,\\n\\n        /**\\n         * Date formats display date and time serial numbers as date values. Date formats that begin with an asterisk (*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings.\\n         */\\n        date,\\n\\n        /**\\n         * Time formats display date and time serial numbers as date values. Time formats that begin with an asterisk (*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings.\\n         */\\n        time,\\n\\n        /**\\n         * Percentage formats multiply the cell value by 100 and displays the result with a percent symbol.\\n         */\\n        percentage,\\n\\n        /**\\n         * Fraction formats display the cell value as a whole number with the remainder rounded to the nearest fraction value.\\n         */\\n        fraction,\\n\\n        /**\\n         * Scientific formats display the cell value as a number between 1 and 10 multiplied by a power of 10.\\n         */\\n        scientific,\\n\\n        /**\\n         * Text format cells are treated as text even when a number is in the cell. The cell is displayed exactly as entered.\\n         */\\n        text,\\n\\n        /**\\n         * Special formats are useful for tracking list and database values.\\n         */\\n        special,\\n\\n        /**\\n         * A custom format that is not a part of any category.\\n         */\\n        custom,\\n    }\\n\\n    //\\n    // Type\\n    //\\n\\n    type RangeValue = string | number | boolean | null | undefined;\\n}\\n"}')},17084:function(e){e.exports=JSON.parse('{"sets":{"ExcelApi_1_1":{"name":"ExcelApi","version":"1.1","major":1,"minor":1},"ExcelApi_1_2":{"name":"ExcelApi","version":"1.2","major":1,"minor":2},"ExcelApi_1_3":{"name":"ExcelApi","version":"1.3","major":1,"minor":3},"ExcelApi_1_4":{"name":"ExcelApi","version":"1.4","major":1,"minor":4},"ExcelApi_1_5":{"name":"ExcelApi","version":"1.5","major":1,"minor":5},"ExcelApi_1_6":{"name":"ExcelApi","version":"1.6","major":1,"minor":6},"ExcelApi_1_7":{"name":"ExcelApi","version":"1.7","major":1,"minor":7},"ExcelApi_1_8":{"name":"ExcelApi","version":"1.8","major":1,"minor":8},"ExcelApi_1_9":{"name":"ExcelApi","version":"1.9","major":1,"minor":9},"ExcelApi_1_10":{"name":"ExcelApi","version":"1.10","major":1,"minor":10},"ExcelApi_1_11":{"name":"ExcelApi","version":"1.11","major":1,"minor":11},"ExcelApi_1_12":{"name":"ExcelApi","version":"1.12","major":1,"minor":12},"ExcelApi_1_13":{"name":"ExcelApi","version":"1.13","major":1,"minor":13},"ExcelApiOnline_1_1":{"name":"ExcelApiOnline","version":"1.1","major":1,"minor":1},"ExcelApiUndo_1_1":{"name":"ExcelApiUndo","version":"1.1","major":1,"minor":1},"ExcelApiUndo_1_2":{"name":"ExcelApiUndo","version":"1.2","major":1,"minor":2},"ExcelApiUndo_1_5":{"name":"ExcelApiUndo","version":"1.5","major":1,"minor":5},"ExcelApiUndo_1_6":{"name":"ExcelApiUndo","version":"1.6","major":1,"minor":6},"ExcelApiUndo_1_7":{"name":"ExcelApiUndo","version":"1.7","major":1,"minor":7},"ExcelApiUndo_1_8":{"name":"ExcelApiUndo","version":"1.8","major":1,"minor":8}},"namespaces":{"ExcelScript":{"objects":{"LinkedWorkbook":{"methods":{"breakLinks":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"},"refreshLinks":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"}}},"Application":{"methods":{"calculate":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getCalculationEngineVersion":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getCalculationMode":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setCalculationMode":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getCalculationState":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getCultureInfo":{"isAsync":false,"set":"ExcelApi_1_11"},"getDecimalSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getIterativeCalculation":{"isAsync":false,"set":"ExcelApi_1_9"},"getThousandsSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getUseSystemSeparators":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"}}},"IterativeCalculation":{"methods":{"getEnabled":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEnabled":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getMaxChange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setMaxChange":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getMaxIteration":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setMaxIteration":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"Workbook":{"methods":{"getActiveCell":{"isAsync":false,"set":"ExcelApi_1_7"},"getActiveChart":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getActiveSlicer":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getSelectedRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getSelectedRanges":{"isAsync":false,"set":"ExcelApi_1_9"},"getBindings":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addBinding":{"isAsync":false,"set":"ExcelApi_1_3"},"addBindingFromNamedItem":{"isAsync":false,"set":"ExcelApi_1_3"},"addBindingFromSelection":{"isAsync":false,"set":"ExcelApi_1_3"},"getBinding":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getComments":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addComment":{"isAsync":false,"set":"ExcelApi_1_10"},"getComment":{"isAsync":false,"set":"ExcelApi_1_10"},"getCommentByCell":{"isAsync":false,"set":"ExcelApi_1_10"},"getCommentByReplyId":{"isAsync":false,"set":"ExcelApi_1_10"},"getCustomXmlParts":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"addCustomXmlPart":{"isAsync":false,"set":"ExcelApi_1_5"},"getCustomXmlPartsByNamespace":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"getCustomXmlPart":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"getLinkedWorkbooks":{"isAsync":true,"isRead":true,"set":"ExcelApiOnline_1_1"},"getLinkedWorkbookRefreshMode":{"isAsync":true,"isRead":true,"set":"ExcelApiOnline_1_1"},"breakAllLinksToLinkedWorkbooks":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"},"getLinkedWorkbookByUrl":{"isAsync":true,"isRead":true,"set":"ExcelApiOnline_1_1"},"refreshAllLinksToLinkedWorkbooks":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"},"getNames":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addNamedItem":{"isAsync":false,"set":"ExcelApi_1_4"},"addNamedItemFormulaLocal":{"isAsync":false,"set":"ExcelApi_1_4"},"getNamedItem":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getPivotTableStyles":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addPivotTableStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getDefaultPivotTableStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getPivotTableStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setDefaultPivotTableStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getPivotTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"addPivotTable":{"isAsync":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getPivotTable":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"refreshAllPivotTables":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3","undoSet":"ExcelApiUndo_1_1"},"getSlicerStyles":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addSlicerStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getDefaultSlicerStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getSlicerStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setDefaultSlicerStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getSlicers":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addSlicer":{"isAsync":false,"set":"ExcelApi_1_10"},"getSlicer":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getPredefinedCellStyles":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"addPredefinedCellStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getPredefinedCellStyle":{"isAsync":false,"set":"ExcelApi_1_7"},"getTableStyles":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addTableStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getDefaultTableStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getTableStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setDefaultTableStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addTable":{"isAsync":false,"set":"ExcelApi_1_1"},"getTable":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getTimelineStyles":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addTimelineStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getDefaultTimelineStyle":{"isAsync":false,"set":"ExcelApi_1_10"},"getTimelineStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setDefaultTimelineStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getWorksheets":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addWorksheet":{"isAsync":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_2"},"getActiveWorksheet":{"isAsync":false,"set":"ExcelApi_1_1"},"getFirstWorksheet":{"isAsync":false,"set":"ExcelApi_1_5"},"getWorksheet":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getLastWorksheet":{"isAsync":false,"set":"ExcelApi_1_5"},"getApplication":{"isAsync":false,"set":"ExcelApi_1_1"},"getAutoSave":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getCalculationEngineVersion":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getChartDataPointTrack":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setChartDataPointTrack":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getIsDirty":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setIsDirty":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getPreviouslySaved":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getProperties":{"isAsync":false,"set":"ExcelApi_1_7"},"getProtection":{"isAsync":false,"set":"ExcelApi_1_7"},"getReadOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getUsePrecisionAsDisplayed":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setUsePrecisionAsDisplayed":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"refreshAllDataConnections":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_7"},"getCustomXmlPartByNamespace":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_5"}}},"WorkbookProtection":{"methods":{"protect":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"unprotect":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getProtected":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"}}},"Worksheet":{"methods":{"activate":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"calculate":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"copy":{"isAsync":false,"set":"ExcelApi_1_7"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"findAll":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getCell":{"isAsync":false,"set":"ExcelApi_1_1"},"getNext":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"getPrevious":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"getRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getRangeByIndexes":{"isAsync":false,"set":"ExcelApi_1_7"},"getRanges":{"isAsync":false,"set":"ExcelApi_1_9"},"getUsedRange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"replaceAll":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"showOutlineLevels":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getCharts":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addChart":{"isAsync":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getChart":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getComments":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addComment":{"isAsync":false,"set":"ExcelApi_1_10"},"getComment":{"isAsync":false,"set":"ExcelApi_1_10"},"getCommentByCell":{"isAsync":false,"set":"ExcelApi_1_10"},"getCommentByReplyId":{"isAsync":false,"set":"ExcelApi_1_10"},"getCustomProperties":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"addWorksheetCustomProperty":{"isAsync":false,"set":"ExcelApi_1_12"},"getWorksheetCustomProperty":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getHorizontalPageBreaks":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"addHorizontalPageBreak":{"isAsync":false,"set":"ExcelApi_1_9"},"removeAllHorizontalPageBreaks":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getNamedSheetViews":{"isAsync":true,"isRead":true,"set":"ExcelApiOnline_1_1"},"addNamedSheetView":{"isAsync":false,"set":"ExcelApiOnline_1_1"},"enterTemporaryNamedSheetView":{"isAsync":false,"set":"ExcelApiOnline_1_1"},"exitActiveNamedSheetView":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"},"getActiveNamedSheetView":{"isAsync":false,"set":"ExcelApiOnline_1_1"},"getNamedSheetView":{"isAsync":false,"set":"ExcelApiOnline_1_1"},"getNames":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"addNamedItem":{"isAsync":false,"set":"ExcelApi_1_4"},"addNamedItemFormulaLocal":{"isAsync":false,"set":"ExcelApi_1_4"},"getNamedItem":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getPivotTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"addPivotTable":{"isAsync":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getPivotTable":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"refreshAllPivotTables":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3","undoSet":"ExcelApiUndo_1_1"},"getShapes":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"addGeometricShape":{"isAsync":false,"set":"ExcelApi_1_9"},"addGroup":{"isAsync":false,"set":"ExcelApi_1_9"},"addImage":{"isAsync":false,"set":"ExcelApi_1_9"},"addLine":{"isAsync":false,"set":"ExcelApi_1_9"},"addTextBox":{"isAsync":false,"set":"ExcelApi_1_9"},"getShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getSlicers":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addSlicer":{"isAsync":false,"set":"ExcelApi_1_10"},"getSlicer":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addTable":{"isAsync":false,"set":"ExcelApi_1_1"},"getTable":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getVerticalPageBreaks":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"addVerticalPageBreak":{"isAsync":false,"set":"ExcelApi_1_9"},"removeAllVerticalPageBreaks":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getAutoFilter":{"isAsync":false,"set":"ExcelApi_1_9"},"getEnableCalculation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEnableCalculation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getFreezePanes":{"isAsync":false,"set":"ExcelApi_1_7"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getPageLayout":{"isAsync":false,"set":"ExcelApi_1_9"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getProtection":{"isAsync":false,"set":"ExcelApi_1_2"},"getShowGridlines":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowGridlines":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getShowHeadings":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowHeadings":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getStandardHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getStandardWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setStandardWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTabColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTabColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_8"},"getVisibility":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVisibility":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"}}},"WorksheetProtection":{"methods":{"protect":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"unprotect":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getOptions":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"getProtected":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"}}},"WorksheetFreezePanes":{"methods":{"freezeAt":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"freezeColumns":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"freezeRows":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getLocation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"unfreeze":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"}}},"Range":{"methods":{"autoFill":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"calculate":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"convertDataTypeToText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"copyFrom":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"find":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"flashFill":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getAbsoluteResizedRange":{"isAsync":false,"set":"ExcelApi_1_7"},"getBoundingRect":{"isAsync":false,"set":"ExcelApi_1_1"},"getCell":{"isAsync":false,"set":"ExcelApi_1_1"},"getColumn":{"isAsync":false,"set":"ExcelApi_1_1"},"getColumnsAfter":{"isAsync":false,"set":"ExcelApi_1_2"},"getColumnsBefore":{"isAsync":false,"set":"ExcelApi_1_2"},"getDirectPrecedents":{"isAsync":false,"set":"ExcelApi_1_12"},"getEntireColumn":{"isAsync":false,"set":"ExcelApi_1_1"},"getEntireRow":{"isAsync":false,"set":"ExcelApi_1_1"},"getExtendedRange":{"isAsync":false,"set":"ExcelApi_1_13"},"getImage":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getIntersection":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getLastCell":{"isAsync":false,"set":"ExcelApi_1_1"},"getLastColumn":{"isAsync":false,"set":"ExcelApi_1_1"},"getLastRow":{"isAsync":false,"set":"ExcelApi_1_1"},"getMergedAreas":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_13"},"getOffsetRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getPivotTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getRangeEdge":{"isAsync":false,"set":"ExcelApi_1_13"},"getResizedRange":{"isAsync":false,"set":"ExcelApi_1_2"},"getRow":{"isAsync":false,"set":"ExcelApi_1_1"},"getRowsAbove":{"isAsync":false,"set":"ExcelApi_1_2"},"getRowsBelow":{"isAsync":false,"set":"ExcelApi_1_2"},"getSpecialCells":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getSpillParent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getSpillingToRange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getSurroundingRegion":{"isAsync":false,"set":"ExcelApi_1_7"},"getTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getUsedRange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getVisibleView":{"isAsync":false,"set":"ExcelApi_1_3"},"group":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"hideGroupDetails":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"insert":{"isAsync":false,"set":"ExcelApi_1_1"},"merge":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"moveTo":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_11"},"removeDuplicates":{"isAsync":false,"set":"ExcelApi_1_9"},"replaceAll":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"select":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"setDirty":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"showCard":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"showGroupDetails":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"ungroup":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"unmerge":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getConditionalFormats":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"addConditionalFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"clearAllConditionalFormats":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getConditionalFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getAddress":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getAddressLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getCellCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getColumnCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getColumnHidden":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setColumnHidden":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getColumnIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getDataValidation":{"isAsync":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getFormulas":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setFormulas":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getFormulasLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setFormulasLocal":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getFormulasR1C1":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setFormulasR1C1":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getHasSpill":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getHidden":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"getHyperlink":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setHyperlink":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIsEntireColumn":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getIsEntireRow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getLinkedDataTypeStates":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getNumberFormats":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setNumberFormats":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_7"},"getNumberFormatCategories":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getNumberFormatsLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setNumberFormatsLocal":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_7"},"getRowCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getRowHidden":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setRowHidden":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getRowIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getSavedAsArray":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getSort":{"isAsync":false,"set":"ExcelApi_1_2"},"getPredefinedCellStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setPredefinedCellStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTexts":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getValueTypes":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getValues":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setValues":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_7"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getWorksheet":{"isAsync":false,"set":"ExcelApi_1_1"},"getFormula":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_1"},"setFormula":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1"},"getFormulaLocal":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_1"},"setFormulaLocal":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1"},"getFormulaR1C1":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_2"},"setFormulaR1C1":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_2"},"getLinkedDataTypeState":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_9"},"getNumberFormat":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_1"},"setNumberFormat":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_7"},"getNumberFormatLocal":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_7"},"setNumberFormatLocal":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_7"},"getNumberFormatCategory":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_12"},"getText":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_1"},"getValueType":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_1"},"getValue":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_1"},"setValue":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_7"}}},"RangeAreas":{"methods":{"calculate":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"convertDataTypeToText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"copyFrom":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getEntireColumn":{"isAsync":false,"set":"ExcelApi_1_9"},"getEntireRow":{"isAsync":false,"set":"ExcelApi_1_9"},"getIntersection":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getOffsetRangeAreas":{"isAsync":false,"set":"ExcelApi_1_9"},"getSpecialCells":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getTables":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getUsedRangeAreas":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setDirty":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getAreas":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getConditionalFormats":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"addConditionalFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"clearAllConditionalFormats":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getConditionalFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getAddress":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getAddressLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getAreaCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getCellCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getDataValidation":{"isAsync":false,"set":"ExcelApi_1_9"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_9"},"getIsEntireColumn":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getIsEntireRow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getPredefinedCellStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPredefinedCellStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getWorksheet":{"isAsync":false,"set":"ExcelApi_1_9"}}},"WorkbookRangeAreas":{"methods":{"getRangeAreasBySheet":{"isAsync":false,"set":"ExcelApi_1_12"},"getAreas":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getRanges":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getAddresses":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"}}},"RangeView":{"methods":{"getRange":{"isAsync":false,"set":"ExcelApi_1_3"},"getRows":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getCellAddresses":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getColumnCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getFormulas":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setFormulas":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getFormulasLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setFormulasLocal":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getFormulasR1C1":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setFormulasR1C1":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getRowCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getValueTypes":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"getValues":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setValues":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"}}},"NamedItem":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_4"},"getRange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getArrayValues":{"isAsync":false,"set":"ExcelApi_1_7"},"getComment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"setComment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_4"},"getFormula":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setFormula":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getScope":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getWorksheet":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"}}},"NamedItemArrayValues":{"methods":{"getTypes":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getValues":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"}}},"Binding":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getTable":{"isAsync":false,"set":"ExcelApi_1_1"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"}}},"Table":{"methods":{"clearFilters":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"convertToRange":{"isAsync":false,"set":"ExcelApi_1_2"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getRangeBetweenHeaderAndTotal":{"isAsync":false,"set":"ExcelApi_1_1"},"getHeaderRowRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getTotalRowRange":{"isAsync":false,"set":"ExcelApi_1_1"},"reapplyFilters":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"resize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_13"},"getColumns":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getColumn":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_4"},"getAutoFilter":{"isAsync":false,"set":"ExcelApi_1_9"},"getHighlightFirstColumn":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setHighlightFirstColumn":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getHighlightLastColumn":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setHighlightLastColumn":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getLegacyId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getShowBandedColumns":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setShowBandedColumns":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getShowBandedRows":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setShowBandedRows":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getShowFilterButton":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setShowFilterButton":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3"},"getShowHeaders":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowHeaders":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getShowTotals":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowTotals":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getSort":{"isAsync":false,"set":"ExcelApi_1_2"},"getPredefinedTableStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setPredefinedTableStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getWorksheet":{"isAsync":false,"set":"ExcelApi_1_2"},"addRow":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1"},"addRows":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1"},"addColumn":{"isRead":false,"isAsync":false,"set":"ExcelApi_1_1"},"deleteRowAt":{"isRead":false,"isAsync":true,"set":"ExcelApi_1_1"},"getColumnById":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_4"},"getColumnByName":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_4"},"getRowCount":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_4"}}},"TableColumn":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getRangeBetweenHeaderAndTotal":{"isAsync":false,"set":"ExcelApi_1_1"},"getHeaderRowRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getTotalRowRange":{"isAsync":false,"set":"ExcelApi_1_1"},"getFilter":{"isAsync":false,"set":"ExcelApi_1_2"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"}}},"DataValidation":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getInvalidCells":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getErrorAlert":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setErrorAlert":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getIgnoreBlanks":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setIgnoreBlanks":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getPrompt":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPrompt":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getValid":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"}}},"RemoveDuplicatesResult":{"methods":{"getRemoved":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getUniqueRemaining":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"}}},"RangeFormat":{"methods":{"adjustIndent":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_11"},"autofitColumns":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"autofitRows":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getBorders":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getRangeBorderTintAndShade":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getRangeBorder":{"isAsync":false,"set":"ExcelApi_1_1"},"getAutoIndent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAutoIndent":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getColumnWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setColumnWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getFill":{"isAsync":false,"set":"ExcelApi_1_1"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getIndentLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setIndentLevel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getProtection":{"isAsync":false,"set":"ExcelApi_1_2"},"getReadingOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setReadingOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getRowHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setRowHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getShrinkToFit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShrinkToFit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getUseStandardHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setUseStandardHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getUseStandardWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setUseStandardWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getWrapText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setWrapText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"}}},"FormatProtection":{"methods":{"getFormulaHidden":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setFormulaHidden":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getLocked":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setLocked":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"}}},"RangeFill":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getPattern":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPattern":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPatternColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPatternColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPatternTintAndShade":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPatternTintAndShade":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTintAndShade":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTintAndShade":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"RangeBorder":{"methods":{"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getSideIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getTintAndShade":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTintAndShade":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getWeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setWeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"}}},"RangeFont":{"methods":{"getBold":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setBold":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_1"},"getItalic":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setItalic":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getStrikethrough":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setStrikethrough":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getSubscript":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setSubscript":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getSuperscript":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setSuperscript":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTintAndShade":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTintAndShade":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getUnderline":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setUnderline":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"}}},"Chart":{"methods":{"activate":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getImage":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"setData":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getSeries":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"addChartSeries":{"isAsync":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getAxes":{"isAsync":false,"set":"ExcelApi_1_1"},"getCategoryLabelLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setCategoryLabelLevel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getChartType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setChartType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getDataLabels":{"isAsync":false,"set":"ExcelApi_1_1"},"getDisplayBlanksAs":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setDisplayBlanksAs":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getLegend":{"isAsync":false,"set":"ExcelApi_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getPivotOptions":{"isAsync":false,"set":"ExcelApi_1_9"},"getPlotArea":{"isAsync":false,"set":"ExcelApi_1_8"},"getPlotBy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPlotBy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getPlotVisibleOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPlotVisibleOnly":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getSeriesNameLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setSeriesNameLevel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getShowAllFieldButtons":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowAllFieldButtons":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getShowDataLabelsOverMaximum":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowDataLabelsOverMaximum":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTitle":{"isAsync":false,"set":"ExcelApi_1_1"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getWorksheet":{"isAsync":false,"set":"ExcelApi_1_2"}}},"ChartPivotOptions":{"methods":{"getShowAxisFieldButtons":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowAxisFieldButtons":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowLegendFieldButtons":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowLegendFieldButtons":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowReportFilterFieldButtons":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowReportFilterFieldButtons":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowValueFieldButtons":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowValueFieldButtons":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ChartAreaFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_7"},"getColorScheme":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setColorScheme":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getFill":{"isAsync":false,"set":"ExcelApi_1_1"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"},"getRoundedCorners":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setRoundedCorners":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ChartSeries":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getDimensionValues":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"setBubbleSizes":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"setValues":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"setXAxisValues":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getPoints":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"getTrendlines":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"addChartTrendline":{"isAsync":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getChartTrendline":{"isAsync":false,"set":"ExcelApi_1_7"},"getAxisGroup":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setAxisGroup":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_5"},"getBinOptions":{"isAsync":false,"set":"ExcelApi_1_9"},"getBoxwhiskerOptions":{"isAsync":false,"set":"ExcelApi_1_9"},"getBubbleScale":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBubbleScale":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getChartType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setChartType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_6"},"getDataLabels":{"isAsync":false,"set":"ExcelApi_1_8"},"getDoughnutHoleSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setDoughnutHoleSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getExplosion":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setExplosion":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFiltered":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setFiltered":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getFirstSliceAngle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setFirstSliceAngle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getGapWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setGapWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getGradientMaximumColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMaximumColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMaximumType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMaximumType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMaximumValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMaximumValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMidpointColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMidpointColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMidpointType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMidpointType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMidpointValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMidpointValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMinimumColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMinimumColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMinimumType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMinimumType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientMinimumValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientMinimumValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGradientStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGradientStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getHasDataLabels":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setHasDataLabels":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getInvertColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setInvertColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getInvertIfNegative":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setInvertIfNegative":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getMapOptions":{"isAsync":false,"set":"ExcelApi_1_9"},"getMarkerBackgroundColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerBackgroundColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getMarkerForegroundColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerForegroundColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getMarkerSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getMarkerStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getOverlap":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setOverlap":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_5"},"getParentLabelStrategy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setParentLabelStrategy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPlotOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setPlotOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getSecondPlotSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setSecondPlotSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getShowConnectorLines":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowConnectorLines":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowLeaderLines":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowLeaderLines":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getShowShadow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowShadow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getSmooth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setSmooth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getSplitType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setSplitType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getSplitValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setSplitValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getVaryByCategories":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setVaryByCategories":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getXErrorBars":{"isAsync":false,"set":"ExcelApi_1_9"},"getYErrorBars":{"isAsync":false,"set":"ExcelApi_1_9"}}},"ChartSeriesFormat":{"methods":{"getFill":{"isAsync":false,"set":"ExcelApi_1_1"},"getLine":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartPoint":{"methods":{"getDataLabel":{"isAsync":false,"set":"ExcelApi_1_7"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getHasDataLabel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setHasDataLabel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getMarkerBackgroundColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerBackgroundColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getMarkerForegroundColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerForegroundColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getMarkerSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getMarkerStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMarkerStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"}}},"ChartPointFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_7"},"getFill":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartAxes":{"methods":{"getChartAxis":{"isAsync":false,"set":"ExcelApi_1_7"},"getCategoryAxis":{"isAsync":false,"set":"ExcelApi_1_1"},"getSeriesAxis":{"isAsync":false,"set":"ExcelApi_1_1"},"getValueAxis":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartAxis":{"methods":{"setCategoryNames":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"setCustomDisplayUnit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"setPositionAt":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getAxisGroup":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getBaseTimeUnit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setBaseTimeUnit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getCategoryType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setCategoryType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getCustomDisplayUnit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getDisplayUnit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setDisplayUnit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getIsBetweenCategories":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setIsBetweenCategories":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_5"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getLinkNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLinkNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getLogBase":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setLogBase":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getMajorGridlines":{"isAsync":false,"set":"ExcelApi_1_1"},"getMajorTickMark":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMajorTickMark":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getMajorTimeUnitScale":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMajorTimeUnitScale":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getMajorUnit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setMajorUnit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getMaximum":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setMaximum":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getMinimum":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setMinimum":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getMinorGridlines":{"isAsync":false,"set":"ExcelApi_1_1"},"getMinorTickMark":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMinorTickMark":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getMinorTimeUnitScale":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMinorTimeUnitScale":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getMinorUnit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setMinorUnit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getMultiLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setMultiLevel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_5"},"getOffset":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setOffset":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_5"},"getPositionAt":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getReversePlotOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setReversePlotOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getScaleType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setScaleType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowDisplayUnitLabel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowDisplayUnitLabel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTickLabelPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTickLabelPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getTickLabelSpacing":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTickLabelSpacing":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTickMarkSpacing":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTickMarkSpacing":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTitle":{"isAsync":false,"set":"ExcelApi_1_1"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"}}},"ChartAxisFormat":{"methods":{"getFill":{"isAsync":false,"set":"ExcelApi_1_8"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"},"getLine":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartAxisTitle":{"methods":{"setFormula":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"}}},"ChartAxisTitleFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_8"},"getFill":{"isAsync":false,"set":"ExcelApi_1_8"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartDataLabels":{"methods":{"getAutoText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setAutoText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getLinkNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLinkNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_5"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setSeparator":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getShowBubbleSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowBubbleSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getShowCategoryName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowCategoryName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getShowLegendKey":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowLegendKey":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getShowPercentage":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowPercentage":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getShowSeriesName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowSeriesName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getShowValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setShowValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"}}},"ChartDataLabel":{"methods":{"getAutoText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setAutoText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_8"},"getFormula":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setFormula":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getLinkNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLinkNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setSeparator":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowBubbleSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowBubbleSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowCategoryName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowCategoryName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowLegendKey":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowLegendKey":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowPercentage":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowPercentage":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowSeriesName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowSeriesName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"}}},"ChartDataLabelFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_8"},"getFill":{"isAsync":false,"set":"ExcelApi_1_1"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartErrorBars":{"methods":{"getEndStyleCap":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEndStyleCap":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getInclude":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setInclude":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ChartErrorBarsFormat":{"methods":{"getLine":{"isAsync":false,"set":"ExcelApi_1_9"}}},"ChartGridlines":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"}}},"ChartGridlinesFormat":{"methods":{"getLine":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartLegend":{"methods":{"getLegendEntries":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getOverlay":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setOverlay":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getShowShadow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowShadow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"}}},"ChartLegendEntry":{"methods":{"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"}}},"ChartLegendFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_8"},"getFill":{"isAsync":false,"set":"ExcelApi_1_1"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartMapOptions":{"methods":{"getLabelStrategy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLabelStrategy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLevel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getProjectionType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setProjectionType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ChartTitle":{"methods":{"getSubstring":{"isAsync":false,"set":"ExcelApi_1_7"},"setFormula":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_1"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getOverlay":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setOverlay":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowShadow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShowShadow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"}}},"ChartFormatString":{"methods":{"getFont":{"isAsync":false,"set":"ExcelApi_1_7"}}},"ChartTitleFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_7"},"getFill":{"isAsync":false,"set":"ExcelApi_1_1"},"getFont":{"isAsync":false,"set":"ExcelApi_1_1"}}},"ChartFill":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"setSolidColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"}}},"ChartBorder":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getLineStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setLineStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getWeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setWeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"}}},"ChartBinOptions":{"methods":{"getAllowOverflow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAllowOverflow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getAllowUnderflow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAllowUnderflow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setCount":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getOverflowValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setOverflowValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getUnderflowValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setUnderflowValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"}}},"ChartBoxwhiskerOptions":{"methods":{"getQuartileCalculation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setQuartileCalculation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowInnerPoints":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowInnerPoints":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowMeanLine":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowMeanLine":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowMeanMarker":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowMeanMarker":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShowOutlierPoints":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setShowOutlierPoints":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ChartLineFormat":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getLineStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setLineStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"},"getWeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setWeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7","undoSet":"ExcelApiUndo_1_5"}}},"ChartFont":{"methods":{"getBold":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setBold":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getItalic":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setItalic":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1","undoSet":"ExcelApiUndo_1_5"},"getUnderline":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_1"},"setUnderline":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_1"}}},"ChartTrendline":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getBackwardPeriod":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setBackwardPeriod":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_7"},"getForwardPeriod":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setForwardPeriod":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getIntercept":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIntercept":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getLabel":{"isAsync":false,"set":"ExcelApi_1_8"},"getMovingAveragePeriod":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setMovingAveragePeriod":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getPolynomialOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setPolynomialOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShowEquation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowEquation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getShowRSquared":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowRSquared":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"}}},"ChartTrendlineFormat":{"methods":{"getLine":{"isAsync":false,"set":"ExcelApi_1_7"}}},"ChartTrendlineLabel":{"methods":{"getAutoText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setAutoText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getFormat":{"isAsync":false,"set":"ExcelApi_1_8"},"getFormula":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setFormula":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getLinkNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLinkNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"}}},"ChartTrendlineLabelFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_8"},"getFill":{"isAsync":false,"set":"ExcelApi_1_8"},"getFont":{"isAsync":false,"set":"ExcelApi_1_8"}}},"ChartPlotArea":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_8"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getInsideHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setInsideHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getInsideLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setInsideLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getInsideTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setInsideTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getInsideWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setInsideWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"}}},"ChartPlotAreaFormat":{"methods":{"getBorder":{"isAsync":false,"set":"ExcelApi_1_8"},"getFill":{"isAsync":false,"set":"ExcelApi_1_8"}}},"RangeSort":{"methods":{"apply":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"}}},"TableSort":{"methods":{"apply":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"reapply":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getFields":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"getMatchCase":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"},"getMethod":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"}}},"Filter":{"methods":{"apply":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyBottomItemsFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyBottomPercentFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyCellColorFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyCustomFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyDynamicFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyFontColorFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyIconFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyTopItemsFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyTopPercentFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"applyValuesFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_2"},"getCriteria":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_2"}}},"AutoFilter":{"methods":{"apply":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"clearCriteria":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getRange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"reapply":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"remove":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getCriteria":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getEnabled":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getIsDataFiltered":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"}}},"CultureInfo":{"methods":{"getDatetimeFormat":{"isAsync":false,"set":"ExcelApi_1_12"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getNumberFormat":{"isAsync":false,"set":"ExcelApi_1_11"}}},"NumberFormatInfo":{"methods":{"getNumberDecimalSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getNumberGroupSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"}}},"DatetimeFormatInfo":{"methods":{"getDateSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getLongDatePattern":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getLongTimePattern":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getShortDatePattern":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getTimeSeparator":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"}}},"CustomXmlPart":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_5"},"getXml":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"setXml":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_5"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"getNamespaceUri":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"}}},"PivotTable":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"refresh":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3","undoSet":"ExcelApiUndo_1_1"},"getColumnHierarchies":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"addColumnHierarchy":{"isAsync":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getColumnHierarchy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"removeColumnHierarchy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getDataHierarchies":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"addDataHierarchy":{"isAsync":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getDataHierarchy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"removeDataHierarchy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getFilterHierarchies":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"addFilterHierarchy":{"isAsync":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getFilterHierarchy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"removeFilterHierarchy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getHierarchies":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getHierarchy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getRowHierarchies":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"addRowHierarchy":{"isAsync":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getRowHierarchy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"removeRowHierarchy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getAllowMultipleFiltersPerField":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"setAllowMultipleFiltersPerField":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12","undoSet":"ExcelApiUndo_1_1"},"getEnableDataValueEditing":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEnableDataValueEditing":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_1"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_5"},"getLayout":{"isAsync":false,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_3"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_3","undoSet":"ExcelApiUndo_1_1"},"getUseCustomSortLists":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setUseCustomSortLists":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_1"},"getWorksheet":{"isAsync":false,"set":"ExcelApi_1_3"}}},"PivotLayout":{"methods":{"getColumnLabelRange":{"isAsync":false,"set":"ExcelApi_1_8"},"getBodyAndTotalRange":{"isAsync":false,"set":"ExcelApi_1_8"},"getDataHierarchy":{"isAsync":false,"set":"ExcelApi_1_9"},"getFilterAxisRange":{"isAsync":false,"set":"ExcelApi_1_8"},"getRange":{"isAsync":false,"set":"ExcelApi_1_8"},"getRowLabelRange":{"isAsync":false,"set":"ExcelApi_1_8"},"setAutoSortOnCell":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_1"},"getAutoFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAutoFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_1"},"getEnableFieldList":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setEnableFieldList":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10","undoSet":"ExcelApiUndo_1_1"},"getLayoutType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setLayoutType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getPreserveFormatting":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPreserveFormatting":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_1"},"getShowColumnGrandTotals":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowColumnGrandTotals":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getShowRowGrandTotals":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowRowGrandTotals":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getSubtotalLocation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setSubtotalLocation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"PivotHierarchy":{"methods":{"getFields":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getPivotField":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"RowColumnPivotHierarchy":{"methods":{"setToDefault":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getFields":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getPivotField":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"FilterPivotHierarchy":{"methods":{"setToDefault":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getFields":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getPivotField":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getEnableMultipleFilterItems":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setEnableMultipleFilterItems":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"DataPivotHierarchy":{"methods":{"setToDefault":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getField":{"isAsync":false,"set":"ExcelApi_1_8"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setPosition":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getShowAs":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowAs":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getSummarizeBy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setSummarizeBy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"PivotField":{"methods":{"applyFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12","undoSet":"ExcelApiUndo_1_1"},"clearAllFilters":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12","undoSet":"ExcelApiUndo_1_1"},"clearFilter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12","undoSet":"ExcelApiUndo_1_1"},"getFilters":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"isFiltered":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"sortByLabels":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"sortByValues":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_1"},"getItems":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getPivotItem":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getShowAllItems":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setShowAllItems":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getSubtotals":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setSubtotals":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"PivotItem":{"methods":{"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"getIsExpanded":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setIsExpanded":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8","undoSet":"ExcelApiUndo_1_1"}}},"WorksheetCustomProperty":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12"},"getKey":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"setValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_12"}}},"DocumentProperties":{"methods":{"getCustom":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"addCustomProperty":{"isAsync":false,"set":"ExcelApi_1_7"},"deleteAllCustomProperties":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getCustomProperty":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getAuthor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setAuthor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getCategory":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setCategory":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getComments":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setComments":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getCompany":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setCompany":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getCreationDate":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getKeywords":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setKeywords":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getLastAuthor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getManager":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setManager":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getRevisionNumber":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setRevisionNumber":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getSubject":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setSubject":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTitle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setTitle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"}}},"CustomProperty":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getKey":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setValue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"}}},"ConditionalFormat":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getRange":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getRanges":{"isAsync":false,"set":"ExcelApi_1_9"},"getCellValue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getColorScale":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getCustom":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getDataBar":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getIconSet":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getPreset":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getPriority":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setPriority":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getStopIfTrue":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setStopIfTrue":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getTextComparison":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getTopBottom":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"}}},"DataBarConditionalFormat":{"methods":{"getAxisColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setAxisColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getAxisFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setAxisFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getBarDirection":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setBarDirection":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getLowerBoundRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setLowerBoundRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getNegativeFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getPositiveFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getShowDataBarOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setShowDataBarOnly":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getUpperBoundRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setUpperBoundRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ConditionalDataBarPositiveFormat":{"methods":{"getBorderColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setBorderColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getFillColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setFillColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getGradientFill":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setGradientFill":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ConditionalDataBarNegativeFormat":{"methods":{"getBorderColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setBorderColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getFillColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setFillColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getMatchPositiveBorderColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setMatchPositiveBorderColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getMatchPositiveFillColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setMatchPositiveFillColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"CustomConditionalFormat":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getRule":{"isAsync":false,"set":"ExcelApi_1_6"}}},"ConditionalFormatRule":{"methods":{"getFormula":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setFormula":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getFormulaLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setFormulaLocal":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"IconSetConditionalFormat":{"methods":{"getCriteria":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setCriteria":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getReverseIconOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setReverseIconOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getShowIconOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setShowIconOnly":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ColorScaleConditionalFormat":{"methods":{"getCriteria":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setCriteria":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getThreeColorScale":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"}}},"TopBottomConditionalFormat":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"PresetCriteriaConditionalFormat":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"TextConditionalFormat":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"CellValueConditionalFormat":{"methods":{"getFormat":{"isAsync":false,"set":"ExcelApi_1_6"},"getRule":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setRule":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ConditionalRangeFormat":{"methods":{"getBorders":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getConditionalRangeBorderBottom":{"isAsync":false,"set":"ExcelApi_1_6"},"getConditionalRangeBorderLeft":{"isAsync":false,"set":"ExcelApi_1_6"},"getConditionalRangeBorderRight":{"isAsync":false,"set":"ExcelApi_1_6"},"getConditionalRangeBorderTop":{"isAsync":false,"set":"ExcelApi_1_6"},"getConditionalRangeBorder":{"isAsync":false,"set":"ExcelApi_1_6"},"getFill":{"isAsync":false,"set":"ExcelApi_1_6"},"getFont":{"isAsync":false,"set":"ExcelApi_1_6"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ConditionalRangeFont":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getBold":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setBold":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getItalic":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setItalic":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getStrikethrough":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setStrikethrough":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getUnderline":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setUnderline":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ConditionalRangeFill":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"ConditionalRangeBorder":{"methods":{"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"},"getSideIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"getStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_6"},"setStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_6"}}},"Style":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getBorders":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getRangeBorderTintAndShade":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getRangeBorder":{"isAsync":false,"set":"ExcelApi_1_1"},"getAutoIndent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setAutoIndent":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getBuiltIn":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getFill":{"isAsync":false,"set":"ExcelApi_1_7"},"getFont":{"isAsync":false,"set":"ExcelApi_1_7"},"getFormulaHidden":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setFormulaHidden":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIncludeAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIncludeAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIncludeBorder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIncludeBorder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIncludeFont":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIncludeFont":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIncludeNumber":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIncludeNumber":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIncludePatterns":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIncludePatterns":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIncludeProtection":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIncludeProtection":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getIndentLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setIndentLevel":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getLocked":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setLocked":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"getNumberFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setNumberFormat":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getNumberFormatLocal":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setNumberFormatLocal":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getReadingOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setReadingOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getShrinkToFit":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setShrinkToFit":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getTextOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_8"},"setTextOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_8"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"},"getWrapText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_7"},"setWrapText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_7"}}},"TableStyle":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"duplicate":{"isAsync":false,"set":"ExcelApi_1_10"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getReadOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"}}},"PivotTableStyle":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"duplicate":{"isAsync":false,"set":"ExcelApi_1_10"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getReadOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"}}},"SlicerStyle":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"duplicate":{"isAsync":false,"set":"ExcelApi_1_10"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getReadOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"}}},"TimelineStyle":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"duplicate":{"isAsync":false,"set":"ExcelApi_1_10"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getReadOnly":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"}}},"PageLayout":{"methods":{"getPrintArea":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getPrintTitleColumns":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getPrintTitleRows":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPrintArea":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"setPrintMargins":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"setPrintTitleColumns":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"setPrintTitleRows":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBlackAndWhite":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBlackAndWhite":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBottomMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBottomMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getCenterHorizontally":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setCenterHorizontally":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getCenterVertically":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setCenterVertically":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getDraftMode":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setDraftMode":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getFirstPageNumber":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setFirstPageNumber":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getFooterMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setFooterMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getHeaderMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setHeaderMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getHeadersFooters":{"isAsync":false,"set":"ExcelApi_1_9"},"getLeftMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLeftMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPaperSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPaperSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPrintComments":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPrintComments":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPrintErrors":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPrintErrors":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPrintGridlines":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPrintGridlines":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPrintHeadings":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPrintHeadings":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getPrintOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setPrintOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getRightMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setRightMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTopMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTopMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getZoom":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setZoom":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"HeaderFooter":{"methods":{"getCenterFooter":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setCenterFooter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getCenterHeader":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setCenterHeader":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getLeftFooter":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLeftFooter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getLeftHeader":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLeftHeader":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getRightFooter":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setRightFooter":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getRightHeader":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setRightHeader":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"HeaderFooterGroup":{"methods":{"getDefaultForAllPages":{"isAsync":false,"set":"ExcelApi_1_9"},"getEvenPages":{"isAsync":false,"set":"ExcelApi_1_9"},"getFirstPage":{"isAsync":false,"set":"ExcelApi_1_9"},"getOddPages":{"isAsync":false,"set":"ExcelApi_1_9"},"getState":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setState":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getUseSheetMargins":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setUseSheetMargins":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getUseSheetScale":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setUseSheetScale":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"PageBreak":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getCellAfterBreak":{"isAsync":false,"set":"ExcelApi_1_9"},"getColumnIndex":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"}}},"Comment":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getLocation":{"isAsync":false,"set":"ExcelApi_1_10"},"updateMentions":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_11"},"getReplies":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"addCommentReply":{"isAsync":false,"set":"ExcelApi_1_10"},"getCommentReply":{"isAsync":false,"set":"ExcelApi_1_10"},"getAuthorEmail":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getAuthorName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getContent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setContent":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getContentType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getCreationDate":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getMentions":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getResolved":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"setResolved":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_11"},"getRichContent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"}}},"CommentReply":{"methods":{"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getLocation":{"isAsync":false,"set":"ExcelApi_1_10"},"getParentComment":{"isAsync":false,"set":"ExcelApi_1_10"},"updateMentions":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_11"},"getAuthorEmail":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getAuthorName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getContent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setContent":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getContentType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_12"},"getCreationDate":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getMentions":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getResolved":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"},"getRichContent":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_11"}}},"Shape":{"methods":{"copyTo":{"isAsync":false,"set":"ExcelApi_1_10"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getImageAsBase64":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"incrementLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"incrementRotation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"incrementTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"scaleHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"scaleWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"setZOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getAltTextDescription":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAltTextDescription":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9","undoSet":"ExcelApiUndo_1_5"},"getAltTextTitle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAltTextTitle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getConnectionSiteCount":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getFill":{"isAsync":false,"set":"ExcelApi_1_9"},"getGeometricShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getGeometricShapeType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setGeometricShapeType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getGroup":{"isAsync":false,"set":"ExcelApi_1_9"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getImage":{"isAsync":false,"set":"ExcelApi_1_9"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getLevel":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getLine":{"isAsync":false,"set":"ExcelApi_1_9"},"getLineFormat":{"isAsync":false,"set":"ExcelApi_1_9"},"getLockAspectRatio":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLockAspectRatio":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getParentGroup":{"isAsync":false,"set":"ExcelApi_1_9"},"getPlacement":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setPlacement":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getRotation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setRotation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTextFrame":{"isAsync":false,"set":"ExcelApi_1_9"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getZOrderPosition":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getAsImage":{"isRead":true,"isAsync":true,"set":"ExcelApi_1_9"}}},"GeometricShape":{"methods":{"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"}}},"Image":{"methods":{"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getFormat":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"}}},"ShapeGroup":{"methods":{"ungroup":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getShapes":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getGroupShape":{"isAsync":false,"set":"ExcelApi_1_9"}}},"Line":{"methods":{"connectBeginShape":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"connectEndShape":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"disconnectBeginShape":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"disconnectEndShape":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBeginArrowheadLength":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBeginArrowheadLength":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBeginArrowheadStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBeginArrowheadStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBeginArrowheadWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBeginArrowheadWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBeginConnectedShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getBeginConnectedSite":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getEndArrowheadLength":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEndArrowheadLength":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getEndArrowheadStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEndArrowheadStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getEndArrowheadWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setEndArrowheadWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getEndConnectedShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getEndConnectedSite":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getIsBeginConnected":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getIsEndConnected":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getShape":{"isAsync":false,"set":"ExcelApi_1_9"},"getConnectorType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setConnectorType":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ShapeFill":{"methods":{"clear":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"setSolidColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getForegroundColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setForegroundColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTransparency":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTransparency":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getType":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"}}},"ShapeLineFormat":{"methods":{"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getDashStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setDashStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTransparency":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTransparency":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getVisible":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setVisible":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getWeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setWeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"TextFrame":{"methods":{"deleteText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getAutoSizeSetting":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setAutoSizeSetting":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getBottomMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBottomMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getHasText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"getHorizontalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setHorizontalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getHorizontalOverflow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setHorizontalOverflow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getLeftMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setLeftMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getOrientation":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setOrientation":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getReadingOrder":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setReadingOrder":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getRightMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setRightMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getTextRange":{"isAsync":false,"set":"ExcelApi_1_9"},"getTopMargin":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setTopMargin":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getVerticalAlignment":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setVerticalAlignment":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getVerticalOverflow":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setVerticalOverflow":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"TextRange":{"methods":{"getSubstring":{"isAsync":false,"set":"ExcelApi_1_9"},"getFont":{"isAsync":false,"set":"ExcelApi_1_9"},"getText":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setText":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"ShapeFont":{"methods":{"getBold":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setBold":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getColor":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setColor":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getItalic":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setItalic":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getSize":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setSize":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"},"getUnderline":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_9"},"setUnderline":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_9"}}},"Slicer":{"methods":{"clearFilters":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getSelectedItems":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"selectItems":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getSlicerItems":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getSlicerItem":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getCaption":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setCaption":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getHeight":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setHeight":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getId":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getIsFilterCleared":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getLeft":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setLeft":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getSortBy":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setSortBy":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getStyle":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setStyle":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getTop":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setTop":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getWidth":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setWidth":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getWorksheet":{"isAsync":false,"set":"ExcelApi_1_10"}}},"SlicerItem":{"methods":{"getHasData":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getIsSelected":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"setIsSelected":{"isAsync":true,"isRead":false,"set":"ExcelApi_1_10"},"getKey":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApi_1_10"}}},"NamedSheetView":{"methods":{"activate":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"},"delete":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"},"duplicate":{"isAsync":false,"set":"ExcelApiOnline_1_1"},"getName":{"isAsync":true,"isRead":true,"set":"ExcelApiOnline_1_1"},"setName":{"isAsync":true,"isRead":false,"set":"ExcelApiOnline_1_1"}}}}}}}')}}]);
//# sourceMappingURL=6632.803be8f5.chunk.js.map